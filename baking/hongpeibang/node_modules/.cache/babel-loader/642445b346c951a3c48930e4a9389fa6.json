{"ast":null,"code":"(function (self) {\n  var THREE = require(\"./three.js\");\n\n  module.exports = function (addons) {\n    if (addons instanceof Array) {\n      for (var addonIndex = 0, length = addons.length; addonIndex < length; addonIndex++) {\n        var addon = addons[addonIndex];\n\n        if (addon instanceof Function) {\n          addon(THREE);\n        } else if (typeof addon === \"string\") {\n          require(\"./addons/\" + addon + \".js\")(THREE);\n        } else {\n          throw new Error(\"Invalid module type provided\");\n        }\n\n        ;\n      }\n\n      ;\n    }\n\n    ;\n    return THREE;\n  };\n})(this || {});","map":{"version":3,"sources":["E:/baking/hongpeibang/node_modules/three-js/index.js"],"names":["self","THREE","require","module","exports","addons","Array","addonIndex","length","addon","Function","Error"],"mappings":"AAAA,CAAC,UAAUA,IAAV,EAAgB;AAEhB,MAAIC,KAAK,GAAGC,OAAO,CAAC,YAAD,CAAnB;;AAEAC,EAAAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,MAAV,EAAkB;AAElC,QAAIA,MAAM,YAAYC,KAAtB,EAA6B;AAE5B,WAAK,IAAIC,UAAU,GAAG,CAAjB,EAAoBC,MAAM,GAAGH,MAAM,CAACG,MAAzC,EAAiDD,UAAU,GAAGC,MAA9D,EAAsED,UAAU,EAAhF,EAAoF;AAEnF,YAAIE,KAAK,GAAGJ,MAAM,CAACE,UAAD,CAAlB;;AAEA,YAAIE,KAAK,YAAYC,QAArB,EAA+B;AAE9BD,UAAAA,KAAK,CAACR,KAAD,CAAL;AAEA,SAJD,MAKK,IAAI,OAAOQ,KAAP,KAAiB,QAArB,EAA+B;AAEnCP,UAAAA,OAAO,CAAC,cAAcO,KAAd,GAAsB,KAAvB,CAAP,CAAqCR,KAArC;AAEA,SAJI,MAKA;AAEJ,gBAAM,IAAIU,KAAJ,CAAU,8BAAV,CAAN;AAEA;;AAAA;AAED;;AAAA;AAED;;AAAA;AAED,WAAOV,KAAP;AAEA,GA9BD;AAgCA,CApCD,EAoCG,QAAQ,EApCX","sourcesContent":["(function( self ){\n\n\tvar THREE = require(\"./three.js\");\n\n\tmodule.exports = function( addons ){\n\n\t\tif( addons instanceof Array ){\n\n\t\t\tfor( var addonIndex = 0, length = addons.length; addonIndex < length; addonIndex++ ){\n\t\t\t\t\n\t\t\t\tvar addon = addons[addonIndex];\n\t\t\t\t\n\t\t\t\tif( addon instanceof Function ){\n\n\t\t\t\t\taddon(THREE);\n\n\t\t\t\t}\n\t\t\t\telse if( typeof addon === \"string\" ){\n\n\t\t\t\t\trequire(\"./addons/\" + addon + \".js\")(THREE);\n\n\t\t\t\t}\n\t\t\t\telse {\n\n\t\t\t\t\tthrow new Error(\"Invalid module type provided\");\n\n\t\t\t\t};\n\t\t\t\t\n\t\t\t};\n\n\t\t};\n\n\t\treturn THREE;\n\n\t};\n\n})(this ||Â {});\n"]},"metadata":{},"sourceType":"script"}