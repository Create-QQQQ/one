{"ast":null,"code":"module.exports = function (THREE) {\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n  THREE.RenderPass = function (scene, camera, overrideMaterial, clearColor, clearAlpha) {\n    this.scene = scene;\n    this.camera = camera;\n    this.overrideMaterial = overrideMaterial;\n    this.clearColor = clearColor;\n    this.clearAlpha = clearAlpha !== undefined ? clearAlpha : 1;\n    this.oldClearColor = new THREE.Color();\n    this.oldClearAlpha = 1;\n    this.enabled = true;\n    this.clear = true;\n    this.needsSwap = false;\n  };\n\n  THREE.RenderPass.prototype = {\n    render: function (renderer, writeBuffer, readBuffer, delta) {\n      this.scene.overrideMaterial = this.overrideMaterial;\n\n      if (this.clearColor) {\n        this.oldClearColor.copy(renderer.getClearColor());\n        this.oldClearAlpha = renderer.getClearAlpha();\n        renderer.setClearColor(this.clearColor, this.clearAlpha);\n      }\n\n      renderer.render(this.scene, this.camera, readBuffer, this.clear);\n\n      if (this.clearColor) {\n        renderer.setClearColor(this.oldClearColor, this.oldClearAlpha);\n      }\n\n      this.scene.overrideMaterial = null;\n    }\n  };\n};","map":{"version":3,"sources":["E:/baking/hongpeibang/node_modules/three-js/addons/RenderPass.js"],"names":["module","exports","THREE","RenderPass","scene","camera","overrideMaterial","clearColor","clearAlpha","undefined","oldClearColor","Color","oldClearAlpha","enabled","clear","needsSwap","prototype","render","renderer","writeBuffer","readBuffer","delta","copy","getClearColor","getClearAlpha","setClearColor"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,KAAV,EAAiB;AAEjC;;;AAIAA,EAAAA,KAAK,CAACC,UAAN,GAAmB,UAAWC,KAAX,EAAkBC,MAAlB,EAA0BC,gBAA1B,EAA4CC,UAA5C,EAAwDC,UAAxD,EAAqE;AAEvF,SAAKJ,KAAL,GAAaA,KAAb;AACA,SAAKC,MAAL,GAAcA,MAAd;AAEA,SAAKC,gBAAL,GAAwBA,gBAAxB;AAEA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,UAAL,GAAoBA,UAAU,KAAKC,SAAjB,GAA+BD,UAA/B,GAA4C,CAA9D;AAEA,SAAKE,aAAL,GAAqB,IAAIR,KAAK,CAACS,KAAV,EAArB;AACA,SAAKC,aAAL,GAAqB,CAArB;AAEA,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,SAAL,GAAiB,KAAjB;AAEA,GAjBD;;AAmBAb,EAAAA,KAAK,CAACC,UAAN,CAAiBa,SAAjB,GAA6B;AAE5BC,IAAAA,MAAM,EAAE,UAAWC,QAAX,EAAqBC,WAArB,EAAkCC,UAAlC,EAA8CC,KAA9C,EAAsD;AAE7D,WAAKjB,KAAL,CAAWE,gBAAX,GAA8B,KAAKA,gBAAnC;;AAEA,UAAK,KAAKC,UAAV,EAAuB;AAEtB,aAAKG,aAAL,CAAmBY,IAAnB,CAAyBJ,QAAQ,CAACK,aAAT,EAAzB;AACA,aAAKX,aAAL,GAAqBM,QAAQ,CAACM,aAAT,EAArB;AAEAN,QAAAA,QAAQ,CAACO,aAAT,CAAwB,KAAKlB,UAA7B,EAAyC,KAAKC,UAA9C;AAEA;;AAEDU,MAAAA,QAAQ,CAACD,MAAT,CAAiB,KAAKb,KAAtB,EAA6B,KAAKC,MAAlC,EAA0Ce,UAA1C,EAAsD,KAAKN,KAA3D;;AAEA,UAAK,KAAKP,UAAV,EAAuB;AAEtBW,QAAAA,QAAQ,CAACO,aAAT,CAAwB,KAAKf,aAA7B,EAA4C,KAAKE,aAAjD;AAEA;;AAED,WAAKR,KAAL,CAAWE,gBAAX,GAA8B,IAA9B;AAEA;AAzB2B,GAA7B;AA6BA,CAtDD","sourcesContent":["module.exports = function( THREE ){\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\t\tthis.scene = scene;\n\t\tthis.camera = camera;\n\n\t\tthis.overrideMaterial = overrideMaterial;\n\n\t\tthis.clearColor = clearColor;\n\t\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 1;\n\n\t\tthis.oldClearColor = new THREE.Color();\n\t\tthis.oldClearAlpha = 1;\n\n\t\tthis.enabled = true;\n\t\tthis.clear = true;\n\t\tthis.needsSwap = false;\n\n\t};\n\n\tTHREE.RenderPass.prototype = {\n\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\t\tif ( this.clearColor ) {\n\n\t\t\t\tthis.oldClearColor.copy( renderer.getClearColor() );\n\t\t\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\n\t\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t\t}\n\n\t\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\n\t\t\tif ( this.clearColor ) {\n\n\t\t\t\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\n\n\t\t\t}\n\n\t\t\tthis.scene.overrideMaterial = null;\n\n\t\t}\n\n\t};\n\n};"]},"metadata":{},"sourceType":"script"}