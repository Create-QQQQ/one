{"ast":null,"code":"const hsv2hsl = function (hue, sat, val) {\n  return [hue, sat * val / ((hue = (2 - sat) * val) < 1 ? hue : 2 - hue) || 0, hue / 2];\n}; // Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\n\n\nconst isOnePointZero = function (n) {\n  return typeof n === 'string' && n.indexOf('.') !== -1 && parseFloat(n) === 1;\n};\n\nconst isPercentage = function (n) {\n  return typeof n === 'string' && n.indexOf('%') !== -1;\n}; // Take input from [0, n] and return it as [0, 1]\n\n\nconst bound01 = function (value, max) {\n  if (isOnePointZero(value)) value = '100%';\n  const processPercent = isPercentage(value);\n  value = Math.min(max, Math.max(0, parseFloat(value))); // Automatically convert percentage into number\n\n  if (processPercent) {\n    value = parseInt(value * max, 10) / 100;\n  } // Handle floating point rounding errors\n\n\n  if (Math.abs(value - max) < 0.000001) {\n    return 1;\n  } // Convert into [0, 1] range if it isn't already\n\n\n  return value % max / parseFloat(max);\n};\n\nconst INT_HEX_MAP = {\n  10: 'A',\n  11: 'B',\n  12: 'C',\n  13: 'D',\n  14: 'E',\n  15: 'F'\n};\n\nconst toHex = function ({\n  r,\n  g,\n  b\n}) {\n  const hexOne = function (value) {\n    value = Math.min(Math.round(value), 255);\n    const high = Math.floor(value / 16);\n    const low = value % 16;\n    return '' + (INT_HEX_MAP[high] || high) + (INT_HEX_MAP[low] || low);\n  };\n\n  if (isNaN(r) || isNaN(g) || isNaN(b)) return '';\n  return '#' + hexOne(r) + hexOne(g) + hexOne(b);\n};\n\nconst HEX_INT_MAP = {\n  A: 10,\n  B: 11,\n  C: 12,\n  D: 13,\n  E: 14,\n  F: 15\n};\n\nconst parseHexChannel = function (hex) {\n  if (hex.length === 2) {\n    return (HEX_INT_MAP[hex[0].toUpperCase()] || +hex[0]) * 16 + (HEX_INT_MAP[hex[1].toUpperCase()] || +hex[1]);\n  }\n\n  return HEX_INT_MAP[hex[1].toUpperCase()] || +hex[1];\n};\n\nconst hsl2hsv = function (hue, sat, light) {\n  sat = sat / 100;\n  light = light / 100;\n  let smin = sat;\n  const lmin = Math.max(light, 0.01);\n  let sv;\n  let v;\n  light *= 2;\n  sat *= light <= 1 ? light : 2 - light;\n  smin *= lmin <= 1 ? lmin : 2 - lmin;\n  v = (light + sat) / 2;\n  sv = light === 0 ? 2 * smin / (lmin + smin) : 2 * sat / (light + sat);\n  return {\n    h: hue,\n    s: sv * 100,\n    v: v * 100\n  };\n}; // `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\n\n\nconst rgb2hsv = function (r, g, b) {\n  r = bound01(r, 255);\n  g = bound01(g, 255);\n  b = bound01(b, 255);\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  let h, s;\n  let v = max;\n  const d = max - min;\n  s = max === 0 ? 0 : d / max;\n\n  if (max === min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n\n      case g:\n        h = (b - r) / d + 2;\n        break;\n\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return {\n    h: h * 360,\n    s: s * 100,\n    v: v * 100\n  };\n}; // `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n\n\nconst hsv2rgb = function (h, s, v) {\n  h = bound01(h, 360) * 6;\n  s = bound01(s, 100);\n  v = bound01(v, 100);\n  const i = Math.floor(h);\n  const f = h - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  const mod = i % 6;\n  const r = [v, q, p, p, t, v][mod];\n  const g = [t, v, v, q, p, p][mod];\n  const b = [p, p, t, v, v, q][mod];\n  return {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255)\n  };\n};\n\nexport default class Color {\n  constructor(options) {\n    this._hue = 0;\n    this._saturation = 100;\n    this._value = 100;\n    this._alpha = 100;\n    this.enableAlpha = false;\n    this.format = 'hex';\n    this.value = '';\n    options = options || {};\n\n    for (let option in options) {\n      if (options.hasOwnProperty(option)) {\n        this[option] = options[option];\n      }\n    }\n\n    this.doOnChange();\n  }\n\n  set(prop, value) {\n    if (arguments.length === 1 && typeof prop === 'object') {\n      for (let p in prop) {\n        if (prop.hasOwnProperty(p)) {\n          this.set(p, prop[p]);\n        }\n      }\n\n      return;\n    }\n\n    this['_' + prop] = value;\n    this.doOnChange();\n  }\n\n  get(prop) {\n    return this['_' + prop];\n  }\n\n  toRgb() {\n    return hsv2rgb(this._hue, this._saturation, this._value);\n  }\n\n  fromString(value) {\n    if (!value) {\n      this._hue = 0;\n      this._saturation = 100;\n      this._value = 100;\n      this.doOnChange();\n      return;\n    }\n\n    const fromHSV = (h, s, v) => {\n      this._hue = Math.max(0, Math.min(360, h));\n      this._saturation = Math.max(0, Math.min(100, s));\n      this._value = Math.max(0, Math.min(100, v));\n      this.doOnChange();\n    };\n\n    if (value.indexOf('hsl') !== -1) {\n      const parts = value.replace(/hsla|hsl|\\(|\\)/gm, '').split(/\\s|,/g).filter(val => val !== '').map((val, index) => index > 2 ? parseFloat(val) : parseInt(val, 10));\n\n      if (parts.length === 4) {\n        this._alpha = Math.floor(parseFloat(parts[3]) * 100);\n      } else if (parts.length === 3) {\n        this._alpha = 100;\n      }\n\n      if (parts.length >= 3) {\n        const {\n          h,\n          s,\n          v\n        } = hsl2hsv(parts[0], parts[1], parts[2]);\n        fromHSV(h, s, v);\n      }\n    } else if (value.indexOf('hsv') !== -1) {\n      const parts = value.replace(/hsva|hsv|\\(|\\)/gm, '').split(/\\s|,/g).filter(val => val !== '').map((val, index) => index > 2 ? parseFloat(val) : parseInt(val, 10));\n\n      if (parts.length === 4) {\n        this._alpha = Math.floor(parseFloat(parts[3]) * 100);\n      } else if (parts.length === 3) {\n        this._alpha = 100;\n      }\n\n      if (parts.length >= 3) {\n        fromHSV(parts[0], parts[1], parts[2]);\n      }\n    } else if (value.indexOf('rgb') !== -1) {\n      const parts = value.replace(/rgba|rgb|\\(|\\)/gm, '').split(/\\s|,/g).filter(val => val !== '').map((val, index) => index > 2 ? parseFloat(val) : parseInt(val, 10));\n\n      if (parts.length === 4) {\n        this._alpha = Math.floor(parseFloat(parts[3]) * 100);\n      } else if (parts.length === 3) {\n        this._alpha = 100;\n      }\n\n      if (parts.length >= 3) {\n        const {\n          h,\n          s,\n          v\n        } = rgb2hsv(parts[0], parts[1], parts[2]);\n        fromHSV(h, s, v);\n      }\n    } else if (value.indexOf('#') !== -1) {\n      const hex = value.replace('#', '').trim();\n      if (!/^(?:[0-9a-fA-F]{3}){1,2}$/.test(hex)) return;\n      let r, g, b;\n\n      if (hex.length === 3) {\n        r = parseHexChannel(hex[0] + hex[0]);\n        g = parseHexChannel(hex[1] + hex[1]);\n        b = parseHexChannel(hex[2] + hex[2]);\n      } else if (hex.length === 6 || hex.length === 8) {\n        r = parseHexChannel(hex.substring(0, 2));\n        g = parseHexChannel(hex.substring(2, 4));\n        b = parseHexChannel(hex.substring(4, 6));\n      }\n\n      if (hex.length === 8) {\n        this._alpha = Math.floor(parseHexChannel(hex.substring(6)) / 255 * 100);\n      } else if (hex.length === 3 || hex.length === 6) {\n        this._alpha = 100;\n      }\n\n      const {\n        h,\n        s,\n        v\n      } = rgb2hsv(r, g, b);\n      fromHSV(h, s, v);\n    }\n  }\n\n  compare(color) {\n    return Math.abs(color._hue - this._hue) < 2 && Math.abs(color._saturation - this._saturation) < 1 && Math.abs(color._value - this._value) < 1 && Math.abs(color._alpha - this._alpha) < 1;\n  }\n\n  doOnChange() {\n    const {\n      _hue,\n      _saturation,\n      _value,\n      _alpha,\n      format\n    } = this;\n\n    if (this.enableAlpha) {\n      switch (format) {\n        case 'hsl':\n          const hsl = hsv2hsl(_hue, _saturation / 100, _value / 100);\n          this.value = `hsla(${_hue}, ${Math.round(hsl[1] * 100)}%, ${Math.round(hsl[2] * 100)}%, ${_alpha / 100})`;\n          break;\n\n        case 'hsv':\n          this.value = `hsva(${_hue}, ${Math.round(_saturation)}%, ${Math.round(_value)}%, ${_alpha / 100})`;\n          break;\n\n        default:\n          const {\n            r,\n            g,\n            b\n          } = hsv2rgb(_hue, _saturation, _value);\n          this.value = `rgba(${r}, ${g}, ${b}, ${_alpha / 100})`;\n      }\n    } else {\n      switch (format) {\n        case 'hsl':\n          const hsl = hsv2hsl(_hue, _saturation / 100, _value / 100);\n          this.value = `hsl(${_hue}, ${Math.round(hsl[1] * 100)}%, ${Math.round(hsl[2] * 100)}%)`;\n          break;\n\n        case 'hsv':\n          this.value = `hsv(${_hue}, ${Math.round(_saturation)}%, ${Math.round(_value)}%)`;\n          break;\n\n        case 'rgb':\n          const {\n            r,\n            g,\n            b\n          } = hsv2rgb(_hue, _saturation, _value);\n          this.value = `rgb(${r}, ${g}, ${b})`;\n          break;\n\n        default:\n          this.value = toHex(hsv2rgb(_hue, _saturation, _value));\n      }\n    }\n  }\n\n}\n;","map":{"version":3,"sources":["E:/baking/hongpeibang/node_modules/element-ui/packages/color-picker/src/color.js"],"names":["hsv2hsl","hue","sat","val","isOnePointZero","n","indexOf","parseFloat","isPercentage","bound01","value","max","processPercent","Math","min","parseInt","abs","INT_HEX_MAP","toHex","r","g","b","hexOne","round","high","floor","low","isNaN","HEX_INT_MAP","A","B","C","D","E","F","parseHexChannel","hex","length","toUpperCase","hsl2hsv","light","smin","lmin","sv","v","h","s","rgb2hsv","d","hsv2rgb","i","f","p","q","t","mod","Color","constructor","options","_hue","_saturation","_value","_alpha","enableAlpha","format","option","hasOwnProperty","doOnChange","set","prop","arguments","get","toRgb","fromString","fromHSV","parts","replace","split","filter","map","index","trim","test","substring","compare","color","hsl"],"mappings":"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","sourcesContent":["const hsv2hsl = function(hue, sat, val) {\n  return [\n    hue,\n    (sat * val / ((hue = (2 - sat) * val) < 1 ? hue : 2 - hue)) || 0,\n    hue / 2\n  ];\n};\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nconst isOnePointZero = function(n) {\n  return typeof n === 'string' && n.indexOf('.') !== -1 && parseFloat(n) === 1;\n};\n\nconst isPercentage = function(n) {\n  return typeof n === 'string' && n.indexOf('%') !== -1;\n};\n\n// Take input from [0, n] and return it as [0, 1]\nconst bound01 = function(value, max) {\n  if (isOnePointZero(value)) value = '100%';\n\n  const processPercent = isPercentage(value);\n  value = Math.min(max, Math.max(0, parseFloat(value)));\n\n  // Automatically convert percentage into number\n  if (processPercent) {\n    value = parseInt(value * max, 10) / 100;\n  }\n\n  // Handle floating point rounding errors\n  if ((Math.abs(value - max) < 0.000001)) {\n    return 1;\n  }\n\n  // Convert into [0, 1] range if it isn't already\n  return (value % max) / parseFloat(max);\n};\n\nconst INT_HEX_MAP = { 10: 'A', 11: 'B', 12: 'C', 13: 'D', 14: 'E', 15: 'F' };\n\nconst toHex = function({ r, g, b }) {\n  const hexOne = function(value) {\n    value = Math.min(Math.round(value), 255);\n    const high = Math.floor(value / 16);\n    const low = value % 16;\n    return '' + (INT_HEX_MAP[high] || high) + (INT_HEX_MAP[low] || low);\n  };\n\n  if (isNaN(r) || isNaN(g) || isNaN(b)) return '';\n\n  return '#' + hexOne(r) + hexOne(g) + hexOne(b);\n};\n\nconst HEX_INT_MAP = { A: 10, B: 11, C: 12, D: 13, E: 14, F: 15 };\n\nconst parseHexChannel = function(hex) {\n  if (hex.length === 2) {\n    return (HEX_INT_MAP[hex[0].toUpperCase()] || +hex[0]) * 16 + (HEX_INT_MAP[hex[1].toUpperCase()] || +hex[1]);\n  }\n\n  return HEX_INT_MAP[hex[1].toUpperCase()] || +hex[1];\n};\n\nconst hsl2hsv = function(hue, sat, light) {\n  sat = sat / 100;\n  light = light / 100;\n  let smin = sat;\n  const lmin = Math.max(light, 0.01);\n  let sv;\n  let v;\n\n  light *= 2;\n  sat *= (light <= 1) ? light : 2 - light;\n  smin *= lmin <= 1 ? lmin : 2 - lmin;\n  v = (light + sat) / 2;\n  sv = light === 0 ? (2 * smin) / (lmin + smin) : (2 * sat) / (light + sat);\n\n  return {\n    h: hue,\n    s: sv * 100,\n    v: v * 100\n  };\n};\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nconst rgb2hsv = function(r, g, b) {\n  r = bound01(r, 255);\n  g = bound01(g, 255);\n  b = bound01(b, 255);\n\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  let h, s;\n  let v = max;\n\n  const d = max - min;\n  s = max === 0 ? 0 : d / max;\n\n  if (max === min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n\n  return { h: h * 360, s: s * 100, v: v * 100 };\n};\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nconst hsv2rgb = function(h, s, v) {\n  h = bound01(h, 360) * 6;\n  s = bound01(s, 100);\n  v = bound01(v, 100);\n\n  const i = Math.floor(h);\n  const f = h - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  const mod = i % 6;\n  const r = [v, q, p, p, t, v][mod];\n  const g = [t, v, v, q, p, p][mod];\n  const b = [p, p, t, v, v, q][mod];\n\n  return {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255)\n  };\n};\n\nexport default class Color {\n  constructor(options) {\n    this._hue = 0;\n    this._saturation = 100;\n    this._value = 100;\n    this._alpha = 100;\n\n    this.enableAlpha = false;\n    this.format = 'hex';\n    this.value = '';\n\n    options = options || {};\n\n    for (let option in options) {\n      if (options.hasOwnProperty(option)) {\n        this[option] = options[option];\n      }\n    }\n\n    this.doOnChange();\n  }\n\n  set(prop, value) {\n    if (arguments.length === 1 && typeof prop === 'object') {\n      for (let p in prop) {\n        if (prop.hasOwnProperty(p)) {\n          this.set(p, prop[p]);\n        }\n      }\n\n      return;\n    }\n\n    this['_' + prop] = value;\n    this.doOnChange();\n  }\n\n  get(prop) {\n    return this['_' + prop];\n  }\n\n  toRgb() {\n    return hsv2rgb(this._hue, this._saturation, this._value);\n  }\n\n  fromString(value) {\n    if (!value) {\n      this._hue = 0;\n      this._saturation = 100;\n      this._value = 100;\n\n      this.doOnChange();\n      return;\n    }\n\n    const fromHSV = (h, s, v) => {\n      this._hue = Math.max(0, Math.min(360, h));\n      this._saturation = Math.max(0, Math.min(100, s));\n      this._value = Math.max(0, Math.min(100, v));\n\n      this.doOnChange();\n    };\n\n    if (value.indexOf('hsl') !== -1) {\n      const parts = value.replace(/hsla|hsl|\\(|\\)/gm, '')\n        .split(/\\s|,/g).filter((val) => val !== '').map((val, index) => index > 2 ? parseFloat(val) : parseInt(val, 10));\n\n      if (parts.length === 4) {\n        this._alpha = Math.floor(parseFloat(parts[3]) * 100);\n      } else if (parts.length === 3) {\n        this._alpha = 100;\n      }\n      if (parts.length >= 3) {\n        const { h, s, v } = hsl2hsv(parts[0], parts[1], parts[2]);\n        fromHSV(h, s, v);\n      }\n    } else if (value.indexOf('hsv') !== -1) {\n      const parts = value.replace(/hsva|hsv|\\(|\\)/gm, '')\n        .split(/\\s|,/g).filter((val) => val !== '').map((val, index) => index > 2 ? parseFloat(val) : parseInt(val, 10));\n\n      if (parts.length === 4) {\n        this._alpha = Math.floor(parseFloat(parts[3]) * 100);\n      } else if (parts.length === 3) {\n        this._alpha = 100;\n      }\n      if (parts.length >= 3) {\n        fromHSV(parts[0], parts[1], parts[2]);\n      }\n    } else if (value.indexOf('rgb') !== -1) {\n      const parts = value.replace(/rgba|rgb|\\(|\\)/gm, '')\n        .split(/\\s|,/g).filter((val) => val !== '').map((val, index) => index > 2 ? parseFloat(val) : parseInt(val, 10));\n\n      if (parts.length === 4) {\n        this._alpha = Math.floor(parseFloat(parts[3]) * 100);\n      } else if (parts.length === 3) {\n        this._alpha = 100;\n      }\n      if (parts.length >= 3) {\n        const { h, s, v } = rgb2hsv(parts[0], parts[1], parts[2]);\n        fromHSV(h, s, v);\n      }\n    } else if (value.indexOf('#') !== -1) {\n      const hex = value.replace('#', '').trim();\n      if (!/^(?:[0-9a-fA-F]{3}){1,2}$/.test(hex)) return;\n      let r, g, b;\n\n      if (hex.length === 3) {\n        r = parseHexChannel(hex[0] + hex[0]);\n        g = parseHexChannel(hex[1] + hex[1]);\n        b = parseHexChannel(hex[2] + hex[2]);\n      } else if (hex.length === 6 || hex.length === 8) {\n        r = parseHexChannel(hex.substring(0, 2));\n        g = parseHexChannel(hex.substring(2, 4));\n        b = parseHexChannel(hex.substring(4, 6));\n      }\n\n      if (hex.length === 8) {\n        this._alpha = Math.floor(parseHexChannel(hex.substring(6)) / 255 * 100);\n      } else if (hex.length === 3 || hex.length === 6) {\n        this._alpha = 100;\n      }\n\n      const { h, s, v } = rgb2hsv(r, g, b);\n      fromHSV(h, s, v);\n    }\n  }\n\n  compare(color) {\n    return Math.abs(color._hue - this._hue) < 2 &&\n      Math.abs(color._saturation - this._saturation) < 1 &&\n      Math.abs(color._value - this._value) < 1 &&\n      Math.abs(color._alpha - this._alpha) < 1;\n  }\n\n  doOnChange() {\n    const { _hue, _saturation, _value, _alpha, format } = this;\n\n    if (this.enableAlpha) {\n      switch (format) {\n        case 'hsl':\n          const hsl = hsv2hsl(_hue, _saturation / 100, _value / 100);\n          this.value = `hsla(${ _hue }, ${ Math.round(hsl[1] * 100) }%, ${ Math.round(hsl[2] * 100) }%, ${ _alpha / 100})`;\n          break;\n        case 'hsv':\n          this.value = `hsva(${ _hue }, ${ Math.round(_saturation) }%, ${ Math.round(_value) }%, ${ _alpha / 100})`;\n          break;\n        default:\n          const { r, g, b } = hsv2rgb(_hue, _saturation, _value);\n          this.value = `rgba(${r}, ${g}, ${b}, ${ _alpha / 100 })`;\n      }\n    } else {\n      switch (format) {\n        case 'hsl':\n          const hsl = hsv2hsl(_hue, _saturation / 100, _value / 100);\n          this.value = `hsl(${ _hue }, ${ Math.round(hsl[1] * 100) }%, ${ Math.round(hsl[2] * 100) }%)`;\n          break;\n        case 'hsv':\n          this.value = `hsv(${ _hue }, ${ Math.round(_saturation) }%, ${ Math.round(_value) }%)`;\n          break;\n        case 'rgb':\n          const { r, g, b } = hsv2rgb(_hue, _saturation, _value);\n          this.value = `rgb(${r}, ${g}, ${b})`;\n          break;\n        default:\n          this.value = toHex(hsv2rgb(_hue, _saturation, _value));\n      }\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}