{"ast":null,"code":"module.exports = function (THREE) {\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * Vignette shader\n   * based on PaintEffect postprocess from ro.me\n   * http://code.google.com/p/3-dreams-of-black/source/browse/deploy/js/effects/PaintEffect.js\n   */\n  THREE.VignetteShader = {\n    uniforms: {\n      \"tDiffuse\": {\n        type: \"t\",\n        value: null\n      },\n      \"offset\": {\n        type: \"f\",\n        value: 1.0\n      },\n      \"darkness\": {\n        type: \"f\",\n        value: 1.0\n      }\n    },\n    vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n    fragmentShader: [\"uniform float offset;\", \"uniform float darkness;\", \"uniform sampler2D tDiffuse;\", \"varying vec2 vUv;\", \"void main() {\", // Eskil's vignette\n    \"vec4 texel = texture2D( tDiffuse, vUv );\", \"vec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );\", \"gl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );\",\n    /*\n    // alternative version from glfx.js\n    // this one makes more \"dusty\" look (as opposed to \"burned\")\n    \t\"vec4 color = texture2D( tDiffuse, vUv );\",\n    \"float dist = distance( vUv, vec2( 0.5 ) );\",\n    \"color.rgb *= smoothstep( 0.8, offset * 0.799, dist *( darkness + offset ) );\",\n    \"gl_FragColor = color;\",\n    */\n    \"}\"].join(\"\\n\")\n  };\n};","map":{"version":3,"sources":["E:/baking/hongpeibang/node_modules/three-js/addons/VignetteShader.js"],"names":["module","exports","THREE","VignetteShader","uniforms","type","value","vertexShader","join","fragmentShader"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,KAAV,EAAiB;AACjC;;;;;;;AAQAA,EAAAA,KAAK,CAACC,cAAN,GAAuB;AAEtBC,IAAAA,QAAQ,EAAE;AAET,kBAAY;AAAEC,QAAAA,IAAI,EAAE,GAAR;AAAaC,QAAAA,KAAK,EAAE;AAApB,OAFH;AAGT,gBAAY;AAAED,QAAAA,IAAI,EAAE,GAAR;AAAaC,QAAAA,KAAK,EAAE;AAApB,OAHH;AAIT,kBAAY;AAAED,QAAAA,IAAI,EAAE,GAAR;AAAaC,QAAAA,KAAK,EAAE;AAApB;AAJH,KAFY;AAUtBC,IAAAA,YAAY,EAAE,CAEb,mBAFa,EAIb,eAJa,EAMZ,WANY,EAOZ,2EAPY,EASb,GATa,EAWZC,IAXY,CAWN,IAXM,CAVQ;AAuBtBC,IAAAA,cAAc,EAAE,CAEf,uBAFe,EAGf,yBAHe,EAKf,6BALe,EAOf,mBAPe,EASf,eATe,EAWd;AAEA,8CAbc,EAcd,mDAdc,EAed,0FAfc;AAiBd;;;;;;;;AAUD,OA3Be,EA6BdD,IA7Bc,CA6BR,IA7BQ;AAvBM,GAAvB;AAwDA,CAjED","sourcesContent":["module.exports = function( THREE ){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Vignette shader\n\t * based on PaintEffect postprocess from ro.me\n\t * http://code.google.com/p/3-dreams-of-black/source/browse/deploy/js/effects/PaintEffect.js\n\t */\n\n\tTHREE.VignetteShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\t\"offset\":   { type: \"f\", value: 1.0 },\n\t\t\t\"darkness\": { type: \"f\", value: 1.0 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform float offset;\",\n\t\t\t\"uniform float darkness;\",\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t// Eskil's vignette\n\n\t\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\t\t\"vec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );\",\n\t\t\t\t\"gl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );\",\n\n\t\t\t\t/*\n\t\t\t\t// alternative version from glfx.js\n\t\t\t\t// this one makes more \"dusty\" look (as opposed to \"burned\")\n\n\t\t\t\t\"vec4 color = texture2D( tDiffuse, vUv );\",\n\t\t\t\t\"float dist = distance( vUv, vec2( 0.5 ) );\",\n\t\t\t\t\"color.rgb *= smoothstep( 0.8, offset * 0.799, dist *( darkness + offset ) );\",\n\t\t\t\t\"gl_FragColor = color;\",\n\t\t\t\t*/\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n"]},"metadata":{},"sourceType":"script"}