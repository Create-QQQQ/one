{"ast":null,"code":"(function (self) {\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n  var THREE = {\n    REVISION: '79'\n  }; // Polyfills\n\n  if (Number.EPSILON === undefined) {\n    Number.EPSILON = Math.pow(2, -52);\n  } //\n\n\n  if (Math.sign === undefined) {\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n    Math.sign = function (x) {\n      return x < 0 ? -1 : x > 0 ? 1 : +x;\n    };\n  }\n\n  if (Function.prototype.name === undefined) {\n    // Missing in IE9-11.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n    Object.defineProperty(Function.prototype, 'name', {\n      get: function () {\n        return this.toString().match(/^\\s*function\\s*(\\S*)\\s*\\(/)[1];\n      }\n    });\n  }\n\n  if (Object.assign === undefined) {\n    // Missing in IE.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    (function () {\n      Object.assign = function (target) {\n        'use strict';\n\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n\n        for (var index = 1; index < arguments.length; index++) {\n          var source = arguments[index];\n\n          if (source !== undefined && source !== null) {\n            for (var nextKey in source) {\n              if (Object.prototype.hasOwnProperty.call(source, nextKey)) {\n                output[nextKey] = source[nextKey];\n              }\n            }\n          }\n        }\n\n        return output;\n      };\n    })();\n  } //\n\n\n  Object.assign(THREE, {\n    // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\n    MOUSE: {\n      LEFT: 0,\n      MIDDLE: 1,\n      RIGHT: 2\n    },\n    // GL STATE CONSTANTS\n    CullFaceNone: 0,\n    CullFaceBack: 1,\n    CullFaceFront: 2,\n    CullFaceFrontBack: 3,\n    FrontFaceDirectionCW: 0,\n    FrontFaceDirectionCCW: 1,\n    // SHADOWING TYPES\n    BasicShadowMap: 0,\n    PCFShadowMap: 1,\n    PCFSoftShadowMap: 2,\n    // MATERIAL CONSTANTS\n    // side\n    FrontSide: 0,\n    BackSide: 1,\n    DoubleSide: 2,\n    // shading\n    FlatShading: 1,\n    SmoothShading: 2,\n    // colors\n    NoColors: 0,\n    FaceColors: 1,\n    VertexColors: 2,\n    // blending modes\n    NoBlending: 0,\n    NormalBlending: 1,\n    AdditiveBlending: 2,\n    SubtractiveBlending: 3,\n    MultiplyBlending: 4,\n    CustomBlending: 5,\n    // custom blending equations\n    // (numbers start from 100 not to clash with other\n    // mappings to OpenGL constants defined in Texture.js)\n    AddEquation: 100,\n    SubtractEquation: 101,\n    ReverseSubtractEquation: 102,\n    MinEquation: 103,\n    MaxEquation: 104,\n    // custom blending destination factors\n    ZeroFactor: 200,\n    OneFactor: 201,\n    SrcColorFactor: 202,\n    OneMinusSrcColorFactor: 203,\n    SrcAlphaFactor: 204,\n    OneMinusSrcAlphaFactor: 205,\n    DstAlphaFactor: 206,\n    OneMinusDstAlphaFactor: 207,\n    // custom blending source factors\n    //ZeroFactor: 200,\n    //OneFactor: 201,\n    //SrcAlphaFactor: 204,\n    //OneMinusSrcAlphaFactor: 205,\n    //DstAlphaFactor: 206,\n    //OneMinusDstAlphaFactor: 207,\n    DstColorFactor: 208,\n    OneMinusDstColorFactor: 209,\n    SrcAlphaSaturateFactor: 210,\n    // depth modes\n    NeverDepth: 0,\n    AlwaysDepth: 1,\n    LessDepth: 2,\n    LessEqualDepth: 3,\n    EqualDepth: 4,\n    GreaterEqualDepth: 5,\n    GreaterDepth: 6,\n    NotEqualDepth: 7,\n    // TEXTURE CONSTANTS\n    MultiplyOperation: 0,\n    MixOperation: 1,\n    AddOperation: 2,\n    // Tone Mapping modes\n    NoToneMapping: 0,\n    // do not do any tone mapping, not even exposure (required for special purpose passes.)\n    LinearToneMapping: 1,\n    // only apply exposure.\n    ReinhardToneMapping: 2,\n    Uncharted2ToneMapping: 3,\n    // John Hable\n    CineonToneMapping: 4,\n    // optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\n    // Mapping modes\n    UVMapping: 300,\n    CubeReflectionMapping: 301,\n    CubeRefractionMapping: 302,\n    EquirectangularReflectionMapping: 303,\n    EquirectangularRefractionMapping: 304,\n    SphericalReflectionMapping: 305,\n    CubeUVReflectionMapping: 306,\n    CubeUVRefractionMapping: 307,\n    // Wrapping modes\n    RepeatWrapping: 1000,\n    ClampToEdgeWrapping: 1001,\n    MirroredRepeatWrapping: 1002,\n    // Filters\n    NearestFilter: 1003,\n    NearestMipMapNearestFilter: 1004,\n    NearestMipMapLinearFilter: 1005,\n    LinearFilter: 1006,\n    LinearMipMapNearestFilter: 1007,\n    LinearMipMapLinearFilter: 1008,\n    // Data types\n    UnsignedByteType: 1009,\n    ByteType: 1010,\n    ShortType: 1011,\n    UnsignedShortType: 1012,\n    IntType: 1013,\n    UnsignedIntType: 1014,\n    FloatType: 1015,\n    HalfFloatType: 1025,\n    // Pixel types\n    //UnsignedByteType: 1009,\n    UnsignedShort4444Type: 1016,\n    UnsignedShort5551Type: 1017,\n    UnsignedShort565Type: 1018,\n    // Pixel formats\n    AlphaFormat: 1019,\n    RGBFormat: 1020,\n    RGBAFormat: 1021,\n    LuminanceFormat: 1022,\n    LuminanceAlphaFormat: 1023,\n    // THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\n    RGBEFormat: THREE.RGBAFormat,\n    //1024;\n    DepthFormat: 1026,\n    // DDS / ST3C Compressed texture formats\n    RGB_S3TC_DXT1_Format: 2001,\n    RGBA_S3TC_DXT1_Format: 2002,\n    RGBA_S3TC_DXT3_Format: 2003,\n    RGBA_S3TC_DXT5_Format: 2004,\n    // PVRTC compressed texture formats\n    RGB_PVRTC_4BPPV1_Format: 2100,\n    RGB_PVRTC_2BPPV1_Format: 2101,\n    RGBA_PVRTC_4BPPV1_Format: 2102,\n    RGBA_PVRTC_2BPPV1_Format: 2103,\n    // ETC compressed texture formats\n    RGB_ETC1_Format: 2151,\n    // Loop styles for AnimationAction\n    LoopOnce: 2200,\n    LoopRepeat: 2201,\n    LoopPingPong: 2202,\n    // Interpolation\n    InterpolateDiscrete: 2300,\n    InterpolateLinear: 2301,\n    InterpolateSmooth: 2302,\n    // Interpolant ending modes\n    ZeroCurvatureEnding: 2400,\n    ZeroSlopeEnding: 2401,\n    WrapAroundEnding: 2402,\n    // Triangle Draw modes\n    TrianglesDrawMode: 0,\n    TriangleStripDrawMode: 1,\n    TriangleFanDrawMode: 2,\n    // Texture Encodings\n    LinearEncoding: 3000,\n    // No encoding at all.\n    sRGBEncoding: 3001,\n    GammaEncoding: 3007,\n    // uses GAMMA_FACTOR, for backwards compatibility with WebGLRenderer.gammaInput/gammaOutput\n    // The following Texture Encodings are for RGB-only (no alpha) HDR light emission sources.\n    // These encodings should not specified as output encodings except in rare situations.\n    RGBEEncoding: 3002,\n    // AKA Radiance.\n    LogLuvEncoding: 3003,\n    RGBM7Encoding: 3004,\n    RGBM16Encoding: 3005,\n    RGBDEncoding: 3006,\n    // MaxRange is 256.\n    // Depth packing strategies\n    BasicDepthPacking: 3200,\n    // for writing to float textures for high precision or for visualizing results in RGB buffers\n    RGBADepthPacking: 3201 // for packing into RGBA buffers.\n\n  }); // File:src/math/Color.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.Color = function (r, g, b) {\n    if (g === undefined && b === undefined) {\n      // r is THREE.Color, hex or string\n      return this.set(r);\n    }\n\n    return this.setRGB(r, g, b);\n  };\n\n  THREE.Color.prototype = {\n    constructor: THREE.Color,\n    r: 1,\n    g: 1,\n    b: 1,\n    set: function (value) {\n      if (value instanceof THREE.Color) {\n        this.copy(value);\n      } else if (typeof value === 'number') {\n        this.setHex(value);\n      } else if (typeof value === 'string') {\n        this.setStyle(value);\n      }\n\n      return this;\n    },\n    setScalar: function (scalar) {\n      this.r = scalar;\n      this.g = scalar;\n      this.b = scalar;\n    },\n    setHex: function (hex) {\n      hex = Math.floor(hex);\n      this.r = (hex >> 16 & 255) / 255;\n      this.g = (hex >> 8 & 255) / 255;\n      this.b = (hex & 255) / 255;\n      return this;\n    },\n    setRGB: function (r, g, b) {\n      this.r = r;\n      this.g = g;\n      this.b = b;\n      return this;\n    },\n    setHSL: function () {\n      function hue2rgb(p, q, t) {\n        if (t < 0) t += 1;\n        if (t > 1) t -= 1;\n        if (t < 1 / 6) return p + (q - p) * 6 * t;\n        if (t < 1 / 2) return q;\n        if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n        return p;\n      }\n\n      return function setHSL(h, s, l) {\n        // h,s,l ranges are in 0.0 - 1.0\n        h = THREE.Math.euclideanModulo(h, 1);\n        s = THREE.Math.clamp(s, 0, 1);\n        l = THREE.Math.clamp(l, 0, 1);\n\n        if (s === 0) {\n          this.r = this.g = this.b = l;\n        } else {\n          var p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n          var q = 2 * l - p;\n          this.r = hue2rgb(q, p, h + 1 / 3);\n          this.g = hue2rgb(q, p, h);\n          this.b = hue2rgb(q, p, h - 1 / 3);\n        }\n\n        return this;\n      };\n    }(),\n    setStyle: function (style) {\n      function handleAlpha(string) {\n        if (string === undefined) return;\n\n        if (parseFloat(string) < 1) {\n          console.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\n        }\n      }\n\n      var m;\n\n      if (m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec(style)) {\n        // rgb / hsl\n        var color;\n        var name = m[1];\n        var components = m[2];\n\n        switch (name) {\n          case 'rgb':\n          case 'rgba':\n            if (color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n              // rgb(255,0,0) rgba(255,0,0,0.5)\n              this.r = Math.min(255, parseInt(color[1], 10)) / 255;\n              this.g = Math.min(255, parseInt(color[2], 10)) / 255;\n              this.b = Math.min(255, parseInt(color[3], 10)) / 255;\n              handleAlpha(color[5]);\n              return this;\n            }\n\n            if (color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n              // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n              this.r = Math.min(100, parseInt(color[1], 10)) / 100;\n              this.g = Math.min(100, parseInt(color[2], 10)) / 100;\n              this.b = Math.min(100, parseInt(color[3], 10)) / 100;\n              handleAlpha(color[5]);\n              return this;\n            }\n\n            break;\n\n          case 'hsl':\n          case 'hsla':\n            if (color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n              // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n              var h = parseFloat(color[1]) / 360;\n              var s = parseInt(color[2], 10) / 100;\n              var l = parseInt(color[3], 10) / 100;\n              handleAlpha(color[5]);\n              return this.setHSL(h, s, l);\n            }\n\n            break;\n        }\n      } else if (m = /^\\#([A-Fa-f0-9]+)$/.exec(style)) {\n        // hex color\n        var hex = m[1];\n        var size = hex.length;\n\n        if (size === 3) {\n          // #ff0\n          this.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n          this.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n          this.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n          return this;\n        } else if (size === 6) {\n          // #ff0000\n          this.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n          this.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n          this.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n          return this;\n        }\n      }\n\n      if (style && style.length > 0) {\n        // color keywords\n        var hex = THREE.ColorKeywords[style];\n\n        if (hex !== undefined) {\n          // red\n          this.setHex(hex);\n        } else {\n          // unknown color\n          console.warn('THREE.Color: Unknown color ' + style);\n        }\n      }\n\n      return this;\n    },\n    clone: function () {\n      return new this.constructor(this.r, this.g, this.b);\n    },\n    copy: function (color) {\n      this.r = color.r;\n      this.g = color.g;\n      this.b = color.b;\n      return this;\n    },\n    copyGammaToLinear: function (color, gammaFactor) {\n      if (gammaFactor === undefined) gammaFactor = 2.0;\n      this.r = Math.pow(color.r, gammaFactor);\n      this.g = Math.pow(color.g, gammaFactor);\n      this.b = Math.pow(color.b, gammaFactor);\n      return this;\n    },\n    copyLinearToGamma: function (color, gammaFactor) {\n      if (gammaFactor === undefined) gammaFactor = 2.0;\n      var safeInverse = gammaFactor > 0 ? 1.0 / gammaFactor : 1.0;\n      this.r = Math.pow(color.r, safeInverse);\n      this.g = Math.pow(color.g, safeInverse);\n      this.b = Math.pow(color.b, safeInverse);\n      return this;\n    },\n    convertGammaToLinear: function () {\n      var r = this.r,\n          g = this.g,\n          b = this.b;\n      this.r = r * r;\n      this.g = g * g;\n      this.b = b * b;\n      return this;\n    },\n    convertLinearToGamma: function () {\n      this.r = Math.sqrt(this.r);\n      this.g = Math.sqrt(this.g);\n      this.b = Math.sqrt(this.b);\n      return this;\n    },\n    getHex: function () {\n      return this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;\n    },\n    getHexString: function () {\n      return ('000000' + this.getHex().toString(16)).slice(-6);\n    },\n    getHSL: function (optionalTarget) {\n      // h,s,l ranges are in 0.0 - 1.0\n      var hsl = optionalTarget || {\n        h: 0,\n        s: 0,\n        l: 0\n      };\n      var r = this.r,\n          g = this.g,\n          b = this.b;\n      var max = Math.max(r, g, b);\n      var min = Math.min(r, g, b);\n      var hue, saturation;\n      var lightness = (min + max) / 2.0;\n\n      if (min === max) {\n        hue = 0;\n        saturation = 0;\n      } else {\n        var delta = max - min;\n        saturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n\n        switch (max) {\n          case r:\n            hue = (g - b) / delta + (g < b ? 6 : 0);\n            break;\n\n          case g:\n            hue = (b - r) / delta + 2;\n            break;\n\n          case b:\n            hue = (r - g) / delta + 4;\n            break;\n        }\n\n        hue /= 6;\n      }\n\n      hsl.h = hue;\n      hsl.s = saturation;\n      hsl.l = lightness;\n      return hsl;\n    },\n    getStyle: function () {\n      return 'rgb(' + (this.r * 255 | 0) + ',' + (this.g * 255 | 0) + ',' + (this.b * 255 | 0) + ')';\n    },\n    offsetHSL: function (h, s, l) {\n      var hsl = this.getHSL();\n      hsl.h += h;\n      hsl.s += s;\n      hsl.l += l;\n      this.setHSL(hsl.h, hsl.s, hsl.l);\n      return this;\n    },\n    add: function (color) {\n      this.r += color.r;\n      this.g += color.g;\n      this.b += color.b;\n      return this;\n    },\n    addColors: function (color1, color2) {\n      this.r = color1.r + color2.r;\n      this.g = color1.g + color2.g;\n      this.b = color1.b + color2.b;\n      return this;\n    },\n    addScalar: function (s) {\n      this.r += s;\n      this.g += s;\n      this.b += s;\n      return this;\n    },\n    sub: function (color) {\n      this.r = Math.max(0, this.r - color.r);\n      this.g = Math.max(0, this.g - color.g);\n      this.b = Math.max(0, this.b - color.b);\n      return this;\n    },\n    multiply: function (color) {\n      this.r *= color.r;\n      this.g *= color.g;\n      this.b *= color.b;\n      return this;\n    },\n    multiplyScalar: function (s) {\n      this.r *= s;\n      this.g *= s;\n      this.b *= s;\n      return this;\n    },\n    lerp: function (color, alpha) {\n      this.r += (color.r - this.r) * alpha;\n      this.g += (color.g - this.g) * alpha;\n      this.b += (color.b - this.b) * alpha;\n      return this;\n    },\n    equals: function (c) {\n      return c.r === this.r && c.g === this.g && c.b === this.b;\n    },\n    fromArray: function (array, offset) {\n      if (offset === undefined) offset = 0;\n      this.r = array[offset];\n      this.g = array[offset + 1];\n      this.b = array[offset + 2];\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      array[offset] = this.r;\n      array[offset + 1] = this.g;\n      array[offset + 2] = this.b;\n      return array;\n    }\n  };\n  THREE.ColorKeywords = {\n    'aliceblue': 0xF0F8FF,\n    'antiquewhite': 0xFAEBD7,\n    'aqua': 0x00FFFF,\n    'aquamarine': 0x7FFFD4,\n    'azure': 0xF0FFFF,\n    'beige': 0xF5F5DC,\n    'bisque': 0xFFE4C4,\n    'black': 0x000000,\n    'blanchedalmond': 0xFFEBCD,\n    'blue': 0x0000FF,\n    'blueviolet': 0x8A2BE2,\n    'brown': 0xA52A2A,\n    'burlywood': 0xDEB887,\n    'cadetblue': 0x5F9EA0,\n    'chartreuse': 0x7FFF00,\n    'chocolate': 0xD2691E,\n    'coral': 0xFF7F50,\n    'cornflowerblue': 0x6495ED,\n    'cornsilk': 0xFFF8DC,\n    'crimson': 0xDC143C,\n    'cyan': 0x00FFFF,\n    'darkblue': 0x00008B,\n    'darkcyan': 0x008B8B,\n    'darkgoldenrod': 0xB8860B,\n    'darkgray': 0xA9A9A9,\n    'darkgreen': 0x006400,\n    'darkgrey': 0xA9A9A9,\n    'darkkhaki': 0xBDB76B,\n    'darkmagenta': 0x8B008B,\n    'darkolivegreen': 0x556B2F,\n    'darkorange': 0xFF8C00,\n    'darkorchid': 0x9932CC,\n    'darkred': 0x8B0000,\n    'darksalmon': 0xE9967A,\n    'darkseagreen': 0x8FBC8F,\n    'darkslateblue': 0x483D8B,\n    'darkslategray': 0x2F4F4F,\n    'darkslategrey': 0x2F4F4F,\n    'darkturquoise': 0x00CED1,\n    'darkviolet': 0x9400D3,\n    'deeppink': 0xFF1493,\n    'deepskyblue': 0x00BFFF,\n    'dimgray': 0x696969,\n    'dimgrey': 0x696969,\n    'dodgerblue': 0x1E90FF,\n    'firebrick': 0xB22222,\n    'floralwhite': 0xFFFAF0,\n    'forestgreen': 0x228B22,\n    'fuchsia': 0xFF00FF,\n    'gainsboro': 0xDCDCDC,\n    'ghostwhite': 0xF8F8FF,\n    'gold': 0xFFD700,\n    'goldenrod': 0xDAA520,\n    'gray': 0x808080,\n    'green': 0x008000,\n    'greenyellow': 0xADFF2F,\n    'grey': 0x808080,\n    'honeydew': 0xF0FFF0,\n    'hotpink': 0xFF69B4,\n    'indianred': 0xCD5C5C,\n    'indigo': 0x4B0082,\n    'ivory': 0xFFFFF0,\n    'khaki': 0xF0E68C,\n    'lavender': 0xE6E6FA,\n    'lavenderblush': 0xFFF0F5,\n    'lawngreen': 0x7CFC00,\n    'lemonchiffon': 0xFFFACD,\n    'lightblue': 0xADD8E6,\n    'lightcoral': 0xF08080,\n    'lightcyan': 0xE0FFFF,\n    'lightgoldenrodyellow': 0xFAFAD2,\n    'lightgray': 0xD3D3D3,\n    'lightgreen': 0x90EE90,\n    'lightgrey': 0xD3D3D3,\n    'lightpink': 0xFFB6C1,\n    'lightsalmon': 0xFFA07A,\n    'lightseagreen': 0x20B2AA,\n    'lightskyblue': 0x87CEFA,\n    'lightslategray': 0x778899,\n    'lightslategrey': 0x778899,\n    'lightsteelblue': 0xB0C4DE,\n    'lightyellow': 0xFFFFE0,\n    'lime': 0x00FF00,\n    'limegreen': 0x32CD32,\n    'linen': 0xFAF0E6,\n    'magenta': 0xFF00FF,\n    'maroon': 0x800000,\n    'mediumaquamarine': 0x66CDAA,\n    'mediumblue': 0x0000CD,\n    'mediumorchid': 0xBA55D3,\n    'mediumpurple': 0x9370DB,\n    'mediumseagreen': 0x3CB371,\n    'mediumslateblue': 0x7B68EE,\n    'mediumspringgreen': 0x00FA9A,\n    'mediumturquoise': 0x48D1CC,\n    'mediumvioletred': 0xC71585,\n    'midnightblue': 0x191970,\n    'mintcream': 0xF5FFFA,\n    'mistyrose': 0xFFE4E1,\n    'moccasin': 0xFFE4B5,\n    'navajowhite': 0xFFDEAD,\n    'navy': 0x000080,\n    'oldlace': 0xFDF5E6,\n    'olive': 0x808000,\n    'olivedrab': 0x6B8E23,\n    'orange': 0xFFA500,\n    'orangered': 0xFF4500,\n    'orchid': 0xDA70D6,\n    'palegoldenrod': 0xEEE8AA,\n    'palegreen': 0x98FB98,\n    'paleturquoise': 0xAFEEEE,\n    'palevioletred': 0xDB7093,\n    'papayawhip': 0xFFEFD5,\n    'peachpuff': 0xFFDAB9,\n    'peru': 0xCD853F,\n    'pink': 0xFFC0CB,\n    'plum': 0xDDA0DD,\n    'powderblue': 0xB0E0E6,\n    'purple': 0x800080,\n    'red': 0xFF0000,\n    'rosybrown': 0xBC8F8F,\n    'royalblue': 0x4169E1,\n    'saddlebrown': 0x8B4513,\n    'salmon': 0xFA8072,\n    'sandybrown': 0xF4A460,\n    'seagreen': 0x2E8B57,\n    'seashell': 0xFFF5EE,\n    'sienna': 0xA0522D,\n    'silver': 0xC0C0C0,\n    'skyblue': 0x87CEEB,\n    'slateblue': 0x6A5ACD,\n    'slategray': 0x708090,\n    'slategrey': 0x708090,\n    'snow': 0xFFFAFA,\n    'springgreen': 0x00FF7F,\n    'steelblue': 0x4682B4,\n    'tan': 0xD2B48C,\n    'teal': 0x008080,\n    'thistle': 0xD8BFD8,\n    'tomato': 0xFF6347,\n    'turquoise': 0x40E0D0,\n    'violet': 0xEE82EE,\n    'wheat': 0xF5DEB3,\n    'white': 0xFFFFFF,\n    'whitesmoke': 0xF5F5F5,\n    'yellow': 0xFFFF00,\n    'yellowgreen': 0x9ACD32\n  }; // File:src/math/Quaternion.js\n\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author WestLangley / http://github.com/WestLangley\n   * @author bhouston / http://clara.io\n   */\n\n  THREE.Quaternion = function (x, y, z, w) {\n    this._x = x || 0;\n    this._y = y || 0;\n    this._z = z || 0;\n    this._w = w !== undefined ? w : 1;\n  };\n\n  THREE.Quaternion.prototype = {\n    constructor: THREE.Quaternion,\n\n    get x() {\n      return this._x;\n    },\n\n    set x(value) {\n      this._x = value;\n      this.onChangeCallback();\n    },\n\n    get y() {\n      return this._y;\n    },\n\n    set y(value) {\n      this._y = value;\n      this.onChangeCallback();\n    },\n\n    get z() {\n      return this._z;\n    },\n\n    set z(value) {\n      this._z = value;\n      this.onChangeCallback();\n    },\n\n    get w() {\n      return this._w;\n    },\n\n    set w(value) {\n      this._w = value;\n      this.onChangeCallback();\n    },\n\n    set: function (x, y, z, w) {\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      this._w = w;\n      this.onChangeCallback();\n      return this;\n    },\n    clone: function () {\n      return new this.constructor(this._x, this._y, this._z, this._w);\n    },\n    copy: function (quaternion) {\n      this._x = quaternion.x;\n      this._y = quaternion.y;\n      this._z = quaternion.z;\n      this._w = quaternion.w;\n      this.onChangeCallback();\n      return this;\n    },\n    setFromEuler: function (euler, update) {\n      if (euler instanceof THREE.Euler === false) {\n        throw new Error('THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n      } // http://www.mathworks.com/matlabcentral/fileexchange/\n      // \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n      //\tcontent/SpinCalc.m\n\n\n      var c1 = Math.cos(euler._x / 2);\n      var c2 = Math.cos(euler._y / 2);\n      var c3 = Math.cos(euler._z / 2);\n      var s1 = Math.sin(euler._x / 2);\n      var s2 = Math.sin(euler._y / 2);\n      var s3 = Math.sin(euler._z / 2);\n      var order = euler.order;\n\n      if (order === 'XYZ') {\n        this._x = s1 * c2 * c3 + c1 * s2 * s3;\n        this._y = c1 * s2 * c3 - s1 * c2 * s3;\n        this._z = c1 * c2 * s3 + s1 * s2 * c3;\n        this._w = c1 * c2 * c3 - s1 * s2 * s3;\n      } else if (order === 'YXZ') {\n        this._x = s1 * c2 * c3 + c1 * s2 * s3;\n        this._y = c1 * s2 * c3 - s1 * c2 * s3;\n        this._z = c1 * c2 * s3 - s1 * s2 * c3;\n        this._w = c1 * c2 * c3 + s1 * s2 * s3;\n      } else if (order === 'ZXY') {\n        this._x = s1 * c2 * c3 - c1 * s2 * s3;\n        this._y = c1 * s2 * c3 + s1 * c2 * s3;\n        this._z = c1 * c2 * s3 + s1 * s2 * c3;\n        this._w = c1 * c2 * c3 - s1 * s2 * s3;\n      } else if (order === 'ZYX') {\n        this._x = s1 * c2 * c3 - c1 * s2 * s3;\n        this._y = c1 * s2 * c3 + s1 * c2 * s3;\n        this._z = c1 * c2 * s3 - s1 * s2 * c3;\n        this._w = c1 * c2 * c3 + s1 * s2 * s3;\n      } else if (order === 'YZX') {\n        this._x = s1 * c2 * c3 + c1 * s2 * s3;\n        this._y = c1 * s2 * c3 + s1 * c2 * s3;\n        this._z = c1 * c2 * s3 - s1 * s2 * c3;\n        this._w = c1 * c2 * c3 - s1 * s2 * s3;\n      } else if (order === 'XZY') {\n        this._x = s1 * c2 * c3 - c1 * s2 * s3;\n        this._y = c1 * s2 * c3 - s1 * c2 * s3;\n        this._z = c1 * c2 * s3 + s1 * s2 * c3;\n        this._w = c1 * c2 * c3 + s1 * s2 * s3;\n      }\n\n      if (update !== false) this.onChangeCallback();\n      return this;\n    },\n    setFromAxisAngle: function (axis, angle) {\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n      // assumes axis is normalized\n      var halfAngle = angle / 2,\n          s = Math.sin(halfAngle);\n      this._x = axis.x * s;\n      this._y = axis.y * s;\n      this._z = axis.z * s;\n      this._w = Math.cos(halfAngle);\n      this.onChangeCallback();\n      return this;\n    },\n    setFromRotationMatrix: function (m) {\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n      // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n      var te = m.elements,\n          m11 = te[0],\n          m12 = te[4],\n          m13 = te[8],\n          m21 = te[1],\n          m22 = te[5],\n          m23 = te[9],\n          m31 = te[2],\n          m32 = te[6],\n          m33 = te[10],\n          trace = m11 + m22 + m33,\n          s;\n\n      if (trace > 0) {\n        s = 0.5 / Math.sqrt(trace + 1.0);\n        this._w = 0.25 / s;\n        this._x = (m32 - m23) * s;\n        this._y = (m13 - m31) * s;\n        this._z = (m21 - m12) * s;\n      } else if (m11 > m22 && m11 > m33) {\n        s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n        this._w = (m32 - m23) / s;\n        this._x = 0.25 * s;\n        this._y = (m12 + m21) / s;\n        this._z = (m13 + m31) / s;\n      } else if (m22 > m33) {\n        s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n        this._w = (m13 - m31) / s;\n        this._x = (m12 + m21) / s;\n        this._y = 0.25 * s;\n        this._z = (m23 + m32) / s;\n      } else {\n        s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n        this._w = (m21 - m12) / s;\n        this._x = (m13 + m31) / s;\n        this._y = (m23 + m32) / s;\n        this._z = 0.25 * s;\n      }\n\n      this.onChangeCallback();\n      return this;\n    },\n    setFromUnitVectors: function () {\n      // http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\n      // assumes direction vectors vFrom and vTo are normalized\n      var v1, r;\n      var EPS = 0.000001;\n      return function setFromUnitVectors(vFrom, vTo) {\n        if (v1 === undefined) v1 = new THREE.Vector3();\n        r = vFrom.dot(vTo) + 1;\n\n        if (r < EPS) {\n          r = 0;\n\n          if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n            v1.set(-vFrom.y, vFrom.x, 0);\n          } else {\n            v1.set(0, -vFrom.z, vFrom.y);\n          }\n        } else {\n          v1.crossVectors(vFrom, vTo);\n        }\n\n        this._x = v1.x;\n        this._y = v1.y;\n        this._z = v1.z;\n        this._w = r;\n        return this.normalize();\n      };\n    }(),\n    inverse: function () {\n      return this.conjugate().normalize();\n    },\n    conjugate: function () {\n      this._x *= -1;\n      this._y *= -1;\n      this._z *= -1;\n      this.onChangeCallback();\n      return this;\n    },\n    dot: function (v) {\n      return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n    },\n    lengthSq: function () {\n      return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n    },\n    length: function () {\n      return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n    },\n    normalize: function () {\n      var l = this.length();\n\n      if (l === 0) {\n        this._x = 0;\n        this._y = 0;\n        this._z = 0;\n        this._w = 1;\n      } else {\n        l = 1 / l;\n        this._x = this._x * l;\n        this._y = this._y * l;\n        this._z = this._z * l;\n        this._w = this._w * l;\n      }\n\n      this.onChangeCallback();\n      return this;\n    },\n    multiply: function (q, p) {\n      if (p !== undefined) {\n        console.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');\n        return this.multiplyQuaternions(q, p);\n      }\n\n      return this.multiplyQuaternions(this, q);\n    },\n    premultiply: function (q) {\n      return this.multiplyQuaternions(q, this);\n    },\n    multiplyQuaternions: function (a, b) {\n      // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n      var qax = a._x,\n          qay = a._y,\n          qaz = a._z,\n          qaw = a._w;\n      var qbx = b._x,\n          qby = b._y,\n          qbz = b._z,\n          qbw = b._w;\n      this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n      this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n      this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n      this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n      this.onChangeCallback();\n      return this;\n    },\n    slerp: function (qb, t) {\n      if (t === 0) return this;\n      if (t === 1) return this.copy(qb);\n      var x = this._x,\n          y = this._y,\n          z = this._z,\n          w = this._w; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n      var cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n      if (cosHalfTheta < 0) {\n        this._w = -qb._w;\n        this._x = -qb._x;\n        this._y = -qb._y;\n        this._z = -qb._z;\n        cosHalfTheta = -cosHalfTheta;\n      } else {\n        this.copy(qb);\n      }\n\n      if (cosHalfTheta >= 1.0) {\n        this._w = w;\n        this._x = x;\n        this._y = y;\n        this._z = z;\n        return this;\n      }\n\n      var sinHalfTheta = Math.sqrt(1.0 - cosHalfTheta * cosHalfTheta);\n\n      if (Math.abs(sinHalfTheta) < 0.001) {\n        this._w = 0.5 * (w + this._w);\n        this._x = 0.5 * (x + this._x);\n        this._y = 0.5 * (y + this._y);\n        this._z = 0.5 * (z + this._z);\n        return this;\n      }\n\n      var halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n      var ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n          ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n      this._w = w * ratioA + this._w * ratioB;\n      this._x = x * ratioA + this._x * ratioB;\n      this._y = y * ratioA + this._y * ratioB;\n      this._z = z * ratioA + this._z * ratioB;\n      this.onChangeCallback();\n      return this;\n    },\n    equals: function (quaternion) {\n      return quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\n    },\n    fromArray: function (array, offset) {\n      if (offset === undefined) offset = 0;\n      this._x = array[offset];\n      this._y = array[offset + 1];\n      this._z = array[offset + 2];\n      this._w = array[offset + 3];\n      this.onChangeCallback();\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      array[offset] = this._x;\n      array[offset + 1] = this._y;\n      array[offset + 2] = this._z;\n      array[offset + 3] = this._w;\n      return array;\n    },\n    onChange: function (callback) {\n      this.onChangeCallback = callback;\n      return this;\n    },\n    onChangeCallback: function () {}\n  };\n  Object.assign(THREE.Quaternion, {\n    slerp: function (qa, qb, qm, t) {\n      return qm.copy(qa).slerp(qb, t);\n    },\n    slerpFlat: function (dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\n      // fuzz-free, array-based Quaternion SLERP operation\n      var x0 = src0[srcOffset0 + 0],\n          y0 = src0[srcOffset0 + 1],\n          z0 = src0[srcOffset0 + 2],\n          w0 = src0[srcOffset0 + 3],\n          x1 = src1[srcOffset1 + 0],\n          y1 = src1[srcOffset1 + 1],\n          z1 = src1[srcOffset1 + 2],\n          w1 = src1[srcOffset1 + 3];\n\n      if (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\n        var s = 1 - t,\n            cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n            dir = cos >= 0 ? 1 : -1,\n            sqrSin = 1 - cos * cos; // Skip the Slerp for tiny steps to avoid numeric problems:\n\n        if (sqrSin > Number.EPSILON) {\n          var sin = Math.sqrt(sqrSin),\n              len = Math.atan2(sin, cos * dir);\n          s = Math.sin(s * len) / sin;\n          t = Math.sin(t * len) / sin;\n        }\n\n        var tDir = t * dir;\n        x0 = x0 * s + x1 * tDir;\n        y0 = y0 * s + y1 * tDir;\n        z0 = z0 * s + z1 * tDir;\n        w0 = w0 * s + w1 * tDir; // Normalize in case we just did a lerp:\n\n        if (s === 1 - t) {\n          var f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\n          x0 *= f;\n          y0 *= f;\n          z0 *= f;\n          w0 *= f;\n        }\n      }\n\n      dst[dstOffset] = x0;\n      dst[dstOffset + 1] = y0;\n      dst[dstOffset + 2] = z0;\n      dst[dstOffset + 3] = w0;\n    }\n  }); // File:src/math/Vector2.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author philogb / http://blog.thejit.org/\n   * @author egraether / http://egraether.com/\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   */\n\n  THREE.Vector2 = function (x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  };\n\n  THREE.Vector2.prototype = {\n    constructor: THREE.Vector2,\n\n    get width() {\n      return this.x;\n    },\n\n    set width(value) {\n      this.x = value;\n    },\n\n    get height() {\n      return this.y;\n    },\n\n    set height(value) {\n      this.y = value;\n    },\n\n    //\n    set: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n    setScalar: function (scalar) {\n      this.x = scalar;\n      this.y = scalar;\n      return this;\n    },\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n    setComponent: function (index, value) {\n      switch (index) {\n        case 0:\n          this.x = value;\n          break;\n\n        case 1:\n          this.y = value;\n          break;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n    },\n    getComponent: function (index) {\n      switch (index) {\n        case 0:\n          return this.x;\n\n        case 1:\n          return this.y;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n    },\n    clone: function () {\n      return new this.constructor(this.x, this.y);\n    },\n    copy: function (v) {\n      this.x = v.x;\n      this.y = v.y;\n      return this;\n    },\n    add: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n        return this.addVectors(v, w);\n      }\n\n      this.x += v.x;\n      this.y += v.y;\n      return this;\n    },\n    addScalar: function (s) {\n      this.x += s;\n      this.y += s;\n      return this;\n    },\n    addVectors: function (a, b) {\n      this.x = a.x + b.x;\n      this.y = a.y + b.y;\n      return this;\n    },\n    addScaledVector: function (v, s) {\n      this.x += v.x * s;\n      this.y += v.y * s;\n      return this;\n    },\n    sub: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n        return this.subVectors(v, w);\n      }\n\n      this.x -= v.x;\n      this.y -= v.y;\n      return this;\n    },\n    subScalar: function (s) {\n      this.x -= s;\n      this.y -= s;\n      return this;\n    },\n    subVectors: function (a, b) {\n      this.x = a.x - b.x;\n      this.y = a.y - b.y;\n      return this;\n    },\n    multiply: function (v) {\n      this.x *= v.x;\n      this.y *= v.y;\n      return this;\n    },\n    multiplyScalar: function (scalar) {\n      if (isFinite(scalar)) {\n        this.x *= scalar;\n        this.y *= scalar;\n      } else {\n        this.x = 0;\n        this.y = 0;\n      }\n\n      return this;\n    },\n    divide: function (v) {\n      this.x /= v.x;\n      this.y /= v.y;\n      return this;\n    },\n    divideScalar: function (scalar) {\n      return this.multiplyScalar(1 / scalar);\n    },\n    min: function (v) {\n      this.x = Math.min(this.x, v.x);\n      this.y = Math.min(this.y, v.y);\n      return this;\n    },\n    max: function (v) {\n      this.x = Math.max(this.x, v.x);\n      this.y = Math.max(this.y, v.y);\n      return this;\n    },\n    clamp: function (min, max) {\n      // This function assumes min < max, if this assumption isn't true it will not operate correctly\n      this.x = Math.max(min.x, Math.min(max.x, this.x));\n      this.y = Math.max(min.y, Math.min(max.y, this.y));\n      return this;\n    },\n    clampScalar: function () {\n      var min, max;\n      return function clampScalar(minVal, maxVal) {\n        if (min === undefined) {\n          min = new THREE.Vector2();\n          max = new THREE.Vector2();\n        }\n\n        min.set(minVal, minVal);\n        max.set(maxVal, maxVal);\n        return this.clamp(min, max);\n      };\n    }(),\n    clampLength: function (min, max) {\n      var length = this.length();\n      return this.multiplyScalar(Math.max(min, Math.min(max, length)) / length);\n    },\n    floor: function () {\n      this.x = Math.floor(this.x);\n      this.y = Math.floor(this.y);\n      return this;\n    },\n    ceil: function () {\n      this.x = Math.ceil(this.x);\n      this.y = Math.ceil(this.y);\n      return this;\n    },\n    round: function () {\n      this.x = Math.round(this.x);\n      this.y = Math.round(this.y);\n      return this;\n    },\n    roundToZero: function () {\n      this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n      this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n      return this;\n    },\n    negate: function () {\n      this.x = -this.x;\n      this.y = -this.y;\n      return this;\n    },\n    dot: function (v) {\n      return this.x * v.x + this.y * v.y;\n    },\n    lengthSq: function () {\n      return this.x * this.x + this.y * this.y;\n    },\n    length: function () {\n      return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n    lengthManhattan: function () {\n      return Math.abs(this.x) + Math.abs(this.y);\n    },\n    normalize: function () {\n      return this.divideScalar(this.length());\n    },\n    angle: function () {\n      // computes the angle in radians with respect to the positive x-axis\n      var angle = Math.atan2(this.y, this.x);\n      if (angle < 0) angle += 2 * Math.PI;\n      return angle;\n    },\n    distanceTo: function (v) {\n      return Math.sqrt(this.distanceToSquared(v));\n    },\n    distanceToSquared: function (v) {\n      var dx = this.x - v.x,\n          dy = this.y - v.y;\n      return dx * dx + dy * dy;\n    },\n    distanceToManhattan: function (v) {\n      return Math.abs(this.x - v.x) + Math.abs(this.y - v.y);\n    },\n    setLength: function (length) {\n      return this.multiplyScalar(length / this.length());\n    },\n    lerp: function (v, alpha) {\n      this.x += (v.x - this.x) * alpha;\n      this.y += (v.y - this.y) * alpha;\n      return this;\n    },\n    lerpVectors: function (v1, v2, alpha) {\n      return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n    },\n    equals: function (v) {\n      return v.x === this.x && v.y === this.y;\n    },\n    fromArray: function (array, offset) {\n      if (offset === undefined) offset = 0;\n      this.x = array[offset];\n      this.y = array[offset + 1];\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      array[offset] = this.x;\n      array[offset + 1] = this.y;\n      return array;\n    },\n    fromAttribute: function (attribute, index, offset) {\n      if (offset === undefined) offset = 0;\n      index = index * attribute.itemSize + offset;\n      this.x = attribute.array[index];\n      this.y = attribute.array[index + 1];\n      return this;\n    },\n    rotateAround: function (center, angle) {\n      var c = Math.cos(angle),\n          s = Math.sin(angle);\n      var x = this.x - center.x;\n      var y = this.y - center.y;\n      this.x = x * c - y * s + center.x;\n      this.y = x * s + y * c + center.y;\n      return this;\n    }\n  }; // File:src/math/Vector3.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author *kile / http://kile.stravaganza.org/\n   * @author philogb / http://blog.thejit.org/\n   * @author mikael emtinger / http://gomo.se/\n   * @author egraether / http://egraether.com/\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n  THREE.Vector3 = function (x, y, z) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.z = z || 0;\n  };\n\n  THREE.Vector3.prototype = {\n    constructor: THREE.Vector3,\n    set: function (x, y, z) {\n      this.x = x;\n      this.y = y;\n      this.z = z;\n      return this;\n    },\n    setScalar: function (scalar) {\n      this.x = scalar;\n      this.y = scalar;\n      this.z = scalar;\n      return this;\n    },\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n    setZ: function (z) {\n      this.z = z;\n      return this;\n    },\n    setComponent: function (index, value) {\n      switch (index) {\n        case 0:\n          this.x = value;\n          break;\n\n        case 1:\n          this.y = value;\n          break;\n\n        case 2:\n          this.z = value;\n          break;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n    },\n    getComponent: function (index) {\n      switch (index) {\n        case 0:\n          return this.x;\n\n        case 1:\n          return this.y;\n\n        case 2:\n          return this.z;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n    },\n    clone: function () {\n      return new this.constructor(this.x, this.y, this.z);\n    },\n    copy: function (v) {\n      this.x = v.x;\n      this.y = v.y;\n      this.z = v.z;\n      return this;\n    },\n    add: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n        return this.addVectors(v, w);\n      }\n\n      this.x += v.x;\n      this.y += v.y;\n      this.z += v.z;\n      return this;\n    },\n    addScalar: function (s) {\n      this.x += s;\n      this.y += s;\n      this.z += s;\n      return this;\n    },\n    addVectors: function (a, b) {\n      this.x = a.x + b.x;\n      this.y = a.y + b.y;\n      this.z = a.z + b.z;\n      return this;\n    },\n    addScaledVector: function (v, s) {\n      this.x += v.x * s;\n      this.y += v.y * s;\n      this.z += v.z * s;\n      return this;\n    },\n    sub: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n        return this.subVectors(v, w);\n      }\n\n      this.x -= v.x;\n      this.y -= v.y;\n      this.z -= v.z;\n      return this;\n    },\n    subScalar: function (s) {\n      this.x -= s;\n      this.y -= s;\n      this.z -= s;\n      return this;\n    },\n    subVectors: function (a, b) {\n      this.x = a.x - b.x;\n      this.y = a.y - b.y;\n      this.z = a.z - b.z;\n      return this;\n    },\n    multiply: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n        return this.multiplyVectors(v, w);\n      }\n\n      this.x *= v.x;\n      this.y *= v.y;\n      this.z *= v.z;\n      return this;\n    },\n    multiplyScalar: function (scalar) {\n      if (isFinite(scalar)) {\n        this.x *= scalar;\n        this.y *= scalar;\n        this.z *= scalar;\n      } else {\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n      }\n\n      return this;\n    },\n    multiplyVectors: function (a, b) {\n      this.x = a.x * b.x;\n      this.y = a.y * b.y;\n      this.z = a.z * b.z;\n      return this;\n    },\n    applyEuler: function () {\n      var quaternion;\n      return function applyEuler(euler) {\n        if (euler instanceof THREE.Euler === false) {\n          console.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');\n        }\n\n        if (quaternion === undefined) quaternion = new THREE.Quaternion();\n        return this.applyQuaternion(quaternion.setFromEuler(euler));\n      };\n    }(),\n    applyAxisAngle: function () {\n      var quaternion;\n      return function applyAxisAngle(axis, angle) {\n        if (quaternion === undefined) quaternion = new THREE.Quaternion();\n        return this.applyQuaternion(quaternion.setFromAxisAngle(axis, angle));\n      };\n    }(),\n    applyMatrix3: function (m) {\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var e = m.elements;\n      this.x = e[0] * x + e[3] * y + e[6] * z;\n      this.y = e[1] * x + e[4] * y + e[7] * z;\n      this.z = e[2] * x + e[5] * y + e[8] * z;\n      return this;\n    },\n    applyMatrix4: function (m) {\n      // input: THREE.Matrix4 affine matrix\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var e = m.elements;\n      this.x = e[0] * x + e[4] * y + e[8] * z + e[12];\n      this.y = e[1] * x + e[5] * y + e[9] * z + e[13];\n      this.z = e[2] * x + e[6] * y + e[10] * z + e[14];\n      return this;\n    },\n    applyProjection: function (m) {\n      // input: THREE.Matrix4 projection matrix\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var e = m.elements;\n      var d = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]); // perspective divide\n\n      this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * d;\n      this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * d;\n      this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * d;\n      return this;\n    },\n    applyQuaternion: function (q) {\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var qx = q.x,\n          qy = q.y,\n          qz = q.z,\n          qw = q.w; // calculate quat * vector\n\n      var ix = qw * x + qy * z - qz * y;\n      var iy = qw * y + qz * x - qx * z;\n      var iz = qw * z + qx * y - qy * x;\n      var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n      this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n      this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n      this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n      return this;\n    },\n    project: function () {\n      var matrix;\n      return function project(camera) {\n        if (matrix === undefined) matrix = new THREE.Matrix4();\n        matrix.multiplyMatrices(camera.projectionMatrix, matrix.getInverse(camera.matrixWorld));\n        return this.applyProjection(matrix);\n      };\n    }(),\n    unproject: function () {\n      var matrix;\n      return function unproject(camera) {\n        if (matrix === undefined) matrix = new THREE.Matrix4();\n        matrix.multiplyMatrices(camera.matrixWorld, matrix.getInverse(camera.projectionMatrix));\n        return this.applyProjection(matrix);\n      };\n    }(),\n    transformDirection: function (m) {\n      // input: THREE.Matrix4 affine matrix\n      // vector interpreted as a direction\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var e = m.elements;\n      this.x = e[0] * x + e[4] * y + e[8] * z;\n      this.y = e[1] * x + e[5] * y + e[9] * z;\n      this.z = e[2] * x + e[6] * y + e[10] * z;\n      return this.normalize();\n    },\n    divide: function (v) {\n      this.x /= v.x;\n      this.y /= v.y;\n      this.z /= v.z;\n      return this;\n    },\n    divideScalar: function (scalar) {\n      return this.multiplyScalar(1 / scalar);\n    },\n    min: function (v) {\n      this.x = Math.min(this.x, v.x);\n      this.y = Math.min(this.y, v.y);\n      this.z = Math.min(this.z, v.z);\n      return this;\n    },\n    max: function (v) {\n      this.x = Math.max(this.x, v.x);\n      this.y = Math.max(this.y, v.y);\n      this.z = Math.max(this.z, v.z);\n      return this;\n    },\n    clamp: function (min, max) {\n      // This function assumes min < max, if this assumption isn't true it will not operate correctly\n      this.x = Math.max(min.x, Math.min(max.x, this.x));\n      this.y = Math.max(min.y, Math.min(max.y, this.y));\n      this.z = Math.max(min.z, Math.min(max.z, this.z));\n      return this;\n    },\n    clampScalar: function () {\n      var min, max;\n      return function clampScalar(minVal, maxVal) {\n        if (min === undefined) {\n          min = new THREE.Vector3();\n          max = new THREE.Vector3();\n        }\n\n        min.set(minVal, minVal, minVal);\n        max.set(maxVal, maxVal, maxVal);\n        return this.clamp(min, max);\n      };\n    }(),\n    clampLength: function (min, max) {\n      var length = this.length();\n      return this.multiplyScalar(Math.max(min, Math.min(max, length)) / length);\n    },\n    floor: function () {\n      this.x = Math.floor(this.x);\n      this.y = Math.floor(this.y);\n      this.z = Math.floor(this.z);\n      return this;\n    },\n    ceil: function () {\n      this.x = Math.ceil(this.x);\n      this.y = Math.ceil(this.y);\n      this.z = Math.ceil(this.z);\n      return this;\n    },\n    round: function () {\n      this.x = Math.round(this.x);\n      this.y = Math.round(this.y);\n      this.z = Math.round(this.z);\n      return this;\n    },\n    roundToZero: function () {\n      this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n      this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n      this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n      return this;\n    },\n    negate: function () {\n      this.x = -this.x;\n      this.y = -this.y;\n      this.z = -this.z;\n      return this;\n    },\n    dot: function (v) {\n      return this.x * v.x + this.y * v.y + this.z * v.z;\n    },\n    lengthSq: function () {\n      return this.x * this.x + this.y * this.y + this.z * this.z;\n    },\n    length: function () {\n      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    },\n    lengthManhattan: function () {\n      return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n    },\n    normalize: function () {\n      return this.divideScalar(this.length());\n    },\n    setLength: function (length) {\n      return this.multiplyScalar(length / this.length());\n    },\n    lerp: function (v, alpha) {\n      this.x += (v.x - this.x) * alpha;\n      this.y += (v.y - this.y) * alpha;\n      this.z += (v.z - this.z) * alpha;\n      return this;\n    },\n    lerpVectors: function (v1, v2, alpha) {\n      return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n    },\n    cross: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n        return this.crossVectors(v, w);\n      }\n\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      this.x = y * v.z - z * v.y;\n      this.y = z * v.x - x * v.z;\n      this.z = x * v.y - y * v.x;\n      return this;\n    },\n    crossVectors: function (a, b) {\n      var ax = a.x,\n          ay = a.y,\n          az = a.z;\n      var bx = b.x,\n          by = b.y,\n          bz = b.z;\n      this.x = ay * bz - az * by;\n      this.y = az * bx - ax * bz;\n      this.z = ax * by - ay * bx;\n      return this;\n    },\n    projectOnVector: function (vector) {\n      var scalar = vector.dot(this) / vector.lengthSq();\n      return this.copy(vector).multiplyScalar(scalar);\n    },\n    projectOnPlane: function () {\n      var v1;\n      return function projectOnPlane(planeNormal) {\n        if (v1 === undefined) v1 = new THREE.Vector3();\n        v1.copy(this).projectOnVector(planeNormal);\n        return this.sub(v1);\n      };\n    }(),\n    reflect: function () {\n      // reflect incident vector off plane orthogonal to normal\n      // normal is assumed to have unit length\n      var v1;\n      return function reflect(normal) {\n        if (v1 === undefined) v1 = new THREE.Vector3();\n        return this.sub(v1.copy(normal).multiplyScalar(2 * this.dot(normal)));\n      };\n    }(),\n    angleTo: function (v) {\n      var theta = this.dot(v) / Math.sqrt(this.lengthSq() * v.lengthSq()); // clamp, to handle numerical problems\n\n      return Math.acos(THREE.Math.clamp(theta, -1, 1));\n    },\n    distanceTo: function (v) {\n      return Math.sqrt(this.distanceToSquared(v));\n    },\n    distanceToSquared: function (v) {\n      var dx = this.x - v.x,\n          dy = this.y - v.y,\n          dz = this.z - v.z;\n      return dx * dx + dy * dy + dz * dz;\n    },\n    distanceToManhattan: function (v) {\n      return Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\n    },\n    setFromSpherical: function (s) {\n      var sinPhiRadius = Math.sin(s.phi) * s.radius;\n      this.x = sinPhiRadius * Math.sin(s.theta);\n      this.y = Math.cos(s.phi) * s.radius;\n      this.z = sinPhiRadius * Math.cos(s.theta);\n      return this;\n    },\n    setFromMatrixPosition: function (m) {\n      return this.setFromMatrixColumn(m, 3);\n    },\n    setFromMatrixScale: function (m) {\n      var sx = this.setFromMatrixColumn(m, 0).length();\n      var sy = this.setFromMatrixColumn(m, 1).length();\n      var sz = this.setFromMatrixColumn(m, 2).length();\n      this.x = sx;\n      this.y = sy;\n      this.z = sz;\n      return this;\n    },\n    setFromMatrixColumn: function (m, index) {\n      if (typeof m === 'number') {\n        console.warn('THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).');\n        var temp = m;\n        m = index;\n        index = temp;\n      }\n\n      return this.fromArray(m.elements, index * 4);\n    },\n    equals: function (v) {\n      return v.x === this.x && v.y === this.y && v.z === this.z;\n    },\n    fromArray: function (array, offset) {\n      if (offset === undefined) offset = 0;\n      this.x = array[offset];\n      this.y = array[offset + 1];\n      this.z = array[offset + 2];\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      array[offset] = this.x;\n      array[offset + 1] = this.y;\n      array[offset + 2] = this.z;\n      return array;\n    },\n    fromAttribute: function (attribute, index, offset) {\n      if (offset === undefined) offset = 0;\n      index = index * attribute.itemSize + offset;\n      this.x = attribute.array[index];\n      this.y = attribute.array[index + 1];\n      this.z = attribute.array[index + 2];\n      return this;\n    }\n  }; // File:src/math/Vector4.js\n\n  /**\n   * @author supereggbert / http://www.paulbrunt.co.uk/\n   * @author philogb / http://blog.thejit.org/\n   * @author mikael emtinger / http://gomo.se/\n   * @author egraether / http://egraether.com/\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n  THREE.Vector4 = function (x, y, z, w) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.z = z || 0;\n    this.w = w !== undefined ? w : 1;\n  };\n\n  THREE.Vector4.prototype = {\n    constructor: THREE.Vector4,\n    set: function (x, y, z, w) {\n      this.x = x;\n      this.y = y;\n      this.z = z;\n      this.w = w;\n      return this;\n    },\n    setScalar: function (scalar) {\n      this.x = scalar;\n      this.y = scalar;\n      this.z = scalar;\n      this.w = scalar;\n      return this;\n    },\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n    setZ: function (z) {\n      this.z = z;\n      return this;\n    },\n    setW: function (w) {\n      this.w = w;\n      return this;\n    },\n    setComponent: function (index, value) {\n      switch (index) {\n        case 0:\n          this.x = value;\n          break;\n\n        case 1:\n          this.y = value;\n          break;\n\n        case 2:\n          this.z = value;\n          break;\n\n        case 3:\n          this.w = value;\n          break;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n    },\n    getComponent: function (index) {\n      switch (index) {\n        case 0:\n          return this.x;\n\n        case 1:\n          return this.y;\n\n        case 2:\n          return this.z;\n\n        case 3:\n          return this.w;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n    },\n    clone: function () {\n      return new this.constructor(this.x, this.y, this.z, this.w);\n    },\n    copy: function (v) {\n      this.x = v.x;\n      this.y = v.y;\n      this.z = v.z;\n      this.w = v.w !== undefined ? v.w : 1;\n      return this;\n    },\n    add: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n        return this.addVectors(v, w);\n      }\n\n      this.x += v.x;\n      this.y += v.y;\n      this.z += v.z;\n      this.w += v.w;\n      return this;\n    },\n    addScalar: function (s) {\n      this.x += s;\n      this.y += s;\n      this.z += s;\n      this.w += s;\n      return this;\n    },\n    addVectors: function (a, b) {\n      this.x = a.x + b.x;\n      this.y = a.y + b.y;\n      this.z = a.z + b.z;\n      this.w = a.w + b.w;\n      return this;\n    },\n    addScaledVector: function (v, s) {\n      this.x += v.x * s;\n      this.y += v.y * s;\n      this.z += v.z * s;\n      this.w += v.w * s;\n      return this;\n    },\n    sub: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n        return this.subVectors(v, w);\n      }\n\n      this.x -= v.x;\n      this.y -= v.y;\n      this.z -= v.z;\n      this.w -= v.w;\n      return this;\n    },\n    subScalar: function (s) {\n      this.x -= s;\n      this.y -= s;\n      this.z -= s;\n      this.w -= s;\n      return this;\n    },\n    subVectors: function (a, b) {\n      this.x = a.x - b.x;\n      this.y = a.y - b.y;\n      this.z = a.z - b.z;\n      this.w = a.w - b.w;\n      return this;\n    },\n    multiplyScalar: function (scalar) {\n      if (isFinite(scalar)) {\n        this.x *= scalar;\n        this.y *= scalar;\n        this.z *= scalar;\n        this.w *= scalar;\n      } else {\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n        this.w = 0;\n      }\n\n      return this;\n    },\n    applyMatrix4: function (m) {\n      var x = this.x,\n          y = this.y,\n          z = this.z,\n          w = this.w;\n      var e = m.elements;\n      this.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\n      this.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\n      this.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\n      this.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\n      return this;\n    },\n    divideScalar: function (scalar) {\n      return this.multiplyScalar(1 / scalar);\n    },\n    setAxisAngleFromQuaternion: function (q) {\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n      // q is assumed to be normalized\n      this.w = 2 * Math.acos(q.w);\n      var s = Math.sqrt(1 - q.w * q.w);\n\n      if (s < 0.0001) {\n        this.x = 1;\n        this.y = 0;\n        this.z = 0;\n      } else {\n        this.x = q.x / s;\n        this.y = q.y / s;\n        this.z = q.z / s;\n      }\n\n      return this;\n    },\n    setAxisAngleFromRotationMatrix: function (m) {\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n      // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n      var angle,\n          x,\n          y,\n          z,\n          // variables for result\n      epsilon = 0.01,\n          // margin to allow for rounding errors\n      epsilon2 = 0.1,\n          // margin to distinguish between 0 and 180 degrees\n      te = m.elements,\n          m11 = te[0],\n          m12 = te[4],\n          m13 = te[8],\n          m21 = te[1],\n          m22 = te[5],\n          m23 = te[9],\n          m31 = te[2],\n          m32 = te[6],\n          m33 = te[10];\n\n      if (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {\n        // singularity found\n        // first check for identity matrix which must have +1 for all terms\n        // in leading diagonal and zero in other terms\n        if (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {\n          // this singularity is identity matrix so angle = 0\n          this.set(1, 0, 0, 0);\n          return this; // zero angle, arbitrary axis\n        } // otherwise this singularity is angle = 180\n\n\n        angle = Math.PI;\n        var xx = (m11 + 1) / 2;\n        var yy = (m22 + 1) / 2;\n        var zz = (m33 + 1) / 2;\n        var xy = (m12 + m21) / 4;\n        var xz = (m13 + m31) / 4;\n        var yz = (m23 + m32) / 4;\n\n        if (xx > yy && xx > zz) {\n          // m11 is the largest diagonal term\n          if (xx < epsilon) {\n            x = 0;\n            y = 0.707106781;\n            z = 0.707106781;\n          } else {\n            x = Math.sqrt(xx);\n            y = xy / x;\n            z = xz / x;\n          }\n        } else if (yy > zz) {\n          // m22 is the largest diagonal term\n          if (yy < epsilon) {\n            x = 0.707106781;\n            y = 0;\n            z = 0.707106781;\n          } else {\n            y = Math.sqrt(yy);\n            x = xy / y;\n            z = yz / y;\n          }\n        } else {\n          // m33 is the largest diagonal term so base result on this\n          if (zz < epsilon) {\n            x = 0.707106781;\n            y = 0.707106781;\n            z = 0;\n          } else {\n            z = Math.sqrt(zz);\n            x = xz / z;\n            y = yz / z;\n          }\n        }\n\n        this.set(x, y, z, angle);\n        return this; // return 180 deg rotation\n      } // as we have reached here there are no singularities so we can handle normally\n\n\n      var s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12)); // used to normalize\n\n      if (Math.abs(s) < 0.001) s = 1; // prevent divide by zero, should not happen if matrix is orthogonal and should be\n      // caught by singularity test above, but I've left it in just in case\n\n      this.x = (m32 - m23) / s;\n      this.y = (m13 - m31) / s;\n      this.z = (m21 - m12) / s;\n      this.w = Math.acos((m11 + m22 + m33 - 1) / 2);\n      return this;\n    },\n    min: function (v) {\n      this.x = Math.min(this.x, v.x);\n      this.y = Math.min(this.y, v.y);\n      this.z = Math.min(this.z, v.z);\n      this.w = Math.min(this.w, v.w);\n      return this;\n    },\n    max: function (v) {\n      this.x = Math.max(this.x, v.x);\n      this.y = Math.max(this.y, v.y);\n      this.z = Math.max(this.z, v.z);\n      this.w = Math.max(this.w, v.w);\n      return this;\n    },\n    clamp: function (min, max) {\n      // This function assumes min < max, if this assumption isn't true it will not operate correctly\n      this.x = Math.max(min.x, Math.min(max.x, this.x));\n      this.y = Math.max(min.y, Math.min(max.y, this.y));\n      this.z = Math.max(min.z, Math.min(max.z, this.z));\n      this.w = Math.max(min.w, Math.min(max.w, this.w));\n      return this;\n    },\n    clampScalar: function () {\n      var min, max;\n      return function clampScalar(minVal, maxVal) {\n        if (min === undefined) {\n          min = new THREE.Vector4();\n          max = new THREE.Vector4();\n        }\n\n        min.set(minVal, minVal, minVal, minVal);\n        max.set(maxVal, maxVal, maxVal, maxVal);\n        return this.clamp(min, max);\n      };\n    }(),\n    floor: function () {\n      this.x = Math.floor(this.x);\n      this.y = Math.floor(this.y);\n      this.z = Math.floor(this.z);\n      this.w = Math.floor(this.w);\n      return this;\n    },\n    ceil: function () {\n      this.x = Math.ceil(this.x);\n      this.y = Math.ceil(this.y);\n      this.z = Math.ceil(this.z);\n      this.w = Math.ceil(this.w);\n      return this;\n    },\n    round: function () {\n      this.x = Math.round(this.x);\n      this.y = Math.round(this.y);\n      this.z = Math.round(this.z);\n      this.w = Math.round(this.w);\n      return this;\n    },\n    roundToZero: function () {\n      this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n      this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n      this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n      this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\n      return this;\n    },\n    negate: function () {\n      this.x = -this.x;\n      this.y = -this.y;\n      this.z = -this.z;\n      this.w = -this.w;\n      return this;\n    },\n    dot: function (v) {\n      return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n    },\n    lengthSq: function () {\n      return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n    },\n    length: function () {\n      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n    },\n    lengthManhattan: function () {\n      return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n    },\n    normalize: function () {\n      return this.divideScalar(this.length());\n    },\n    setLength: function (length) {\n      return this.multiplyScalar(length / this.length());\n    },\n    lerp: function (v, alpha) {\n      this.x += (v.x - this.x) * alpha;\n      this.y += (v.y - this.y) * alpha;\n      this.z += (v.z - this.z) * alpha;\n      this.w += (v.w - this.w) * alpha;\n      return this;\n    },\n    lerpVectors: function (v1, v2, alpha) {\n      return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n    },\n    equals: function (v) {\n      return v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\n    },\n    fromArray: function (array, offset) {\n      if (offset === undefined) offset = 0;\n      this.x = array[offset];\n      this.y = array[offset + 1];\n      this.z = array[offset + 2];\n      this.w = array[offset + 3];\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      array[offset] = this.x;\n      array[offset + 1] = this.y;\n      array[offset + 2] = this.z;\n      array[offset + 3] = this.w;\n      return array;\n    },\n    fromAttribute: function (attribute, index, offset) {\n      if (offset === undefined) offset = 0;\n      index = index * attribute.itemSize + offset;\n      this.x = attribute.array[index];\n      this.y = attribute.array[index + 1];\n      this.z = attribute.array[index + 2];\n      this.w = attribute.array[index + 3];\n      return this;\n    }\n  }; // File:src/math/Euler.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n   * @author bhouston / http://clara.io\n   */\n\n  THREE.Euler = function (x, y, z, order) {\n    this._x = x || 0;\n    this._y = y || 0;\n    this._z = z || 0;\n    this._order = order || THREE.Euler.DefaultOrder;\n  };\n\n  THREE.Euler.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'];\n  THREE.Euler.DefaultOrder = 'XYZ';\n  THREE.Euler.prototype = {\n    constructor: THREE.Euler,\n\n    get x() {\n      return this._x;\n    },\n\n    set x(value) {\n      this._x = value;\n      this.onChangeCallback();\n    },\n\n    get y() {\n      return this._y;\n    },\n\n    set y(value) {\n      this._y = value;\n      this.onChangeCallback();\n    },\n\n    get z() {\n      return this._z;\n    },\n\n    set z(value) {\n      this._z = value;\n      this.onChangeCallback();\n    },\n\n    get order() {\n      return this._order;\n    },\n\n    set order(value) {\n      this._order = value;\n      this.onChangeCallback();\n    },\n\n    set: function (x, y, z, order) {\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      this._order = order || this._order;\n      this.onChangeCallback();\n      return this;\n    },\n    clone: function () {\n      return new this.constructor(this._x, this._y, this._z, this._order);\n    },\n    copy: function (euler) {\n      this._x = euler._x;\n      this._y = euler._y;\n      this._z = euler._z;\n      this._order = euler._order;\n      this.onChangeCallback();\n      return this;\n    },\n    setFromRotationMatrix: function (m, order, update) {\n      var clamp = THREE.Math.clamp; // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n      var te = m.elements;\n      var m11 = te[0],\n          m12 = te[4],\n          m13 = te[8];\n      var m21 = te[1],\n          m22 = te[5],\n          m23 = te[9];\n      var m31 = te[2],\n          m32 = te[6],\n          m33 = te[10];\n      order = order || this._order;\n\n      if (order === 'XYZ') {\n        this._y = Math.asin(clamp(m13, -1, 1));\n\n        if (Math.abs(m13) < 0.99999) {\n          this._x = Math.atan2(-m23, m33);\n          this._z = Math.atan2(-m12, m11);\n        } else {\n          this._x = Math.atan2(m32, m22);\n          this._z = 0;\n        }\n      } else if (order === 'YXZ') {\n        this._x = Math.asin(-clamp(m23, -1, 1));\n\n        if (Math.abs(m23) < 0.99999) {\n          this._y = Math.atan2(m13, m33);\n          this._z = Math.atan2(m21, m22);\n        } else {\n          this._y = Math.atan2(-m31, m11);\n          this._z = 0;\n        }\n      } else if (order === 'ZXY') {\n        this._x = Math.asin(clamp(m32, -1, 1));\n\n        if (Math.abs(m32) < 0.99999) {\n          this._y = Math.atan2(-m31, m33);\n          this._z = Math.atan2(-m12, m22);\n        } else {\n          this._y = 0;\n          this._z = Math.atan2(m21, m11);\n        }\n      } else if (order === 'ZYX') {\n        this._y = Math.asin(-clamp(m31, -1, 1));\n\n        if (Math.abs(m31) < 0.99999) {\n          this._x = Math.atan2(m32, m33);\n          this._z = Math.atan2(m21, m11);\n        } else {\n          this._x = 0;\n          this._z = Math.atan2(-m12, m22);\n        }\n      } else if (order === 'YZX') {\n        this._z = Math.asin(clamp(m21, -1, 1));\n\n        if (Math.abs(m21) < 0.99999) {\n          this._x = Math.atan2(-m23, m22);\n          this._y = Math.atan2(-m31, m11);\n        } else {\n          this._x = 0;\n          this._y = Math.atan2(m13, m33);\n        }\n      } else if (order === 'XZY') {\n        this._z = Math.asin(-clamp(m12, -1, 1));\n\n        if (Math.abs(m12) < 0.99999) {\n          this._x = Math.atan2(m32, m22);\n          this._y = Math.atan2(m13, m11);\n        } else {\n          this._x = Math.atan2(-m23, m33);\n          this._y = 0;\n        }\n      } else {\n        console.warn('THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order);\n      }\n\n      this._order = order;\n      if (update !== false) this.onChangeCallback();\n      return this;\n    },\n    setFromQuaternion: function () {\n      var matrix;\n      return function setFromQuaternion(q, order, update) {\n        if (matrix === undefined) matrix = new THREE.Matrix4();\n        matrix.makeRotationFromQuaternion(q);\n        return this.setFromRotationMatrix(matrix, order, update);\n      };\n    }(),\n    setFromVector3: function (v, order) {\n      return this.set(v.x, v.y, v.z, order || this._order);\n    },\n    reorder: function () {\n      // WARNING: this discards revolution information -bhouston\n      var q = new THREE.Quaternion();\n      return function reorder(newOrder) {\n        q.setFromEuler(this);\n        return this.setFromQuaternion(q, newOrder);\n      };\n    }(),\n    equals: function (euler) {\n      return euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;\n    },\n    fromArray: function (array) {\n      this._x = array[0];\n      this._y = array[1];\n      this._z = array[2];\n      if (array[3] !== undefined) this._order = array[3];\n      this.onChangeCallback();\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      array[offset] = this._x;\n      array[offset + 1] = this._y;\n      array[offset + 2] = this._z;\n      array[offset + 3] = this._order;\n      return array;\n    },\n    toVector3: function (optionalResult) {\n      if (optionalResult) {\n        return optionalResult.set(this._x, this._y, this._z);\n      } else {\n        return new THREE.Vector3(this._x, this._y, this._z);\n      }\n    },\n    onChange: function (callback) {\n      this.onChangeCallback = callback;\n      return this;\n    },\n    onChangeCallback: function () {}\n  }; // File:src/math/Line3.js\n\n  /**\n   * @author bhouston / http://clara.io\n   */\n\n  THREE.Line3 = function (start, end) {\n    this.start = start !== undefined ? start : new THREE.Vector3();\n    this.end = end !== undefined ? end : new THREE.Vector3();\n  };\n\n  THREE.Line3.prototype = {\n    constructor: THREE.Line3,\n    set: function (start, end) {\n      this.start.copy(start);\n      this.end.copy(end);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (line) {\n      this.start.copy(line.start);\n      this.end.copy(line.end);\n      return this;\n    },\n    center: function (optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      return result.addVectors(this.start, this.end).multiplyScalar(0.5);\n    },\n    delta: function (optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      return result.subVectors(this.end, this.start);\n    },\n    distanceSq: function () {\n      return this.start.distanceToSquared(this.end);\n    },\n    distance: function () {\n      return this.start.distanceTo(this.end);\n    },\n    at: function (t, optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      return this.delta(result).multiplyScalar(t).add(this.start);\n    },\n    closestPointToPointParameter: function () {\n      var startP = new THREE.Vector3();\n      var startEnd = new THREE.Vector3();\n      return function closestPointToPointParameter(point, clampToLine) {\n        startP.subVectors(point, this.start);\n        startEnd.subVectors(this.end, this.start);\n        var startEnd2 = startEnd.dot(startEnd);\n        var startEnd_startP = startEnd.dot(startP);\n        var t = startEnd_startP / startEnd2;\n\n        if (clampToLine) {\n          t = THREE.Math.clamp(t, 0, 1);\n        }\n\n        return t;\n      };\n    }(),\n    closestPointToPoint: function (point, clampToLine, optionalTarget) {\n      var t = this.closestPointToPointParameter(point, clampToLine);\n      var result = optionalTarget || new THREE.Vector3();\n      return this.delta(result).multiplyScalar(t).add(this.start);\n    },\n    applyMatrix4: function (matrix) {\n      this.start.applyMatrix4(matrix);\n      this.end.applyMatrix4(matrix);\n      return this;\n    },\n    equals: function (line) {\n      return line.start.equals(this.start) && line.end.equals(this.end);\n    }\n  }; // File:src/math/Box2.js\n\n  /**\n   * @author bhouston / http://clara.io\n   */\n\n  THREE.Box2 = function (min, max) {\n    this.min = min !== undefined ? min : new THREE.Vector2(+Infinity, +Infinity);\n    this.max = max !== undefined ? max : new THREE.Vector2(-Infinity, -Infinity);\n  };\n\n  THREE.Box2.prototype = {\n    constructor: THREE.Box2,\n    set: function (min, max) {\n      this.min.copy(min);\n      this.max.copy(max);\n      return this;\n    },\n    setFromPoints: function (points) {\n      this.makeEmpty();\n\n      for (var i = 0, il = points.length; i < il; i++) {\n        this.expandByPoint(points[i]);\n      }\n\n      return this;\n    },\n    setFromCenterAndSize: function () {\n      var v1 = new THREE.Vector2();\n      return function setFromCenterAndSize(center, size) {\n        var halfSize = v1.copy(size).multiplyScalar(0.5);\n        this.min.copy(center).sub(halfSize);\n        this.max.copy(center).add(halfSize);\n        return this;\n      };\n    }(),\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (box) {\n      this.min.copy(box.min);\n      this.max.copy(box.max);\n      return this;\n    },\n    makeEmpty: function () {\n      this.min.x = this.min.y = +Infinity;\n      this.max.x = this.max.y = -Infinity;\n      return this;\n    },\n    isEmpty: function () {\n      // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n      return this.max.x < this.min.x || this.max.y < this.min.y;\n    },\n    center: function (optionalTarget) {\n      var result = optionalTarget || new THREE.Vector2();\n      return result.addVectors(this.min, this.max).multiplyScalar(0.5);\n    },\n    size: function (optionalTarget) {\n      var result = optionalTarget || new THREE.Vector2();\n      return result.subVectors(this.max, this.min);\n    },\n    expandByPoint: function (point) {\n      this.min.min(point);\n      this.max.max(point);\n      return this;\n    },\n    expandByVector: function (vector) {\n      this.min.sub(vector);\n      this.max.add(vector);\n      return this;\n    },\n    expandByScalar: function (scalar) {\n      this.min.addScalar(-scalar);\n      this.max.addScalar(scalar);\n      return this;\n    },\n    containsPoint: function (point) {\n      if (point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y) {\n        return false;\n      }\n\n      return true;\n    },\n    containsBox: function (box) {\n      if (this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y) {\n        return true;\n      }\n\n      return false;\n    },\n    getParameter: function (point, optionalTarget) {\n      // This can potentially have a divide by zero if the box\n      // has a size dimension of 0.\n      var result = optionalTarget || new THREE.Vector2();\n      return result.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y));\n    },\n    intersectsBox: function (box) {\n      // using 6 splitting planes to rule out intersections.\n      if (box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y) {\n        return false;\n      }\n\n      return true;\n    },\n    clampPoint: function (point, optionalTarget) {\n      var result = optionalTarget || new THREE.Vector2();\n      return result.copy(point).clamp(this.min, this.max);\n    },\n    distanceToPoint: function () {\n      var v1 = new THREE.Vector2();\n      return function distanceToPoint(point) {\n        var clampedPoint = v1.copy(point).clamp(this.min, this.max);\n        return clampedPoint.sub(point).length();\n      };\n    }(),\n    intersect: function (box) {\n      this.min.max(box.min);\n      this.max.min(box.max);\n      return this;\n    },\n    union: function (box) {\n      this.min.min(box.min);\n      this.max.max(box.max);\n      return this;\n    },\n    translate: function (offset) {\n      this.min.add(offset);\n      this.max.add(offset);\n      return this;\n    },\n    equals: function (box) {\n      return box.min.equals(this.min) && box.max.equals(this.max);\n    }\n  }; // File:src/math/Box3.js\n\n  /**\n   * @author bhouston / http://clara.io\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n  THREE.Box3 = function (min, max) {\n    this.min = min !== undefined ? min : new THREE.Vector3(+Infinity, +Infinity, +Infinity);\n    this.max = max !== undefined ? max : new THREE.Vector3(-Infinity, -Infinity, -Infinity);\n  };\n\n  THREE.Box3.prototype = {\n    constructor: THREE.Box3,\n    set: function (min, max) {\n      this.min.copy(min);\n      this.max.copy(max);\n      return this;\n    },\n    setFromArray: function (array) {\n      var minX = +Infinity;\n      var minY = +Infinity;\n      var minZ = +Infinity;\n      var maxX = -Infinity;\n      var maxY = -Infinity;\n      var maxZ = -Infinity;\n\n      for (var i = 0, l = array.length; i < l; i += 3) {\n        var x = array[i];\n        var y = array[i + 1];\n        var z = array[i + 2];\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (z < minZ) minZ = z;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n        if (z > maxZ) maxZ = z;\n      }\n\n      this.min.set(minX, minY, minZ);\n      this.max.set(maxX, maxY, maxZ);\n    },\n    setFromPoints: function (points) {\n      this.makeEmpty();\n\n      for (var i = 0, il = points.length; i < il; i++) {\n        this.expandByPoint(points[i]);\n      }\n\n      return this;\n    },\n    setFromCenterAndSize: function () {\n      var v1 = new THREE.Vector3();\n      return function setFromCenterAndSize(center, size) {\n        var halfSize = v1.copy(size).multiplyScalar(0.5);\n        this.min.copy(center).sub(halfSize);\n        this.max.copy(center).add(halfSize);\n        return this;\n      };\n    }(),\n    setFromObject: function () {\n      // Computes the world-axis-aligned bounding box of an object (including its children),\n      // accounting for both the object's, and children's, world transforms\n      var v1 = new THREE.Vector3();\n      return function setFromObject(object) {\n        var scope = this;\n        object.updateMatrixWorld(true);\n        this.makeEmpty();\n        object.traverse(function (node) {\n          var geometry = node.geometry;\n\n          if (geometry !== undefined) {\n            if (geometry instanceof THREE.Geometry) {\n              var vertices = geometry.vertices;\n\n              for (var i = 0, il = vertices.length; i < il; i++) {\n                v1.copy(vertices[i]);\n                v1.applyMatrix4(node.matrixWorld);\n                scope.expandByPoint(v1);\n              }\n            } else if (geometry instanceof THREE.BufferGeometry) {\n              var attribute = geometry.attributes.position;\n\n              if (attribute !== undefined) {\n                var array, offset, stride;\n\n                if (attribute instanceof THREE.InterleavedBufferAttribute) {\n                  array = attribute.data.array;\n                  offset = attribute.offset;\n                  stride = attribute.data.stride;\n                } else {\n                  array = attribute.array;\n                  offset = 0;\n                  stride = 3;\n                }\n\n                for (var i = offset, il = array.length; i < il; i += stride) {\n                  v1.fromArray(array, i);\n                  v1.applyMatrix4(node.matrixWorld);\n                  scope.expandByPoint(v1);\n                }\n              }\n            }\n          }\n        });\n        return this;\n      };\n    }(),\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (box) {\n      this.min.copy(box.min);\n      this.max.copy(box.max);\n      return this;\n    },\n    makeEmpty: function () {\n      this.min.x = this.min.y = this.min.z = +Infinity;\n      this.max.x = this.max.y = this.max.z = -Infinity;\n      return this;\n    },\n    isEmpty: function () {\n      // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n      return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n    },\n    center: function (optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      return result.addVectors(this.min, this.max).multiplyScalar(0.5);\n    },\n    size: function (optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      return result.subVectors(this.max, this.min);\n    },\n    expandByPoint: function (point) {\n      this.min.min(point);\n      this.max.max(point);\n      return this;\n    },\n    expandByVector: function (vector) {\n      this.min.sub(vector);\n      this.max.add(vector);\n      return this;\n    },\n    expandByScalar: function (scalar) {\n      this.min.addScalar(-scalar);\n      this.max.addScalar(scalar);\n      return this;\n    },\n    containsPoint: function (point) {\n      if (point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y || point.z < this.min.z || point.z > this.max.z) {\n        return false;\n      }\n\n      return true;\n    },\n    containsBox: function (box) {\n      if (this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z) {\n        return true;\n      }\n\n      return false;\n    },\n    getParameter: function (point, optionalTarget) {\n      // This can potentially have a divide by zero if the box\n      // has a size dimension of 0.\n      var result = optionalTarget || new THREE.Vector3();\n      return result.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y), (point.z - this.min.z) / (this.max.z - this.min.z));\n    },\n    intersectsBox: function (box) {\n      // using 6 splitting planes to rule out intersections.\n      if (box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y || box.max.z < this.min.z || box.min.z > this.max.z) {\n        return false;\n      }\n\n      return true;\n    },\n    intersectsSphere: function () {\n      var closestPoint;\n      return function intersectsSphere(sphere) {\n        if (closestPoint === undefined) closestPoint = new THREE.Vector3(); // Find the point on the AABB closest to the sphere center.\n\n        this.clampPoint(sphere.center, closestPoint); // If that point is inside the sphere, the AABB and sphere intersect.\n\n        return closestPoint.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\n      };\n    }(),\n    intersectsPlane: function (plane) {\n      // We compute the minimum and maximum dot product values. If those values\n      // are on the same side (back or front) of the plane, then there is no intersection.\n      var min, max;\n\n      if (plane.normal.x > 0) {\n        min = plane.normal.x * this.min.x;\n        max = plane.normal.x * this.max.x;\n      } else {\n        min = plane.normal.x * this.max.x;\n        max = plane.normal.x * this.min.x;\n      }\n\n      if (plane.normal.y > 0) {\n        min += plane.normal.y * this.min.y;\n        max += plane.normal.y * this.max.y;\n      } else {\n        min += plane.normal.y * this.max.y;\n        max += plane.normal.y * this.min.y;\n      }\n\n      if (plane.normal.z > 0) {\n        min += plane.normal.z * this.min.z;\n        max += plane.normal.z * this.max.z;\n      } else {\n        min += plane.normal.z * this.max.z;\n        max += plane.normal.z * this.min.z;\n      }\n\n      return min <= plane.constant && max >= plane.constant;\n    },\n    clampPoint: function (point, optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      return result.copy(point).clamp(this.min, this.max);\n    },\n    distanceToPoint: function () {\n      var v1 = new THREE.Vector3();\n      return function distanceToPoint(point) {\n        var clampedPoint = v1.copy(point).clamp(this.min, this.max);\n        return clampedPoint.sub(point).length();\n      };\n    }(),\n    getBoundingSphere: function () {\n      var v1 = new THREE.Vector3();\n      return function getBoundingSphere(optionalTarget) {\n        var result = optionalTarget || new THREE.Sphere();\n        result.center = this.center();\n        result.radius = this.size(v1).length() * 0.5;\n        return result;\n      };\n    }(),\n    intersect: function (box) {\n      this.min.max(box.min);\n      this.max.min(box.max); // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\n      if (this.isEmpty()) this.makeEmpty();\n      return this;\n    },\n    union: function (box) {\n      this.min.min(box.min);\n      this.max.max(box.max);\n      return this;\n    },\n    applyMatrix4: function () {\n      var points = [new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3()];\n      return function applyMatrix4(matrix) {\n        // transform of empty box is an empty box.\n        if (this.isEmpty()) return this; // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\n        points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\n\n        points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\n\n        points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\n\n        points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\n\n        points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\n\n        points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\n\n        points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\n\n        points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\n\n        this.setFromPoints(points);\n        return this;\n      };\n    }(),\n    translate: function (offset) {\n      this.min.add(offset);\n      this.max.add(offset);\n      return this;\n    },\n    equals: function (box) {\n      return box.min.equals(this.min) && box.max.equals(this.max);\n    }\n  }; // File:src/math/Matrix3.js\n\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author WestLangley / http://github.com/WestLangley\n   * @author bhouston / http://clara.io\n   * @author tschw\n   */\n\n  THREE.Matrix3 = function () {\n    this.elements = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n\n    if (arguments.length > 0) {\n      console.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');\n    }\n  };\n\n  THREE.Matrix3.prototype = {\n    constructor: THREE.Matrix3,\n    set: function (n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n      var te = this.elements;\n      te[0] = n11;\n      te[1] = n21;\n      te[2] = n31;\n      te[3] = n12;\n      te[4] = n22;\n      te[5] = n32;\n      te[6] = n13;\n      te[7] = n23;\n      te[8] = n33;\n      return this;\n    },\n    identity: function () {\n      this.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().fromArray(this.elements);\n    },\n    copy: function (m) {\n      var me = m.elements;\n      this.set(me[0], me[3], me[6], me[1], me[4], me[7], me[2], me[5], me[8]);\n      return this;\n    },\n    setFromMatrix4: function (m) {\n      var me = m.elements;\n      this.set(me[0], me[4], me[8], me[1], me[5], me[9], me[2], me[6], me[10]);\n      return this;\n    },\n    applyToVector3Array: function () {\n      var v1;\n      return function applyToVector3Array(array, offset, length) {\n        if (v1 === undefined) v1 = new THREE.Vector3();\n        if (offset === undefined) offset = 0;\n        if (length === undefined) length = array.length;\n\n        for (var i = 0, j = offset; i < length; i += 3, j += 3) {\n          v1.fromArray(array, j);\n          v1.applyMatrix3(this);\n          v1.toArray(array, j);\n        }\n\n        return array;\n      };\n    }(),\n    applyToBuffer: function () {\n      var v1;\n      return function applyToBuffer(buffer, offset, length) {\n        if (v1 === undefined) v1 = new THREE.Vector3();\n        if (offset === undefined) offset = 0;\n        if (length === undefined) length = buffer.length / buffer.itemSize;\n\n        for (var i = 0, j = offset; i < length; i++, j++) {\n          v1.x = buffer.getX(j);\n          v1.y = buffer.getY(j);\n          v1.z = buffer.getZ(j);\n          v1.applyMatrix3(this);\n          buffer.setXYZ(v1.x, v1.y, v1.z);\n        }\n\n        return buffer;\n      };\n    }(),\n    multiplyScalar: function (s) {\n      var te = this.elements;\n      te[0] *= s;\n      te[3] *= s;\n      te[6] *= s;\n      te[1] *= s;\n      te[4] *= s;\n      te[7] *= s;\n      te[2] *= s;\n      te[5] *= s;\n      te[8] *= s;\n      return this;\n    },\n    determinant: function () {\n      var te = this.elements;\n      var a = te[0],\n          b = te[1],\n          c = te[2],\n          d = te[3],\n          e = te[4],\n          f = te[5],\n          g = te[6],\n          h = te[7],\n          i = te[8];\n      return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n    },\n    getInverse: function (matrix, throwOnDegenerate) {\n      if (matrix instanceof THREE.Matrix4) {\n        console.error(\"THREE.Matrix3.getInverse no longer takes a Matrix4 argument.\");\n      }\n\n      var me = matrix.elements,\n          te = this.elements,\n          n11 = me[0],\n          n21 = me[1],\n          n31 = me[2],\n          n12 = me[3],\n          n22 = me[4],\n          n32 = me[5],\n          n13 = me[6],\n          n23 = me[7],\n          n33 = me[8],\n          t11 = n33 * n22 - n32 * n23,\n          t12 = n32 * n13 - n33 * n12,\n          t13 = n23 * n12 - n22 * n13,\n          det = n11 * t11 + n21 * t12 + n31 * t13;\n\n      if (det === 0) {\n        var msg = \"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\";\n\n        if (throwOnDegenerate || false) {\n          throw new Error(msg);\n        } else {\n          console.warn(msg);\n        }\n\n        return this.identity();\n      }\n\n      var detInv = 1 / det;\n      te[0] = t11 * detInv;\n      te[1] = (n31 * n23 - n33 * n21) * detInv;\n      te[2] = (n32 * n21 - n31 * n22) * detInv;\n      te[3] = t12 * detInv;\n      te[4] = (n33 * n11 - n31 * n13) * detInv;\n      te[5] = (n31 * n12 - n32 * n11) * detInv;\n      te[6] = t13 * detInv;\n      te[7] = (n21 * n13 - n23 * n11) * detInv;\n      te[8] = (n22 * n11 - n21 * n12) * detInv;\n      return this;\n    },\n    transpose: function () {\n      var tmp,\n          m = this.elements;\n      tmp = m[1];\n      m[1] = m[3];\n      m[3] = tmp;\n      tmp = m[2];\n      m[2] = m[6];\n      m[6] = tmp;\n      tmp = m[5];\n      m[5] = m[7];\n      m[7] = tmp;\n      return this;\n    },\n    flattenToArrayOffset: function (array, offset) {\n      console.warn(\"THREE.Matrix3: .flattenToArrayOffset is deprecated \" + \"- just use .toArray instead.\");\n      return this.toArray(array, offset);\n    },\n    getNormalMatrix: function (matrix4) {\n      return this.setFromMatrix4(matrix4).getInverse(this).transpose();\n    },\n    transposeIntoArray: function (r) {\n      var m = this.elements;\n      r[0] = m[0];\n      r[1] = m[3];\n      r[2] = m[6];\n      r[3] = m[1];\n      r[4] = m[4];\n      r[5] = m[7];\n      r[6] = m[2];\n      r[7] = m[5];\n      r[8] = m[8];\n      return this;\n    },\n    fromArray: function (array) {\n      this.elements.set(array);\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      var te = this.elements;\n      array[offset] = te[0];\n      array[offset + 1] = te[1];\n      array[offset + 2] = te[2];\n      array[offset + 3] = te[3];\n      array[offset + 4] = te[4];\n      array[offset + 5] = te[5];\n      array[offset + 6] = te[6];\n      array[offset + 7] = te[7];\n      array[offset + 8] = te[8];\n      return array;\n    }\n  }; // File:src/math/Matrix4.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author supereggbert / http://www.paulbrunt.co.uk/\n   * @author philogb / http://blog.thejit.org/\n   * @author jordi_ros / http://plattsoft.com\n   * @author D1plo1d / http://github.com/D1plo1d\n   * @author alteredq / http://alteredqualia.com/\n   * @author mikael emtinger / http://gomo.se/\n   * @author timknip / http://www.floorplanner.com/\n   * @author bhouston / http://clara.io\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n  THREE.Matrix4 = function () {\n    this.elements = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n\n    if (arguments.length > 0) {\n      console.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');\n    }\n  };\n\n  THREE.Matrix4.prototype = {\n    constructor: THREE.Matrix4,\n    set: function (n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n      var te = this.elements;\n      te[0] = n11;\n      te[4] = n12;\n      te[8] = n13;\n      te[12] = n14;\n      te[1] = n21;\n      te[5] = n22;\n      te[9] = n23;\n      te[13] = n24;\n      te[2] = n31;\n      te[6] = n32;\n      te[10] = n33;\n      te[14] = n34;\n      te[3] = n41;\n      te[7] = n42;\n      te[11] = n43;\n      te[15] = n44;\n      return this;\n    },\n    identity: function () {\n      this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n      return this;\n    },\n    clone: function () {\n      return new THREE.Matrix4().fromArray(this.elements);\n    },\n    copy: function (m) {\n      this.elements.set(m.elements);\n      return this;\n    },\n    copyPosition: function (m) {\n      var te = this.elements;\n      var me = m.elements;\n      te[12] = me[12];\n      te[13] = me[13];\n      te[14] = me[14];\n      return this;\n    },\n    extractBasis: function (xAxis, yAxis, zAxis) {\n      xAxis.setFromMatrixColumn(this, 0);\n      yAxis.setFromMatrixColumn(this, 1);\n      zAxis.setFromMatrixColumn(this, 2);\n      return this;\n    },\n    makeBasis: function (xAxis, yAxis, zAxis) {\n      this.set(xAxis.x, yAxis.x, zAxis.x, 0, xAxis.y, yAxis.y, zAxis.y, 0, xAxis.z, yAxis.z, zAxis.z, 0, 0, 0, 0, 1);\n      return this;\n    },\n    extractRotation: function () {\n      var v1;\n      return function extractRotation(m) {\n        if (v1 === undefined) v1 = new THREE.Vector3();\n        var te = this.elements;\n        var me = m.elements;\n        var scaleX = 1 / v1.setFromMatrixColumn(m, 0).length();\n        var scaleY = 1 / v1.setFromMatrixColumn(m, 1).length();\n        var scaleZ = 1 / v1.setFromMatrixColumn(m, 2).length();\n        te[0] = me[0] * scaleX;\n        te[1] = me[1] * scaleX;\n        te[2] = me[2] * scaleX;\n        te[4] = me[4] * scaleY;\n        te[5] = me[5] * scaleY;\n        te[6] = me[6] * scaleY;\n        te[8] = me[8] * scaleZ;\n        te[9] = me[9] * scaleZ;\n        te[10] = me[10] * scaleZ;\n        return this;\n      };\n    }(),\n    makeRotationFromEuler: function (euler) {\n      if (euler instanceof THREE.Euler === false) {\n        console.error('THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n      }\n\n      var te = this.elements;\n      var x = euler.x,\n          y = euler.y,\n          z = euler.z;\n      var a = Math.cos(x),\n          b = Math.sin(x);\n      var c = Math.cos(y),\n          d = Math.sin(y);\n      var e = Math.cos(z),\n          f = Math.sin(z);\n\n      if (euler.order === 'XYZ') {\n        var ae = a * e,\n            af = a * f,\n            be = b * e,\n            bf = b * f;\n        te[0] = c * e;\n        te[4] = -c * f;\n        te[8] = d;\n        te[1] = af + be * d;\n        te[5] = ae - bf * d;\n        te[9] = -b * c;\n        te[2] = bf - ae * d;\n        te[6] = be + af * d;\n        te[10] = a * c;\n      } else if (euler.order === 'YXZ') {\n        var ce = c * e,\n            cf = c * f,\n            de = d * e,\n            df = d * f;\n        te[0] = ce + df * b;\n        te[4] = de * b - cf;\n        te[8] = a * d;\n        te[1] = a * f;\n        te[5] = a * e;\n        te[9] = -b;\n        te[2] = cf * b - de;\n        te[6] = df + ce * b;\n        te[10] = a * c;\n      } else if (euler.order === 'ZXY') {\n        var ce = c * e,\n            cf = c * f,\n            de = d * e,\n            df = d * f;\n        te[0] = ce - df * b;\n        te[4] = -a * f;\n        te[8] = de + cf * b;\n        te[1] = cf + de * b;\n        te[5] = a * e;\n        te[9] = df - ce * b;\n        te[2] = -a * d;\n        te[6] = b;\n        te[10] = a * c;\n      } else if (euler.order === 'ZYX') {\n        var ae = a * e,\n            af = a * f,\n            be = b * e,\n            bf = b * f;\n        te[0] = c * e;\n        te[4] = be * d - af;\n        te[8] = ae * d + bf;\n        te[1] = c * f;\n        te[5] = bf * d + ae;\n        te[9] = af * d - be;\n        te[2] = -d;\n        te[6] = b * c;\n        te[10] = a * c;\n      } else if (euler.order === 'YZX') {\n        var ac = a * c,\n            ad = a * d,\n            bc = b * c,\n            bd = b * d;\n        te[0] = c * e;\n        te[4] = bd - ac * f;\n        te[8] = bc * f + ad;\n        te[1] = f;\n        te[5] = a * e;\n        te[9] = -b * e;\n        te[2] = -d * e;\n        te[6] = ad * f + bc;\n        te[10] = ac - bd * f;\n      } else if (euler.order === 'XZY') {\n        var ac = a * c,\n            ad = a * d,\n            bc = b * c,\n            bd = b * d;\n        te[0] = c * e;\n        te[4] = -f;\n        te[8] = d * e;\n        te[1] = ac * f + bd;\n        te[5] = a * e;\n        te[9] = ad * f - bc;\n        te[2] = bc * f - ad;\n        te[6] = b * e;\n        te[10] = bd * f + ac;\n      } // last column\n\n\n      te[3] = 0;\n      te[7] = 0;\n      te[11] = 0; // bottom row\n\n      te[12] = 0;\n      te[13] = 0;\n      te[14] = 0;\n      te[15] = 1;\n      return this;\n    },\n    makeRotationFromQuaternion: function (q) {\n      var te = this.elements;\n      var x = q.x,\n          y = q.y,\n          z = q.z,\n          w = q.w;\n      var x2 = x + x,\n          y2 = y + y,\n          z2 = z + z;\n      var xx = x * x2,\n          xy = x * y2,\n          xz = x * z2;\n      var yy = y * y2,\n          yz = y * z2,\n          zz = z * z2;\n      var wx = w * x2,\n          wy = w * y2,\n          wz = w * z2;\n      te[0] = 1 - (yy + zz);\n      te[4] = xy - wz;\n      te[8] = xz + wy;\n      te[1] = xy + wz;\n      te[5] = 1 - (xx + zz);\n      te[9] = yz - wx;\n      te[2] = xz - wy;\n      te[6] = yz + wx;\n      te[10] = 1 - (xx + yy); // last column\n\n      te[3] = 0;\n      te[7] = 0;\n      te[11] = 0; // bottom row\n\n      te[12] = 0;\n      te[13] = 0;\n      te[14] = 0;\n      te[15] = 1;\n      return this;\n    },\n    lookAt: function () {\n      var x, y, z;\n      return function lookAt(eye, target, up) {\n        if (x === undefined) {\n          x = new THREE.Vector3();\n          y = new THREE.Vector3();\n          z = new THREE.Vector3();\n        }\n\n        var te = this.elements;\n        z.subVectors(eye, target).normalize();\n\n        if (z.lengthSq() === 0) {\n          z.z = 1;\n        }\n\n        x.crossVectors(up, z).normalize();\n\n        if (x.lengthSq() === 0) {\n          z.z += 0.0001;\n          x.crossVectors(up, z).normalize();\n        }\n\n        y.crossVectors(z, x);\n        te[0] = x.x;\n        te[4] = y.x;\n        te[8] = z.x;\n        te[1] = x.y;\n        te[5] = y.y;\n        te[9] = z.y;\n        te[2] = x.z;\n        te[6] = y.z;\n        te[10] = z.z;\n        return this;\n      };\n    }(),\n    multiply: function (m, n) {\n      if (n !== undefined) {\n        console.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\n        return this.multiplyMatrices(m, n);\n      }\n\n      return this.multiplyMatrices(this, m);\n    },\n    premultiply: function (m) {\n      return this.multiplyMatrices(m, this);\n    },\n    multiplyMatrices: function (a, b) {\n      var ae = a.elements;\n      var be = b.elements;\n      var te = this.elements;\n      var a11 = ae[0],\n          a12 = ae[4],\n          a13 = ae[8],\n          a14 = ae[12];\n      var a21 = ae[1],\n          a22 = ae[5],\n          a23 = ae[9],\n          a24 = ae[13];\n      var a31 = ae[2],\n          a32 = ae[6],\n          a33 = ae[10],\n          a34 = ae[14];\n      var a41 = ae[3],\n          a42 = ae[7],\n          a43 = ae[11],\n          a44 = ae[15];\n      var b11 = be[0],\n          b12 = be[4],\n          b13 = be[8],\n          b14 = be[12];\n      var b21 = be[1],\n          b22 = be[5],\n          b23 = be[9],\n          b24 = be[13];\n      var b31 = be[2],\n          b32 = be[6],\n          b33 = be[10],\n          b34 = be[14];\n      var b41 = be[3],\n          b42 = be[7],\n          b43 = be[11],\n          b44 = be[15];\n      te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n      te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n      te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n      te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n      te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n      te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n      te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n      te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n      te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n      te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n      te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n      te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n      te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n      te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n      te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n      te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n      return this;\n    },\n    multiplyToArray: function (a, b, r) {\n      var te = this.elements;\n      this.multiplyMatrices(a, b);\n      r[0] = te[0];\n      r[1] = te[1];\n      r[2] = te[2];\n      r[3] = te[3];\n      r[4] = te[4];\n      r[5] = te[5];\n      r[6] = te[6];\n      r[7] = te[7];\n      r[8] = te[8];\n      r[9] = te[9];\n      r[10] = te[10];\n      r[11] = te[11];\n      r[12] = te[12];\n      r[13] = te[13];\n      r[14] = te[14];\n      r[15] = te[15];\n      return this;\n    },\n    multiplyScalar: function (s) {\n      var te = this.elements;\n      te[0] *= s;\n      te[4] *= s;\n      te[8] *= s;\n      te[12] *= s;\n      te[1] *= s;\n      te[5] *= s;\n      te[9] *= s;\n      te[13] *= s;\n      te[2] *= s;\n      te[6] *= s;\n      te[10] *= s;\n      te[14] *= s;\n      te[3] *= s;\n      te[7] *= s;\n      te[11] *= s;\n      te[15] *= s;\n      return this;\n    },\n    applyToVector3Array: function () {\n      var v1;\n      return function applyToVector3Array(array, offset, length) {\n        if (v1 === undefined) v1 = new THREE.Vector3();\n        if (offset === undefined) offset = 0;\n        if (length === undefined) length = array.length;\n\n        for (var i = 0, j = offset; i < length; i += 3, j += 3) {\n          v1.fromArray(array, j);\n          v1.applyMatrix4(this);\n          v1.toArray(array, j);\n        }\n\n        return array;\n      };\n    }(),\n    applyToBuffer: function () {\n      var v1;\n      return function applyToBuffer(buffer, offset, length) {\n        if (v1 === undefined) v1 = new THREE.Vector3();\n        if (offset === undefined) offset = 0;\n        if (length === undefined) length = buffer.length / buffer.itemSize;\n\n        for (var i = 0, j = offset; i < length; i++, j++) {\n          v1.x = buffer.getX(j);\n          v1.y = buffer.getY(j);\n          v1.z = buffer.getZ(j);\n          v1.applyMatrix4(this);\n          buffer.setXYZ(v1.x, v1.y, v1.z);\n        }\n\n        return buffer;\n      };\n    }(),\n    determinant: function () {\n      var te = this.elements;\n      var n11 = te[0],\n          n12 = te[4],\n          n13 = te[8],\n          n14 = te[12];\n      var n21 = te[1],\n          n22 = te[5],\n          n23 = te[9],\n          n24 = te[13];\n      var n31 = te[2],\n          n32 = te[6],\n          n33 = te[10],\n          n34 = te[14];\n      var n41 = te[3],\n          n42 = te[7],\n          n43 = te[11],\n          n44 = te[15]; //TODO: make this more efficient\n      //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n      return n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);\n    },\n    transpose: function () {\n      var te = this.elements;\n      var tmp;\n      tmp = te[1];\n      te[1] = te[4];\n      te[4] = tmp;\n      tmp = te[2];\n      te[2] = te[8];\n      te[8] = tmp;\n      tmp = te[6];\n      te[6] = te[9];\n      te[9] = tmp;\n      tmp = te[3];\n      te[3] = te[12];\n      te[12] = tmp;\n      tmp = te[7];\n      te[7] = te[13];\n      te[13] = tmp;\n      tmp = te[11];\n      te[11] = te[14];\n      te[14] = tmp;\n      return this;\n    },\n    flattenToArrayOffset: function (array, offset) {\n      console.warn(\"THREE.Matrix3: .flattenToArrayOffset is deprecated \" + \"- just use .toArray instead.\");\n      return this.toArray(array, offset);\n    },\n    getPosition: function () {\n      var v1;\n      return function getPosition() {\n        if (v1 === undefined) v1 = new THREE.Vector3();\n        console.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');\n        return v1.setFromMatrixColumn(this, 3);\n      };\n    }(),\n    setPosition: function (v) {\n      var te = this.elements;\n      te[12] = v.x;\n      te[13] = v.y;\n      te[14] = v.z;\n      return this;\n    },\n    getInverse: function (m, throwOnDegenerate) {\n      // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n      var te = this.elements,\n          me = m.elements,\n          n11 = me[0],\n          n21 = me[1],\n          n31 = me[2],\n          n41 = me[3],\n          n12 = me[4],\n          n22 = me[5],\n          n32 = me[6],\n          n42 = me[7],\n          n13 = me[8],\n          n23 = me[9],\n          n33 = me[10],\n          n43 = me[11],\n          n14 = me[12],\n          n24 = me[13],\n          n34 = me[14],\n          n44 = me[15],\n          t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n          t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n          t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n          t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n      var det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n      if (det === 0) {\n        var msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\n\n        if (throwOnDegenerate || false) {\n          throw new Error(msg);\n        } else {\n          console.warn(msg);\n        }\n\n        return this.identity();\n      }\n\n      var detInv = 1 / det;\n      te[0] = t11 * detInv;\n      te[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;\n      te[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;\n      te[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;\n      te[4] = t12 * detInv;\n      te[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;\n      te[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;\n      te[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;\n      te[8] = t13 * detInv;\n      te[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;\n      te[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;\n      te[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;\n      te[12] = t14 * detInv;\n      te[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;\n      te[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;\n      te[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;\n      return this;\n    },\n    scale: function (v) {\n      var te = this.elements;\n      var x = v.x,\n          y = v.y,\n          z = v.z;\n      te[0] *= x;\n      te[4] *= y;\n      te[8] *= z;\n      te[1] *= x;\n      te[5] *= y;\n      te[9] *= z;\n      te[2] *= x;\n      te[6] *= y;\n      te[10] *= z;\n      te[3] *= x;\n      te[7] *= y;\n      te[11] *= z;\n      return this;\n    },\n    getMaxScaleOnAxis: function () {\n      var te = this.elements;\n      var scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n      var scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n      var scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n      return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\n    },\n    makeTranslation: function (x, y, z) {\n      this.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n      return this;\n    },\n    makeRotationX: function (theta) {\n      var c = Math.cos(theta),\n          s = Math.sin(theta);\n      this.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\n      return this;\n    },\n    makeRotationY: function (theta) {\n      var c = Math.cos(theta),\n          s = Math.sin(theta);\n      this.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\n      return this;\n    },\n    makeRotationZ: function (theta) {\n      var c = Math.cos(theta),\n          s = Math.sin(theta);\n      this.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n      return this;\n    },\n    makeRotationAxis: function (axis, angle) {\n      // Based on http://www.gamedev.net/reference/articles/article1199.asp\n      var c = Math.cos(angle);\n      var s = Math.sin(angle);\n      var t = 1 - c;\n      var x = axis.x,\n          y = axis.y,\n          z = axis.z;\n      var tx = t * x,\n          ty = t * y;\n      this.set(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\n      return this;\n    },\n    makeScale: function (x, y, z) {\n      this.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n      return this;\n    },\n    compose: function (position, quaternion, scale) {\n      this.makeRotationFromQuaternion(quaternion);\n      this.scale(scale);\n      this.setPosition(position);\n      return this;\n    },\n    decompose: function () {\n      var vector, matrix;\n      return function decompose(position, quaternion, scale) {\n        if (vector === undefined) {\n          vector = new THREE.Vector3();\n          matrix = new THREE.Matrix4();\n        }\n\n        var te = this.elements;\n        var sx = vector.set(te[0], te[1], te[2]).length();\n        var sy = vector.set(te[4], te[5], te[6]).length();\n        var sz = vector.set(te[8], te[9], te[10]).length(); // if determine is negative, we need to invert one scale\n\n        var det = this.determinant();\n\n        if (det < 0) {\n          sx = -sx;\n        }\n\n        position.x = te[12];\n        position.y = te[13];\n        position.z = te[14]; // scale the rotation part\n\n        matrix.elements.set(this.elements); // at this point matrix is incomplete so we can't use .copy()\n\n        var invSX = 1 / sx;\n        var invSY = 1 / sy;\n        var invSZ = 1 / sz;\n        matrix.elements[0] *= invSX;\n        matrix.elements[1] *= invSX;\n        matrix.elements[2] *= invSX;\n        matrix.elements[4] *= invSY;\n        matrix.elements[5] *= invSY;\n        matrix.elements[6] *= invSY;\n        matrix.elements[8] *= invSZ;\n        matrix.elements[9] *= invSZ;\n        matrix.elements[10] *= invSZ;\n        quaternion.setFromRotationMatrix(matrix);\n        scale.x = sx;\n        scale.y = sy;\n        scale.z = sz;\n        return this;\n      };\n    }(),\n    makeFrustum: function (left, right, bottom, top, near, far) {\n      var te = this.elements;\n      var x = 2 * near / (right - left);\n      var y = 2 * near / (top - bottom);\n      var a = (right + left) / (right - left);\n      var b = (top + bottom) / (top - bottom);\n      var c = -(far + near) / (far - near);\n      var d = -2 * far * near / (far - near);\n      te[0] = x;\n      te[4] = 0;\n      te[8] = a;\n      te[12] = 0;\n      te[1] = 0;\n      te[5] = y;\n      te[9] = b;\n      te[13] = 0;\n      te[2] = 0;\n      te[6] = 0;\n      te[10] = c;\n      te[14] = d;\n      te[3] = 0;\n      te[7] = 0;\n      te[11] = -1;\n      te[15] = 0;\n      return this;\n    },\n    makePerspective: function (fov, aspect, near, far) {\n      var ymax = near * Math.tan(THREE.Math.DEG2RAD * fov * 0.5);\n      var ymin = -ymax;\n      var xmin = ymin * aspect;\n      var xmax = ymax * aspect;\n      return this.makeFrustum(xmin, xmax, ymin, ymax, near, far);\n    },\n    makeOrthographic: function (left, right, top, bottom, near, far) {\n      var te = this.elements;\n      var w = 1.0 / (right - left);\n      var h = 1.0 / (top - bottom);\n      var p = 1.0 / (far - near);\n      var x = (right + left) * w;\n      var y = (top + bottom) * h;\n      var z = (far + near) * p;\n      te[0] = 2 * w;\n      te[4] = 0;\n      te[8] = 0;\n      te[12] = -x;\n      te[1] = 0;\n      te[5] = 2 * h;\n      te[9] = 0;\n      te[13] = -y;\n      te[2] = 0;\n      te[6] = 0;\n      te[10] = -2 * p;\n      te[14] = -z;\n      te[3] = 0;\n      te[7] = 0;\n      te[11] = 0;\n      te[15] = 1;\n      return this;\n    },\n    equals: function (matrix) {\n      var te = this.elements;\n      var me = matrix.elements;\n\n      for (var i = 0; i < 16; i++) {\n        if (te[i] !== me[i]) return false;\n      }\n\n      return true;\n    },\n    fromArray: function (array) {\n      this.elements.set(array);\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      var te = this.elements;\n      array[offset] = te[0];\n      array[offset + 1] = te[1];\n      array[offset + 2] = te[2];\n      array[offset + 3] = te[3];\n      array[offset + 4] = te[4];\n      array[offset + 5] = te[5];\n      array[offset + 6] = te[6];\n      array[offset + 7] = te[7];\n      array[offset + 8] = te[8];\n      array[offset + 9] = te[9];\n      array[offset + 10] = te[10];\n      array[offset + 11] = te[11];\n      array[offset + 12] = te[12];\n      array[offset + 13] = te[13];\n      array[offset + 14] = te[14];\n      array[offset + 15] = te[15];\n      return array;\n    }\n  }; // File:src/math/Ray.js\n\n  /**\n   * @author bhouston / http://clara.io\n   */\n\n  THREE.Ray = function (origin, direction) {\n    this.origin = origin !== undefined ? origin : new THREE.Vector3();\n    this.direction = direction !== undefined ? direction : new THREE.Vector3();\n  };\n\n  THREE.Ray.prototype = {\n    constructor: THREE.Ray,\n    set: function (origin, direction) {\n      this.origin.copy(origin);\n      this.direction.copy(direction);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (ray) {\n      this.origin.copy(ray.origin);\n      this.direction.copy(ray.direction);\n      return this;\n    },\n    at: function (t, optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      return result.copy(this.direction).multiplyScalar(t).add(this.origin);\n    },\n    lookAt: function (v) {\n      this.direction.copy(v).sub(this.origin).normalize();\n      return this;\n    },\n    recast: function () {\n      var v1 = new THREE.Vector3();\n      return function recast(t) {\n        this.origin.copy(this.at(t, v1));\n        return this;\n      };\n    }(),\n    closestPointToPoint: function (point, optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      result.subVectors(point, this.origin);\n      var directionDistance = result.dot(this.direction);\n\n      if (directionDistance < 0) {\n        return result.copy(this.origin);\n      }\n\n      return result.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n    },\n    distanceToPoint: function (point) {\n      return Math.sqrt(this.distanceSqToPoint(point));\n    },\n    distanceSqToPoint: function () {\n      var v1 = new THREE.Vector3();\n      return function distanceSqToPoint(point) {\n        var directionDistance = v1.subVectors(point, this.origin).dot(this.direction); // point behind the ray\n\n        if (directionDistance < 0) {\n          return this.origin.distanceToSquared(point);\n        }\n\n        v1.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n        return v1.distanceToSquared(point);\n      };\n    }(),\n    distanceSqToSegment: function () {\n      var segCenter = new THREE.Vector3();\n      var segDir = new THREE.Vector3();\n      var diff = new THREE.Vector3();\n      return function distanceSqToSegment(v0, v1, optionalPointOnRay, optionalPointOnSegment) {\n        // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n        // It returns the min distance between the ray and the segment\n        // defined by v0 and v1\n        // It can also set two optional targets :\n        // - The closest point on the ray\n        // - The closest point on the segment\n        segCenter.copy(v0).add(v1).multiplyScalar(0.5);\n        segDir.copy(v1).sub(v0).normalize();\n        diff.copy(this.origin).sub(segCenter);\n        var segExtent = v0.distanceTo(v1) * 0.5;\n        var a01 = -this.direction.dot(segDir);\n        var b0 = diff.dot(this.direction);\n        var b1 = -diff.dot(segDir);\n        var c = diff.lengthSq();\n        var det = Math.abs(1 - a01 * a01);\n        var s0, s1, sqrDist, extDet;\n\n        if (det > 0) {\n          // The ray and segment are not parallel.\n          s0 = a01 * b1 - b0;\n          s1 = a01 * b0 - b1;\n          extDet = segExtent * det;\n\n          if (s0 >= 0) {\n            if (s1 >= -extDet) {\n              if (s1 <= extDet) {\n                // region 0\n                // Minimum at interior points of ray and segment.\n                var invDet = 1 / det;\n                s0 *= invDet;\n                s1 *= invDet;\n                sqrDist = s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\n              } else {\n                // region 1\n                s1 = segExtent;\n                s0 = Math.max(0, -(a01 * s1 + b0));\n                sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n              }\n            } else {\n              // region 5\n              s1 = -segExtent;\n              s0 = Math.max(0, -(a01 * s1 + b0));\n              sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n            }\n          } else {\n            if (s1 <= -extDet) {\n              // region 4\n              s0 = Math.max(0, -(-a01 * segExtent + b0));\n              s1 = s0 > 0 ? -segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n              sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n            } else if (s1 <= extDet) {\n              // region 3\n              s0 = 0;\n              s1 = Math.min(Math.max(-segExtent, -b1), segExtent);\n              sqrDist = s1 * (s1 + 2 * b1) + c;\n            } else {\n              // region 2\n              s0 = Math.max(0, -(a01 * segExtent + b0));\n              s1 = s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n              sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n            }\n          }\n        } else {\n          // Ray and segment are parallel.\n          s1 = a01 > 0 ? -segExtent : segExtent;\n          s0 = Math.max(0, -(a01 * s1 + b0));\n          sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n        }\n\n        if (optionalPointOnRay) {\n          optionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);\n        }\n\n        if (optionalPointOnSegment) {\n          optionalPointOnSegment.copy(segDir).multiplyScalar(s1).add(segCenter);\n        }\n\n        return sqrDist;\n      };\n    }(),\n    intersectSphere: function () {\n      var v1 = new THREE.Vector3();\n      return function intersectSphere(sphere, optionalTarget) {\n        v1.subVectors(sphere.center, this.origin);\n        var tca = v1.dot(this.direction);\n        var d2 = v1.dot(v1) - tca * tca;\n        var radius2 = sphere.radius * sphere.radius;\n        if (d2 > radius2) return null;\n        var thc = Math.sqrt(radius2 - d2); // t0 = first intersect point - entrance on front of sphere\n\n        var t0 = tca - thc; // t1 = second intersect point - exit point on back of sphere\n\n        var t1 = tca + thc; // test to see if both t0 and t1 are behind the ray - if so, return null\n\n        if (t0 < 0 && t1 < 0) return null; // test to see if t0 is behind the ray:\n        // if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n        // in order to always return an intersect point that is in front of the ray.\n\n        if (t0 < 0) return this.at(t1, optionalTarget); // else t0 is in front of the ray, so return the first collision point scaled by t0\n\n        return this.at(t0, optionalTarget);\n      };\n    }(),\n    intersectsSphere: function (sphere) {\n      return this.distanceToPoint(sphere.center) <= sphere.radius;\n    },\n    distanceToPlane: function (plane) {\n      var denominator = plane.normal.dot(this.direction);\n\n      if (denominator === 0) {\n        // line is coplanar, return origin\n        if (plane.distanceToPoint(this.origin) === 0) {\n          return 0;\n        } // Null is preferable to undefined since undefined means.... it is undefined\n\n\n        return null;\n      }\n\n      var t = -(this.origin.dot(plane.normal) + plane.constant) / denominator; // Return if the ray never intersects the plane\n\n      return t >= 0 ? t : null;\n    },\n    intersectPlane: function (plane, optionalTarget) {\n      var t = this.distanceToPlane(plane);\n\n      if (t === null) {\n        return null;\n      }\n\n      return this.at(t, optionalTarget);\n    },\n    intersectsPlane: function (plane) {\n      // check if the ray lies on the plane first\n      var distToPoint = plane.distanceToPoint(this.origin);\n\n      if (distToPoint === 0) {\n        return true;\n      }\n\n      var denominator = plane.normal.dot(this.direction);\n\n      if (denominator * distToPoint < 0) {\n        return true;\n      } // ray origin is behind the plane (and is pointing behind it)\n\n\n      return false;\n    },\n    intersectBox: function (box, optionalTarget) {\n      var tmin, tmax, tymin, tymax, tzmin, tzmax;\n      var invdirx = 1 / this.direction.x,\n          invdiry = 1 / this.direction.y,\n          invdirz = 1 / this.direction.z;\n      var origin = this.origin;\n\n      if (invdirx >= 0) {\n        tmin = (box.min.x - origin.x) * invdirx;\n        tmax = (box.max.x - origin.x) * invdirx;\n      } else {\n        tmin = (box.max.x - origin.x) * invdirx;\n        tmax = (box.min.x - origin.x) * invdirx;\n      }\n\n      if (invdiry >= 0) {\n        tymin = (box.min.y - origin.y) * invdiry;\n        tymax = (box.max.y - origin.y) * invdiry;\n      } else {\n        tymin = (box.max.y - origin.y) * invdiry;\n        tymax = (box.min.y - origin.y) * invdiry;\n      }\n\n      if (tmin > tymax || tymin > tmax) return null; // These lines also handle the case where tmin or tmax is NaN\n      // (result of 0 * Infinity). x !== x returns true if x is NaN\n\n      if (tymin > tmin || tmin !== tmin) tmin = tymin;\n      if (tymax < tmax || tmax !== tmax) tmax = tymax;\n\n      if (invdirz >= 0) {\n        tzmin = (box.min.z - origin.z) * invdirz;\n        tzmax = (box.max.z - origin.z) * invdirz;\n      } else {\n        tzmin = (box.max.z - origin.z) * invdirz;\n        tzmax = (box.min.z - origin.z) * invdirz;\n      }\n\n      if (tmin > tzmax || tzmin > tmax) return null;\n      if (tzmin > tmin || tmin !== tmin) tmin = tzmin;\n      if (tzmax < tmax || tmax !== tmax) tmax = tzmax; //return point closest to the ray (positive side)\n\n      if (tmax < 0) return null;\n      return this.at(tmin >= 0 ? tmin : tmax, optionalTarget);\n    },\n    intersectsBox: function () {\n      var v = new THREE.Vector3();\n      return function intersectsBox(box) {\n        return this.intersectBox(box, v) !== null;\n      };\n    }(),\n    intersectTriangle: function () {\n      // Compute the offset origin, edges, and normal.\n      var diff = new THREE.Vector3();\n      var edge1 = new THREE.Vector3();\n      var edge2 = new THREE.Vector3();\n      var normal = new THREE.Vector3();\n      return function intersectTriangle(a, b, c, backfaceCulling, optionalTarget) {\n        // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n        edge1.subVectors(b, a);\n        edge2.subVectors(c, a);\n        normal.crossVectors(edge1, edge2); // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n        // E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n        //   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n        //   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n        //   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\n        var DdN = this.direction.dot(normal);\n        var sign;\n\n        if (DdN > 0) {\n          if (backfaceCulling) return null;\n          sign = 1;\n        } else if (DdN < 0) {\n          sign = -1;\n          DdN = -DdN;\n        } else {\n          return null;\n        }\n\n        diff.subVectors(this.origin, a);\n        var DdQxE2 = sign * this.direction.dot(edge2.crossVectors(diff, edge2)); // b1 < 0, no intersection\n\n        if (DdQxE2 < 0) {\n          return null;\n        }\n\n        var DdE1xQ = sign * this.direction.dot(edge1.cross(diff)); // b2 < 0, no intersection\n\n        if (DdE1xQ < 0) {\n          return null;\n        } // b1+b2 > 1, no intersection\n\n\n        if (DdQxE2 + DdE1xQ > DdN) {\n          return null;\n        } // Line intersects triangle, check if ray does.\n\n\n        var QdN = -sign * diff.dot(normal); // t < 0, no intersection\n\n        if (QdN < 0) {\n          return null;\n        } // Ray intersects triangle.\n\n\n        return this.at(QdN / DdN, optionalTarget);\n      };\n    }(),\n    applyMatrix4: function (matrix4) {\n      this.direction.add(this.origin).applyMatrix4(matrix4);\n      this.origin.applyMatrix4(matrix4);\n      this.direction.sub(this.origin);\n      this.direction.normalize();\n      return this;\n    },\n    equals: function (ray) {\n      return ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\n    }\n  }; // File:src/math/Sphere.js\n\n  /**\n   * @author bhouston / http://clara.io\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.Sphere = function (center, radius) {\n    this.center = center !== undefined ? center : new THREE.Vector3();\n    this.radius = radius !== undefined ? radius : 0;\n  };\n\n  THREE.Sphere.prototype = {\n    constructor: THREE.Sphere,\n    set: function (center, radius) {\n      this.center.copy(center);\n      this.radius = radius;\n      return this;\n    },\n    setFromPoints: function () {\n      var box = new THREE.Box3();\n      return function setFromPoints(points, optionalCenter) {\n        var center = this.center;\n\n        if (optionalCenter !== undefined) {\n          center.copy(optionalCenter);\n        } else {\n          box.setFromPoints(points).center(center);\n        }\n\n        var maxRadiusSq = 0;\n\n        for (var i = 0, il = points.length; i < il; i++) {\n          maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\n        }\n\n        this.radius = Math.sqrt(maxRadiusSq);\n        return this;\n      };\n    }(),\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (sphere) {\n      this.center.copy(sphere.center);\n      this.radius = sphere.radius;\n      return this;\n    },\n    empty: function () {\n      return this.radius <= 0;\n    },\n    containsPoint: function (point) {\n      return point.distanceToSquared(this.center) <= this.radius * this.radius;\n    },\n    distanceToPoint: function (point) {\n      return point.distanceTo(this.center) - this.radius;\n    },\n    intersectsSphere: function (sphere) {\n      var radiusSum = this.radius + sphere.radius;\n      return sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;\n    },\n    intersectsBox: function (box) {\n      return box.intersectsSphere(this);\n    },\n    intersectsPlane: function (plane) {\n      // We use the following equation to compute the signed distance from\n      // the center of the sphere to the plane.\n      //\n      // distance = q * n - d\n      //\n      // If this distance is greater than the radius of the sphere,\n      // then there is no intersection.\n      return Math.abs(this.center.dot(plane.normal) - plane.constant) <= this.radius;\n    },\n    clampPoint: function (point, optionalTarget) {\n      var deltaLengthSq = this.center.distanceToSquared(point);\n      var result = optionalTarget || new THREE.Vector3();\n      result.copy(point);\n\n      if (deltaLengthSq > this.radius * this.radius) {\n        result.sub(this.center).normalize();\n        result.multiplyScalar(this.radius).add(this.center);\n      }\n\n      return result;\n    },\n    getBoundingBox: function (optionalTarget) {\n      var box = optionalTarget || new THREE.Box3();\n      box.set(this.center, this.center);\n      box.expandByScalar(this.radius);\n      return box;\n    },\n    applyMatrix4: function (matrix) {\n      this.center.applyMatrix4(matrix);\n      this.radius = this.radius * matrix.getMaxScaleOnAxis();\n      return this;\n    },\n    translate: function (offset) {\n      this.center.add(offset);\n      return this;\n    },\n    equals: function (sphere) {\n      return sphere.center.equals(this.center) && sphere.radius === this.radius;\n    }\n  }; // File:src/math/Frustum.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   * @author bhouston / http://clara.io\n   */\n\n  THREE.Frustum = function (p0, p1, p2, p3, p4, p5) {\n    this.planes = [p0 !== undefined ? p0 : new THREE.Plane(), p1 !== undefined ? p1 : new THREE.Plane(), p2 !== undefined ? p2 : new THREE.Plane(), p3 !== undefined ? p3 : new THREE.Plane(), p4 !== undefined ? p4 : new THREE.Plane(), p5 !== undefined ? p5 : new THREE.Plane()];\n  };\n\n  THREE.Frustum.prototype = {\n    constructor: THREE.Frustum,\n    set: function (p0, p1, p2, p3, p4, p5) {\n      var planes = this.planes;\n      planes[0].copy(p0);\n      planes[1].copy(p1);\n      planes[2].copy(p2);\n      planes[3].copy(p3);\n      planes[4].copy(p4);\n      planes[5].copy(p5);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (frustum) {\n      var planes = this.planes;\n\n      for (var i = 0; i < 6; i++) {\n        planes[i].copy(frustum.planes[i]);\n      }\n\n      return this;\n    },\n    setFromMatrix: function (m) {\n      var planes = this.planes;\n      var me = m.elements;\n      var me0 = me[0],\n          me1 = me[1],\n          me2 = me[2],\n          me3 = me[3];\n      var me4 = me[4],\n          me5 = me[5],\n          me6 = me[6],\n          me7 = me[7];\n      var me8 = me[8],\n          me9 = me[9],\n          me10 = me[10],\n          me11 = me[11];\n      var me12 = me[12],\n          me13 = me[13],\n          me14 = me[14],\n          me15 = me[15];\n      planes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\n      planes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\n      planes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\n      planes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\n      planes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\n      planes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\n      return this;\n    },\n    intersectsObject: function () {\n      var sphere = new THREE.Sphere();\n      return function intersectsObject(object) {\n        var geometry = object.geometry;\n        if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n        sphere.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);\n        return this.intersectsSphere(sphere);\n      };\n    }(),\n    intersectsSprite: function () {\n      var sphere = new THREE.Sphere();\n      return function intersectsSprite(sprite) {\n        sphere.center.set(0, 0, 0);\n        sphere.radius = 0.7071067811865476;\n        sphere.applyMatrix4(sprite.matrixWorld);\n        return this.intersectsSphere(sphere);\n      };\n    }(),\n    intersectsSphere: function (sphere) {\n      var planes = this.planes;\n      var center = sphere.center;\n      var negRadius = -sphere.radius;\n\n      for (var i = 0; i < 6; i++) {\n        var distance = planes[i].distanceToPoint(center);\n\n        if (distance < negRadius) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n    intersectsBox: function () {\n      var p1 = new THREE.Vector3(),\n          p2 = new THREE.Vector3();\n      return function intersectsBox(box) {\n        var planes = this.planes;\n\n        for (var i = 0; i < 6; i++) {\n          var plane = planes[i];\n          p1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n          p2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n          p1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n          p2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n          p1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n          p2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n          var d1 = plane.distanceToPoint(p1);\n          var d2 = plane.distanceToPoint(p2); // if both outside plane, no intersection\n\n          if (d1 < 0 && d2 < 0) {\n            return false;\n          }\n        }\n\n        return true;\n      };\n    }(),\n    containsPoint: function (point) {\n      var planes = this.planes;\n\n      for (var i = 0; i < 6; i++) {\n        if (planes[i].distanceToPoint(point) < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }; // File:src/math/Plane.js\n\n  /**\n   * @author bhouston / http://clara.io\n   */\n\n  THREE.Plane = function (normal, constant) {\n    this.normal = normal !== undefined ? normal : new THREE.Vector3(1, 0, 0);\n    this.constant = constant !== undefined ? constant : 0;\n  };\n\n  THREE.Plane.prototype = {\n    constructor: THREE.Plane,\n    set: function (normal, constant) {\n      this.normal.copy(normal);\n      this.constant = constant;\n      return this;\n    },\n    setComponents: function (x, y, z, w) {\n      this.normal.set(x, y, z);\n      this.constant = w;\n      return this;\n    },\n    setFromNormalAndCoplanarPoint: function (normal, point) {\n      this.normal.copy(normal);\n      this.constant = -point.dot(this.normal); // must be this.normal, not normal, as this.normal is normalized\n\n      return this;\n    },\n    setFromCoplanarPoints: function () {\n      var v1 = new THREE.Vector3();\n      var v2 = new THREE.Vector3();\n      return function setFromCoplanarPoints(a, b, c) {\n        var normal = v1.subVectors(c, b).cross(v2.subVectors(a, b)).normalize(); // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n        this.setFromNormalAndCoplanarPoint(normal, a);\n        return this;\n      };\n    }(),\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (plane) {\n      this.normal.copy(plane.normal);\n      this.constant = plane.constant;\n      return this;\n    },\n    normalize: function () {\n      // Note: will lead to a divide by zero if the plane is invalid.\n      var inverseNormalLength = 1.0 / this.normal.length();\n      this.normal.multiplyScalar(inverseNormalLength);\n      this.constant *= inverseNormalLength;\n      return this;\n    },\n    negate: function () {\n      this.constant *= -1;\n      this.normal.negate();\n      return this;\n    },\n    distanceToPoint: function (point) {\n      return this.normal.dot(point) + this.constant;\n    },\n    distanceToSphere: function (sphere) {\n      return this.distanceToPoint(sphere.center) - sphere.radius;\n    },\n    projectPoint: function (point, optionalTarget) {\n      return this.orthoPoint(point, optionalTarget).sub(point).negate();\n    },\n    orthoPoint: function (point, optionalTarget) {\n      var perpendicularMagnitude = this.distanceToPoint(point);\n      var result = optionalTarget || new THREE.Vector3();\n      return result.copy(this.normal).multiplyScalar(perpendicularMagnitude);\n    },\n    intersectLine: function () {\n      var v1 = new THREE.Vector3();\n      return function intersectLine(line, optionalTarget) {\n        var result = optionalTarget || new THREE.Vector3();\n        var direction = line.delta(v1);\n        var denominator = this.normal.dot(direction);\n\n        if (denominator === 0) {\n          // line is coplanar, return origin\n          if (this.distanceToPoint(line.start) === 0) {\n            return result.copy(line.start);\n          } // Unsure if this is the correct method to handle this case.\n\n\n          return undefined;\n        }\n\n        var t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n        if (t < 0 || t > 1) {\n          return undefined;\n        }\n\n        return result.copy(direction).multiplyScalar(t).add(line.start);\n      };\n    }(),\n    intersectsLine: function (line) {\n      // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n      var startSign = this.distanceToPoint(line.start);\n      var endSign = this.distanceToPoint(line.end);\n      return startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;\n    },\n    intersectsBox: function (box) {\n      return box.intersectsPlane(this);\n    },\n    intersectsSphere: function (sphere) {\n      return sphere.intersectsPlane(this);\n    },\n    coplanarPoint: function (optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      return result.copy(this.normal).multiplyScalar(-this.constant);\n    },\n    applyMatrix4: function () {\n      var v1 = new THREE.Vector3();\n      var m1 = new THREE.Matrix3();\n      return function applyMatrix4(matrix, optionalNormalMatrix) {\n        var referencePoint = this.coplanarPoint(v1).applyMatrix4(matrix); // transform normal based on theory here:\n        // http://www.songho.ca/opengl/gl_normaltransform.html\n\n        var normalMatrix = optionalNormalMatrix || m1.getNormalMatrix(matrix);\n        var normal = this.normal.applyMatrix3(normalMatrix).normalize(); // recalculate constant (like in setFromNormalAndCoplanarPoint)\n\n        this.constant = -referencePoint.dot(normal);\n        return this;\n      };\n    }(),\n    translate: function (offset) {\n      this.constant = this.constant - offset.dot(this.normal);\n      return this;\n    },\n    equals: function (plane) {\n      return plane.normal.equals(this.normal) && plane.constant === this.constant;\n    }\n  }; // File:src/math/Spherical.js\n\n  /**\n   * @author bhouston / http://clara.io\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n   *\n   * The poles (phi) are at the positive and negative y axis.\n   * The equator starts at positive z.\n   */\n\n  THREE.Spherical = function (radius, phi, theta) {\n    this.radius = radius !== undefined ? radius : 1.0;\n    this.phi = phi !== undefined ? phi : 0; // up / down towards top and bottom pole\n\n    this.theta = theta !== undefined ? theta : 0; // around the equator of the sphere\n\n    return this;\n  };\n\n  THREE.Spherical.prototype = {\n    constructor: THREE.Spherical,\n    set: function (radius, phi, theta) {\n      this.radius = radius;\n      this.phi = phi;\n      this.theta = theta;\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (other) {\n      this.radius.copy(other.radius);\n      this.phi.copy(other.phi);\n      this.theta.copy(other.theta);\n      return this;\n    },\n    // restrict phi to be betwee EPS and PI-EPS\n    makeSafe: function () {\n      var EPS = 0.000001;\n      this.phi = Math.max(EPS, Math.min(Math.PI - EPS, this.phi));\n      return this;\n    },\n    setFromVector3: function (vec3) {\n      this.radius = vec3.length();\n\n      if (this.radius === 0) {\n        this.theta = 0;\n        this.phi = 0;\n      } else {\n        this.theta = Math.atan2(vec3.x, vec3.z); // equator angle around y-up axis\n\n        this.phi = Math.acos(THREE.Math.clamp(vec3.y / this.radius, -1, 1)); // polar angle\n      }\n\n      return this;\n    }\n  }; // File:src/math/Math.js\n\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.Math = {\n    DEG2RAD: Math.PI / 180,\n    RAD2DEG: 180 / Math.PI,\n    generateUUID: function () {\n      // http://www.broofa.com/Tools/Math.uuid.htm\n      var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\n      var uuid = new Array(36);\n      var rnd = 0,\n          r;\n      return function generateUUID() {\n        for (var i = 0; i < 36; i++) {\n          if (i === 8 || i === 13 || i === 18 || i === 23) {\n            uuid[i] = '-';\n          } else if (i === 14) {\n            uuid[i] = '4';\n          } else {\n            if (rnd <= 0x02) rnd = 0x2000000 + Math.random() * 0x1000000 | 0;\n            r = rnd & 0xf;\n            rnd = rnd >> 4;\n            uuid[i] = chars[i === 19 ? r & 0x3 | 0x8 : r];\n          }\n        }\n\n        return uuid.join('');\n      };\n    }(),\n    clamp: function (value, min, max) {\n      return Math.max(min, Math.min(max, value));\n    },\n    // compute euclidian modulo of m % n\n    // https://en.wikipedia.org/wiki/Modulo_operation\n    euclideanModulo: function (n, m) {\n      return (n % m + m) % m;\n    },\n    // Linear mapping from range <a1, a2> to range <b1, b2>\n    mapLinear: function (x, a1, a2, b1, b2) {\n      return b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n    },\n    // http://en.wikipedia.org/wiki/Smoothstep\n    smoothstep: function (x, min, max) {\n      if (x <= min) return 0;\n      if (x >= max) return 1;\n      x = (x - min) / (max - min);\n      return x * x * (3 - 2 * x);\n    },\n    smootherstep: function (x, min, max) {\n      if (x <= min) return 0;\n      if (x >= max) return 1;\n      x = (x - min) / (max - min);\n      return x * x * x * (x * (x * 6 - 15) + 10);\n    },\n    random16: function () {\n      console.warn('THREE.Math.random16() has been deprecated. Use Math.random() instead.');\n      return Math.random();\n    },\n    // Random integer from <low, high> interval\n    randInt: function (low, high) {\n      return low + Math.floor(Math.random() * (high - low + 1));\n    },\n    // Random float from <low, high> interval\n    randFloat: function (low, high) {\n      return low + Math.random() * (high - low);\n    },\n    // Random float from <-range/2, range/2> interval\n    randFloatSpread: function (range) {\n      return range * (0.5 - Math.random());\n    },\n    degToRad: function (degrees) {\n      return degrees * THREE.Math.DEG2RAD;\n    },\n    radToDeg: function (radians) {\n      return radians * THREE.Math.RAD2DEG;\n    },\n    isPowerOfTwo: function (value) {\n      return (value & value - 1) === 0 && value !== 0;\n    },\n    nearestPowerOfTwo: function (value) {\n      return Math.pow(2, Math.round(Math.log(value) / Math.LN2));\n    },\n    nextPowerOfTwo: function (value) {\n      value--;\n      value |= value >> 1;\n      value |= value >> 2;\n      value |= value >> 4;\n      value |= value >> 8;\n      value |= value >> 16;\n      value++;\n      return value;\n    }\n  }; // File:src/math/Spline.js\n\n  /**\n   * Spline from Tween.js, slightly optimized (and trashed)\n   * http://sole.github.com/tween.js/examples/05_spline.html\n   *\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  THREE.Spline = function (points) {\n    this.points = points;\n    var c = [],\n        v3 = {\n      x: 0,\n      y: 0,\n      z: 0\n    },\n        point,\n        intPoint,\n        weight,\n        w2,\n        w3,\n        pa,\n        pb,\n        pc,\n        pd;\n\n    this.initFromArray = function (a) {\n      this.points = [];\n\n      for (var i = 0; i < a.length; i++) {\n        this.points[i] = {\n          x: a[i][0],\n          y: a[i][1],\n          z: a[i][2]\n        };\n      }\n    };\n\n    this.getPoint = function (k) {\n      point = (this.points.length - 1) * k;\n      intPoint = Math.floor(point);\n      weight = point - intPoint;\n      c[0] = intPoint === 0 ? intPoint : intPoint - 1;\n      c[1] = intPoint;\n      c[2] = intPoint > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\n      c[3] = intPoint > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\n      pa = this.points[c[0]];\n      pb = this.points[c[1]];\n      pc = this.points[c[2]];\n      pd = this.points[c[3]];\n      w2 = weight * weight;\n      w3 = weight * w2;\n      v3.x = interpolate(pa.x, pb.x, pc.x, pd.x, weight, w2, w3);\n      v3.y = interpolate(pa.y, pb.y, pc.y, pd.y, weight, w2, w3);\n      v3.z = interpolate(pa.z, pb.z, pc.z, pd.z, weight, w2, w3);\n      return v3;\n    };\n\n    this.getControlPointsArray = function () {\n      var i,\n          p,\n          l = this.points.length,\n          coords = [];\n\n      for (i = 0; i < l; i++) {\n        p = this.points[i];\n        coords[i] = [p.x, p.y, p.z];\n      }\n\n      return coords;\n    }; // approximate length by summing linear segments\n\n\n    this.getLength = function (nSubDivisions) {\n      var i,\n          index,\n          nSamples,\n          position,\n          point = 0,\n          intPoint = 0,\n          oldIntPoint = 0,\n          oldPosition = new THREE.Vector3(),\n          tmpVec = new THREE.Vector3(),\n          chunkLengths = [],\n          totalLength = 0; // first point has 0 length\n\n      chunkLengths[0] = 0;\n      if (!nSubDivisions) nSubDivisions = 100;\n      nSamples = this.points.length * nSubDivisions;\n      oldPosition.copy(this.points[0]);\n\n      for (i = 1; i < nSamples; i++) {\n        index = i / nSamples;\n        position = this.getPoint(index);\n        tmpVec.copy(position);\n        totalLength += tmpVec.distanceTo(oldPosition);\n        oldPosition.copy(position);\n        point = (this.points.length - 1) * index;\n        intPoint = Math.floor(point);\n\n        if (intPoint !== oldIntPoint) {\n          chunkLengths[intPoint] = totalLength;\n          oldIntPoint = intPoint;\n        }\n      } // last point ends with total length\n\n\n      chunkLengths[chunkLengths.length] = totalLength;\n      return {\n        chunks: chunkLengths,\n        total: totalLength\n      };\n    };\n\n    this.reparametrizeByArcLength = function (samplingCoef) {\n      var i,\n          j,\n          index,\n          indexCurrent,\n          indexNext,\n          realDistance,\n          sampling,\n          position,\n          newpoints = [],\n          tmpVec = new THREE.Vector3(),\n          sl = this.getLength();\n      newpoints.push(tmpVec.copy(this.points[0]).clone());\n\n      for (i = 1; i < this.points.length; i++) {\n        //tmpVec.copy( this.points[ i - 1 ] );\n        //linearDistance = tmpVec.distanceTo( this.points[ i ] );\n        realDistance = sl.chunks[i] - sl.chunks[i - 1];\n        sampling = Math.ceil(samplingCoef * realDistance / sl.total);\n        indexCurrent = (i - 1) / (this.points.length - 1);\n        indexNext = i / (this.points.length - 1);\n\n        for (j = 1; j < sampling - 1; j++) {\n          index = indexCurrent + j * (1 / sampling) * (indexNext - indexCurrent);\n          position = this.getPoint(index);\n          newpoints.push(tmpVec.copy(position).clone());\n        }\n\n        newpoints.push(tmpVec.copy(this.points[i]).clone());\n      }\n\n      this.points = newpoints;\n    }; // Catmull-Rom\n\n\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n      var v0 = (p2 - p0) * 0.5,\n          v1 = (p3 - p1) * 0.5;\n      return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n    }\n  }; // File:src/math/Triangle.js\n\n  /**\n   * @author bhouston / http://clara.io\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  THREE.Triangle = function (a, b, c) {\n    this.a = a !== undefined ? a : new THREE.Vector3();\n    this.b = b !== undefined ? b : new THREE.Vector3();\n    this.c = c !== undefined ? c : new THREE.Vector3();\n  };\n\n  THREE.Triangle.normal = function () {\n    var v0 = new THREE.Vector3();\n    return function normal(a, b, c, optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      result.subVectors(c, b);\n      v0.subVectors(a, b);\n      result.cross(v0);\n      var resultLengthSq = result.lengthSq();\n\n      if (resultLengthSq > 0) {\n        return result.multiplyScalar(1 / Math.sqrt(resultLengthSq));\n      }\n\n      return result.set(0, 0, 0);\n    };\n  }(); // static/instance method to calculate barycentric coordinates\n  // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\n\n  THREE.Triangle.barycoordFromPoint = function () {\n    var v0 = new THREE.Vector3();\n    var v1 = new THREE.Vector3();\n    var v2 = new THREE.Vector3();\n    return function barycoordFromPoint(point, a, b, c, optionalTarget) {\n      v0.subVectors(c, a);\n      v1.subVectors(b, a);\n      v2.subVectors(point, a);\n      var dot00 = v0.dot(v0);\n      var dot01 = v0.dot(v1);\n      var dot02 = v0.dot(v2);\n      var dot11 = v1.dot(v1);\n      var dot12 = v1.dot(v2);\n      var denom = dot00 * dot11 - dot01 * dot01;\n      var result = optionalTarget || new THREE.Vector3(); // collinear or singular triangle\n\n      if (denom === 0) {\n        // arbitrary location outside of triangle?\n        // not sure if this is the best idea, maybe should be returning undefined\n        return result.set(-2, -1, -1);\n      }\n\n      var invDenom = 1 / denom;\n      var u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n      var v = (dot00 * dot12 - dot01 * dot02) * invDenom; // barycentric coordinates must always sum to 1\n\n      return result.set(1 - u - v, v, u);\n    };\n  }();\n\n  THREE.Triangle.containsPoint = function () {\n    var v1 = new THREE.Vector3();\n    return function containsPoint(point, a, b, c) {\n      var result = THREE.Triangle.barycoordFromPoint(point, a, b, c, v1);\n      return result.x >= 0 && result.y >= 0 && result.x + result.y <= 1;\n    };\n  }();\n\n  THREE.Triangle.prototype = {\n    constructor: THREE.Triangle,\n    set: function (a, b, c) {\n      this.a.copy(a);\n      this.b.copy(b);\n      this.c.copy(c);\n      return this;\n    },\n    setFromPointsAndIndices: function (points, i0, i1, i2) {\n      this.a.copy(points[i0]);\n      this.b.copy(points[i1]);\n      this.c.copy(points[i2]);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (triangle) {\n      this.a.copy(triangle.a);\n      this.b.copy(triangle.b);\n      this.c.copy(triangle.c);\n      return this;\n    },\n    area: function () {\n      var v0 = new THREE.Vector3();\n      var v1 = new THREE.Vector3();\n      return function area() {\n        v0.subVectors(this.c, this.b);\n        v1.subVectors(this.a, this.b);\n        return v0.cross(v1).length() * 0.5;\n      };\n    }(),\n    midpoint: function (optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      return result.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n    },\n    normal: function (optionalTarget) {\n      return THREE.Triangle.normal(this.a, this.b, this.c, optionalTarget);\n    },\n    plane: function (optionalTarget) {\n      var result = optionalTarget || new THREE.Plane();\n      return result.setFromCoplanarPoints(this.a, this.b, this.c);\n    },\n    barycoordFromPoint: function (point, optionalTarget) {\n      return THREE.Triangle.barycoordFromPoint(point, this.a, this.b, this.c, optionalTarget);\n    },\n    containsPoint: function (point) {\n      return THREE.Triangle.containsPoint(point, this.a, this.b, this.c);\n    },\n    closestPointToPoint: function () {\n      var plane, edgeList, projectedPoint, closestPoint;\n      return function closestPointToPoint(point, optionalTarget) {\n        if (plane === undefined) {\n          plane = new THREE.Plane();\n          edgeList = [new THREE.Line3(), new THREE.Line3(), new THREE.Line3()];\n          projectedPoint = new THREE.Vector3();\n          closestPoint = new THREE.Vector3();\n        }\n\n        var result = optionalTarget || new THREE.Vector3();\n        var minDistance = Infinity; // project the point onto the plane of the triangle\n\n        plane.setFromCoplanarPoints(this.a, this.b, this.c);\n        plane.projectPoint(point, projectedPoint); // check if the projection lies within the triangle\n\n        if (this.containsPoint(projectedPoint) === true) {\n          // if so, this is the closest point\n          result.copy(projectedPoint);\n        } else {\n          // if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices\n          edgeList[0].set(this.a, this.b);\n          edgeList[1].set(this.b, this.c);\n          edgeList[2].set(this.c, this.a);\n\n          for (var i = 0; i < edgeList.length; i++) {\n            edgeList[i].closestPointToPoint(projectedPoint, true, closestPoint);\n            var distance = projectedPoint.distanceToSquared(closestPoint);\n\n            if (distance < minDistance) {\n              minDistance = distance;\n              result.copy(closestPoint);\n            }\n          }\n        }\n\n        return result;\n      };\n    }(),\n    equals: function (triangle) {\n      return triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\n    }\n  }; // File:src/math/Interpolant.js\n\n  /**\n   * Abstract base class of interpolants over parametric samples.\n   *\n   * The parameter domain is one dimensional, typically the time or a path\n   * along a curve defined by the data.\n   *\n   * The sample values can have any dimensionality and derived classes may\n   * apply special interpretations to the data.\n   *\n   * This class provides the interval seek in a Template Method, deferring\n   * the actual interpolation to derived classes.\n   *\n   * Time complexity is O(1) for linear access crossing at most two points\n   * and O(log N) for random access, where N is the number of positions.\n   *\n   * References:\n   *\n   * \t\thttp://www.oodesign.com/template-method-pattern.html\n   *\n   * @author tschw\n   */\n\n  THREE.Interpolant = function (parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    this.parameterPositions = parameterPositions;\n    this._cachedIndex = 0;\n    this.resultBuffer = resultBuffer !== undefined ? resultBuffer : new sampleValues.constructor(sampleSize);\n    this.sampleValues = sampleValues;\n    this.valueSize = sampleSize;\n  };\n\n  THREE.Interpolant.prototype = {\n    constructor: THREE.Interpolant,\n    evaluate: function (t) {\n      var pp = this.parameterPositions,\n          i1 = this._cachedIndex,\n          t1 = pp[i1],\n          t0 = pp[i1 - 1];\n\n      validate_interval: {\n        seek: {\n          var right;\n\n          linear_scan: {\n            //- See http://jsperf.com/comparison-to-undefined/3\n            //- slower code:\n            //-\n            //- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n            forward_scan: if (!(t < t1)) {\n              for (var giveUpAt = i1 + 2;;) {\n                if (t1 === undefined) {\n                  if (t < t0) break forward_scan; // after end\n\n                  i1 = pp.length;\n                  this._cachedIndex = i1;\n                  return this.afterEnd_(i1 - 1, t, t0);\n                }\n\n                if (i1 === giveUpAt) break; // this loop\n\n                t0 = t1;\n                t1 = pp[++i1];\n\n                if (t < t1) {\n                  // we have arrived at the sought interval\n                  break seek;\n                }\n              } // prepare binary search on the right side of the index\n\n\n              right = pp.length;\n              break linear_scan;\n            } //- slower code:\n            //-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\n\n            if (!(t >= t0)) {\n              // looping?\n              var t1global = pp[1];\n\n              if (t < t1global) {\n                i1 = 2; // + 1, using the scan for the details\n\n                t0 = t1global;\n              } // linear reverse scan\n\n\n              for (var giveUpAt = i1 - 2;;) {\n                if (t0 === undefined) {\n                  // before start\n                  this._cachedIndex = 0;\n                  return this.beforeStart_(0, t, t1);\n                }\n\n                if (i1 === giveUpAt) break; // this loop\n\n                t1 = t0;\n                t0 = pp[--i1 - 1];\n\n                if (t >= t0) {\n                  // we have arrived at the sought interval\n                  break seek;\n                }\n              } // prepare binary search on the left side of the index\n\n\n              right = i1;\n              i1 = 0;\n              break linear_scan;\n            } // the interval is valid\n\n\n            break validate_interval;\n          } // linear scan\n          // binary search\n\n\n          while (i1 < right) {\n            var mid = i1 + right >>> 1;\n\n            if (t < pp[mid]) {\n              right = mid;\n            } else {\n              i1 = mid + 1;\n            }\n          }\n\n          t1 = pp[i1];\n          t0 = pp[i1 - 1]; // check boundary cases, again\n\n          if (t0 === undefined) {\n            this._cachedIndex = 0;\n            return this.beforeStart_(0, t, t1);\n          }\n\n          if (t1 === undefined) {\n            i1 = pp.length;\n            this._cachedIndex = i1;\n            return this.afterEnd_(i1 - 1, t0, t);\n          }\n        } // seek\n\n\n        this._cachedIndex = i1;\n        this.intervalChanged_(i1, t0, t1);\n      } // validate_interval\n\n\n      return this.interpolate_(i1, t0, t, t1);\n    },\n    settings: null,\n    // optional, subclass-specific settings structure\n    // Note: The indirection allows central control of many interpolants.\n    // --- Protected interface\n    DefaultSettings_: {},\n    getSettings_: function () {\n      return this.settings || this.DefaultSettings_;\n    },\n    copySampleValue_: function (index) {\n      // copies a sample value to the result buffer\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          stride = this.valueSize,\n          offset = index * stride;\n\n      for (var i = 0; i !== stride; ++i) {\n        result[i] = values[offset + i];\n      }\n\n      return result;\n    },\n    // Template methods for derived classes:\n    interpolate_: function (i1, t0, t, t1) {\n      throw new Error(\"call to abstract method\"); // implementations shall return this.resultBuffer\n    },\n    intervalChanged_: function (i1, t0, t1) {// empty\n    }\n  };\n  Object.assign(THREE.Interpolant.prototype, {\n    beforeStart_: //( 0, t, t0 ), returns this.resultBuffer\n    THREE.Interpolant.prototype.copySampleValue_,\n    afterEnd_: //( N-1, tN-1, t ), returns this.resultBuffer\n    THREE.Interpolant.prototype.copySampleValue_\n  }); // File:src/math/interpolants/CubicInterpolant.js\n\n  /**\n   * Fast and simple cubic spline interpolant.\n   *\n   * It was derived from a Hermitian construction setting the first derivative\n   * at each sample position to the linear slope between neighboring positions\n   * over their parameter interval.\n   *\n   * @author tschw\n   */\n\n  THREE.CubicInterpolant = function (parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    THREE.Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n    this._weightPrev = -0;\n    this._offsetPrev = -0;\n    this._weightNext = -0;\n    this._offsetNext = -0;\n  };\n\n  THREE.CubicInterpolant.prototype = Object.assign(Object.create(THREE.Interpolant.prototype), {\n    constructor: THREE.CubicInterpolant,\n    DefaultSettings_: {\n      endingStart: THREE.ZeroCurvatureEnding,\n      endingEnd: THREE.ZeroCurvatureEnding\n    },\n    intervalChanged_: function (i1, t0, t1) {\n      var pp = this.parameterPositions,\n          iPrev = i1 - 2,\n          iNext = i1 + 1,\n          tPrev = pp[iPrev],\n          tNext = pp[iNext];\n\n      if (tPrev === undefined) {\n        switch (this.getSettings_().endingStart) {\n          case THREE.ZeroSlopeEnding:\n            // f'(t0) = 0\n            iPrev = i1;\n            tPrev = 2 * t0 - t1;\n            break;\n\n          case THREE.WrapAroundEnding:\n            // use the other end of the curve\n            iPrev = pp.length - 2;\n            tPrev = t0 + pp[iPrev] - pp[iPrev + 1];\n            break;\n\n          default:\n            // ZeroCurvatureEnding\n            // f''(t0) = 0 a.k.a. Natural Spline\n            iPrev = i1;\n            tPrev = t1;\n        }\n      }\n\n      if (tNext === undefined) {\n        switch (this.getSettings_().endingEnd) {\n          case THREE.ZeroSlopeEnding:\n            // f'(tN) = 0\n            iNext = i1;\n            tNext = 2 * t1 - t0;\n            break;\n\n          case THREE.WrapAroundEnding:\n            // use the other end of the curve\n            iNext = 1;\n            tNext = t1 + pp[1] - pp[0];\n            break;\n\n          default:\n            // ZeroCurvatureEnding\n            // f''(tN) = 0, a.k.a. Natural Spline\n            iNext = i1 - 1;\n            tNext = t0;\n        }\n      }\n\n      var halfDt = (t1 - t0) * 0.5,\n          stride = this.valueSize;\n      this._weightPrev = halfDt / (t0 - tPrev);\n      this._weightNext = halfDt / (tNext - t1);\n      this._offsetPrev = iPrev * stride;\n      this._offsetNext = iNext * stride;\n    },\n    interpolate_: function (i1, t0, t, t1) {\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          stride = this.valueSize,\n          o1 = i1 * stride,\n          o0 = o1 - stride,\n          oP = this._offsetPrev,\n          oN = this._offsetNext,\n          wP = this._weightPrev,\n          wN = this._weightNext,\n          p = (t - t0) / (t1 - t0),\n          pp = p * p,\n          ppp = pp * p; // evaluate polynomials\n\n      var sP = -wP * ppp + 2 * wP * pp - wP * p;\n      var s0 = (1 + wP) * ppp + (-1.5 - 2 * wP) * pp + (-0.5 + wP) * p + 1;\n      var s1 = (-1 - wN) * ppp + (1.5 + wN) * pp + 0.5 * p;\n      var sN = wN * ppp - wN * pp; // combine data linearly\n\n      for (var i = 0; i !== stride; ++i) {\n        result[i] = sP * values[oP + i] + s0 * values[o0 + i] + s1 * values[o1 + i] + sN * values[oN + i];\n      }\n\n      return result;\n    }\n  }); // File:src/math/interpolants/DiscreteInterpolant.js\n\n  /**\n   *\n   * Interpolant that evaluates to the sample value at the position preceeding\n   * the parameter.\n   *\n   * @author tschw\n   */\n\n  THREE.DiscreteInterpolant = function (parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    THREE.Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  };\n\n  THREE.DiscreteInterpolant.prototype = Object.assign(Object.create(THREE.Interpolant.prototype), {\n    constructor: THREE.DiscreteInterpolant,\n    interpolate_: function (i1, t0, t, t1) {\n      return this.copySampleValue_(i1 - 1);\n    }\n  }); // File:src/math/interpolants/LinearInterpolant.js\n\n  /**\n   * @author tschw\n   */\n\n  THREE.LinearInterpolant = function (parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    THREE.Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  };\n\n  THREE.LinearInterpolant.prototype = Object.assign(Object.create(THREE.Interpolant.prototype), {\n    constructor: THREE.LinearInterpolant,\n    interpolate_: function (i1, t0, t, t1) {\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          stride = this.valueSize,\n          offset1 = i1 * stride,\n          offset0 = offset1 - stride,\n          weight1 = (t - t0) / (t1 - t0),\n          weight0 = 1 - weight1;\n\n      for (var i = 0; i !== stride; ++i) {\n        result[i] = values[offset0 + i] * weight0 + values[offset1 + i] * weight1;\n      }\n\n      return result;\n    }\n  }); // File:src/math/interpolants/QuaternionLinearInterpolant.js\n\n  /**\n   * Spherical linear unit quaternion interpolant.\n   *\n   * @author tschw\n   */\n\n  THREE.QuaternionLinearInterpolant = function (parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    THREE.Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  };\n\n  THREE.QuaternionLinearInterpolant.prototype = Object.assign(Object.create(THREE.Interpolant.prototype), {\n    constructor: THREE.QuaternionLinearInterpolant,\n    interpolate_: function (i1, t0, t, t1) {\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          stride = this.valueSize,\n          offset = i1 * stride,\n          alpha = (t - t0) / (t1 - t0);\n\n      for (var end = offset + stride; offset !== end; offset += 4) {\n        THREE.Quaternion.slerpFlat(result, 0, values, offset - stride, values, offset, alpha);\n      }\n\n      return result;\n    }\n  }); // File:src/core/Clock.js\n\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  THREE.Clock = function (autoStart) {\n    this.autoStart = autoStart !== undefined ? autoStart : true;\n    this.startTime = 0;\n    this.oldTime = 0;\n    this.elapsedTime = 0;\n    this.running = false;\n  };\n\n  THREE.Clock.prototype = {\n    constructor: THREE.Clock,\n    start: function () {\n      this.startTime = (performance || Date).now();\n      this.oldTime = this.startTime;\n      this.running = true;\n    },\n    stop: function () {\n      this.getElapsedTime();\n      this.running = false;\n    },\n    getElapsedTime: function () {\n      this.getDelta();\n      return this.elapsedTime;\n    },\n    getDelta: function () {\n      var diff = 0;\n\n      if (this.autoStart && !this.running) {\n        this.start();\n      }\n\n      if (this.running) {\n        var newTime = (performance || Date).now();\n        diff = (newTime - this.oldTime) / 1000;\n        this.oldTime = newTime;\n        this.elapsedTime += diff;\n      }\n\n      return diff;\n    }\n  }; // File:src/core/EventDispatcher.js\n\n  /**\n   * https://github.com/mrdoob/eventdispatcher.js/\n   */\n\n  THREE.EventDispatcher = function () {};\n\n  Object.assign(THREE.EventDispatcher.prototype, {\n    addEventListener: function (type, listener) {\n      if (this._listeners === undefined) this._listeners = {};\n      var listeners = this._listeners;\n\n      if (listeners[type] === undefined) {\n        listeners[type] = [];\n      }\n\n      if (listeners[type].indexOf(listener) === -1) {\n        listeners[type].push(listener);\n      }\n    },\n    hasEventListener: function (type, listener) {\n      if (this._listeners === undefined) return false;\n      var listeners = this._listeners;\n\n      if (listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1) {\n        return true;\n      }\n\n      return false;\n    },\n    removeEventListener: function (type, listener) {\n      if (this._listeners === undefined) return;\n      var listeners = this._listeners;\n      var listenerArray = listeners[type];\n\n      if (listenerArray !== undefined) {\n        var index = listenerArray.indexOf(listener);\n\n        if (index !== -1) {\n          listenerArray.splice(index, 1);\n        }\n      }\n    },\n    dispatchEvent: function (event) {\n      if (this._listeners === undefined) return;\n      var listeners = this._listeners;\n      var listenerArray = listeners[event.type];\n\n      if (listenerArray !== undefined) {\n        event.target = this;\n        var array = [],\n            i = 0;\n        var length = listenerArray.length;\n\n        for (i = 0; i < length; i++) {\n          array[i] = listenerArray[i];\n        }\n\n        for (i = 0; i < length; i++) {\n          array[i].call(this, event);\n        }\n      }\n    }\n  }); // File:src/core/Layers.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.Layers = function () {\n    this.mask = 1;\n  };\n\n  THREE.Layers.prototype = {\n    constructor: THREE.Layers,\n    set: function (channel) {\n      this.mask = 1 << channel;\n    },\n    enable: function (channel) {\n      this.mask |= 1 << channel;\n    },\n    toggle: function (channel) {\n      this.mask ^= 1 << channel;\n    },\n    disable: function (channel) {\n      this.mask &= ~(1 << channel);\n    },\n    test: function (layers) {\n      return (this.mask & layers.mask) !== 0;\n    }\n  }; // File:src/core/Raycaster.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author bhouston / http://clara.io/\n   * @author stephomi / http://stephaneginier.com/\n   */\n\n  (function (THREE) {\n    THREE.Raycaster = function (origin, direction, near, far) {\n      this.ray = new THREE.Ray(origin, direction); // direction is assumed to be normalized (for accurate distance calculations)\n\n      this.near = near || 0;\n      this.far = far || Infinity;\n      this.params = {\n        Mesh: {},\n        Line: {},\n        LOD: {},\n        Points: {\n          threshold: 1\n        },\n        Sprite: {}\n      };\n      Object.defineProperties(this.params, {\n        PointCloud: {\n          get: function () {\n            console.warn('THREE.Raycaster: params.PointCloud has been renamed to params.Points.');\n            return this.Points;\n          }\n        }\n      });\n    };\n\n    function ascSort(a, b) {\n      return a.distance - b.distance;\n    }\n\n    function intersectObject(object, raycaster, intersects, recursive) {\n      if (object.visible === false) return;\n      object.raycast(raycaster, intersects);\n\n      if (recursive === true) {\n        var children = object.children;\n\n        for (var i = 0, l = children.length; i < l; i++) {\n          intersectObject(children[i], raycaster, intersects, true);\n        }\n      }\n    } //\n\n\n    THREE.Raycaster.prototype = {\n      constructor: THREE.Raycaster,\n      linePrecision: 1,\n      set: function (origin, direction) {\n        // direction is assumed to be normalized (for accurate distance calculations)\n        this.ray.set(origin, direction);\n      },\n      setFromCamera: function (coords, camera) {\n        if (camera instanceof THREE.PerspectiveCamera) {\n          this.ray.origin.setFromMatrixPosition(camera.matrixWorld);\n          this.ray.direction.set(coords.x, coords.y, 0.5).unproject(camera).sub(this.ray.origin).normalize();\n        } else if (camera instanceof THREE.OrthographicCamera) {\n          this.ray.origin.set(coords.x, coords.y, (camera.near + camera.far) / (camera.near - camera.far)).unproject(camera); // set origin in plane of camera\n\n          this.ray.direction.set(0, 0, -1).transformDirection(camera.matrixWorld);\n        } else {\n          console.error('THREE.Raycaster: Unsupported camera type.');\n        }\n      },\n      intersectObject: function (object, recursive) {\n        var intersects = [];\n        intersectObject(object, this, intersects, recursive);\n        intersects.sort(ascSort);\n        return intersects;\n      },\n      intersectObjects: function (objects, recursive) {\n        var intersects = [];\n\n        if (Array.isArray(objects) === false) {\n          console.warn('THREE.Raycaster.intersectObjects: objects is not an Array.');\n          return intersects;\n        }\n\n        for (var i = 0, l = objects.length; i < l; i++) {\n          intersectObject(objects[i], this, intersects, recursive);\n        }\n\n        intersects.sort(ascSort);\n        return intersects;\n      }\n    };\n  })(THREE); // File:src/core/Object3D.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author WestLangley / http://github.com/WestLangley\n   * @author elephantatwork / www.elephantatwork.ch\n   */\n\n\n  THREE.Object3D = function () {\n    Object.defineProperty(this, 'id', {\n      value: THREE.Object3DIdCount++\n    });\n    this.uuid = THREE.Math.generateUUID();\n    this.name = '';\n    this.type = 'Object3D';\n    this.parent = null;\n    this.children = [];\n    this.up = THREE.Object3D.DefaultUp.clone();\n    var position = new THREE.Vector3();\n    var rotation = new THREE.Euler();\n    var quaternion = new THREE.Quaternion();\n    var scale = new THREE.Vector3(1, 1, 1);\n\n    function onRotationChange() {\n      quaternion.setFromEuler(rotation, false);\n    }\n\n    function onQuaternionChange() {\n      rotation.setFromQuaternion(quaternion, undefined, false);\n    }\n\n    rotation.onChange(onRotationChange);\n    quaternion.onChange(onQuaternionChange);\n    Object.defineProperties(this, {\n      position: {\n        enumerable: true,\n        value: position\n      },\n      rotation: {\n        enumerable: true,\n        value: rotation\n      },\n      quaternion: {\n        enumerable: true,\n        value: quaternion\n      },\n      scale: {\n        enumerable: true,\n        value: scale\n      },\n      modelViewMatrix: {\n        value: new THREE.Matrix4()\n      },\n      normalMatrix: {\n        value: new THREE.Matrix3()\n      }\n    });\n    this.matrix = new THREE.Matrix4();\n    this.matrixWorld = new THREE.Matrix4();\n    this.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\n    this.matrixWorldNeedsUpdate = false;\n    this.layers = new THREE.Layers();\n    this.visible = true;\n    this.castShadow = false;\n    this.receiveShadow = false;\n    this.frustumCulled = true;\n    this.renderOrder = 0;\n    this.userData = {};\n  };\n\n  THREE.Object3D.DefaultUp = new THREE.Vector3(0, 1, 0);\n  THREE.Object3D.DefaultMatrixAutoUpdate = true;\n  Object.assign(THREE.Object3D.prototype, THREE.EventDispatcher.prototype, {\n    applyMatrix: function (matrix) {\n      this.matrix.multiplyMatrices(matrix, this.matrix);\n      this.matrix.decompose(this.position, this.quaternion, this.scale);\n    },\n    setRotationFromAxisAngle: function (axis, angle) {\n      // assumes axis is normalized\n      this.quaternion.setFromAxisAngle(axis, angle);\n    },\n    setRotationFromEuler: function (euler) {\n      this.quaternion.setFromEuler(euler, true);\n    },\n    setRotationFromMatrix: function (m) {\n      // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n      this.quaternion.setFromRotationMatrix(m);\n    },\n    setRotationFromQuaternion: function (q) {\n      // assumes q is normalized\n      this.quaternion.copy(q);\n    },\n    rotateOnAxis: function () {\n      // rotate object on axis in object space\n      // axis is assumed to be normalized\n      var q1 = new THREE.Quaternion();\n      return function rotateOnAxis(axis, angle) {\n        q1.setFromAxisAngle(axis, angle);\n        this.quaternion.multiply(q1);\n        return this;\n      };\n    }(),\n    rotateX: function () {\n      var v1 = new THREE.Vector3(1, 0, 0);\n      return function rotateX(angle) {\n        return this.rotateOnAxis(v1, angle);\n      };\n    }(),\n    rotateY: function () {\n      var v1 = new THREE.Vector3(0, 1, 0);\n      return function rotateY(angle) {\n        return this.rotateOnAxis(v1, angle);\n      };\n    }(),\n    rotateZ: function () {\n      var v1 = new THREE.Vector3(0, 0, 1);\n      return function rotateZ(angle) {\n        return this.rotateOnAxis(v1, angle);\n      };\n    }(),\n    translateOnAxis: function () {\n      // translate object by distance along axis in object space\n      // axis is assumed to be normalized\n      var v1 = new THREE.Vector3();\n      return function translateOnAxis(axis, distance) {\n        v1.copy(axis).applyQuaternion(this.quaternion);\n        this.position.add(v1.multiplyScalar(distance));\n        return this;\n      };\n    }(),\n    translateX: function () {\n      var v1 = new THREE.Vector3(1, 0, 0);\n      return function translateX(distance) {\n        return this.translateOnAxis(v1, distance);\n      };\n    }(),\n    translateY: function () {\n      var v1 = new THREE.Vector3(0, 1, 0);\n      return function translateY(distance) {\n        return this.translateOnAxis(v1, distance);\n      };\n    }(),\n    translateZ: function () {\n      var v1 = new THREE.Vector3(0, 0, 1);\n      return function translateZ(distance) {\n        return this.translateOnAxis(v1, distance);\n      };\n    }(),\n    localToWorld: function (vector) {\n      return vector.applyMatrix4(this.matrixWorld);\n    },\n    worldToLocal: function () {\n      var m1 = new THREE.Matrix4();\n      return function worldToLocal(vector) {\n        return vector.applyMatrix4(m1.getInverse(this.matrixWorld));\n      };\n    }(),\n    lookAt: function () {\n      // This routine does not support objects with rotated and/or translated parent(s)\n      var m1 = new THREE.Matrix4();\n      return function lookAt(vector) {\n        m1.lookAt(vector, this.position, this.up);\n        this.quaternion.setFromRotationMatrix(m1);\n      };\n    }(),\n    add: function (object) {\n      if (arguments.length > 1) {\n        for (var i = 0; i < arguments.length; i++) {\n          this.add(arguments[i]);\n        }\n\n        return this;\n      }\n\n      if (object === this) {\n        console.error(\"THREE.Object3D.add: object can't be added as a child of itself.\", object);\n        return this;\n      }\n\n      if (object instanceof THREE.Object3D) {\n        if (object.parent !== null) {\n          object.parent.remove(object);\n        }\n\n        object.parent = this;\n        object.dispatchEvent({\n          type: 'added'\n        });\n        this.children.push(object);\n      } else {\n        console.error(\"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object);\n      }\n\n      return this;\n    },\n    remove: function (object) {\n      if (arguments.length > 1) {\n        for (var i = 0; i < arguments.length; i++) {\n          this.remove(arguments[i]);\n        }\n      }\n\n      var index = this.children.indexOf(object);\n\n      if (index !== -1) {\n        object.parent = null;\n        object.dispatchEvent({\n          type: 'removed'\n        });\n        this.children.splice(index, 1);\n      }\n    },\n    getObjectById: function (id) {\n      return this.getObjectByProperty('id', id);\n    },\n    getObjectByName: function (name) {\n      return this.getObjectByProperty('name', name);\n    },\n    getObjectByProperty: function (name, value) {\n      if (this[name] === value) return this;\n\n      for (var i = 0, l = this.children.length; i < l; i++) {\n        var child = this.children[i];\n        var object = child.getObjectByProperty(name, value);\n\n        if (object !== undefined) {\n          return object;\n        }\n      }\n\n      return undefined;\n    },\n    getWorldPosition: function (optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      this.updateMatrixWorld(true);\n      return result.setFromMatrixPosition(this.matrixWorld);\n    },\n    getWorldQuaternion: function () {\n      var position = new THREE.Vector3();\n      var scale = new THREE.Vector3();\n      return function getWorldQuaternion(optionalTarget) {\n        var result = optionalTarget || new THREE.Quaternion();\n        this.updateMatrixWorld(true);\n        this.matrixWorld.decompose(position, result, scale);\n        return result;\n      };\n    }(),\n    getWorldRotation: function () {\n      var quaternion = new THREE.Quaternion();\n      return function getWorldRotation(optionalTarget) {\n        var result = optionalTarget || new THREE.Euler();\n        this.getWorldQuaternion(quaternion);\n        return result.setFromQuaternion(quaternion, this.rotation.order, false);\n      };\n    }(),\n    getWorldScale: function () {\n      var position = new THREE.Vector3();\n      var quaternion = new THREE.Quaternion();\n      return function getWorldScale(optionalTarget) {\n        var result = optionalTarget || new THREE.Vector3();\n        this.updateMatrixWorld(true);\n        this.matrixWorld.decompose(position, quaternion, result);\n        return result;\n      };\n    }(),\n    getWorldDirection: function () {\n      var quaternion = new THREE.Quaternion();\n      return function getWorldDirection(optionalTarget) {\n        var result = optionalTarget || new THREE.Vector3();\n        this.getWorldQuaternion(quaternion);\n        return result.set(0, 0, 1).applyQuaternion(quaternion);\n      };\n    }(),\n    raycast: function () {},\n    traverse: function (callback) {\n      callback(this);\n      var children = this.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].traverse(callback);\n      }\n    },\n    traverseVisible: function (callback) {\n      if (this.visible === false) return;\n      callback(this);\n      var children = this.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].traverseVisible(callback);\n      }\n    },\n    traverseAncestors: function (callback) {\n      var parent = this.parent;\n\n      if (parent !== null) {\n        callback(parent);\n        parent.traverseAncestors(callback);\n      }\n    },\n    updateMatrix: function () {\n      this.matrix.compose(this.position, this.quaternion, this.scale);\n      this.matrixWorldNeedsUpdate = true;\n    },\n    updateMatrixWorld: function (force) {\n      if (this.matrixAutoUpdate === true) this.updateMatrix();\n\n      if (this.matrixWorldNeedsUpdate === true || force === true) {\n        if (this.parent === null) {\n          this.matrixWorld.copy(this.matrix);\n        } else {\n          this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n        }\n\n        this.matrixWorldNeedsUpdate = false;\n        force = true;\n      } // update children\n\n\n      for (var i = 0, l = this.children.length; i < l; i++) {\n        this.children[i].updateMatrixWorld(force);\n      }\n    },\n    toJSON: function (meta) {\n      // meta is '' when called from JSON.stringify\n      var isRootObject = meta === undefined || meta === '';\n      var output = {}; // meta is a hash used to collect geometries, materials.\n      // not providing it implies that this is the root object\n      // being serialized.\n\n      if (isRootObject) {\n        // initialize meta obj\n        meta = {\n          geometries: {},\n          materials: {},\n          textures: {},\n          images: {}\n        };\n        output.metadata = {\n          version: 4.4,\n          type: 'Object',\n          generator: 'Object3D.toJSON'\n        };\n      } // standard Object3D serialization\n\n\n      var object = {};\n      object.uuid = this.uuid;\n      object.type = this.type;\n      if (this.name !== '') object.name = this.name;\n      if (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\n      if (this.castShadow === true) object.castShadow = true;\n      if (this.receiveShadow === true) object.receiveShadow = true;\n      if (this.visible === false) object.visible = false;\n      object.matrix = this.matrix.toArray(); //\n\n      if (this.geometry !== undefined) {\n        if (meta.geometries[this.geometry.uuid] === undefined) {\n          meta.geometries[this.geometry.uuid] = this.geometry.toJSON(meta);\n        }\n\n        object.geometry = this.geometry.uuid;\n      }\n\n      if (this.material !== undefined) {\n        if (meta.materials[this.material.uuid] === undefined) {\n          meta.materials[this.material.uuid] = this.material.toJSON(meta);\n        }\n\n        object.material = this.material.uuid;\n      } //\n\n\n      if (this.children.length > 0) {\n        object.children = [];\n\n        for (var i = 0; i < this.children.length; i++) {\n          object.children.push(this.children[i].toJSON(meta).object);\n        }\n      }\n\n      if (isRootObject) {\n        var geometries = extractFromCache(meta.geometries);\n        var materials = extractFromCache(meta.materials);\n        var textures = extractFromCache(meta.textures);\n        var images = extractFromCache(meta.images);\n        if (geometries.length > 0) output.geometries = geometries;\n        if (materials.length > 0) output.materials = materials;\n        if (textures.length > 0) output.textures = textures;\n        if (images.length > 0) output.images = images;\n      }\n\n      output.object = object;\n      return output; // extract data from the cache hash\n      // remove metadata on each item\n      // and return as array\n\n      function extractFromCache(cache) {\n        var values = [];\n\n        for (var key in cache) {\n          var data = cache[key];\n          delete data.metadata;\n          values.push(data);\n        }\n\n        return values;\n      }\n    },\n    clone: function (recursive) {\n      return new this.constructor().copy(this, recursive);\n    },\n    copy: function (source, recursive) {\n      if (recursive === undefined) recursive = true;\n      this.name = source.name;\n      this.up.copy(source.up);\n      this.position.copy(source.position);\n      this.quaternion.copy(source.quaternion);\n      this.scale.copy(source.scale);\n      this.matrix.copy(source.matrix);\n      this.matrixWorld.copy(source.matrixWorld);\n      this.matrixAutoUpdate = source.matrixAutoUpdate;\n      this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n      this.visible = source.visible;\n      this.castShadow = source.castShadow;\n      this.receiveShadow = source.receiveShadow;\n      this.frustumCulled = source.frustumCulled;\n      this.renderOrder = source.renderOrder;\n      this.userData = JSON.parse(JSON.stringify(source.userData));\n\n      if (recursive === true) {\n        for (var i = 0; i < source.children.length; i++) {\n          var child = source.children[i];\n          this.add(child.clone());\n        }\n      }\n\n      return this;\n    }\n  });\n  THREE.Object3DIdCount = 0; // File:src/core/Face3.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  THREE.Face3 = function (a, b, c, normal, color, materialIndex) {\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\n    this.vertexNormals = Array.isArray(normal) ? normal : [];\n    this.color = color instanceof THREE.Color ? color : new THREE.Color();\n    this.vertexColors = Array.isArray(color) ? color : [];\n    this.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n  };\n\n  THREE.Face3.prototype = {\n    constructor: THREE.Face3,\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (source) {\n      this.a = source.a;\n      this.b = source.b;\n      this.c = source.c;\n      this.normal.copy(source.normal);\n      this.color.copy(source.color);\n      this.materialIndex = source.materialIndex;\n\n      for (var i = 0, il = source.vertexNormals.length; i < il; i++) {\n        this.vertexNormals[i] = source.vertexNormals[i].clone();\n      }\n\n      for (var i = 0, il = source.vertexColors.length; i < il; i++) {\n        this.vertexColors[i] = source.vertexColors[i].clone();\n      }\n\n      return this;\n    }\n  }; // File:src/core/BufferAttribute.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.BufferAttribute = function (array, itemSize, normalized) {\n    this.uuid = THREE.Math.generateUUID();\n    this.array = array;\n    this.itemSize = itemSize;\n    this.dynamic = false;\n    this.updateRange = {\n      offset: 0,\n      count: -1\n    };\n    this.version = 0;\n    this.normalized = normalized === true;\n  };\n\n  THREE.BufferAttribute.prototype = {\n    constructor: THREE.BufferAttribute,\n\n    get count() {\n      return this.array.length / this.itemSize;\n    },\n\n    set needsUpdate(value) {\n      if (value === true) this.version++;\n    },\n\n    setDynamic: function (value) {\n      this.dynamic = value;\n      return this;\n    },\n    copy: function (source) {\n      this.array = new source.array.constructor(source.array);\n      this.itemSize = source.itemSize;\n      this.dynamic = source.dynamic;\n      return this;\n    },\n    copyAt: function (index1, attribute, index2) {\n      index1 *= this.itemSize;\n      index2 *= attribute.itemSize;\n\n      for (var i = 0, l = this.itemSize; i < l; i++) {\n        this.array[index1 + i] = attribute.array[index2 + i];\n      }\n\n      return this;\n    },\n    copyArray: function (array) {\n      this.array.set(array);\n      return this;\n    },\n    copyColorsArray: function (colors) {\n      var array = this.array,\n          offset = 0;\n\n      for (var i = 0, l = colors.length; i < l; i++) {\n        var color = colors[i];\n\n        if (color === undefined) {\n          console.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined', i);\n          color = new THREE.Color();\n        }\n\n        array[offset++] = color.r;\n        array[offset++] = color.g;\n        array[offset++] = color.b;\n      }\n\n      return this;\n    },\n    copyIndicesArray: function (indices) {\n      var array = this.array,\n          offset = 0;\n\n      for (var i = 0, l = indices.length; i < l; i++) {\n        var index = indices[i];\n        array[offset++] = index.a;\n        array[offset++] = index.b;\n        array[offset++] = index.c;\n      }\n\n      return this;\n    },\n    copyVector2sArray: function (vectors) {\n      var array = this.array,\n          offset = 0;\n\n      for (var i = 0, l = vectors.length; i < l; i++) {\n        var vector = vectors[i];\n\n        if (vector === undefined) {\n          console.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i);\n          vector = new THREE.Vector2();\n        }\n\n        array[offset++] = vector.x;\n        array[offset++] = vector.y;\n      }\n\n      return this;\n    },\n    copyVector3sArray: function (vectors) {\n      var array = this.array,\n          offset = 0;\n\n      for (var i = 0, l = vectors.length; i < l; i++) {\n        var vector = vectors[i];\n\n        if (vector === undefined) {\n          console.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i);\n          vector = new THREE.Vector3();\n        }\n\n        array[offset++] = vector.x;\n        array[offset++] = vector.y;\n        array[offset++] = vector.z;\n      }\n\n      return this;\n    },\n    copyVector4sArray: function (vectors) {\n      var array = this.array,\n          offset = 0;\n\n      for (var i = 0, l = vectors.length; i < l; i++) {\n        var vector = vectors[i];\n\n        if (vector === undefined) {\n          console.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i);\n          vector = new THREE.Vector4();\n        }\n\n        array[offset++] = vector.x;\n        array[offset++] = vector.y;\n        array[offset++] = vector.z;\n        array[offset++] = vector.w;\n      }\n\n      return this;\n    },\n    set: function (value, offset) {\n      if (offset === undefined) offset = 0;\n      this.array.set(value, offset);\n      return this;\n    },\n    getX: function (index) {\n      return this.array[index * this.itemSize];\n    },\n    setX: function (index, x) {\n      this.array[index * this.itemSize] = x;\n      return this;\n    },\n    getY: function (index) {\n      return this.array[index * this.itemSize + 1];\n    },\n    setY: function (index, y) {\n      this.array[index * this.itemSize + 1] = y;\n      return this;\n    },\n    getZ: function (index) {\n      return this.array[index * this.itemSize + 2];\n    },\n    setZ: function (index, z) {\n      this.array[index * this.itemSize + 2] = z;\n      return this;\n    },\n    getW: function (index) {\n      return this.array[index * this.itemSize + 3];\n    },\n    setW: function (index, w) {\n      this.array[index * this.itemSize + 3] = w;\n      return this;\n    },\n    setXY: function (index, x, y) {\n      index *= this.itemSize;\n      this.array[index + 0] = x;\n      this.array[index + 1] = y;\n      return this;\n    },\n    setXYZ: function (index, x, y, z) {\n      index *= this.itemSize;\n      this.array[index + 0] = x;\n      this.array[index + 1] = y;\n      this.array[index + 2] = z;\n      return this;\n    },\n    setXYZW: function (index, x, y, z, w) {\n      index *= this.itemSize;\n      this.array[index + 0] = x;\n      this.array[index + 1] = y;\n      this.array[index + 2] = z;\n      this.array[index + 3] = w;\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    }\n  }; //\n\n  THREE.Int8Attribute = function (array, itemSize) {\n    return new THREE.BufferAttribute(new Int8Array(array), itemSize);\n  };\n\n  THREE.Uint8Attribute = function (array, itemSize) {\n    return new THREE.BufferAttribute(new Uint8Array(array), itemSize);\n  };\n\n  THREE.Uint8ClampedAttribute = function (array, itemSize) {\n    return new THREE.BufferAttribute(new Uint8ClampedArray(array), itemSize);\n  };\n\n  THREE.Int16Attribute = function (array, itemSize) {\n    return new THREE.BufferAttribute(new Int16Array(array), itemSize);\n  };\n\n  THREE.Uint16Attribute = function (array, itemSize) {\n    return new THREE.BufferAttribute(new Uint16Array(array), itemSize);\n  };\n\n  THREE.Int32Attribute = function (array, itemSize) {\n    return new THREE.BufferAttribute(new Int32Array(array), itemSize);\n  };\n\n  THREE.Uint32Attribute = function (array, itemSize) {\n    return new THREE.BufferAttribute(new Uint32Array(array), itemSize);\n  };\n\n  THREE.Float32Attribute = function (array, itemSize) {\n    return new THREE.BufferAttribute(new Float32Array(array), itemSize);\n  };\n\n  THREE.Float64Attribute = function (array, itemSize) {\n    return new THREE.BufferAttribute(new Float64Array(array), itemSize);\n  }; // Deprecated\n\n\n  THREE.DynamicBufferAttribute = function (array, itemSize) {\n    console.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.');\n    return new THREE.BufferAttribute(array, itemSize).setDynamic(true);\n  }; // File:src/core/InstancedBufferAttribute.js\n\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   */\n\n\n  THREE.InstancedBufferAttribute = function (array, itemSize, meshPerAttribute) {\n    THREE.BufferAttribute.call(this, array, itemSize);\n    this.meshPerAttribute = meshPerAttribute || 1;\n  };\n\n  THREE.InstancedBufferAttribute.prototype = Object.create(THREE.BufferAttribute.prototype);\n  THREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\n\n  THREE.InstancedBufferAttribute.prototype.copy = function (source) {\n    THREE.BufferAttribute.prototype.copy.call(this, source);\n    this.meshPerAttribute = source.meshPerAttribute;\n    return this;\n  }; // File:src/core/InterleavedBuffer.js\n\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   */\n\n\n  THREE.InterleavedBuffer = function (array, stride) {\n    this.uuid = THREE.Math.generateUUID();\n    this.array = array;\n    this.stride = stride;\n    this.dynamic = false;\n    this.updateRange = {\n      offset: 0,\n      count: -1\n    };\n    this.version = 0;\n  };\n\n  THREE.InterleavedBuffer.prototype = {\n    constructor: THREE.InterleavedBuffer,\n\n    get length() {\n      return this.array.length;\n    },\n\n    get count() {\n      return this.array.length / this.stride;\n    },\n\n    set needsUpdate(value) {\n      if (value === true) this.version++;\n    },\n\n    setDynamic: function (value) {\n      this.dynamic = value;\n      return this;\n    },\n    copy: function (source) {\n      this.array = new source.array.constructor(source.array);\n      this.stride = source.stride;\n      this.dynamic = source.dynamic;\n      return this;\n    },\n    copyAt: function (index1, attribute, index2) {\n      index1 *= this.stride;\n      index2 *= attribute.stride;\n\n      for (var i = 0, l = this.stride; i < l; i++) {\n        this.array[index1 + i] = attribute.array[index2 + i];\n      }\n\n      return this;\n    },\n    set: function (value, offset) {\n      if (offset === undefined) offset = 0;\n      this.array.set(value, offset);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    }\n  }; // File:src/core/InstancedInterleavedBuffer.js\n\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   */\n\n  THREE.InstancedInterleavedBuffer = function (array, stride, meshPerAttribute) {\n    THREE.InterleavedBuffer.call(this, array, stride);\n    this.meshPerAttribute = meshPerAttribute || 1;\n  };\n\n  THREE.InstancedInterleavedBuffer.prototype = Object.create(THREE.InterleavedBuffer.prototype);\n  THREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\n\n  THREE.InstancedInterleavedBuffer.prototype.copy = function (source) {\n    THREE.InterleavedBuffer.prototype.copy.call(this, source);\n    this.meshPerAttribute = source.meshPerAttribute;\n    return this;\n  }; // File:src/core/InterleavedBufferAttribute.js\n\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   */\n\n\n  THREE.InterleavedBufferAttribute = function (interleavedBuffer, itemSize, offset, normalized) {\n    this.uuid = THREE.Math.generateUUID();\n    this.data = interleavedBuffer;\n    this.itemSize = itemSize;\n    this.offset = offset;\n    this.normalized = normalized === true;\n  };\n\n  THREE.InterleavedBufferAttribute.prototype = {\n    constructor: THREE.InterleavedBufferAttribute,\n\n    get length() {\n      console.warn('THREE.BufferAttribute: .length has been deprecated. Please use .count.');\n      return this.array.length;\n    },\n\n    get count() {\n      return this.data.count;\n    },\n\n    get array() {\n      return this.data.array;\n    },\n\n    setX: function (index, x) {\n      this.data.array[index * this.data.stride + this.offset] = x;\n      return this;\n    },\n    setY: function (index, y) {\n      this.data.array[index * this.data.stride + this.offset + 1] = y;\n      return this;\n    },\n    setZ: function (index, z) {\n      this.data.array[index * this.data.stride + this.offset + 2] = z;\n      return this;\n    },\n    setW: function (index, w) {\n      this.data.array[index * this.data.stride + this.offset + 3] = w;\n      return this;\n    },\n    getX: function (index) {\n      return this.data.array[index * this.data.stride + this.offset];\n    },\n    getY: function (index) {\n      return this.data.array[index * this.data.stride + this.offset + 1];\n    },\n    getZ: function (index) {\n      return this.data.array[index * this.data.stride + this.offset + 2];\n    },\n    getW: function (index) {\n      return this.data.array[index * this.data.stride + this.offset + 3];\n    },\n    setXY: function (index, x, y) {\n      index = index * this.data.stride + this.offset;\n      this.data.array[index + 0] = x;\n      this.data.array[index + 1] = y;\n      return this;\n    },\n    setXYZ: function (index, x, y, z) {\n      index = index * this.data.stride + this.offset;\n      this.data.array[index + 0] = x;\n      this.data.array[index + 1] = y;\n      this.data.array[index + 2] = z;\n      return this;\n    },\n    setXYZW: function (index, x, y, z, w) {\n      index = index * this.data.stride + this.offset;\n      this.data.array[index + 0] = x;\n      this.data.array[index + 1] = y;\n      this.data.array[index + 2] = z;\n      this.data.array[index + 3] = w;\n      return this;\n    }\n  }; // File:src/core/Geometry.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author kile / http://kile.stravaganza.org/\n   * @author alteredq / http://alteredqualia.com/\n   * @author mikael emtinger / http://gomo.se/\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * @author bhouston / http://clara.io\n   */\n\n  THREE.Geometry = function () {\n    Object.defineProperty(this, 'id', {\n      value: THREE.GeometryIdCount++\n    });\n    this.uuid = THREE.Math.generateUUID();\n    this.name = '';\n    this.type = 'Geometry';\n    this.vertices = [];\n    this.colors = [];\n    this.faces = [];\n    this.faceVertexUvs = [[]];\n    this.morphTargets = [];\n    this.morphNormals = [];\n    this.skinWeights = [];\n    this.skinIndices = [];\n    this.lineDistances = [];\n    this.boundingBox = null;\n    this.boundingSphere = null; // update flags\n\n    this.elementsNeedUpdate = false;\n    this.verticesNeedUpdate = false;\n    this.uvsNeedUpdate = false;\n    this.normalsNeedUpdate = false;\n    this.colorsNeedUpdate = false;\n    this.lineDistancesNeedUpdate = false;\n    this.groupsNeedUpdate = false;\n  };\n\n  Object.assign(THREE.Geometry.prototype, THREE.EventDispatcher.prototype, {\n    applyMatrix: function (matrix) {\n      var normalMatrix = new THREE.Matrix3().getNormalMatrix(matrix);\n\n      for (var i = 0, il = this.vertices.length; i < il; i++) {\n        var vertex = this.vertices[i];\n        vertex.applyMatrix4(matrix);\n      }\n\n      for (var i = 0, il = this.faces.length; i < il; i++) {\n        var face = this.faces[i];\n        face.normal.applyMatrix3(normalMatrix).normalize();\n\n        for (var j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n          face.vertexNormals[j].applyMatrix3(normalMatrix).normalize();\n        }\n      }\n\n      if (this.boundingBox !== null) {\n        this.computeBoundingBox();\n      }\n\n      if (this.boundingSphere !== null) {\n        this.computeBoundingSphere();\n      }\n\n      this.verticesNeedUpdate = true;\n      this.normalsNeedUpdate = true;\n      return this;\n    },\n    rotateX: function () {\n      // rotate geometry around world x-axis\n      var m1;\n      return function rotateX(angle) {\n        if (m1 === undefined) m1 = new THREE.Matrix4();\n        m1.makeRotationX(angle);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    rotateY: function () {\n      // rotate geometry around world y-axis\n      var m1;\n      return function rotateY(angle) {\n        if (m1 === undefined) m1 = new THREE.Matrix4();\n        m1.makeRotationY(angle);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    rotateZ: function () {\n      // rotate geometry around world z-axis\n      var m1;\n      return function rotateZ(angle) {\n        if (m1 === undefined) m1 = new THREE.Matrix4();\n        m1.makeRotationZ(angle);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    translate: function () {\n      // translate geometry\n      var m1;\n      return function translate(x, y, z) {\n        if (m1 === undefined) m1 = new THREE.Matrix4();\n        m1.makeTranslation(x, y, z);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    scale: function () {\n      // scale geometry\n      var m1;\n      return function scale(x, y, z) {\n        if (m1 === undefined) m1 = new THREE.Matrix4();\n        m1.makeScale(x, y, z);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    lookAt: function () {\n      var obj;\n      return function lookAt(vector) {\n        if (obj === undefined) obj = new THREE.Object3D();\n        obj.lookAt(vector);\n        obj.updateMatrix();\n        this.applyMatrix(obj.matrix);\n      };\n    }(),\n    fromBufferGeometry: function (geometry) {\n      var scope = this;\n      var indices = geometry.index !== null ? geometry.index.array : undefined;\n      var attributes = geometry.attributes;\n      var positions = attributes.position.array;\n      var normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n      var colors = attributes.color !== undefined ? attributes.color.array : undefined;\n      var uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n      var uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n      if (uvs2 !== undefined) this.faceVertexUvs[1] = [];\n      var tempNormals = [];\n      var tempUVs = [];\n      var tempUVs2 = [];\n\n      for (var i = 0, j = 0; i < positions.length; i += 3, j += 2) {\n        scope.vertices.push(new THREE.Vector3(positions[i], positions[i + 1], positions[i + 2]));\n\n        if (normals !== undefined) {\n          tempNormals.push(new THREE.Vector3(normals[i], normals[i + 1], normals[i + 2]));\n        }\n\n        if (colors !== undefined) {\n          scope.colors.push(new THREE.Color(colors[i], colors[i + 1], colors[i + 2]));\n        }\n\n        if (uvs !== undefined) {\n          tempUVs.push(new THREE.Vector2(uvs[j], uvs[j + 1]));\n        }\n\n        if (uvs2 !== undefined) {\n          tempUVs2.push(new THREE.Vector2(uvs2[j], uvs2[j + 1]));\n        }\n      }\n\n      function addFace(a, b, c, materialIndex) {\n        var vertexNormals = normals !== undefined ? [tempNormals[a].clone(), tempNormals[b].clone(), tempNormals[c].clone()] : [];\n        var vertexColors = colors !== undefined ? [scope.colors[a].clone(), scope.colors[b].clone(), scope.colors[c].clone()] : [];\n        var face = new THREE.Face3(a, b, c, vertexNormals, vertexColors, materialIndex);\n        scope.faces.push(face);\n\n        if (uvs !== undefined) {\n          scope.faceVertexUvs[0].push([tempUVs[a].clone(), tempUVs[b].clone(), tempUVs[c].clone()]);\n        }\n\n        if (uvs2 !== undefined) {\n          scope.faceVertexUvs[1].push([tempUVs2[a].clone(), tempUVs2[b].clone(), tempUVs2[c].clone()]);\n        }\n      }\n\n      if (indices !== undefined) {\n        var groups = geometry.groups;\n\n        if (groups.length > 0) {\n          for (var i = 0; i < groups.length; i++) {\n            var group = groups[i];\n            var start = group.start;\n            var count = group.count;\n\n            for (var j = start, jl = start + count; j < jl; j += 3) {\n              addFace(indices[j], indices[j + 1], indices[j + 2], group.materialIndex);\n            }\n          }\n        } else {\n          for (var i = 0; i < indices.length; i += 3) {\n            addFace(indices[i], indices[i + 1], indices[i + 2]);\n          }\n        }\n      } else {\n        for (var i = 0; i < positions.length / 3; i += 3) {\n          addFace(i, i + 1, i + 2);\n        }\n      }\n\n      this.computeFaceNormals();\n\n      if (geometry.boundingBox !== null) {\n        this.boundingBox = geometry.boundingBox.clone();\n      }\n\n      if (geometry.boundingSphere !== null) {\n        this.boundingSphere = geometry.boundingSphere.clone();\n      }\n\n      return this;\n    },\n    center: function () {\n      this.computeBoundingBox();\n      var offset = this.boundingBox.center().negate();\n      this.translate(offset.x, offset.y, offset.z);\n      return offset;\n    },\n    normalize: function () {\n      this.computeBoundingSphere();\n      var center = this.boundingSphere.center;\n      var radius = this.boundingSphere.radius;\n      var s = radius === 0 ? 1 : 1.0 / radius;\n      var matrix = new THREE.Matrix4();\n      matrix.set(s, 0, 0, -s * center.x, 0, s, 0, -s * center.y, 0, 0, s, -s * center.z, 0, 0, 0, 1);\n      this.applyMatrix(matrix);\n      return this;\n    },\n    computeFaceNormals: function () {\n      var cb = new THREE.Vector3(),\n          ab = new THREE.Vector3();\n\n      for (var f = 0, fl = this.faces.length; f < fl; f++) {\n        var face = this.faces[f];\n        var vA = this.vertices[face.a];\n        var vB = this.vertices[face.b];\n        var vC = this.vertices[face.c];\n        cb.subVectors(vC, vB);\n        ab.subVectors(vA, vB);\n        cb.cross(ab);\n        cb.normalize();\n        face.normal.copy(cb);\n      }\n    },\n    computeVertexNormals: function (areaWeighted) {\n      if (areaWeighted === undefined) areaWeighted = true;\n      var v, vl, f, fl, face, vertices;\n      vertices = new Array(this.vertices.length);\n\n      for (v = 0, vl = this.vertices.length; v < vl; v++) {\n        vertices[v] = new THREE.Vector3();\n      }\n\n      if (areaWeighted) {\n        // vertex normals weighted by triangle areas\n        // http://www.iquilezles.org/www/articles/normals/normals.htm\n        var vA, vB, vC;\n        var cb = new THREE.Vector3(),\n            ab = new THREE.Vector3();\n\n        for (f = 0, fl = this.faces.length; f < fl; f++) {\n          face = this.faces[f];\n          vA = this.vertices[face.a];\n          vB = this.vertices[face.b];\n          vC = this.vertices[face.c];\n          cb.subVectors(vC, vB);\n          ab.subVectors(vA, vB);\n          cb.cross(ab);\n          vertices[face.a].add(cb);\n          vertices[face.b].add(cb);\n          vertices[face.c].add(cb);\n        }\n      } else {\n        for (f = 0, fl = this.faces.length; f < fl; f++) {\n          face = this.faces[f];\n          vertices[face.a].add(face.normal);\n          vertices[face.b].add(face.normal);\n          vertices[face.c].add(face.normal);\n        }\n      }\n\n      for (v = 0, vl = this.vertices.length; v < vl; v++) {\n        vertices[v].normalize();\n      }\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        var vertexNormals = face.vertexNormals;\n\n        if (vertexNormals.length === 3) {\n          vertexNormals[0].copy(vertices[face.a]);\n          vertexNormals[1].copy(vertices[face.b]);\n          vertexNormals[2].copy(vertices[face.c]);\n        } else {\n          vertexNormals[0] = vertices[face.a].clone();\n          vertexNormals[1] = vertices[face.b].clone();\n          vertexNormals[2] = vertices[face.c].clone();\n        }\n      }\n\n      if (this.faces.length > 0) {\n        this.normalsNeedUpdate = true;\n      }\n    },\n    computeMorphNormals: function () {\n      var i, il, f, fl, face; // save original normals\n      // - create temp variables on first access\n      //   otherwise just copy (for faster repeated calls)\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n\n        if (!face.__originalFaceNormal) {\n          face.__originalFaceNormal = face.normal.clone();\n        } else {\n          face.__originalFaceNormal.copy(face.normal);\n        }\n\n        if (!face.__originalVertexNormals) face.__originalVertexNormals = [];\n\n        for (i = 0, il = face.vertexNormals.length; i < il; i++) {\n          if (!face.__originalVertexNormals[i]) {\n            face.__originalVertexNormals[i] = face.vertexNormals[i].clone();\n          } else {\n            face.__originalVertexNormals[i].copy(face.vertexNormals[i]);\n          }\n        }\n      } // use temp geometry to compute face and vertex normals for each morph\n\n\n      var tmpGeo = new THREE.Geometry();\n      tmpGeo.faces = this.faces;\n\n      for (i = 0, il = this.morphTargets.length; i < il; i++) {\n        // create on first access\n        if (!this.morphNormals[i]) {\n          this.morphNormals[i] = {};\n          this.morphNormals[i].faceNormals = [];\n          this.morphNormals[i].vertexNormals = [];\n          var dstNormalsFace = this.morphNormals[i].faceNormals;\n          var dstNormalsVertex = this.morphNormals[i].vertexNormals;\n          var faceNormal, vertexNormals;\n\n          for (f = 0, fl = this.faces.length; f < fl; f++) {\n            faceNormal = new THREE.Vector3();\n            vertexNormals = {\n              a: new THREE.Vector3(),\n              b: new THREE.Vector3(),\n              c: new THREE.Vector3()\n            };\n            dstNormalsFace.push(faceNormal);\n            dstNormalsVertex.push(vertexNormals);\n          }\n        }\n\n        var morphNormals = this.morphNormals[i]; // set vertices to morph target\n\n        tmpGeo.vertices = this.morphTargets[i].vertices; // compute morph normals\n\n        tmpGeo.computeFaceNormals();\n        tmpGeo.computeVertexNormals(); // store morph normals\n\n        var faceNormal, vertexNormals;\n\n        for (f = 0, fl = this.faces.length; f < fl; f++) {\n          face = this.faces[f];\n          faceNormal = morphNormals.faceNormals[f];\n          vertexNormals = morphNormals.vertexNormals[f];\n          faceNormal.copy(face.normal);\n          vertexNormals.a.copy(face.vertexNormals[0]);\n          vertexNormals.b.copy(face.vertexNormals[1]);\n          vertexNormals.c.copy(face.vertexNormals[2]);\n        }\n      } // restore original normals\n\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        face.normal = face.__originalFaceNormal;\n        face.vertexNormals = face.__originalVertexNormals;\n      }\n    },\n    computeTangents: function () {\n      console.warn('THREE.Geometry: .computeTangents() has been removed.');\n    },\n    computeLineDistances: function () {\n      var d = 0;\n      var vertices = this.vertices;\n\n      for (var i = 0, il = vertices.length; i < il; i++) {\n        if (i > 0) {\n          d += vertices[i].distanceTo(vertices[i - 1]);\n        }\n\n        this.lineDistances[i] = d;\n      }\n    },\n    computeBoundingBox: function () {\n      if (this.boundingBox === null) {\n        this.boundingBox = new THREE.Box3();\n      }\n\n      this.boundingBox.setFromPoints(this.vertices);\n    },\n    computeBoundingSphere: function () {\n      if (this.boundingSphere === null) {\n        this.boundingSphere = new THREE.Sphere();\n      }\n\n      this.boundingSphere.setFromPoints(this.vertices);\n    },\n    merge: function (geometry, matrix, materialIndexOffset) {\n      if (geometry instanceof THREE.Geometry === false) {\n        console.error('THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry);\n        return;\n      }\n\n      var normalMatrix,\n          vertexOffset = this.vertices.length,\n          vertices1 = this.vertices,\n          vertices2 = geometry.vertices,\n          faces1 = this.faces,\n          faces2 = geometry.faces,\n          uvs1 = this.faceVertexUvs[0],\n          uvs2 = geometry.faceVertexUvs[0];\n      if (materialIndexOffset === undefined) materialIndexOffset = 0;\n\n      if (matrix !== undefined) {\n        normalMatrix = new THREE.Matrix3().getNormalMatrix(matrix);\n      } // vertices\n\n\n      for (var i = 0, il = vertices2.length; i < il; i++) {\n        var vertex = vertices2[i];\n        var vertexCopy = vertex.clone();\n        if (matrix !== undefined) vertexCopy.applyMatrix4(matrix);\n        vertices1.push(vertexCopy);\n      } // faces\n\n\n      for (i = 0, il = faces2.length; i < il; i++) {\n        var face = faces2[i],\n            faceCopy,\n            normal,\n            color,\n            faceVertexNormals = face.vertexNormals,\n            faceVertexColors = face.vertexColors;\n        faceCopy = new THREE.Face3(face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset);\n        faceCopy.normal.copy(face.normal);\n\n        if (normalMatrix !== undefined) {\n          faceCopy.normal.applyMatrix3(normalMatrix).normalize();\n        }\n\n        for (var j = 0, jl = faceVertexNormals.length; j < jl; j++) {\n          normal = faceVertexNormals[j].clone();\n\n          if (normalMatrix !== undefined) {\n            normal.applyMatrix3(normalMatrix).normalize();\n          }\n\n          faceCopy.vertexNormals.push(normal);\n        }\n\n        faceCopy.color.copy(face.color);\n\n        for (var j = 0, jl = faceVertexColors.length; j < jl; j++) {\n          color = faceVertexColors[j];\n          faceCopy.vertexColors.push(color.clone());\n        }\n\n        faceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n        faces1.push(faceCopy);\n      } // uvs\n\n\n      for (i = 0, il = uvs2.length; i < il; i++) {\n        var uv = uvs2[i],\n            uvCopy = [];\n\n        if (uv === undefined) {\n          continue;\n        }\n\n        for (var j = 0, jl = uv.length; j < jl; j++) {\n          uvCopy.push(uv[j].clone());\n        }\n\n        uvs1.push(uvCopy);\n      }\n    },\n    mergeMesh: function (mesh) {\n      if (mesh instanceof THREE.Mesh === false) {\n        console.error('THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh);\n        return;\n      }\n\n      mesh.matrixAutoUpdate && mesh.updateMatrix();\n      this.merge(mesh.geometry, mesh.matrix);\n    },\n\n    /*\n     * Checks for duplicate vertices with hashmap.\n     * Duplicated vertices are removed\n     * and faces' vertices are updated.\n     */\n    mergeVertices: function () {\n      var verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\n      var unique = [],\n          changes = [];\n      var v, key;\n      var precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\n      var precision = Math.pow(10, precisionPoints);\n      var i, il, face;\n      var indices, j, jl;\n\n      for (i = 0, il = this.vertices.length; i < il; i++) {\n        v = this.vertices[i];\n        key = Math.round(v.x * precision) + '_' + Math.round(v.y * precision) + '_' + Math.round(v.z * precision);\n\n        if (verticesMap[key] === undefined) {\n          verticesMap[key] = i;\n          unique.push(this.vertices[i]);\n          changes[i] = unique.length - 1;\n        } else {\n          //console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n          changes[i] = changes[verticesMap[key]];\n        }\n      } // if faces are completely degenerate after merging vertices, we\n      // have to remove them from the geometry.\n\n\n      var faceIndicesToRemove = [];\n\n      for (i = 0, il = this.faces.length; i < il; i++) {\n        face = this.faces[i];\n        face.a = changes[face.a];\n        face.b = changes[face.b];\n        face.c = changes[face.c];\n        indices = [face.a, face.b, face.c];\n        var dupIndex = -1; // if any duplicate vertices are found in a Face3\n        // we have to remove the face as nothing can be saved\n\n        for (var n = 0; n < 3; n++) {\n          if (indices[n] === indices[(n + 1) % 3]) {\n            dupIndex = n;\n            faceIndicesToRemove.push(i);\n            break;\n          }\n        }\n      }\n\n      for (i = faceIndicesToRemove.length - 1; i >= 0; i--) {\n        var idx = faceIndicesToRemove[i];\n        this.faces.splice(idx, 1);\n\n        for (j = 0, jl = this.faceVertexUvs.length; j < jl; j++) {\n          this.faceVertexUvs[j].splice(idx, 1);\n        }\n      } // Use unique set of vertices\n\n\n      var diff = this.vertices.length - unique.length;\n      this.vertices = unique;\n      return diff;\n    },\n    sortFacesByMaterialIndex: function () {\n      var faces = this.faces;\n      var length = faces.length; // tag faces\n\n      for (var i = 0; i < length; i++) {\n        faces[i]._id = i;\n      } // sort faces\n\n\n      function materialIndexSort(a, b) {\n        return a.materialIndex - b.materialIndex;\n      }\n\n      faces.sort(materialIndexSort); // sort uvs\n\n      var uvs1 = this.faceVertexUvs[0];\n      var uvs2 = this.faceVertexUvs[1];\n      var newUvs1, newUvs2;\n      if (uvs1 && uvs1.length === length) newUvs1 = [];\n      if (uvs2 && uvs2.length === length) newUvs2 = [];\n\n      for (var i = 0; i < length; i++) {\n        var id = faces[i]._id;\n        if (newUvs1) newUvs1.push(uvs1[id]);\n        if (newUvs2) newUvs2.push(uvs2[id]);\n      }\n\n      if (newUvs1) this.faceVertexUvs[0] = newUvs1;\n      if (newUvs2) this.faceVertexUvs[1] = newUvs2;\n    },\n    toJSON: function () {\n      var data = {\n        metadata: {\n          version: 4.4,\n          type: 'Geometry',\n          generator: 'Geometry.toJSON'\n        }\n      }; // standard Geometry serialization\n\n      data.uuid = this.uuid;\n      data.type = this.type;\n      if (this.name !== '') data.name = this.name;\n\n      if (this.parameters !== undefined) {\n        var parameters = this.parameters;\n\n        for (var key in parameters) {\n          if (parameters[key] !== undefined) data[key] = parameters[key];\n        }\n\n        return data;\n      }\n\n      var vertices = [];\n\n      for (var i = 0; i < this.vertices.length; i++) {\n        var vertex = this.vertices[i];\n        vertices.push(vertex.x, vertex.y, vertex.z);\n      }\n\n      var faces = [];\n      var normals = [];\n      var normalsHash = {};\n      var colors = [];\n      var colorsHash = {};\n      var uvs = [];\n      var uvsHash = {};\n\n      for (var i = 0; i < this.faces.length; i++) {\n        var face = this.faces[i];\n        var hasMaterial = true;\n        var hasFaceUv = false; // deprecated\n\n        var hasFaceVertexUv = this.faceVertexUvs[0][i] !== undefined;\n        var hasFaceNormal = face.normal.length() > 0;\n        var hasFaceVertexNormal = face.vertexNormals.length > 0;\n        var hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n        var hasFaceVertexColor = face.vertexColors.length > 0;\n        var faceType = 0;\n        faceType = setBit(faceType, 0, 0); // isQuad\n\n        faceType = setBit(faceType, 1, hasMaterial);\n        faceType = setBit(faceType, 2, hasFaceUv);\n        faceType = setBit(faceType, 3, hasFaceVertexUv);\n        faceType = setBit(faceType, 4, hasFaceNormal);\n        faceType = setBit(faceType, 5, hasFaceVertexNormal);\n        faceType = setBit(faceType, 6, hasFaceColor);\n        faceType = setBit(faceType, 7, hasFaceVertexColor);\n        faces.push(faceType);\n        faces.push(face.a, face.b, face.c);\n        faces.push(face.materialIndex);\n\n        if (hasFaceVertexUv) {\n          var faceVertexUvs = this.faceVertexUvs[0][i];\n          faces.push(getUvIndex(faceVertexUvs[0]), getUvIndex(faceVertexUvs[1]), getUvIndex(faceVertexUvs[2]));\n        }\n\n        if (hasFaceNormal) {\n          faces.push(getNormalIndex(face.normal));\n        }\n\n        if (hasFaceVertexNormal) {\n          var vertexNormals = face.vertexNormals;\n          faces.push(getNormalIndex(vertexNormals[0]), getNormalIndex(vertexNormals[1]), getNormalIndex(vertexNormals[2]));\n        }\n\n        if (hasFaceColor) {\n          faces.push(getColorIndex(face.color));\n        }\n\n        if (hasFaceVertexColor) {\n          var vertexColors = face.vertexColors;\n          faces.push(getColorIndex(vertexColors[0]), getColorIndex(vertexColors[1]), getColorIndex(vertexColors[2]));\n        }\n      }\n\n      function setBit(value, position, enabled) {\n        return enabled ? value | 1 << position : value & ~(1 << position);\n      }\n\n      function getNormalIndex(normal) {\n        var hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n        if (normalsHash[hash] !== undefined) {\n          return normalsHash[hash];\n        }\n\n        normalsHash[hash] = normals.length / 3;\n        normals.push(normal.x, normal.y, normal.z);\n        return normalsHash[hash];\n      }\n\n      function getColorIndex(color) {\n        var hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n        if (colorsHash[hash] !== undefined) {\n          return colorsHash[hash];\n        }\n\n        colorsHash[hash] = colors.length;\n        colors.push(color.getHex());\n        return colorsHash[hash];\n      }\n\n      function getUvIndex(uv) {\n        var hash = uv.x.toString() + uv.y.toString();\n\n        if (uvsHash[hash] !== undefined) {\n          return uvsHash[hash];\n        }\n\n        uvsHash[hash] = uvs.length / 2;\n        uvs.push(uv.x, uv.y);\n        return uvsHash[hash];\n      }\n\n      data.data = {};\n      data.data.vertices = vertices;\n      data.data.normals = normals;\n      if (colors.length > 0) data.data.colors = colors;\n      if (uvs.length > 0) data.data.uvs = [uvs]; // temporal backward compatibility\n\n      data.data.faces = faces;\n      return data;\n    },\n    clone: function () {\n      /*\n      // Handle primitives\n      \tvar parameters = this.parameters;\n      \tif ( parameters !== undefined ) {\n      \t\tvar values = [];\n      \t\tfor ( var key in parameters ) {\n      \t\t\tvalues.push( parameters[ key ] );\n      \t\t}\n      \t\tvar geometry = Object.create( this.constructor.prototype );\n      \tthis.constructor.apply( geometry, values );\n      \treturn geometry;\n      \t}\n      \treturn new this.constructor().copy( this );\n      */\n      return new THREE.Geometry().copy(this);\n    },\n    copy: function (source) {\n      this.vertices = [];\n      this.faces = [];\n      this.faceVertexUvs = [[]];\n      var vertices = source.vertices;\n\n      for (var i = 0, il = vertices.length; i < il; i++) {\n        this.vertices.push(vertices[i].clone());\n      }\n\n      var faces = source.faces;\n\n      for (var i = 0, il = faces.length; i < il; i++) {\n        this.faces.push(faces[i].clone());\n      }\n\n      for (var i = 0, il = source.faceVertexUvs.length; i < il; i++) {\n        var faceVertexUvs = source.faceVertexUvs[i];\n\n        if (this.faceVertexUvs[i] === undefined) {\n          this.faceVertexUvs[i] = [];\n        }\n\n        for (var j = 0, jl = faceVertexUvs.length; j < jl; j++) {\n          var uvs = faceVertexUvs[j],\n              uvsCopy = [];\n\n          for (var k = 0, kl = uvs.length; k < kl; k++) {\n            var uv = uvs[k];\n            uvsCopy.push(uv.clone());\n          }\n\n          this.faceVertexUvs[i].push(uvsCopy);\n        }\n      }\n\n      return this;\n    },\n    dispose: function () {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  });\n  THREE.GeometryIdCount = 0; // File:src/core/DirectGeometry.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.DirectGeometry = function () {\n    Object.defineProperty(this, 'id', {\n      value: THREE.GeometryIdCount++\n    });\n    this.uuid = THREE.Math.generateUUID();\n    this.name = '';\n    this.type = 'DirectGeometry';\n    this.indices = [];\n    this.vertices = [];\n    this.normals = [];\n    this.colors = [];\n    this.uvs = [];\n    this.uvs2 = [];\n    this.groups = [];\n    this.morphTargets = {};\n    this.skinWeights = [];\n    this.skinIndices = []; // this.lineDistances = [];\n\n    this.boundingBox = null;\n    this.boundingSphere = null; // update flags\n\n    this.verticesNeedUpdate = false;\n    this.normalsNeedUpdate = false;\n    this.colorsNeedUpdate = false;\n    this.uvsNeedUpdate = false;\n    this.groupsNeedUpdate = false;\n  };\n\n  Object.assign(THREE.DirectGeometry.prototype, THREE.EventDispatcher.prototype, {\n    computeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\n    computeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\n    computeFaceNormals: function () {\n      console.warn('THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.');\n    },\n    computeVertexNormals: function () {\n      console.warn('THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.');\n    },\n    computeGroups: function (geometry) {\n      var group;\n      var groups = [];\n      var materialIndex;\n      var faces = geometry.faces;\n\n      for (var i = 0; i < faces.length; i++) {\n        var face = faces[i]; // materials\n\n        if (face.materialIndex !== materialIndex) {\n          materialIndex = face.materialIndex;\n\n          if (group !== undefined) {\n            group.count = i * 3 - group.start;\n            groups.push(group);\n          }\n\n          group = {\n            start: i * 3,\n            materialIndex: materialIndex\n          };\n        }\n      }\n\n      if (group !== undefined) {\n        group.count = i * 3 - group.start;\n        groups.push(group);\n      }\n\n      this.groups = groups;\n    },\n    fromGeometry: function (geometry) {\n      var faces = geometry.faces;\n      var vertices = geometry.vertices;\n      var faceVertexUvs = geometry.faceVertexUvs;\n      var hasFaceVertexUv = faceVertexUvs[0] && faceVertexUvs[0].length > 0;\n      var hasFaceVertexUv2 = faceVertexUvs[1] && faceVertexUvs[1].length > 0; // morphs\n\n      var morphTargets = geometry.morphTargets;\n      var morphTargetsLength = morphTargets.length;\n      var morphTargetsPosition;\n\n      if (morphTargetsLength > 0) {\n        morphTargetsPosition = [];\n\n        for (var i = 0; i < morphTargetsLength; i++) {\n          morphTargetsPosition[i] = [];\n        }\n\n        this.morphTargets.position = morphTargetsPosition;\n      }\n\n      var morphNormals = geometry.morphNormals;\n      var morphNormalsLength = morphNormals.length;\n      var morphTargetsNormal;\n\n      if (morphNormalsLength > 0) {\n        morphTargetsNormal = [];\n\n        for (var i = 0; i < morphNormalsLength; i++) {\n          morphTargetsNormal[i] = [];\n        }\n\n        this.morphTargets.normal = morphTargetsNormal;\n      } // skins\n\n\n      var skinIndices = geometry.skinIndices;\n      var skinWeights = geometry.skinWeights;\n      var hasSkinIndices = skinIndices.length === vertices.length;\n      var hasSkinWeights = skinWeights.length === vertices.length; //\n\n      for (var i = 0; i < faces.length; i++) {\n        var face = faces[i];\n        this.vertices.push(vertices[face.a], vertices[face.b], vertices[face.c]);\n        var vertexNormals = face.vertexNormals;\n\n        if (vertexNormals.length === 3) {\n          this.normals.push(vertexNormals[0], vertexNormals[1], vertexNormals[2]);\n        } else {\n          var normal = face.normal;\n          this.normals.push(normal, normal, normal);\n        }\n\n        var vertexColors = face.vertexColors;\n\n        if (vertexColors.length === 3) {\n          this.colors.push(vertexColors[0], vertexColors[1], vertexColors[2]);\n        } else {\n          var color = face.color;\n          this.colors.push(color, color, color);\n        }\n\n        if (hasFaceVertexUv === true) {\n          var vertexUvs = faceVertexUvs[0][i];\n\n          if (vertexUvs !== undefined) {\n            this.uvs.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n          } else {\n            console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i);\n            this.uvs.push(new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2());\n          }\n        }\n\n        if (hasFaceVertexUv2 === true) {\n          var vertexUvs = faceVertexUvs[1][i];\n\n          if (vertexUvs !== undefined) {\n            this.uvs2.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n          } else {\n            console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i);\n            this.uvs2.push(new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2());\n          }\n        } // morphs\n\n\n        for (var j = 0; j < morphTargetsLength; j++) {\n          var morphTarget = morphTargets[j].vertices;\n          morphTargetsPosition[j].push(morphTarget[face.a], morphTarget[face.b], morphTarget[face.c]);\n        }\n\n        for (var j = 0; j < morphNormalsLength; j++) {\n          var morphNormal = morphNormals[j].vertexNormals[i];\n          morphTargetsNormal[j].push(morphNormal.a, morphNormal.b, morphNormal.c);\n        } // skins\n\n\n        if (hasSkinIndices) {\n          this.skinIndices.push(skinIndices[face.a], skinIndices[face.b], skinIndices[face.c]);\n        }\n\n        if (hasSkinWeights) {\n          this.skinWeights.push(skinWeights[face.a], skinWeights[face.b], skinWeights[face.c]);\n        }\n      }\n\n      this.computeGroups(geometry);\n      this.verticesNeedUpdate = geometry.verticesNeedUpdate;\n      this.normalsNeedUpdate = geometry.normalsNeedUpdate;\n      this.colorsNeedUpdate = geometry.colorsNeedUpdate;\n      this.uvsNeedUpdate = geometry.uvsNeedUpdate;\n      this.groupsNeedUpdate = geometry.groupsNeedUpdate;\n      return this;\n    },\n    dispose: function () {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  }); // File:src/core/BufferGeometry.js\n\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.BufferGeometry = function () {\n    Object.defineProperty(this, 'id', {\n      value: THREE.GeometryIdCount++\n    });\n    this.uuid = THREE.Math.generateUUID();\n    this.name = '';\n    this.type = 'BufferGeometry';\n    this.index = null;\n    this.attributes = {};\n    this.morphAttributes = {};\n    this.groups = [];\n    this.boundingBox = null;\n    this.boundingSphere = null;\n    this.drawRange = {\n      start: 0,\n      count: Infinity\n    };\n  };\n\n  Object.assign(THREE.BufferGeometry.prototype, THREE.EventDispatcher.prototype, {\n    getIndex: function () {\n      return this.index;\n    },\n    setIndex: function (index) {\n      this.index = index;\n    },\n    addAttribute: function (name, attribute) {\n      if (attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false) {\n        console.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');\n        this.addAttribute(name, new THREE.BufferAttribute(arguments[1], arguments[2]));\n        return;\n      }\n\n      if (name === 'index') {\n        console.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');\n        this.setIndex(attribute);\n        return;\n      }\n\n      this.attributes[name] = attribute;\n      return this;\n    },\n    getAttribute: function (name) {\n      return this.attributes[name];\n    },\n    removeAttribute: function (name) {\n      delete this.attributes[name];\n      return this;\n    },\n    addGroup: function (start, count, materialIndex) {\n      this.groups.push({\n        start: start,\n        count: count,\n        materialIndex: materialIndex !== undefined ? materialIndex : 0\n      });\n    },\n    clearGroups: function () {\n      this.groups = [];\n    },\n    setDrawRange: function (start, count) {\n      this.drawRange.start = start;\n      this.drawRange.count = count;\n    },\n    applyMatrix: function (matrix) {\n      var position = this.attributes.position;\n\n      if (position !== undefined) {\n        matrix.applyToVector3Array(position.array);\n        position.needsUpdate = true;\n      }\n\n      var normal = this.attributes.normal;\n\n      if (normal !== undefined) {\n        var normalMatrix = new THREE.Matrix3().getNormalMatrix(matrix);\n        normalMatrix.applyToVector3Array(normal.array);\n        normal.needsUpdate = true;\n      }\n\n      if (this.boundingBox !== null) {\n        this.computeBoundingBox();\n      }\n\n      if (this.boundingSphere !== null) {\n        this.computeBoundingSphere();\n      }\n\n      return this;\n    },\n    rotateX: function () {\n      // rotate geometry around world x-axis\n      var m1;\n      return function rotateX(angle) {\n        if (m1 === undefined) m1 = new THREE.Matrix4();\n        m1.makeRotationX(angle);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    rotateY: function () {\n      // rotate geometry around world y-axis\n      var m1;\n      return function rotateY(angle) {\n        if (m1 === undefined) m1 = new THREE.Matrix4();\n        m1.makeRotationY(angle);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    rotateZ: function () {\n      // rotate geometry around world z-axis\n      var m1;\n      return function rotateZ(angle) {\n        if (m1 === undefined) m1 = new THREE.Matrix4();\n        m1.makeRotationZ(angle);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    translate: function () {\n      // translate geometry\n      var m1;\n      return function translate(x, y, z) {\n        if (m1 === undefined) m1 = new THREE.Matrix4();\n        m1.makeTranslation(x, y, z);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    scale: function () {\n      // scale geometry\n      var m1;\n      return function scale(x, y, z) {\n        if (m1 === undefined) m1 = new THREE.Matrix4();\n        m1.makeScale(x, y, z);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    lookAt: function () {\n      var obj;\n      return function lookAt(vector) {\n        if (obj === undefined) obj = new THREE.Object3D();\n        obj.lookAt(vector);\n        obj.updateMatrix();\n        this.applyMatrix(obj.matrix);\n      };\n    }(),\n    center: function () {\n      this.computeBoundingBox();\n      var offset = this.boundingBox.center().negate();\n      this.translate(offset.x, offset.y, offset.z);\n      return offset;\n    },\n    setFromObject: function (object) {\n      // console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n      var geometry = object.geometry;\n\n      if (object instanceof THREE.Points || object instanceof THREE.Line) {\n        var positions = new THREE.Float32Attribute(geometry.vertices.length * 3, 3);\n        var colors = new THREE.Float32Attribute(geometry.colors.length * 3, 3);\n        this.addAttribute('position', positions.copyVector3sArray(geometry.vertices));\n        this.addAttribute('color', colors.copyColorsArray(geometry.colors));\n\n        if (geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length) {\n          var lineDistances = new THREE.Float32Attribute(geometry.lineDistances.length, 1);\n          this.addAttribute('lineDistance', lineDistances.copyArray(geometry.lineDistances));\n        }\n\n        if (geometry.boundingSphere !== null) {\n          this.boundingSphere = geometry.boundingSphere.clone();\n        }\n\n        if (geometry.boundingBox !== null) {\n          this.boundingBox = geometry.boundingBox.clone();\n        }\n      } else if (object instanceof THREE.Mesh) {\n        if (geometry instanceof THREE.Geometry) {\n          this.fromGeometry(geometry);\n        }\n      }\n\n      return this;\n    },\n    updateFromObject: function (object) {\n      var geometry = object.geometry;\n\n      if (object instanceof THREE.Mesh) {\n        var direct = geometry.__directGeometry;\n\n        if (direct === undefined || geometry.elementsNeedUpdate === true) {\n          return this.fromGeometry(geometry);\n        }\n\n        direct.verticesNeedUpdate = geometry.verticesNeedUpdate || geometry.elementsNeedUpdate;\n        direct.normalsNeedUpdate = geometry.normalsNeedUpdate || geometry.elementsNeedUpdate;\n        direct.colorsNeedUpdate = geometry.colorsNeedUpdate || geometry.elementsNeedUpdate;\n        direct.uvsNeedUpdate = geometry.uvsNeedUpdate || geometry.elementsNeedUpdate;\n        direct.groupsNeedUpdate = geometry.groupsNeedUpdate || geometry.elementsNeedUpdate;\n        geometry.elementsNeedUpdate = false;\n        geometry.verticesNeedUpdate = false;\n        geometry.normalsNeedUpdate = false;\n        geometry.colorsNeedUpdate = false;\n        geometry.uvsNeedUpdate = false;\n        geometry.groupsNeedUpdate = false;\n        geometry = direct;\n      }\n\n      var attribute;\n\n      if (geometry.verticesNeedUpdate === true) {\n        attribute = this.attributes.position;\n\n        if (attribute !== undefined) {\n          attribute.copyVector3sArray(geometry.vertices);\n          attribute.needsUpdate = true;\n        }\n\n        geometry.verticesNeedUpdate = false;\n      }\n\n      if (geometry.normalsNeedUpdate === true) {\n        attribute = this.attributes.normal;\n\n        if (attribute !== undefined) {\n          attribute.copyVector3sArray(geometry.normals);\n          attribute.needsUpdate = true;\n        }\n\n        geometry.normalsNeedUpdate = false;\n      }\n\n      if (geometry.colorsNeedUpdate === true) {\n        attribute = this.attributes.color;\n\n        if (attribute !== undefined) {\n          attribute.copyColorsArray(geometry.colors);\n          attribute.needsUpdate = true;\n        }\n\n        geometry.colorsNeedUpdate = false;\n      }\n\n      if (geometry.uvsNeedUpdate) {\n        attribute = this.attributes.uv;\n\n        if (attribute !== undefined) {\n          attribute.copyVector2sArray(geometry.uvs);\n          attribute.needsUpdate = true;\n        }\n\n        geometry.uvsNeedUpdate = false;\n      }\n\n      if (geometry.lineDistancesNeedUpdate) {\n        attribute = this.attributes.lineDistance;\n\n        if (attribute !== undefined) {\n          attribute.copyArray(geometry.lineDistances);\n          attribute.needsUpdate = true;\n        }\n\n        geometry.lineDistancesNeedUpdate = false;\n      }\n\n      if (geometry.groupsNeedUpdate) {\n        geometry.computeGroups(object.geometry);\n        this.groups = geometry.groups;\n        geometry.groupsNeedUpdate = false;\n      }\n\n      return this;\n    },\n    fromGeometry: function (geometry) {\n      geometry.__directGeometry = new THREE.DirectGeometry().fromGeometry(geometry);\n      return this.fromDirectGeometry(geometry.__directGeometry);\n    },\n    fromDirectGeometry: function (geometry) {\n      var positions = new Float32Array(geometry.vertices.length * 3);\n      this.addAttribute('position', new THREE.BufferAttribute(positions, 3).copyVector3sArray(geometry.vertices));\n\n      if (geometry.normals.length > 0) {\n        var normals = new Float32Array(geometry.normals.length * 3);\n        this.addAttribute('normal', new THREE.BufferAttribute(normals, 3).copyVector3sArray(geometry.normals));\n      }\n\n      if (geometry.colors.length > 0) {\n        var colors = new Float32Array(geometry.colors.length * 3);\n        this.addAttribute('color', new THREE.BufferAttribute(colors, 3).copyColorsArray(geometry.colors));\n      }\n\n      if (geometry.uvs.length > 0) {\n        var uvs = new Float32Array(geometry.uvs.length * 2);\n        this.addAttribute('uv', new THREE.BufferAttribute(uvs, 2).copyVector2sArray(geometry.uvs));\n      }\n\n      if (geometry.uvs2.length > 0) {\n        var uvs2 = new Float32Array(geometry.uvs2.length * 2);\n        this.addAttribute('uv2', new THREE.BufferAttribute(uvs2, 2).copyVector2sArray(geometry.uvs2));\n      }\n\n      if (geometry.indices.length > 0) {\n        var TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\n        var indices = new TypeArray(geometry.indices.length * 3);\n        this.setIndex(new THREE.BufferAttribute(indices, 1).copyIndicesArray(geometry.indices));\n      } // groups\n\n\n      this.groups = geometry.groups; // morphs\n\n      for (var name in geometry.morphTargets) {\n        var array = [];\n        var morphTargets = geometry.morphTargets[name];\n\n        for (var i = 0, l = morphTargets.length; i < l; i++) {\n          var morphTarget = morphTargets[i];\n          var attribute = new THREE.Float32Attribute(morphTarget.length * 3, 3);\n          array.push(attribute.copyVector3sArray(morphTarget));\n        }\n\n        this.morphAttributes[name] = array;\n      } // skinning\n\n\n      if (geometry.skinIndices.length > 0) {\n        var skinIndices = new THREE.Float32Attribute(geometry.skinIndices.length * 4, 4);\n        this.addAttribute('skinIndex', skinIndices.copyVector4sArray(geometry.skinIndices));\n      }\n\n      if (geometry.skinWeights.length > 0) {\n        var skinWeights = new THREE.Float32Attribute(geometry.skinWeights.length * 4, 4);\n        this.addAttribute('skinWeight', skinWeights.copyVector4sArray(geometry.skinWeights));\n      } //\n\n\n      if (geometry.boundingSphere !== null) {\n        this.boundingSphere = geometry.boundingSphere.clone();\n      }\n\n      if (geometry.boundingBox !== null) {\n        this.boundingBox = geometry.boundingBox.clone();\n      }\n\n      return this;\n    },\n    computeBoundingBox: function () {\n      if (this.boundingBox === null) {\n        this.boundingBox = new THREE.Box3();\n      }\n\n      var positions = this.attributes.position.array;\n\n      if (positions !== undefined) {\n        this.boundingBox.setFromArray(positions);\n      } else {\n        this.boundingBox.makeEmpty();\n      }\n\n      if (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) {\n        console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this);\n      }\n    },\n    computeBoundingSphere: function () {\n      var box = new THREE.Box3();\n      var vector = new THREE.Vector3();\n      return function computeBoundingSphere() {\n        if (this.boundingSphere === null) {\n          this.boundingSphere = new THREE.Sphere();\n        }\n\n        var positions = this.attributes.position;\n\n        if (positions) {\n          var array = positions.array;\n          var center = this.boundingSphere.center;\n          box.setFromArray(array);\n          box.center(center); // hoping to find a boundingSphere with a radius smaller than the\n          // boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n          var maxRadiusSq = 0;\n\n          for (var i = 0, il = array.length; i < il; i += 3) {\n            vector.fromArray(array, i);\n            maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(vector));\n          }\n\n          this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n          if (isNaN(this.boundingSphere.radius)) {\n            console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this);\n          }\n        }\n      };\n    }(),\n    computeFaceNormals: function () {// backwards compatibility\n    },\n    computeVertexNormals: function () {\n      var index = this.index;\n      var attributes = this.attributes;\n      var groups = this.groups;\n\n      if (attributes.position) {\n        var positions = attributes.position.array;\n\n        if (attributes.normal === undefined) {\n          this.addAttribute('normal', new THREE.BufferAttribute(new Float32Array(positions.length), 3));\n        } else {\n          // reset existing normals to zero\n          var array = attributes.normal.array;\n\n          for (var i = 0, il = array.length; i < il; i++) {\n            array[i] = 0;\n          }\n        }\n\n        var normals = attributes.normal.array;\n        var vA,\n            vB,\n            vC,\n            pA = new THREE.Vector3(),\n            pB = new THREE.Vector3(),\n            pC = new THREE.Vector3(),\n            cb = new THREE.Vector3(),\n            ab = new THREE.Vector3(); // indexed elements\n\n        if (index) {\n          var indices = index.array;\n\n          if (groups.length === 0) {\n            this.addGroup(0, indices.length);\n          }\n\n          for (var j = 0, jl = groups.length; j < jl; ++j) {\n            var group = groups[j];\n            var start = group.start;\n            var count = group.count;\n\n            for (var i = start, il = start + count; i < il; i += 3) {\n              vA = indices[i + 0] * 3;\n              vB = indices[i + 1] * 3;\n              vC = indices[i + 2] * 3;\n              pA.fromArray(positions, vA);\n              pB.fromArray(positions, vB);\n              pC.fromArray(positions, vC);\n              cb.subVectors(pC, pB);\n              ab.subVectors(pA, pB);\n              cb.cross(ab);\n              normals[vA] += cb.x;\n              normals[vA + 1] += cb.y;\n              normals[vA + 2] += cb.z;\n              normals[vB] += cb.x;\n              normals[vB + 1] += cb.y;\n              normals[vB + 2] += cb.z;\n              normals[vC] += cb.x;\n              normals[vC + 1] += cb.y;\n              normals[vC + 2] += cb.z;\n            }\n          }\n        } else {\n          // non-indexed elements (unconnected triangle soup)\n          for (var i = 0, il = positions.length; i < il; i += 9) {\n            pA.fromArray(positions, i);\n            pB.fromArray(positions, i + 3);\n            pC.fromArray(positions, i + 6);\n            cb.subVectors(pC, pB);\n            ab.subVectors(pA, pB);\n            cb.cross(ab);\n            normals[i] = cb.x;\n            normals[i + 1] = cb.y;\n            normals[i + 2] = cb.z;\n            normals[i + 3] = cb.x;\n            normals[i + 4] = cb.y;\n            normals[i + 5] = cb.z;\n            normals[i + 6] = cb.x;\n            normals[i + 7] = cb.y;\n            normals[i + 8] = cb.z;\n          }\n        }\n\n        this.normalizeNormals();\n        attributes.normal.needsUpdate = true;\n      }\n    },\n    merge: function (geometry, offset) {\n      if (geometry instanceof THREE.BufferGeometry === false) {\n        console.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry);\n        return;\n      }\n\n      if (offset === undefined) offset = 0;\n      var attributes = this.attributes;\n\n      for (var key in attributes) {\n        if (geometry.attributes[key] === undefined) continue;\n        var attribute1 = attributes[key];\n        var attributeArray1 = attribute1.array;\n        var attribute2 = geometry.attributes[key];\n        var attributeArray2 = attribute2.array;\n        var attributeSize = attribute2.itemSize;\n\n        for (var i = 0, j = attributeSize * offset; i < attributeArray2.length; i++, j++) {\n          attributeArray1[j] = attributeArray2[i];\n        }\n      }\n\n      return this;\n    },\n    normalizeNormals: function () {\n      var normals = this.attributes.normal.array;\n      var x, y, z, n;\n\n      for (var i = 0, il = normals.length; i < il; i += 3) {\n        x = normals[i];\n        y = normals[i + 1];\n        z = normals[i + 2];\n        n = 1.0 / Math.sqrt(x * x + y * y + z * z);\n        normals[i] *= n;\n        normals[i + 1] *= n;\n        normals[i + 2] *= n;\n      }\n    },\n    toNonIndexed: function () {\n      if (this.index === null) {\n        console.warn('THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.');\n        return this;\n      }\n\n      var geometry2 = new THREE.BufferGeometry();\n      var indices = this.index.array;\n      var attributes = this.attributes;\n\n      for (var name in attributes) {\n        var attribute = attributes[name];\n        var array = attribute.array;\n        var itemSize = attribute.itemSize;\n        var array2 = new array.constructor(indices.length * itemSize);\n        var index = 0,\n            index2 = 0;\n\n        for (var i = 0, l = indices.length; i < l; i++) {\n          index = indices[i] * itemSize;\n\n          for (var j = 0; j < itemSize; j++) {\n            array2[index2++] = array[index++];\n          }\n        }\n\n        geometry2.addAttribute(name, new THREE.BufferAttribute(array2, itemSize));\n      }\n\n      return geometry2;\n    },\n    toJSON: function () {\n      var data = {\n        metadata: {\n          version: 4.4,\n          type: 'BufferGeometry',\n          generator: 'BufferGeometry.toJSON'\n        }\n      }; // standard BufferGeometry serialization\n\n      data.uuid = this.uuid;\n      data.type = this.type;\n      if (this.name !== '') data.name = this.name;\n\n      if (this.parameters !== undefined) {\n        var parameters = this.parameters;\n\n        for (var key in parameters) {\n          if (parameters[key] !== undefined) data[key] = parameters[key];\n        }\n\n        return data;\n      }\n\n      data.data = {\n        attributes: {}\n      };\n      var index = this.index;\n\n      if (index !== null) {\n        var array = Array.prototype.slice.call(index.array);\n        data.data.index = {\n          type: index.array.constructor.name,\n          array: array\n        };\n      }\n\n      var attributes = this.attributes;\n\n      for (var key in attributes) {\n        var attribute = attributes[key];\n        var array = Array.prototype.slice.call(attribute.array);\n        data.data.attributes[key] = {\n          itemSize: attribute.itemSize,\n          type: attribute.array.constructor.name,\n          array: array,\n          normalized: attribute.normalized\n        };\n      }\n\n      var groups = this.groups;\n\n      if (groups.length > 0) {\n        data.data.groups = JSON.parse(JSON.stringify(groups));\n      }\n\n      var boundingSphere = this.boundingSphere;\n\n      if (boundingSphere !== null) {\n        data.data.boundingSphere = {\n          center: boundingSphere.center.toArray(),\n          radius: boundingSphere.radius\n        };\n      }\n\n      return data;\n    },\n    clone: function () {\n      /*\n      // Handle primitives\n      \tvar parameters = this.parameters;\n      \tif ( parameters !== undefined ) {\n      \t\tvar values = [];\n      \t\tfor ( var key in parameters ) {\n      \t\t\tvalues.push( parameters[ key ] );\n      \t\t}\n      \t\tvar geometry = Object.create( this.constructor.prototype );\n      \tthis.constructor.apply( geometry, values );\n      \treturn geometry;\n      \t}\n      \treturn new this.constructor().copy( this );\n      */\n      return new THREE.BufferGeometry().copy(this);\n    },\n    copy: function (source) {\n      var index = source.index;\n\n      if (index !== null) {\n        this.setIndex(index.clone());\n      }\n\n      var attributes = source.attributes;\n\n      for (var name in attributes) {\n        var attribute = attributes[name];\n        this.addAttribute(name, attribute.clone());\n      }\n\n      var groups = source.groups;\n\n      for (var i = 0, l = groups.length; i < l; i++) {\n        var group = groups[i];\n        this.addGroup(group.start, group.count, group.materialIndex);\n      }\n\n      return this;\n    },\n    dispose: function () {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  });\n  THREE.BufferGeometry.MaxIndex = 65535; // File:src/core/InstancedBufferGeometry.js\n\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   */\n\n  THREE.InstancedBufferGeometry = function () {\n    THREE.BufferGeometry.call(this);\n    this.type = 'InstancedBufferGeometry';\n    this.maxInstancedCount = undefined;\n  };\n\n  THREE.InstancedBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\n  THREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\n\n  THREE.InstancedBufferGeometry.prototype.addGroup = function (start, count, instances) {\n    this.groups.push({\n      start: start,\n      count: count,\n      instances: instances\n    });\n  };\n\n  THREE.InstancedBufferGeometry.prototype.copy = function (source) {\n    var index = source.index;\n\n    if (index !== null) {\n      this.setIndex(index.clone());\n    }\n\n    var attributes = source.attributes;\n\n    for (var name in attributes) {\n      var attribute = attributes[name];\n      this.addAttribute(name, attribute.clone());\n    }\n\n    var groups = source.groups;\n\n    for (var i = 0, l = groups.length; i < l; i++) {\n      var group = groups[i];\n      this.addGroup(group.start, group.count, group.instances);\n    }\n\n    return this;\n  }; // File:src/core/Uniform.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  THREE.Uniform = function (value) {\n    if (typeof value === 'string') {\n      console.warn('THREE.Uniform: Type parameter is no longer needed.');\n      value = arguments[1];\n    }\n\n    this.value = value;\n    this.dynamic = false;\n  };\n\n  THREE.Uniform.prototype = {\n    constructor: THREE.Uniform,\n    onUpdate: function (callback) {\n      this.dynamic = true;\n      this.onUpdateCallback = callback;\n      return this;\n    }\n  }; // File:src/animation/AnimationAction.js\n\n  /**\n   *\n   * Action provided by AnimationMixer for scheduling clip playback on specific\n   * objects.\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   *\n   */\n\n  THREE.AnimationAction = function () {\n    throw new Error(\"THREE.AnimationAction: \" + \"Use mixer.clipAction for construction.\");\n  };\n\n  THREE.AnimationAction._new = function AnimationAction(mixer, clip, localRoot) {\n    this._mixer = mixer;\n    this._clip = clip;\n    this._localRoot = localRoot || null;\n    var tracks = clip.tracks,\n        nTracks = tracks.length,\n        interpolants = new Array(nTracks);\n    var interpolantSettings = {\n      endingStart: THREE.ZeroCurvatureEnding,\n      endingEnd: THREE.ZeroCurvatureEnding\n    };\n\n    for (var i = 0; i !== nTracks; ++i) {\n      var interpolant = tracks[i].createInterpolant(null);\n      interpolants[i] = interpolant;\n      interpolant.settings = interpolantSettings;\n    }\n\n    this._interpolantSettings = interpolantSettings;\n    this._interpolants = interpolants; // bound by the mixer\n    // inside: PropertyMixer (managed by the mixer)\n\n    this._propertyBindings = new Array(nTracks);\n    this._cacheIndex = null; // for the memory manager\n\n    this._byClipCacheIndex = null; // for the memory manager\n\n    this._timeScaleInterpolant = null;\n    this._weightInterpolant = null;\n    this.loop = THREE.LoopRepeat;\n    this._loopCount = -1; // global mixer time when the action is to be started\n    // it's set back to 'null' upon start of the action\n\n    this._startTime = null; // scaled local time of the action\n    // gets clamped or wrapped to 0..clip.duration according to loop\n\n    this.time = 0;\n    this.timeScale = 1;\n    this._effectiveTimeScale = 1;\n    this.weight = 1;\n    this._effectiveWeight = 1;\n    this.repetitions = Infinity; // no. of repetitions when looping\n\n    this.paused = false; // false -> zero effective time scale\n\n    this.enabled = true; // true -> zero effective weight\n\n    this.clampWhenFinished = false; // keep feeding the last frame?\n\n    this.zeroSlopeAtStart = true; // for smooth interpolation w/o separate\n\n    this.zeroSlopeAtEnd = true; // clips for start, loop and end\n  };\n\n  THREE.AnimationAction._new.prototype = {\n    constructor: THREE.AnimationAction._new,\n    // State & Scheduling\n    play: function () {\n      this._mixer._activateAction(this);\n\n      return this;\n    },\n    stop: function () {\n      this._mixer._deactivateAction(this);\n\n      return this.reset();\n    },\n    reset: function () {\n      this.paused = false;\n      this.enabled = true;\n      this.time = 0; // restart clip\n\n      this._loopCount = -1; // forget previous loops\n\n      this._startTime = null; // forget scheduling\n\n      return this.stopFading().stopWarping();\n    },\n    isRunning: function () {\n      var start = this._startTime;\n      return this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);\n    },\n    // return true when play has been called\n    isScheduled: function () {\n      return this._mixer._isActiveAction(this);\n    },\n    startAt: function (time) {\n      this._startTime = time;\n      return this;\n    },\n    setLoop: function (mode, repetitions) {\n      this.loop = mode;\n      this.repetitions = repetitions;\n      return this;\n    },\n    // Weight\n    // set the weight stopping any scheduled fading\n    // although .enabled = false yields an effective weight of zero, this\n    // method does *not* change .enabled, because it would be confusing\n    setEffectiveWeight: function (weight) {\n      this.weight = weight; // note: same logic as when updated at runtime\n\n      this._effectiveWeight = this.enabled ? weight : 0;\n      return this.stopFading();\n    },\n    // return the weight considering fading and .enabled\n    getEffectiveWeight: function () {\n      return this._effectiveWeight;\n    },\n    fadeIn: function (duration) {\n      return this._scheduleFading(duration, 0, 1);\n    },\n    fadeOut: function (duration) {\n      return this._scheduleFading(duration, 1, 0);\n    },\n    crossFadeFrom: function (fadeOutAction, duration, warp) {\n      var mixer = this._mixer;\n      fadeOutAction.fadeOut(duration);\n      this.fadeIn(duration);\n\n      if (warp) {\n        var fadeInDuration = this._clip.duration,\n            fadeOutDuration = fadeOutAction._clip.duration,\n            startEndRatio = fadeOutDuration / fadeInDuration,\n            endStartRatio = fadeInDuration / fadeOutDuration;\n        fadeOutAction.warp(1.0, startEndRatio, duration);\n        this.warp(endStartRatio, 1.0, duration);\n      }\n\n      return this;\n    },\n    crossFadeTo: function (fadeInAction, duration, warp) {\n      return fadeInAction.crossFadeFrom(this, duration, warp);\n    },\n    stopFading: function () {\n      var weightInterpolant = this._weightInterpolant;\n\n      if (weightInterpolant !== null) {\n        this._weightInterpolant = null;\n\n        this._mixer._takeBackControlInterpolant(weightInterpolant);\n      }\n\n      return this;\n    },\n    // Time Scale Control\n    // set the weight stopping any scheduled warping\n    // although .paused = true yields an effective time scale of zero, this\n    // method does *not* change .paused, because it would be confusing\n    setEffectiveTimeScale: function (timeScale) {\n      this.timeScale = timeScale;\n      this._effectiveTimeScale = this.paused ? 0 : timeScale;\n      return this.stopWarping();\n    },\n    // return the time scale considering warping and .paused\n    getEffectiveTimeScale: function () {\n      return this._effectiveTimeScale;\n    },\n    setDuration: function (duration) {\n      this.timeScale = this._clip.duration / duration;\n      return this.stopWarping();\n    },\n    syncWith: function (action) {\n      this.time = action.time;\n      this.timeScale = action.timeScale;\n      return this.stopWarping();\n    },\n    halt: function (duration) {\n      return this.warp(this._effectiveTimeScale, 0, duration);\n    },\n    warp: function (startTimeScale, endTimeScale, duration) {\n      var mixer = this._mixer,\n          now = mixer.time,\n          interpolant = this._timeScaleInterpolant,\n          timeScale = this.timeScale;\n\n      if (interpolant === null) {\n        interpolant = mixer._lendControlInterpolant(), this._timeScaleInterpolant = interpolant;\n      }\n\n      var times = interpolant.parameterPositions,\n          values = interpolant.sampleValues;\n      times[0] = now;\n      times[1] = now + duration;\n      values[0] = startTimeScale / timeScale;\n      values[1] = endTimeScale / timeScale;\n      return this;\n    },\n    stopWarping: function () {\n      var timeScaleInterpolant = this._timeScaleInterpolant;\n\n      if (timeScaleInterpolant !== null) {\n        this._timeScaleInterpolant = null;\n\n        this._mixer._takeBackControlInterpolant(timeScaleInterpolant);\n      }\n\n      return this;\n    },\n    // Object Accessors\n    getMixer: function () {\n      return this._mixer;\n    },\n    getClip: function () {\n      return this._clip;\n    },\n    getRoot: function () {\n      return this._localRoot || this._mixer._root;\n    },\n    // Interna\n    _update: function (time, deltaTime, timeDirection, accuIndex) {\n      // called by the mixer\n      var startTime = this._startTime;\n\n      if (startTime !== null) {\n        // check for scheduled start of action\n        var timeRunning = (time - startTime) * timeDirection;\n\n        if (timeRunning < 0 || timeDirection === 0) {\n          return; // yet to come / don't decide when delta = 0\n        } // start\n\n\n        this._startTime = null; // unschedule\n\n        deltaTime = timeDirection * timeRunning;\n      } // apply time scale and advance time\n\n\n      deltaTime *= this._updateTimeScale(time);\n\n      var clipTime = this._updateTime(deltaTime); // note: _updateTime may disable the action resulting in\n      // an effective weight of 0\n\n\n      var weight = this._updateWeight(time);\n\n      if (weight > 0) {\n        var interpolants = this._interpolants;\n        var propertyMixers = this._propertyBindings;\n\n        for (var j = 0, m = interpolants.length; j !== m; ++j) {\n          interpolants[j].evaluate(clipTime);\n          propertyMixers[j].accumulate(accuIndex, weight);\n        }\n      }\n    },\n    _updateWeight: function (time) {\n      var weight = 0;\n\n      if (this.enabled) {\n        weight = this.weight;\n        var interpolant = this._weightInterpolant;\n\n        if (interpolant !== null) {\n          var interpolantValue = interpolant.evaluate(time)[0];\n          weight *= interpolantValue;\n\n          if (time > interpolant.parameterPositions[1]) {\n            this.stopFading();\n\n            if (interpolantValue === 0) {\n              // faded out, disable\n              this.enabled = false;\n            }\n          }\n        }\n      }\n\n      this._effectiveWeight = weight;\n      return weight;\n    },\n    _updateTimeScale: function (time) {\n      var timeScale = 0;\n\n      if (!this.paused) {\n        timeScale = this.timeScale;\n        var interpolant = this._timeScaleInterpolant;\n\n        if (interpolant !== null) {\n          var interpolantValue = interpolant.evaluate(time)[0];\n          timeScale *= interpolantValue;\n\n          if (time > interpolant.parameterPositions[1]) {\n            this.stopWarping();\n\n            if (timeScale === 0) {\n              // motion has halted, pause\n              this.paused = true;\n            } else {\n              // warp done - apply final time scale\n              this.timeScale = timeScale;\n            }\n          }\n        }\n      }\n\n      this._effectiveTimeScale = timeScale;\n      return timeScale;\n    },\n    _updateTime: function (deltaTime) {\n      var time = this.time + deltaTime;\n      if (deltaTime === 0) return time;\n      var duration = this._clip.duration,\n          loop = this.loop,\n          loopCount = this._loopCount;\n\n      if (loop === THREE.LoopOnce) {\n        if (loopCount === -1) {\n          // just started\n          this.loopCount = 0;\n\n          this._setEndings(true, true, false);\n        }\n\n        handle_stop: {\n          if (time >= duration) {\n            time = duration;\n          } else if (time < 0) {\n            time = 0;\n          } else break handle_stop;\n\n          if (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n\n          this._mixer.dispatchEvent({\n            type: 'finished',\n            action: this,\n            direction: deltaTime < 0 ? -1 : 1\n          });\n        }\n      } else {\n        // repetitive Repeat or PingPong\n        var pingPong = loop === THREE.LoopPingPong;\n\n        if (loopCount === -1) {\n          // just started\n          if (deltaTime >= 0) {\n            loopCount = 0;\n\n            this._setEndings(true, this.repetitions === 0, pingPong);\n          } else {\n            // when looping in reverse direction, the initial\n            // transition through zero counts as a repetition,\n            // so leave loopCount at -1\n            this._setEndings(this.repetitions === 0, true, pingPong);\n          }\n        }\n\n        if (time >= duration || time < 0) {\n          // wrap around\n          var loopDelta = Math.floor(time / duration); // signed\n\n          time -= duration * loopDelta;\n          loopCount += Math.abs(loopDelta);\n          var pending = this.repetitions - loopCount;\n\n          if (pending < 0) {\n            // have to stop (switch state, clamp time, fire event)\n            if (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n            time = deltaTime > 0 ? duration : 0;\n\n            this._mixer.dispatchEvent({\n              type: 'finished',\n              action: this,\n              direction: deltaTime > 0 ? 1 : -1\n            });\n          } else {\n            // keep running\n            if (pending === 0) {\n              // entering the last round\n              var atStart = deltaTime < 0;\n\n              this._setEndings(atStart, !atStart, pingPong);\n            } else {\n              this._setEndings(false, false, pingPong);\n            }\n\n            this._loopCount = loopCount;\n\n            this._mixer.dispatchEvent({\n              type: 'loop',\n              action: this,\n              loopDelta: loopDelta\n            });\n          }\n        }\n\n        if (pingPong && (loopCount & 1) === 1) {\n          // invert time for the \"pong round\"\n          this.time = time;\n          return duration - time;\n        }\n      }\n\n      this.time = time;\n      return time;\n    },\n    _setEndings: function (atStart, atEnd, pingPong) {\n      var settings = this._interpolantSettings;\n\n      if (pingPong) {\n        settings.endingStart = THREE.ZeroSlopeEnding;\n        settings.endingEnd = THREE.ZeroSlopeEnding;\n      } else {\n        // assuming for LoopOnce atStart == atEnd == true\n        if (atStart) {\n          settings.endingStart = this.zeroSlopeAtStart ? THREE.ZeroSlopeEnding : THREE.ZeroCurvatureEnding;\n        } else {\n          settings.endingStart = THREE.WrapAroundEnding;\n        }\n\n        if (atEnd) {\n          settings.endingEnd = this.zeroSlopeAtEnd ? THREE.ZeroSlopeEnding : THREE.ZeroCurvatureEnding;\n        } else {\n          settings.endingEnd = THREE.WrapAroundEnding;\n        }\n      }\n    },\n    _scheduleFading: function (duration, weightNow, weightThen) {\n      var mixer = this._mixer,\n          now = mixer.time,\n          interpolant = this._weightInterpolant;\n\n      if (interpolant === null) {\n        interpolant = mixer._lendControlInterpolant(), this._weightInterpolant = interpolant;\n      }\n\n      var times = interpolant.parameterPositions,\n          values = interpolant.sampleValues;\n      times[0] = now;\n      values[0] = weightNow;\n      times[1] = now + duration;\n      values[1] = weightThen;\n      return this;\n    }\n  }; // File:src/animation/AnimationClip.js\n\n  /**\n   *\n   * Reusable set of Tracks that represent an animation.\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   */\n\n  THREE.AnimationClip = function (name, duration, tracks) {\n    this.name = name;\n    this.tracks = tracks;\n    this.duration = duration !== undefined ? duration : -1;\n    this.uuid = THREE.Math.generateUUID(); // this means it should figure out its duration by scanning the tracks\n\n    if (this.duration < 0) {\n      this.resetDuration();\n    } // maybe only do these on demand, as doing them here could potentially slow down loading\n    // but leaving these here during development as this ensures a lot of testing of these functions\n\n\n    this.trim();\n    this.optimize();\n  };\n\n  THREE.AnimationClip.prototype = {\n    constructor: THREE.AnimationClip,\n    resetDuration: function () {\n      var tracks = this.tracks,\n          duration = 0;\n\n      for (var i = 0, n = tracks.length; i !== n; ++i) {\n        var track = this.tracks[i];\n        duration = Math.max(duration, track.times[track.times.length - 1]);\n      }\n\n      this.duration = duration;\n    },\n    trim: function () {\n      for (var i = 0; i < this.tracks.length; i++) {\n        this.tracks[i].trim(0, this.duration);\n      }\n\n      return this;\n    },\n    optimize: function () {\n      for (var i = 0; i < this.tracks.length; i++) {\n        this.tracks[i].optimize();\n      }\n\n      return this;\n    }\n  }; // Static methods:\n\n  Object.assign(THREE.AnimationClip, {\n    parse: function (json) {\n      var tracks = [],\n          jsonTracks = json.tracks,\n          frameTime = 1.0 / (json.fps || 1.0);\n\n      for (var i = 0, n = jsonTracks.length; i !== n; ++i) {\n        tracks.push(THREE.KeyframeTrack.parse(jsonTracks[i]).scale(frameTime));\n      }\n\n      return new THREE.AnimationClip(json.name, json.duration, tracks);\n    },\n    toJSON: function (clip) {\n      var tracks = [],\n          clipTracks = clip.tracks;\n      var json = {\n        'name': clip.name,\n        'duration': clip.duration,\n        'tracks': tracks\n      };\n\n      for (var i = 0, n = clipTracks.length; i !== n; ++i) {\n        tracks.push(THREE.KeyframeTrack.toJSON(clipTracks[i]));\n      }\n\n      return json;\n    },\n    CreateFromMorphTargetSequence: function (name, morphTargetSequence, fps, noLoop) {\n      var numMorphTargets = morphTargetSequence.length;\n      var tracks = [];\n\n      for (var i = 0; i < numMorphTargets; i++) {\n        var times = [];\n        var values = [];\n        times.push((i + numMorphTargets - 1) % numMorphTargets, i, (i + 1) % numMorphTargets);\n        values.push(0, 1, 0);\n        var order = THREE.AnimationUtils.getKeyframeOrder(times);\n        times = THREE.AnimationUtils.sortedArray(times, 1, order);\n        values = THREE.AnimationUtils.sortedArray(values, 1, order); // if there is a key at the first frame, duplicate it as the\n        // last frame as well for perfect loop.\n\n        if (!noLoop && times[0] === 0) {\n          times.push(numMorphTargets);\n          values.push(values[0]);\n        }\n\n        tracks.push(new THREE.NumberKeyframeTrack('.morphTargetInfluences[' + morphTargetSequence[i].name + ']', times, values).scale(1.0 / fps));\n      }\n\n      return new THREE.AnimationClip(name, -1, tracks);\n    },\n    findByName: function (objectOrClipArray, name) {\n      var clipArray = objectOrClipArray;\n\n      if (!Array.isArray(objectOrClipArray)) {\n        var o = objectOrClipArray;\n        clipArray = o.geometry && o.geometry.animations || o.animations;\n      }\n\n      for (var i = 0; i < clipArray.length; i++) {\n        if (clipArray[i].name === name) {\n          return clipArray[i];\n        }\n      }\n\n      return null;\n    },\n    CreateClipsFromMorphTargetSequences: function (morphTargets, fps, noLoop) {\n      var animationToMorphTargets = {}; // tested with https://regex101.com/ on trick sequences\n      // such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\n      var pattern = /^([\\w-]*?)([\\d]+)$/; // sort morph target names into animation groups based\n      // patterns like Walk_001, Walk_002, Run_001, Run_002\n\n      for (var i = 0, il = morphTargets.length; i < il; i++) {\n        var morphTarget = morphTargets[i];\n        var parts = morphTarget.name.match(pattern);\n\n        if (parts && parts.length > 1) {\n          var name = parts[1];\n          var animationMorphTargets = animationToMorphTargets[name];\n\n          if (!animationMorphTargets) {\n            animationToMorphTargets[name] = animationMorphTargets = [];\n          }\n\n          animationMorphTargets.push(morphTarget);\n        }\n      }\n\n      var clips = [];\n\n      for (var name in animationToMorphTargets) {\n        clips.push(THREE.AnimationClip.CreateFromMorphTargetSequence(name, animationToMorphTargets[name], fps, noLoop));\n      }\n\n      return clips;\n    },\n    // parse the animation.hierarchy format\n    parseAnimation: function (animation, bones, nodeName) {\n      if (!animation) {\n        console.error(\"  no animation in JSONLoader data\");\n        return null;\n      }\n\n      var addNonemptyTrack = function (trackType, trackName, animationKeys, propertyName, destTracks) {\n        // only return track if there are actually keys.\n        if (animationKeys.length !== 0) {\n          var times = [];\n          var values = [];\n          THREE.AnimationUtils.flattenJSON(animationKeys, times, values, propertyName); // empty keys are filtered out, so check again\n\n          if (times.length !== 0) {\n            destTracks.push(new trackType(trackName, times, values));\n          }\n        }\n      };\n\n      var tracks = [];\n      var clipName = animation.name || 'default'; // automatic length determination in AnimationClip.\n\n      var duration = animation.length || -1;\n      var fps = animation.fps || 30;\n      var hierarchyTracks = animation.hierarchy || [];\n\n      for (var h = 0; h < hierarchyTracks.length; h++) {\n        var animationKeys = hierarchyTracks[h].keys; // skip empty tracks\n\n        if (!animationKeys || animationKeys.length === 0) continue; // process morph targets in a way exactly compatible\n        // with AnimationHandler.init( animation )\n\n        if (animationKeys[0].morphTargets) {\n          // figure out all morph targets used in this track\n          var morphTargetNames = {};\n\n          for (var k = 0; k < animationKeys.length; k++) {\n            if (animationKeys[k].morphTargets) {\n              for (var m = 0; m < animationKeys[k].morphTargets.length; m++) {\n                morphTargetNames[animationKeys[k].morphTargets[m]] = -1;\n              }\n            }\n          } // create a track for each morph target with all zero\n          // morphTargetInfluences except for the keys in which\n          // the morphTarget is named.\n\n\n          for (var morphTargetName in morphTargetNames) {\n            var times = [];\n            var values = [];\n\n            for (var m = 0; m !== animationKeys[k].morphTargets.length; ++m) {\n              var animationKey = animationKeys[k];\n              times.push(animationKey.time);\n              values.push(animationKey.morphTarget === morphTargetName ? 1 : 0);\n            }\n\n            tracks.push(new THREE.NumberKeyframeTrack('.morphTargetInfluence[' + morphTargetName + ']', times, values));\n          }\n\n          duration = morphTargetNames.length * (fps || 1.0);\n        } else {\n          // ...assume skeletal animation\n          var boneName = '.bones[' + bones[h].name + ']';\n          addNonemptyTrack(THREE.VectorKeyframeTrack, boneName + '.position', animationKeys, 'pos', tracks);\n          addNonemptyTrack(THREE.QuaternionKeyframeTrack, boneName + '.quaternion', animationKeys, 'rot', tracks);\n          addNonemptyTrack(THREE.VectorKeyframeTrack, boneName + '.scale', animationKeys, 'scl', tracks);\n        }\n      }\n\n      if (tracks.length === 0) {\n        return null;\n      }\n\n      var clip = new THREE.AnimationClip(clipName, duration, tracks);\n      return clip;\n    }\n  }); // File:src/animation/AnimationMixer.js\n\n  /**\n   *\n   * Player for AnimationClips.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  THREE.AnimationMixer = function (root) {\n    this._root = root;\n\n    this._initMemoryManager();\n\n    this._accuIndex = 0;\n    this.time = 0;\n    this.timeScale = 1.0;\n  };\n\n  Object.assign(THREE.AnimationMixer.prototype, THREE.EventDispatcher.prototype, {\n    // return an action for a clip optionally using a custom root target\n    // object (this method allocates a lot of dynamic memory in case a\n    // previously unknown clip/root combination is specified)\n    clipAction: function (clip, optionalRoot) {\n      var root = optionalRoot || this._root,\n          rootUuid = root.uuid,\n          clipObject = typeof clip === 'string' ? THREE.AnimationClip.findByName(root, clip) : clip,\n          clipUuid = clipObject !== null ? clipObject.uuid : clip,\n          actionsForClip = this._actionsByClip[clipUuid],\n          prototypeAction = null;\n\n      if (actionsForClip !== undefined) {\n        var existingAction = actionsForClip.actionByRoot[rootUuid];\n\n        if (existingAction !== undefined) {\n          return existingAction;\n        } // we know the clip, so we don't have to parse all\n        // the bindings again but can just copy\n\n\n        prototypeAction = actionsForClip.knownActions[0]; // also, take the clip from the prototype action\n\n        if (clipObject === null) clipObject = prototypeAction._clip;\n      } // clip must be known when specified via string\n\n\n      if (clipObject === null) return null; // allocate all resources required to run it\n\n      var newAction = new THREE.AnimationMixer._Action(this, clipObject, optionalRoot);\n\n      this._bindAction(newAction, prototypeAction); // and make the action known to the memory manager\n\n\n      this._addInactiveAction(newAction, clipUuid, rootUuid);\n\n      return newAction;\n    },\n    // get an existing action\n    existingAction: function (clip, optionalRoot) {\n      var root = optionalRoot || this._root,\n          rootUuid = root.uuid,\n          clipObject = typeof clip === 'string' ? THREE.AnimationClip.findByName(root, clip) : clip,\n          clipUuid = clipObject ? clipObject.uuid : clip,\n          actionsForClip = this._actionsByClip[clipUuid];\n\n      if (actionsForClip !== undefined) {\n        return actionsForClip.actionByRoot[rootUuid] || null;\n      }\n\n      return null;\n    },\n    // deactivates all previously scheduled actions\n    stopAllAction: function () {\n      var actions = this._actions,\n          nActions = this._nActiveActions,\n          bindings = this._bindings,\n          nBindings = this._nActiveBindings;\n      this._nActiveActions = 0;\n      this._nActiveBindings = 0;\n\n      for (var i = 0; i !== nActions; ++i) {\n        actions[i].reset();\n      }\n\n      for (var i = 0; i !== nBindings; ++i) {\n        bindings[i].useCount = 0;\n      }\n\n      return this;\n    },\n    // advance the time and update apply the animation\n    update: function (deltaTime) {\n      deltaTime *= this.timeScale;\n      var actions = this._actions,\n          nActions = this._nActiveActions,\n          time = this.time += deltaTime,\n          timeDirection = Math.sign(deltaTime),\n          accuIndex = this._accuIndex ^= 1; // run active actions\n\n      for (var i = 0; i !== nActions; ++i) {\n        var action = actions[i];\n\n        if (action.enabled) {\n          action._update(time, deltaTime, timeDirection, accuIndex);\n        }\n      } // update scene graph\n\n\n      var bindings = this._bindings,\n          nBindings = this._nActiveBindings;\n\n      for (var i = 0; i !== nBindings; ++i) {\n        bindings[i].apply(accuIndex);\n      }\n\n      return this;\n    },\n    // return this mixer's root target object\n    getRoot: function () {\n      return this._root;\n    },\n    // free all resources specific to a particular clip\n    uncacheClip: function (clip) {\n      var actions = this._actions,\n          clipUuid = clip.uuid,\n          actionsByClip = this._actionsByClip,\n          actionsForClip = actionsByClip[clipUuid];\n\n      if (actionsForClip !== undefined) {\n        // note: just calling _removeInactiveAction would mess up the\n        // iteration state and also require updating the state we can\n        // just throw away\n        var actionsToRemove = actionsForClip.knownActions;\n\n        for (var i = 0, n = actionsToRemove.length; i !== n; ++i) {\n          var action = actionsToRemove[i];\n\n          this._deactivateAction(action);\n\n          var cacheIndex = action._cacheIndex,\n              lastInactiveAction = actions[actions.length - 1];\n          action._cacheIndex = null;\n          action._byClipCacheIndex = null;\n          lastInactiveAction._cacheIndex = cacheIndex;\n          actions[cacheIndex] = lastInactiveAction;\n          actions.pop();\n\n          this._removeInactiveBindingsForAction(action);\n        }\n\n        delete actionsByClip[clipUuid];\n      }\n    },\n    // free all resources specific to a particular root target object\n    uncacheRoot: function (root) {\n      var rootUuid = root.uuid,\n          actionsByClip = this._actionsByClip;\n\n      for (var clipUuid in actionsByClip) {\n        var actionByRoot = actionsByClip[clipUuid].actionByRoot,\n            action = actionByRoot[rootUuid];\n\n        if (action !== undefined) {\n          this._deactivateAction(action);\n\n          this._removeInactiveAction(action);\n        }\n      }\n\n      var bindingsByRoot = this._bindingsByRootAndName,\n          bindingByName = bindingsByRoot[rootUuid];\n\n      if (bindingByName !== undefined) {\n        for (var trackName in bindingByName) {\n          var binding = bindingByName[trackName];\n          binding.restoreOriginalState();\n\n          this._removeInactiveBinding(binding);\n        }\n      }\n    },\n    // remove a targeted clip from the cache\n    uncacheAction: function (clip, optionalRoot) {\n      var action = this.existingAction(clip, optionalRoot);\n\n      if (action !== null) {\n        this._deactivateAction(action);\n\n        this._removeInactiveAction(action);\n      }\n    }\n  });\n  THREE.AnimationMixer._Action = THREE.AnimationAction._new; // Implementation details:\n\n  Object.assign(THREE.AnimationMixer.prototype, {\n    _bindAction: function (action, prototypeAction) {\n      var root = action._localRoot || this._root,\n          tracks = action._clip.tracks,\n          nTracks = tracks.length,\n          bindings = action._propertyBindings,\n          interpolants = action._interpolants,\n          rootUuid = root.uuid,\n          bindingsByRoot = this._bindingsByRootAndName,\n          bindingsByName = bindingsByRoot[rootUuid];\n\n      if (bindingsByName === undefined) {\n        bindingsByName = {};\n        bindingsByRoot[rootUuid] = bindingsByName;\n      }\n\n      for (var i = 0; i !== nTracks; ++i) {\n        var track = tracks[i],\n            trackName = track.name,\n            binding = bindingsByName[trackName];\n\n        if (binding !== undefined) {\n          bindings[i] = binding;\n        } else {\n          binding = bindings[i];\n\n          if (binding !== undefined) {\n            // existing binding, make sure the cache knows\n            if (binding._cacheIndex === null) {\n              ++binding.referenceCount;\n\n              this._addInactiveBinding(binding, rootUuid, trackName);\n            }\n\n            continue;\n          }\n\n          var path = prototypeAction && prototypeAction._propertyBindings[i].binding.parsedPath;\n          binding = new THREE.PropertyMixer(THREE.PropertyBinding.create(root, trackName, path), track.ValueTypeName, track.getValueSize());\n          ++binding.referenceCount;\n\n          this._addInactiveBinding(binding, rootUuid, trackName);\n\n          bindings[i] = binding;\n        }\n\n        interpolants[i].resultBuffer = binding.buffer;\n      }\n    },\n    _activateAction: function (action) {\n      if (!this._isActiveAction(action)) {\n        if (action._cacheIndex === null) {\n          // this action has been forgotten by the cache, but the user\n          // appears to be still using it -> rebind\n          var rootUuid = (action._localRoot || this._root).uuid,\n              clipUuid = action._clip.uuid,\n              actionsForClip = this._actionsByClip[clipUuid];\n\n          this._bindAction(action, actionsForClip && actionsForClip.knownActions[0]);\n\n          this._addInactiveAction(action, clipUuid, rootUuid);\n        }\n\n        var bindings = action._propertyBindings; // increment reference counts / sort out state\n\n        for (var i = 0, n = bindings.length; i !== n; ++i) {\n          var binding = bindings[i];\n\n          if (binding.useCount++ === 0) {\n            this._lendBinding(binding);\n\n            binding.saveOriginalState();\n          }\n        }\n\n        this._lendAction(action);\n      }\n    },\n    _deactivateAction: function (action) {\n      if (this._isActiveAction(action)) {\n        var bindings = action._propertyBindings; // decrement reference counts / sort out state\n\n        for (var i = 0, n = bindings.length; i !== n; ++i) {\n          var binding = bindings[i];\n\n          if (--binding.useCount === 0) {\n            binding.restoreOriginalState();\n\n            this._takeBackBinding(binding);\n          }\n        }\n\n        this._takeBackAction(action);\n      }\n    },\n    // Memory manager\n    _initMemoryManager: function () {\n      this._actions = []; // 'nActiveActions' followed by inactive ones\n\n      this._nActiveActions = 0;\n      this._actionsByClip = {}; // inside:\n      // {\n      // \t\tknownActions: Array< _Action >\t- used as prototypes\n      // \t\tactionByRoot: _Action\t\t\t- lookup\n      // }\n\n      this._bindings = []; // 'nActiveBindings' followed by inactive ones\n\n      this._nActiveBindings = 0;\n      this._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n      this._controlInterpolants = []; // same game as above\n\n      this._nActiveControlInterpolants = 0;\n      var scope = this;\n      this.stats = {\n        actions: {\n          get total() {\n            return scope._actions.length;\n          },\n\n          get inUse() {\n            return scope._nActiveActions;\n          }\n\n        },\n        bindings: {\n          get total() {\n            return scope._bindings.length;\n          },\n\n          get inUse() {\n            return scope._nActiveBindings;\n          }\n\n        },\n        controlInterpolants: {\n          get total() {\n            return scope._controlInterpolants.length;\n          },\n\n          get inUse() {\n            return scope._nActiveControlInterpolants;\n          }\n\n        }\n      };\n    },\n    // Memory management for _Action objects\n    _isActiveAction: function (action) {\n      var index = action._cacheIndex;\n      return index !== null && index < this._nActiveActions;\n    },\n    _addInactiveAction: function (action, clipUuid, rootUuid) {\n      var actions = this._actions,\n          actionsByClip = this._actionsByClip,\n          actionsForClip = actionsByClip[clipUuid];\n\n      if (actionsForClip === undefined) {\n        actionsForClip = {\n          knownActions: [action],\n          actionByRoot: {}\n        };\n        action._byClipCacheIndex = 0;\n        actionsByClip[clipUuid] = actionsForClip;\n      } else {\n        var knownActions = actionsForClip.knownActions;\n        action._byClipCacheIndex = knownActions.length;\n        knownActions.push(action);\n      }\n\n      action._cacheIndex = actions.length;\n      actions.push(action);\n      actionsForClip.actionByRoot[rootUuid] = action;\n    },\n    _removeInactiveAction: function (action) {\n      var actions = this._actions,\n          lastInactiveAction = actions[actions.length - 1],\n          cacheIndex = action._cacheIndex;\n      lastInactiveAction._cacheIndex = cacheIndex;\n      actions[cacheIndex] = lastInactiveAction;\n      actions.pop();\n      action._cacheIndex = null;\n      var clipUuid = action._clip.uuid,\n          actionsByClip = this._actionsByClip,\n          actionsForClip = actionsByClip[clipUuid],\n          knownActionsForClip = actionsForClip.knownActions,\n          lastKnownAction = knownActionsForClip[knownActionsForClip.length - 1],\n          byClipCacheIndex = action._byClipCacheIndex;\n      lastKnownAction._byClipCacheIndex = byClipCacheIndex;\n      knownActionsForClip[byClipCacheIndex] = lastKnownAction;\n      knownActionsForClip.pop();\n      action._byClipCacheIndex = null;\n      var actionByRoot = actionsForClip.actionByRoot,\n          rootUuid = (actions._localRoot || this._root).uuid;\n      delete actionByRoot[rootUuid];\n\n      if (knownActionsForClip.length === 0) {\n        delete actionsByClip[clipUuid];\n      }\n\n      this._removeInactiveBindingsForAction(action);\n    },\n    _removeInactiveBindingsForAction: function (action) {\n      var bindings = action._propertyBindings;\n\n      for (var i = 0, n = bindings.length; i !== n; ++i) {\n        var binding = bindings[i];\n\n        if (--binding.referenceCount === 0) {\n          this._removeInactiveBinding(binding);\n        }\n      }\n    },\n    _lendAction: function (action) {\n      // [ active actions |  inactive actions  ]\n      // [  active actions >| inactive actions ]\n      //                 s        a\n      //                  <-swap->\n      //                 a        s\n      var actions = this._actions,\n          prevIndex = action._cacheIndex,\n          lastActiveIndex = this._nActiveActions++,\n          firstInactiveAction = actions[lastActiveIndex];\n      action._cacheIndex = lastActiveIndex;\n      actions[lastActiveIndex] = action;\n      firstInactiveAction._cacheIndex = prevIndex;\n      actions[prevIndex] = firstInactiveAction;\n    },\n    _takeBackAction: function (action) {\n      // [  active actions  | inactive actions ]\n      // [ active actions |< inactive actions  ]\n      //        a        s\n      //         <-swap->\n      //        s        a\n      var actions = this._actions,\n          prevIndex = action._cacheIndex,\n          firstInactiveIndex = --this._nActiveActions,\n          lastActiveAction = actions[firstInactiveIndex];\n      action._cacheIndex = firstInactiveIndex;\n      actions[firstInactiveIndex] = action;\n      lastActiveAction._cacheIndex = prevIndex;\n      actions[prevIndex] = lastActiveAction;\n    },\n    // Memory management for PropertyMixer objects\n    _addInactiveBinding: function (binding, rootUuid, trackName) {\n      var bindingsByRoot = this._bindingsByRootAndName,\n          bindingByName = bindingsByRoot[rootUuid],\n          bindings = this._bindings;\n\n      if (bindingByName === undefined) {\n        bindingByName = {};\n        bindingsByRoot[rootUuid] = bindingByName;\n      }\n\n      bindingByName[trackName] = binding;\n      binding._cacheIndex = bindings.length;\n      bindings.push(binding);\n    },\n    _removeInactiveBinding: function (binding) {\n      var bindings = this._bindings,\n          propBinding = binding.binding,\n          rootUuid = propBinding.rootNode.uuid,\n          trackName = propBinding.path,\n          bindingsByRoot = this._bindingsByRootAndName,\n          bindingByName = bindingsByRoot[rootUuid],\n          lastInactiveBinding = bindings[bindings.length - 1],\n          cacheIndex = binding._cacheIndex;\n      lastInactiveBinding._cacheIndex = cacheIndex;\n      bindings[cacheIndex] = lastInactiveBinding;\n      bindings.pop();\n      delete bindingByName[trackName];\n\n      remove_empty_map: {\n        for (var _ in bindingByName) break remove_empty_map;\n\n        delete bindingsByRoot[rootUuid];\n      }\n    },\n    _lendBinding: function (binding) {\n      var bindings = this._bindings,\n          prevIndex = binding._cacheIndex,\n          lastActiveIndex = this._nActiveBindings++,\n          firstInactiveBinding = bindings[lastActiveIndex];\n      binding._cacheIndex = lastActiveIndex;\n      bindings[lastActiveIndex] = binding;\n      firstInactiveBinding._cacheIndex = prevIndex;\n      bindings[prevIndex] = firstInactiveBinding;\n    },\n    _takeBackBinding: function (binding) {\n      var bindings = this._bindings,\n          prevIndex = binding._cacheIndex,\n          firstInactiveIndex = --this._nActiveBindings,\n          lastActiveBinding = bindings[firstInactiveIndex];\n      binding._cacheIndex = firstInactiveIndex;\n      bindings[firstInactiveIndex] = binding;\n      lastActiveBinding._cacheIndex = prevIndex;\n      bindings[prevIndex] = lastActiveBinding;\n    },\n    // Memory management of Interpolants for weight and time scale\n    _lendControlInterpolant: function () {\n      var interpolants = this._controlInterpolants,\n          lastActiveIndex = this._nActiveControlInterpolants++,\n          interpolant = interpolants[lastActiveIndex];\n\n      if (interpolant === undefined) {\n        interpolant = new THREE.LinearInterpolant(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer);\n        interpolant.__cacheIndex = lastActiveIndex;\n        interpolants[lastActiveIndex] = interpolant;\n      }\n\n      return interpolant;\n    },\n    _takeBackControlInterpolant: function (interpolant) {\n      var interpolants = this._controlInterpolants,\n          prevIndex = interpolant.__cacheIndex,\n          firstInactiveIndex = --this._nActiveControlInterpolants,\n          lastActiveInterpolant = interpolants[firstInactiveIndex];\n      interpolant.__cacheIndex = firstInactiveIndex;\n      interpolants[firstInactiveIndex] = interpolant;\n      lastActiveInterpolant.__cacheIndex = prevIndex;\n      interpolants[prevIndex] = lastActiveInterpolant;\n    },\n    _controlInterpolantsResultBuffer: new Float32Array(1)\n  }); // File:src/animation/AnimationObjectGroup.js\n\n  /**\n   *\n   * A group of objects that receives a shared animation state.\n   *\n   * Usage:\n   *\n   * \t-\tAdd objects you would otherwise pass as 'root' to the\n   * \t\tconstructor or the .clipAction method of AnimationMixer.\n   *\n   * \t-\tInstead pass this object as 'root'.\n   *\n   * \t-\tYou can also add and remove objects later when the mixer\n   * \t\tis running.\n   *\n   * Note:\n   *\n   *  \tObjects of this class appear as one object to the mixer,\n   *  \tso cache control of the individual objects must be done\n   *  \ton the group.\n   *\n   * Limitation:\n   *\n   * \t- \tThe animated properties must be compatible among the\n   * \t\tall objects in the group.\n   *\n   *  -\tA single property can either be controlled through a\n   *  \ttarget group or directly, but not both.\n   *\n   * @author tschw\n   */\n\n  THREE.AnimationObjectGroup = function (var_args) {\n    this.uuid = THREE.Math.generateUUID(); // cached objects followed by the active ones\n\n    this._objects = Array.prototype.slice.call(arguments);\n    this.nCachedObjects_ = 0; // threshold\n    // note: read by PropertyBinding.Composite\n\n    var indices = {};\n    this._indicesByUUID = indices; // for bookkeeping\n\n    for (var i = 0, n = arguments.length; i !== n; ++i) {\n      indices[arguments[i].uuid] = i;\n    }\n\n    this._paths = []; // inside: string\n\n    this._parsedPaths = []; // inside: { we don't care, here }\n\n    this._bindings = []; // inside: Array< PropertyBinding >\n\n    this._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n    var scope = this;\n    this.stats = {\n      objects: {\n        get total() {\n          return scope._objects.length;\n        },\n\n        get inUse() {\n          return this.total - scope.nCachedObjects_;\n        }\n\n      },\n\n      get bindingsPerObject() {\n        return scope._bindings.length;\n      }\n\n    };\n  };\n\n  THREE.AnimationObjectGroup.prototype = {\n    constructor: THREE.AnimationObjectGroup,\n    add: function (var_args) {\n      var objects = this._objects,\n          nObjects = objects.length,\n          nCachedObjects = this.nCachedObjects_,\n          indicesByUUID = this._indicesByUUID,\n          paths = this._paths,\n          parsedPaths = this._parsedPaths,\n          bindings = this._bindings,\n          nBindings = bindings.length;\n\n      for (var i = 0, n = arguments.length; i !== n; ++i) {\n        var object = arguments[i],\n            uuid = object.uuid,\n            index = indicesByUUID[uuid];\n\n        if (index === undefined) {\n          // unknown object -> add it to the ACTIVE region\n          index = nObjects++;\n          indicesByUUID[uuid] = index;\n          objects.push(object); // accounting is done, now do the same for all bindings\n\n          for (var j = 0, m = nBindings; j !== m; ++j) {\n            bindings[j].push(new THREE.PropertyBinding(object, paths[j], parsedPaths[j]));\n          }\n        } else if (index < nCachedObjects) {\n          var knownObject = objects[index]; // move existing object to the ACTIVE region\n\n          var firstActiveIndex = --nCachedObjects,\n              lastCachedObject = objects[firstActiveIndex];\n          indicesByUUID[lastCachedObject.uuid] = index;\n          objects[index] = lastCachedObject;\n          indicesByUUID[uuid] = firstActiveIndex;\n          objects[firstActiveIndex] = object; // accounting is done, now do the same for all bindings\n\n          for (var j = 0, m = nBindings; j !== m; ++j) {\n            var bindingsForPath = bindings[j],\n                lastCached = bindingsForPath[firstActiveIndex],\n                binding = bindingsForPath[index];\n            bindingsForPath[index] = lastCached;\n\n            if (binding === undefined) {\n              // since we do not bother to create new bindings\n              // for objects that are cached, the binding may\n              // or may not exist\n              binding = new THREE.PropertyBinding(object, paths[j], parsedPaths[j]);\n            }\n\n            bindingsForPath[firstActiveIndex] = binding;\n          }\n        } else if (objects[index] !== knownObject) {\n          console.error(\"Different objects with the same UUID \" + \"detected. Clean the caches or recreate your \" + \"infrastructure when reloading scenes...\");\n        } // else the object is already where we want it to be\n\n      } // for arguments\n\n\n      this.nCachedObjects_ = nCachedObjects;\n    },\n    remove: function (var_args) {\n      var objects = this._objects,\n          nObjects = objects.length,\n          nCachedObjects = this.nCachedObjects_,\n          indicesByUUID = this._indicesByUUID,\n          bindings = this._bindings,\n          nBindings = bindings.length;\n\n      for (var i = 0, n = arguments.length; i !== n; ++i) {\n        var object = arguments[i],\n            uuid = object.uuid,\n            index = indicesByUUID[uuid];\n\n        if (index !== undefined && index >= nCachedObjects) {\n          // move existing object into the CACHED region\n          var lastCachedIndex = nCachedObjects++,\n              firstActiveObject = objects[lastCachedIndex];\n          indicesByUUID[firstActiveObject.uuid] = index;\n          objects[index] = firstActiveObject;\n          indicesByUUID[uuid] = lastCachedIndex;\n          objects[lastCachedIndex] = object; // accounting is done, now do the same for all bindings\n\n          for (var j = 0, m = nBindings; j !== m; ++j) {\n            var bindingsForPath = bindings[j],\n                firstActive = bindingsForPath[lastCachedIndex],\n                binding = bindingsForPath[index];\n            bindingsForPath[index] = firstActive;\n            bindingsForPath[lastCachedIndex] = binding;\n          }\n        }\n      } // for arguments\n\n\n      this.nCachedObjects_ = nCachedObjects;\n    },\n    // remove & forget\n    uncache: function (var_args) {\n      var objects = this._objects,\n          nObjects = objects.length,\n          nCachedObjects = this.nCachedObjects_,\n          indicesByUUID = this._indicesByUUID,\n          bindings = this._bindings,\n          nBindings = bindings.length;\n\n      for (var i = 0, n = arguments.length; i !== n; ++i) {\n        var object = arguments[i],\n            uuid = object.uuid,\n            index = indicesByUUID[uuid];\n\n        if (index !== undefined) {\n          delete indicesByUUID[uuid];\n\n          if (index < nCachedObjects) {\n            // object is cached, shrink the CACHED region\n            var firstActiveIndex = --nCachedObjects,\n                lastCachedObject = objects[firstActiveIndex],\n                lastIndex = --nObjects,\n                lastObject = objects[lastIndex]; // last cached object takes this object's place\n\n            indicesByUUID[lastCachedObject.uuid] = index;\n            objects[index] = lastCachedObject; // last object goes to the activated slot and pop\n\n            indicesByUUID[lastObject.uuid] = firstActiveIndex;\n            objects[firstActiveIndex] = lastObject;\n            objects.pop(); // accounting is done, now do the same for all bindings\n\n            for (var j = 0, m = nBindings; j !== m; ++j) {\n              var bindingsForPath = bindings[j],\n                  lastCached = bindingsForPath[firstActiveIndex],\n                  last = bindingsForPath[lastIndex];\n              bindingsForPath[index] = lastCached;\n              bindingsForPath[firstActiveIndex] = last;\n              bindingsForPath.pop();\n            }\n          } else {\n            // object is active, just swap with the last and pop\n            var lastIndex = --nObjects,\n                lastObject = objects[lastIndex];\n            indicesByUUID[lastObject.uuid] = index;\n            objects[index] = lastObject;\n            objects.pop(); // accounting is done, now do the same for all bindings\n\n            for (var j = 0, m = nBindings; j !== m; ++j) {\n              var bindingsForPath = bindings[j];\n              bindingsForPath[index] = bindingsForPath[lastIndex];\n              bindingsForPath.pop();\n            }\n          } // cached or active\n\n        } // if object is known\n\n      } // for arguments\n\n\n      this.nCachedObjects_ = nCachedObjects;\n    },\n    // Internal interface used by befriended PropertyBinding.Composite:\n    subscribe_: function (path, parsedPath) {\n      // returns an array of bindings for the given path that is changed\n      // according to the contained objects in the group\n      var indicesByPath = this._bindingsIndicesByPath,\n          index = indicesByPath[path],\n          bindings = this._bindings;\n      if (index !== undefined) return bindings[index];\n      var paths = this._paths,\n          parsedPaths = this._parsedPaths,\n          objects = this._objects,\n          nObjects = objects.length,\n          nCachedObjects = this.nCachedObjects_,\n          bindingsForPath = new Array(nObjects);\n      index = bindings.length;\n      indicesByPath[path] = index;\n      paths.push(path);\n      parsedPaths.push(parsedPath);\n      bindings.push(bindingsForPath);\n\n      for (var i = nCachedObjects, n = objects.length; i !== n; ++i) {\n        var object = objects[i];\n        bindingsForPath[i] = new THREE.PropertyBinding(object, path, parsedPath);\n      }\n\n      return bindingsForPath;\n    },\n    unsubscribe_: function (path) {\n      // tells the group to forget about a property path and no longer\n      // update the array previously obtained with 'subscribe_'\n      var indicesByPath = this._bindingsIndicesByPath,\n          index = indicesByPath[path];\n\n      if (index !== undefined) {\n        var paths = this._paths,\n            parsedPaths = this._parsedPaths,\n            bindings = this._bindings,\n            lastBindingsIndex = bindings.length - 1,\n            lastBindings = bindings[lastBindingsIndex],\n            lastBindingsPath = path[lastBindingsIndex];\n        indicesByPath[lastBindingsPath] = index;\n        bindings[index] = lastBindings;\n        bindings.pop();\n        parsedPaths[index] = parsedPaths[lastBindingsIndex];\n        parsedPaths.pop();\n        paths[index] = paths[lastBindingsIndex];\n        paths.pop();\n      }\n    }\n  }; // File:src/animation/AnimationUtils.js\n\n  /**\n   * @author tschw\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   */\n\n  THREE.AnimationUtils = {\n    // same as Array.prototype.slice, but also works on typed arrays\n    arraySlice: function (array, from, to) {\n      if (THREE.AnimationUtils.isTypedArray(array)) {\n        return new array.constructor(array.subarray(from, to));\n      }\n\n      return array.slice(from, to);\n    },\n    // converts an array to a specific type\n    convertArray: function (array, type, forceClone) {\n      if (!array || // let 'undefined' and 'null' pass\n      !forceClone && array.constructor === type) return array;\n\n      if (typeof type.BYTES_PER_ELEMENT === 'number') {\n        return new type(array); // create typed array\n      }\n\n      return Array.prototype.slice.call(array); // create Array\n    },\n    isTypedArray: function (object) {\n      return ArrayBuffer.isView(object) && !(object instanceof DataView);\n    },\n    // returns an array by which times and values can be sorted\n    getKeyframeOrder: function (times) {\n      function compareTime(i, j) {\n        return times[i] - times[j];\n      }\n\n      var n = times.length;\n      var result = new Array(n);\n\n      for (var i = 0; i !== n; ++i) result[i] = i;\n\n      result.sort(compareTime);\n      return result;\n    },\n    // uses the array previously returned by 'getKeyframeOrder' to sort data\n    sortedArray: function (values, stride, order) {\n      var nValues = values.length;\n      var result = new values.constructor(nValues);\n\n      for (var i = 0, dstOffset = 0; dstOffset !== nValues; ++i) {\n        var srcOffset = order[i] * stride;\n\n        for (var j = 0; j !== stride; ++j) {\n          result[dstOffset++] = values[srcOffset + j];\n        }\n      }\n\n      return result;\n    },\n    // function for parsing AOS keyframe formats\n    flattenJSON: function (jsonKeys, times, values, valuePropertyName) {\n      var i = 1,\n          key = jsonKeys[0];\n\n      while (key !== undefined && key[valuePropertyName] === undefined) {\n        key = jsonKeys[i++];\n      }\n\n      if (key === undefined) return; // no data\n\n      var value = key[valuePropertyName];\n      if (value === undefined) return; // no data\n\n      if (Array.isArray(value)) {\n        do {\n          value = key[valuePropertyName];\n\n          if (value !== undefined) {\n            times.push(key.time);\n            values.push.apply(values, value); // push all elements\n          }\n\n          key = jsonKeys[i++];\n        } while (key !== undefined);\n      } else if (value.toArray !== undefined) {\n        // ...assume THREE.Math-ish\n        do {\n          value = key[valuePropertyName];\n\n          if (value !== undefined) {\n            times.push(key.time);\n            value.toArray(values, values.length);\n          }\n\n          key = jsonKeys[i++];\n        } while (key !== undefined);\n      } else {\n        // otherwise push as-is\n        do {\n          value = key[valuePropertyName];\n\n          if (value !== undefined) {\n            times.push(key.time);\n            values.push(value);\n          }\n\n          key = jsonKeys[i++];\n        } while (key !== undefined);\n      }\n    }\n  }; // File:src/animation/KeyframeTrack.js\n\n  /**\n   *\n   * A timed sequence of keyframes for a specific property.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  THREE.KeyframeTrack = function (name, times, values, interpolation) {\n    if (name === undefined) throw new Error(\"track name is undefined\");\n\n    if (times === undefined || times.length === 0) {\n      throw new Error(\"no keyframes in track named \" + name);\n    }\n\n    this.name = name;\n    this.times = THREE.AnimationUtils.convertArray(times, this.TimeBufferType);\n    this.values = THREE.AnimationUtils.convertArray(values, this.ValueBufferType);\n    this.setInterpolation(interpolation || this.DefaultInterpolation);\n    this.validate();\n    this.optimize();\n  };\n\n  THREE.KeyframeTrack.prototype = {\n    constructor: THREE.KeyframeTrack,\n    TimeBufferType: Float32Array,\n    ValueBufferType: Float32Array,\n    DefaultInterpolation: THREE.InterpolateLinear,\n    InterpolantFactoryMethodDiscrete: function (result) {\n      return new THREE.DiscreteInterpolant(this.times, this.values, this.getValueSize(), result);\n    },\n    InterpolantFactoryMethodLinear: function (result) {\n      return new THREE.LinearInterpolant(this.times, this.values, this.getValueSize(), result);\n    },\n    InterpolantFactoryMethodSmooth: function (result) {\n      return new THREE.CubicInterpolant(this.times, this.values, this.getValueSize(), result);\n    },\n    setInterpolation: function (interpolation) {\n      var factoryMethod;\n\n      switch (interpolation) {\n        case THREE.InterpolateDiscrete:\n          factoryMethod = this.InterpolantFactoryMethodDiscrete;\n          break;\n\n        case THREE.InterpolateLinear:\n          factoryMethod = this.InterpolantFactoryMethodLinear;\n          break;\n\n        case THREE.InterpolateSmooth:\n          factoryMethod = this.InterpolantFactoryMethodSmooth;\n          break;\n      }\n\n      if (factoryMethod === undefined) {\n        var message = \"unsupported interpolation for \" + this.ValueTypeName + \" keyframe track named \" + this.name;\n\n        if (this.createInterpolant === undefined) {\n          // fall back to default, unless the default itself is messed up\n          if (interpolation !== this.DefaultInterpolation) {\n            this.setInterpolation(this.DefaultInterpolation);\n          } else {\n            throw new Error(message); // fatal, in this case\n          }\n        }\n\n        console.warn(message);\n        return;\n      }\n\n      this.createInterpolant = factoryMethod;\n    },\n    getInterpolation: function () {\n      switch (this.createInterpolant) {\n        case this.InterpolantFactoryMethodDiscrete:\n          return THREE.InterpolateDiscrete;\n\n        case this.InterpolantFactoryMethodLinear:\n          return THREE.InterpolateLinear;\n\n        case this.InterpolantFactoryMethodSmooth:\n          return THREE.InterpolateSmooth;\n      }\n    },\n    getValueSize: function () {\n      return this.values.length / this.times.length;\n    },\n    // move all keyframes either forwards or backwards in time\n    shift: function (timeOffset) {\n      if (timeOffset !== 0.0) {\n        var times = this.times;\n\n        for (var i = 0, n = times.length; i !== n; ++i) {\n          times[i] += timeOffset;\n        }\n      }\n\n      return this;\n    },\n    // scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n    scale: function (timeScale) {\n      if (timeScale !== 1.0) {\n        var times = this.times;\n\n        for (var i = 0, n = times.length; i !== n; ++i) {\n          times[i] *= timeScale;\n        }\n      }\n\n      return this;\n    },\n    // removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n    // IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n    trim: function (startTime, endTime) {\n      var times = this.times,\n          nKeys = times.length,\n          from = 0,\n          to = nKeys - 1;\n\n      while (from !== nKeys && times[from] < startTime) ++from;\n\n      while (to !== -1 && times[to] > endTime) --to;\n\n      ++to; // inclusive -> exclusive bound\n\n      if (from !== 0 || to !== nKeys) {\n        // empty tracks are forbidden, so keep at least one keyframe\n        if (from >= to) to = Math.max(to, 1), from = to - 1;\n        var stride = this.getValueSize();\n        this.times = THREE.AnimationUtils.arraySlice(times, from, to);\n        this.values = THREE.AnimationUtils.arraySlice(this.values, from * stride, to * stride);\n      }\n\n      return this;\n    },\n    // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n    validate: function () {\n      var valid = true;\n      var valueSize = this.getValueSize();\n\n      if (valueSize - Math.floor(valueSize) !== 0) {\n        console.error(\"invalid value size in track\", this);\n        valid = false;\n      }\n\n      var times = this.times,\n          values = this.values,\n          nKeys = times.length;\n\n      if (nKeys === 0) {\n        console.error(\"track is empty\", this);\n        valid = false;\n      }\n\n      var prevTime = null;\n\n      for (var i = 0; i !== nKeys; i++) {\n        var currTime = times[i];\n\n        if (typeof currTime === 'number' && isNaN(currTime)) {\n          console.error(\"time is not a valid number\", this, i, currTime);\n          valid = false;\n          break;\n        }\n\n        if (prevTime !== null && prevTime > currTime) {\n          console.error(\"out of order keys\", this, i, currTime, prevTime);\n          valid = false;\n          break;\n        }\n\n        prevTime = currTime;\n      }\n\n      if (values !== undefined) {\n        if (THREE.AnimationUtils.isTypedArray(values)) {\n          for (var i = 0, n = values.length; i !== n; ++i) {\n            var value = values[i];\n\n            if (isNaN(value)) {\n              console.error(\"value is not a valid number\", this, i, value);\n              valid = false;\n              break;\n            }\n          }\n        }\n      }\n\n      return valid;\n    },\n    // removes equivalent sequential keys as common in morph target sequences\n    // (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n    optimize: function () {\n      var times = this.times,\n          values = this.values,\n          stride = this.getValueSize(),\n          writeIndex = 1;\n\n      for (var i = 1, n = times.length - 1; i <= n; ++i) {\n        var keep = false;\n        var time = times[i];\n        var timeNext = times[i + 1]; // remove adjacent keyframes scheduled at the same time\n\n        if (time !== timeNext && (i !== 1 || time !== time[0])) {\n          // remove unnecessary keyframes same as their neighbors\n          var offset = i * stride,\n              offsetP = offset - stride,\n              offsetN = offset + stride;\n\n          for (var j = 0; j !== stride; ++j) {\n            var value = values[offset + j];\n\n            if (value !== values[offsetP + j] || value !== values[offsetN + j]) {\n              keep = true;\n              break;\n            }\n          }\n        } // in-place compaction\n\n\n        if (keep) {\n          if (i !== writeIndex) {\n            times[writeIndex] = times[i];\n            var readOffset = i * stride,\n                writeOffset = writeIndex * stride;\n\n            for (var j = 0; j !== stride; ++j) {\n              values[writeOffset + j] = values[readOffset + j];\n            }\n          }\n\n          ++writeIndex;\n        }\n      }\n\n      if (writeIndex !== times.length) {\n        this.times = THREE.AnimationUtils.arraySlice(times, 0, writeIndex);\n        this.values = THREE.AnimationUtils.arraySlice(values, 0, writeIndex * stride);\n      }\n\n      return this;\n    }\n  }; // Static methods:\n\n  Object.assign(THREE.KeyframeTrack, {\n    // Serialization (in static context, because of constructor invocation\n    // and automatic invocation of .toJSON):\n    parse: function (json) {\n      if (json.type === undefined) {\n        throw new Error(\"track type undefined, can not parse\");\n      }\n\n      var trackType = THREE.KeyframeTrack._getTrackTypeForValueTypeName(json.type);\n\n      if (json.times === undefined) {\n        var times = [],\n            values = [];\n        THREE.AnimationUtils.flattenJSON(json.keys, times, values, 'value');\n        json.times = times;\n        json.values = values;\n      } // derived classes can define a static parse method\n\n\n      if (trackType.parse !== undefined) {\n        return trackType.parse(json);\n      } else {\n        // by default, we asssume a constructor compatible with the base\n        return new trackType(json.name, json.times, json.values, json.interpolation);\n      }\n    },\n    toJSON: function (track) {\n      var trackType = track.constructor;\n      var json; // derived classes can define a static toJSON method\n\n      if (trackType.toJSON !== undefined) {\n        json = trackType.toJSON(track);\n      } else {\n        // by default, we assume the data can be serialized as-is\n        json = {\n          'name': track.name,\n          'times': THREE.AnimationUtils.convertArray(track.times, Array),\n          'values': THREE.AnimationUtils.convertArray(track.values, Array)\n        };\n        var interpolation = track.getInterpolation();\n\n        if (interpolation !== track.DefaultInterpolation) {\n          json.interpolation = interpolation;\n        }\n      }\n\n      json.type = track.ValueTypeName; // mandatory\n\n      return json;\n    },\n    _getTrackTypeForValueTypeName: function (typeName) {\n      switch (typeName.toLowerCase()) {\n        case \"scalar\":\n        case \"double\":\n        case \"float\":\n        case \"number\":\n        case \"integer\":\n          return THREE.NumberKeyframeTrack;\n\n        case \"vector\":\n        case \"vector2\":\n        case \"vector3\":\n        case \"vector4\":\n          return THREE.VectorKeyframeTrack;\n\n        case \"color\":\n          return THREE.ColorKeyframeTrack;\n\n        case \"quaternion\":\n          return THREE.QuaternionKeyframeTrack;\n\n        case \"bool\":\n        case \"boolean\":\n          return THREE.BooleanKeyframeTrack;\n\n        case \"string\":\n          return THREE.StringKeyframeTrack;\n      }\n\n      throw new Error(\"Unsupported typeName: \" + typeName);\n    }\n  }); // File:src/animation/PropertyBinding.js\n\n  /**\n   *\n   * A reference to a real property in the scene graph.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  THREE.PropertyBinding = function (rootNode, path, parsedPath) {\n    this.path = path;\n    this.parsedPath = parsedPath || THREE.PropertyBinding.parseTrackName(path);\n    this.node = THREE.PropertyBinding.findNode(rootNode, this.parsedPath.nodeName) || rootNode;\n    this.rootNode = rootNode;\n  };\n\n  THREE.PropertyBinding.prototype = {\n    constructor: THREE.PropertyBinding,\n    getValue: function getValue_unbound(targetArray, offset) {\n      this.bind();\n      this.getValue(targetArray, offset); // Note: This class uses a State pattern on a per-method basis:\n      // 'bind' sets 'this.getValue' / 'setValue' and shadows the\n      // prototype version of these methods with one that represents\n      // the bound state. When the property is not found, the methods\n      // become no-ops.\n    },\n    setValue: function getValue_unbound(sourceArray, offset) {\n      this.bind();\n      this.setValue(sourceArray, offset);\n    },\n    // create getter / setter pair for a property in the scene graph\n    bind: function () {\n      var targetObject = this.node,\n          parsedPath = this.parsedPath,\n          objectName = parsedPath.objectName,\n          propertyName = parsedPath.propertyName,\n          propertyIndex = parsedPath.propertyIndex;\n\n      if (!targetObject) {\n        targetObject = THREE.PropertyBinding.findNode(this.rootNode, parsedPath.nodeName) || this.rootNode;\n        this.node = targetObject;\n      } // set fail state so we can just 'return' on error\n\n\n      this.getValue = this._getValue_unavailable;\n      this.setValue = this._setValue_unavailable; // ensure there is a value node\n\n      if (!targetObject) {\n        console.error(\"  trying to update node for track: \" + this.path + \" but it wasn't found.\");\n        return;\n      }\n\n      if (objectName) {\n        var objectIndex = parsedPath.objectIndex; // special cases were we need to reach deeper into the hierarchy to get the face materials....\n\n        switch (objectName) {\n          case 'materials':\n            if (!targetObject.material) {\n              console.error('  can not bind to material as node does not have a material', this);\n              return;\n            }\n\n            if (!targetObject.material.materials) {\n              console.error('  can not bind to material.materials as node.material does not have a materials array', this);\n              return;\n            }\n\n            targetObject = targetObject.material.materials;\n            break;\n\n          case 'bones':\n            if (!targetObject.skeleton) {\n              console.error('  can not bind to bones as node does not have a skeleton', this);\n              return;\n            } // potential future optimization: skip this if propertyIndex is already an integer\n            // and convert the integer string to a true integer.\n\n\n            targetObject = targetObject.skeleton.bones; // support resolving morphTarget names into indices.\n\n            for (var i = 0; i < targetObject.length; i++) {\n              if (targetObject[i].name === objectIndex) {\n                objectIndex = i;\n                break;\n              }\n            }\n\n            break;\n\n          default:\n            if (targetObject[objectName] === undefined) {\n              console.error('  can not bind to objectName of node, undefined', this);\n              return;\n            }\n\n            targetObject = targetObject[objectName];\n        }\n\n        if (objectIndex !== undefined) {\n          if (targetObject[objectIndex] === undefined) {\n            console.error(\"  trying to bind to objectIndex of objectName, but is undefined:\", this, targetObject);\n            return;\n          }\n\n          targetObject = targetObject[objectIndex];\n        }\n      } // resolve property\n\n\n      var nodeProperty = targetObject[propertyName];\n\n      if (nodeProperty === undefined) {\n        var nodeName = parsedPath.nodeName;\n        console.error(\"  trying to update property for track: \" + nodeName + '.' + propertyName + \" but it wasn't found.\", targetObject);\n        return;\n      } // determine versioning scheme\n\n\n      var versioning = this.Versioning.None;\n\n      if (targetObject.needsUpdate !== undefined) {\n        // material\n        versioning = this.Versioning.NeedsUpdate;\n        this.targetObject = targetObject;\n      } else if (targetObject.matrixWorldNeedsUpdate !== undefined) {\n        // node transform\n        versioning = this.Versioning.MatrixWorldNeedsUpdate;\n        this.targetObject = targetObject;\n      } // determine how the property gets bound\n\n\n      var bindingType = this.BindingType.Direct;\n\n      if (propertyIndex !== undefined) {\n        // access a sub element of the property array (only primitives are supported right now)\n        if (propertyName === \"morphTargetInfluences\") {\n          // potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n          // support resolving morphTarget names into indices.\n          if (!targetObject.geometry) {\n            console.error('  can not bind to morphTargetInfluences becasuse node does not have a geometry', this);\n            return;\n          }\n\n          if (!targetObject.geometry.morphTargets) {\n            console.error('  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets', this);\n            return;\n          }\n\n          for (var i = 0; i < this.node.geometry.morphTargets.length; i++) {\n            if (targetObject.geometry.morphTargets[i].name === propertyIndex) {\n              propertyIndex = i;\n              break;\n            }\n          }\n        }\n\n        bindingType = this.BindingType.ArrayElement;\n        this.resolvedProperty = nodeProperty;\n        this.propertyIndex = propertyIndex;\n      } else if (nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined) {\n        // must use copy for Object3D.Euler/Quaternion\n        bindingType = this.BindingType.HasFromToArray;\n        this.resolvedProperty = nodeProperty;\n      } else if (nodeProperty.length !== undefined) {\n        bindingType = this.BindingType.EntireArray;\n        this.resolvedProperty = nodeProperty;\n      } else {\n        this.propertyName = propertyName;\n      } // select getter / setter\n\n\n      this.getValue = this.GetterByBindingType[bindingType];\n      this.setValue = this.SetterByBindingTypeAndVersioning[bindingType][versioning];\n    },\n    unbind: function () {\n      this.node = null; // back to the prototype version of getValue / setValue\n      // note: avoiding to mutate the shape of 'this' via 'delete'\n\n      this.getValue = this._getValue_unbound;\n      this.setValue = this._setValue_unbound;\n    }\n  };\n  Object.assign(THREE.PropertyBinding.prototype, {\n    // prototype, continued\n    // these are used to \"bind\" a nonexistent property\n    _getValue_unavailable: function () {},\n    _setValue_unavailable: function () {},\n    // initial state of these methods that calls 'bind'\n    _getValue_unbound: THREE.PropertyBinding.prototype.getValue,\n    _setValue_unbound: THREE.PropertyBinding.prototype.setValue,\n    BindingType: {\n      Direct: 0,\n      EntireArray: 1,\n      ArrayElement: 2,\n      HasFromToArray: 3\n    },\n    Versioning: {\n      None: 0,\n      NeedsUpdate: 1,\n      MatrixWorldNeedsUpdate: 2\n    },\n    GetterByBindingType: [function getValue_direct(buffer, offset) {\n      buffer[offset] = this.node[this.propertyName];\n    }, function getValue_array(buffer, offset) {\n      var source = this.resolvedProperty;\n\n      for (var i = 0, n = source.length; i !== n; ++i) {\n        buffer[offset++] = source[i];\n      }\n    }, function getValue_arrayElement(buffer, offset) {\n      buffer[offset] = this.resolvedProperty[this.propertyIndex];\n    }, function getValue_toArray(buffer, offset) {\n      this.resolvedProperty.toArray(buffer, offset);\n    }],\n    SetterByBindingTypeAndVersioning: [[// Direct\n    function setValue_direct(buffer, offset) {\n      this.node[this.propertyName] = buffer[offset];\n    }, function setValue_direct_setNeedsUpdate(buffer, offset) {\n      this.node[this.propertyName] = buffer[offset];\n      this.targetObject.needsUpdate = true;\n    }, function setValue_direct_setMatrixWorldNeedsUpdate(buffer, offset) {\n      this.node[this.propertyName] = buffer[offset];\n      this.targetObject.matrixWorldNeedsUpdate = true;\n    }], [// EntireArray\n    function setValue_array(buffer, offset) {\n      var dest = this.resolvedProperty;\n\n      for (var i = 0, n = dest.length; i !== n; ++i) {\n        dest[i] = buffer[offset++];\n      }\n    }, function setValue_array_setNeedsUpdate(buffer, offset) {\n      var dest = this.resolvedProperty;\n\n      for (var i = 0, n = dest.length; i !== n; ++i) {\n        dest[i] = buffer[offset++];\n      }\n\n      this.targetObject.needsUpdate = true;\n    }, function setValue_array_setMatrixWorldNeedsUpdate(buffer, offset) {\n      var dest = this.resolvedProperty;\n\n      for (var i = 0, n = dest.length; i !== n; ++i) {\n        dest[i] = buffer[offset++];\n      }\n\n      this.targetObject.matrixWorldNeedsUpdate = true;\n    }], [// ArrayElement\n    function setValue_arrayElement(buffer, offset) {\n      this.resolvedProperty[this.propertyIndex] = buffer[offset];\n    }, function setValue_arrayElement_setNeedsUpdate(buffer, offset) {\n      this.resolvedProperty[this.propertyIndex] = buffer[offset];\n      this.targetObject.needsUpdate = true;\n    }, function setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer, offset) {\n      this.resolvedProperty[this.propertyIndex] = buffer[offset];\n      this.targetObject.matrixWorldNeedsUpdate = true;\n    }], [// HasToFromArray\n    function setValue_fromArray(buffer, offset) {\n      this.resolvedProperty.fromArray(buffer, offset);\n    }, function setValue_fromArray_setNeedsUpdate(buffer, offset) {\n      this.resolvedProperty.fromArray(buffer, offset);\n      this.targetObject.needsUpdate = true;\n    }, function setValue_fromArray_setMatrixWorldNeedsUpdate(buffer, offset) {\n      this.resolvedProperty.fromArray(buffer, offset);\n      this.targetObject.matrixWorldNeedsUpdate = true;\n    }]]\n  });\n\n  THREE.PropertyBinding.Composite = function (targetGroup, path, optionalParsedPath) {\n    var parsedPath = optionalParsedPath || THREE.PropertyBinding.parseTrackName(path);\n    this._targetGroup = targetGroup;\n    this._bindings = targetGroup.subscribe_(path, parsedPath);\n  };\n\n  THREE.PropertyBinding.Composite.prototype = {\n    constructor: THREE.PropertyBinding.Composite,\n    getValue: function (array, offset) {\n      this.bind(); // bind all binding\n\n      var firstValidIndex = this._targetGroup.nCachedObjects_,\n          binding = this._bindings[firstValidIndex]; // and only call .getValue on the first\n\n      if (binding !== undefined) binding.getValue(array, offset);\n    },\n    setValue: function (array, offset) {\n      var bindings = this._bindings;\n\n      for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n        bindings[i].setValue(array, offset);\n      }\n    },\n    bind: function () {\n      var bindings = this._bindings;\n\n      for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n        bindings[i].bind();\n      }\n    },\n    unbind: function () {\n      var bindings = this._bindings;\n\n      for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n        bindings[i].unbind();\n      }\n    }\n  };\n\n  THREE.PropertyBinding.create = function (root, path, parsedPath) {\n    if (!(root instanceof THREE.AnimationObjectGroup)) {\n      return new THREE.PropertyBinding(root, path, parsedPath);\n    } else {\n      return new THREE.PropertyBinding.Composite(root, path, parsedPath);\n    }\n  };\n\n  THREE.PropertyBinding.parseTrackName = function (trackName) {\n    // matches strings in the form of:\n    //    nodeName.property\n    //    nodeName.property[accessor]\n    //    nodeName.material.property[accessor]\n    //    uuid.property[accessor]\n    //    uuid.objectName[objectIndex].propertyName[propertyIndex]\n    //    parentName/nodeName.property\n    //    parentName/parentName/nodeName.property[index]\n    //\t  .bone[Armature.DEF_cog].position\n    // created and tested via https://regex101.com/#javascript\n    var re = /^(([\\w]+\\/)*)([\\w-\\d]+)?(\\.([\\w]+)(\\[([\\w\\d\\[\\]\\_.:\\- ]+)\\])?)?(\\.([\\w.]+)(\\[([\\w\\d\\[\\]\\_. ]+)\\])?)$/;\n    var matches = re.exec(trackName);\n\n    if (!matches) {\n      throw new Error(\"cannot parse trackName at all: \" + trackName);\n    }\n\n    if (matches.index === re.lastIndex) {\n      re.lastIndex++;\n    }\n\n    var results = {\n      // directoryName: matches[ 1 ], // (tschw) currently unused\n      nodeName: matches[3],\n      // allowed to be null, specified root node.\n      objectName: matches[5],\n      objectIndex: matches[7],\n      propertyName: matches[9],\n      propertyIndex: matches[11] // allowed to be null, specifies that the whole property is set.\n\n    };\n\n    if (results.propertyName === null || results.propertyName.length === 0) {\n      throw new Error(\"can not parse propertyName from trackName: \" + trackName);\n    }\n\n    return results;\n  };\n\n  THREE.PropertyBinding.findNode = function (root, nodeName) {\n    if (!nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === -1 || nodeName === root.name || nodeName === root.uuid) {\n      return root;\n    } // search into skeleton bones.\n\n\n    if (root.skeleton) {\n      var searchSkeleton = function (skeleton) {\n        for (var i = 0; i < skeleton.bones.length; i++) {\n          var bone = skeleton.bones[i];\n\n          if (bone.name === nodeName) {\n            return bone;\n          }\n        }\n\n        return null;\n      };\n\n      var bone = searchSkeleton(root.skeleton);\n\n      if (bone) {\n        return bone;\n      }\n    } // search into node subtree.\n\n\n    if (root.children) {\n      var searchNodeSubtree = function (children) {\n        for (var i = 0; i < children.length; i++) {\n          var childNode = children[i];\n\n          if (childNode.name === nodeName || childNode.uuid === nodeName) {\n            return childNode;\n          }\n\n          var result = searchNodeSubtree(childNode.children);\n          if (result) return result;\n        }\n\n        return null;\n      };\n\n      var subTreeNode = searchNodeSubtree(root.children);\n\n      if (subTreeNode) {\n        return subTreeNode;\n      }\n    }\n\n    return null;\n  }; // File:src/animation/PropertyMixer.js\n\n  /**\n   *\n   * Buffered scene graph property that allows weighted accumulation.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n\n  THREE.PropertyMixer = function (binding, typeName, valueSize) {\n    this.binding = binding;\n    this.valueSize = valueSize;\n    var bufferType = Float64Array,\n        mixFunction;\n\n    switch (typeName) {\n      case 'quaternion':\n        mixFunction = this._slerp;\n        break;\n\n      case 'string':\n      case 'bool':\n        bufferType = Array, mixFunction = this._select;\n        break;\n\n      default:\n        mixFunction = this._lerp;\n    }\n\n    this.buffer = new bufferType(valueSize * 4); // layout: [ incoming | accu0 | accu1 | orig ]\n    //\n    // interpolators can use .buffer as their .result\n    // the data then goes to 'incoming'\n    //\n    // 'accu0' and 'accu1' are used frame-interleaved for\n    // the cumulative result and are compared to detect\n    // changes\n    //\n    // 'orig' stores the original state of the property\n\n    this._mixBufferRegion = mixFunction;\n    this.cumulativeWeight = 0;\n    this.useCount = 0;\n    this.referenceCount = 0;\n  };\n\n  THREE.PropertyMixer.prototype = {\n    constructor: THREE.PropertyMixer,\n    // accumulate data in the 'incoming' region into 'accu<i>'\n    accumulate: function (accuIndex, weight) {\n      // note: happily accumulating nothing when weight = 0, the caller knows\n      // the weight and shouldn't have made the call in the first place\n      var buffer = this.buffer,\n          stride = this.valueSize,\n          offset = accuIndex * stride + stride,\n          currentWeight = this.cumulativeWeight;\n\n      if (currentWeight === 0) {\n        // accuN := incoming * weight\n        for (var i = 0; i !== stride; ++i) {\n          buffer[offset + i] = buffer[i];\n        }\n\n        currentWeight = weight;\n      } else {\n        // accuN := accuN + incoming * weight\n        currentWeight += weight;\n        var mix = weight / currentWeight;\n\n        this._mixBufferRegion(buffer, offset, 0, mix, stride);\n      }\n\n      this.cumulativeWeight = currentWeight;\n    },\n    // apply the state of 'accu<i>' to the binding when accus differ\n    apply: function (accuIndex) {\n      var stride = this.valueSize,\n          buffer = this.buffer,\n          offset = accuIndex * stride + stride,\n          weight = this.cumulativeWeight,\n          binding = this.binding;\n      this.cumulativeWeight = 0;\n\n      if (weight < 1) {\n        // accuN := accuN + original * ( 1 - cumulativeWeight )\n        var originalValueOffset = stride * 3;\n\n        this._mixBufferRegion(buffer, offset, originalValueOffset, 1 - weight, stride);\n      }\n\n      for (var i = stride, e = stride + stride; i !== e; ++i) {\n        if (buffer[i] !== buffer[i + stride]) {\n          // value has changed -> update scene graph\n          binding.setValue(buffer, offset);\n          break;\n        }\n      }\n    },\n    // remember the state of the bound property and copy it to both accus\n    saveOriginalState: function () {\n      var binding = this.binding;\n      var buffer = this.buffer,\n          stride = this.valueSize,\n          originalValueOffset = stride * 3;\n      binding.getValue(buffer, originalValueOffset); // accu[0..1] := orig -- initially detect changes against the original\n\n      for (var i = stride, e = originalValueOffset; i !== e; ++i) {\n        buffer[i] = buffer[originalValueOffset + i % stride];\n      }\n\n      this.cumulativeWeight = 0;\n    },\n    // apply the state previously taken via 'saveOriginalState' to the binding\n    restoreOriginalState: function () {\n      var originalValueOffset = this.valueSize * 3;\n      this.binding.setValue(this.buffer, originalValueOffset);\n    },\n    // mix functions\n    _select: function (buffer, dstOffset, srcOffset, t, stride) {\n      if (t >= 0.5) {\n        for (var i = 0; i !== stride; ++i) {\n          buffer[dstOffset + i] = buffer[srcOffset + i];\n        }\n      }\n    },\n    _slerp: function (buffer, dstOffset, srcOffset, t, stride) {\n      THREE.Quaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t);\n    },\n    _lerp: function (buffer, dstOffset, srcOffset, t, stride) {\n      var s = 1 - t;\n\n      for (var i = 0; i !== stride; ++i) {\n        var j = dstOffset + i;\n        buffer[j] = buffer[j] * s + buffer[srcOffset + i] * t;\n      }\n    }\n  }; // File:src/animation/tracks/BooleanKeyframeTrack.js\n\n  /**\n   *\n   * A Track of Boolean keyframe values.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  THREE.BooleanKeyframeTrack = function (name, times, values) {\n    THREE.KeyframeTrack.call(this, name, times, values);\n  };\n\n  THREE.BooleanKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {\n    constructor: THREE.BooleanKeyframeTrack,\n    ValueTypeName: 'bool',\n    ValueBufferType: Array,\n    DefaultInterpolation: THREE.InterpolateDiscrete,\n    InterpolantFactoryMethodLinear: undefined,\n    InterpolantFactoryMethodSmooth: undefined // Note: Actually this track could have a optimized / compressed\n    // representation of a single value and a custom interpolant that\n    // computes \"firstValue ^ isOdd( index )\".\n\n  }); // File:src/animation/tracks/ColorKeyframeTrack.js\n\n  /**\n   *\n   * A Track of keyframe values that represent color.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  THREE.ColorKeyframeTrack = function (name, times, values, interpolation) {\n    THREE.KeyframeTrack.call(this, name, times, values, interpolation);\n  };\n\n  THREE.ColorKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {\n    constructor: THREE.ColorKeyframeTrack,\n    ValueTypeName: 'color' // ValueBufferType is inherited\n    // DefaultInterpolation is inherited\n    // Note: Very basic implementation and nothing special yet.\n    // However, this is the place for color space parameterization.\n\n  }); // File:src/animation/tracks/NumberKeyframeTrack.js\n\n  /**\n   *\n   * A Track of numeric keyframe values.\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  THREE.NumberKeyframeTrack = function (name, times, values, interpolation) {\n    THREE.KeyframeTrack.call(this, name, times, values, interpolation);\n  };\n\n  THREE.NumberKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {\n    constructor: THREE.NumberKeyframeTrack,\n    ValueTypeName: 'number' // ValueBufferType is inherited\n    // DefaultInterpolation is inherited\n\n  }); // File:src/animation/tracks/QuaternionKeyframeTrack.js\n\n  /**\n   *\n   * A Track of quaternion keyframe values.\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  THREE.QuaternionKeyframeTrack = function (name, times, values, interpolation) {\n    THREE.KeyframeTrack.call(this, name, times, values, interpolation);\n  };\n\n  THREE.QuaternionKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {\n    constructor: THREE.QuaternionKeyframeTrack,\n    ValueTypeName: 'quaternion',\n    // ValueBufferType is inherited\n    DefaultInterpolation: THREE.InterpolateLinear,\n    InterpolantFactoryMethodLinear: function (result) {\n      return new THREE.QuaternionLinearInterpolant(this.times, this.values, this.getValueSize(), result);\n    },\n    InterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n  }); // File:src/animation/tracks/StringKeyframeTrack.js\n\n  /**\n   *\n   * A Track that interpolates Strings\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  THREE.StringKeyframeTrack = function (name, times, values, interpolation) {\n    THREE.KeyframeTrack.call(this, name, times, values, interpolation);\n  };\n\n  THREE.StringKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {\n    constructor: THREE.StringKeyframeTrack,\n    ValueTypeName: 'string',\n    ValueBufferType: Array,\n    DefaultInterpolation: THREE.InterpolateDiscrete,\n    InterpolantFactoryMethodLinear: undefined,\n    InterpolantFactoryMethodSmooth: undefined\n  }); // File:src/animation/tracks/VectorKeyframeTrack.js\n\n  /**\n   *\n   * A Track of vectored keyframe values.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  THREE.VectorKeyframeTrack = function (name, times, values, interpolation) {\n    THREE.KeyframeTrack.call(this, name, times, values, interpolation);\n  };\n\n  THREE.VectorKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {\n    constructor: THREE.VectorKeyframeTrack,\n    ValueTypeName: 'vector' // ValueBufferType is inherited\n    // DefaultInterpolation is inherited\n\n  }); // File:src/audio/Audio.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Reece Aaron Lecrivain / http://reecenotes.com/\n   */\n\n  THREE.Audio = function (listener) {\n    THREE.Object3D.call(this);\n    this.type = 'Audio';\n    this.context = listener.context;\n    this.source = this.context.createBufferSource();\n    this.source.onended = this.onEnded.bind(this);\n    this.gain = this.context.createGain();\n    this.gain.connect(listener.getInput());\n    this.autoplay = false;\n    this.startTime = 0;\n    this.playbackRate = 1;\n    this.isPlaying = false;\n    this.hasPlaybackControl = true;\n    this.sourceType = 'empty';\n    this.filters = [];\n  };\n\n  THREE.Audio.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n    constructor: THREE.Audio,\n    getOutput: function () {\n      return this.gain;\n    },\n    setNodeSource: function (audioNode) {\n      this.hasPlaybackControl = false;\n      this.sourceType = 'audioNode';\n      this.source = audioNode;\n      this.connect();\n      return this;\n    },\n    setBuffer: function (audioBuffer) {\n      this.source.buffer = audioBuffer;\n      this.sourceType = 'buffer';\n      if (this.autoplay) this.play();\n      return this;\n    },\n    play: function () {\n      if (this.isPlaying === true) {\n        console.warn('THREE.Audio: Audio is already playing.');\n        return;\n      }\n\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      var source = this.context.createBufferSource();\n      source.buffer = this.source.buffer;\n      source.loop = this.source.loop;\n      source.onended = this.source.onended;\n      source.start(0, this.startTime);\n      source.playbackRate.value = this.playbackRate;\n      this.isPlaying = true;\n      this.source = source;\n      return this.connect();\n    },\n    pause: function () {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      this.source.stop();\n      this.startTime = this.context.currentTime;\n      this.isPlaying = false;\n      return this;\n    },\n    stop: function () {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      this.source.stop();\n      this.startTime = 0;\n      this.isPlaying = false;\n      return this;\n    },\n    connect: function () {\n      if (this.filters.length > 0) {\n        this.source.connect(this.filters[0]);\n\n        for (var i = 1, l = this.filters.length; i < l; i++) {\n          this.filters[i - 1].connect(this.filters[i]);\n        }\n\n        this.filters[this.filters.length - 1].connect(this.getOutput());\n      } else {\n        this.source.connect(this.getOutput());\n      }\n\n      return this;\n    },\n    disconnect: function () {\n      if (this.filters.length > 0) {\n        this.source.disconnect(this.filters[0]);\n\n        for (var i = 1, l = this.filters.length; i < l; i++) {\n          this.filters[i - 1].disconnect(this.filters[i]);\n        }\n\n        this.filters[this.filters.length - 1].disconnect(this.getOutput());\n      } else {\n        this.source.disconnect(this.getOutput());\n      }\n\n      return this;\n    },\n    getFilters: function () {\n      return this.filters;\n    },\n    setFilters: function (value) {\n      if (!value) value = [];\n\n      if (this.isPlaying === true) {\n        this.disconnect();\n        this.filters = value;\n        this.connect();\n      } else {\n        this.filters = value;\n      }\n\n      return this;\n    },\n    getFilter: function () {\n      return this.getFilters()[0];\n    },\n    setFilter: function (filter) {\n      return this.setFilters(filter ? [filter] : []);\n    },\n    setPlaybackRate: function (value) {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      this.playbackRate = value;\n\n      if (this.isPlaying === true) {\n        this.source.playbackRate.value = this.playbackRate;\n      }\n\n      return this;\n    },\n    getPlaybackRate: function () {\n      return this.playbackRate;\n    },\n    onEnded: function () {\n      this.isPlaying = false;\n    },\n    getLoop: function () {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return false;\n      }\n\n      return this.source.loop;\n    },\n    setLoop: function (value) {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      this.source.loop = value;\n    },\n    getVolume: function () {\n      return this.gain.gain.value;\n    },\n    setVolume: function (value) {\n      this.gain.gain.value = value;\n      return this;\n    }\n  }); // File:src/audio/AudioAnalyser.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.AudioAnalyser = function (audio, fftSize) {\n    this.analyser = audio.context.createAnalyser();\n    this.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n    this.data = new Uint8Array(this.analyser.frequencyBinCount);\n    audio.getOutput().connect(this.analyser);\n  };\n\n  Object.assign(THREE.AudioAnalyser.prototype, {\n    getFrequencyData: function () {\n      this.analyser.getByteFrequencyData(this.data);\n      return this.data;\n    },\n    getAverageFrequency: function () {\n      var value = 0,\n          data = this.getFrequencyData();\n\n      for (var i = 0; i < data.length; i++) {\n        value += data[i];\n      }\n\n      return value / data.length;\n    }\n  }); // File:src/audio/AudioContext.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  Object.defineProperty(THREE, 'AudioContext', {\n    get: function () {\n      var context;\n      return function get() {\n        if (context === undefined) {\n          context = new (window.AudioContext || window.webkitAudioContext)();\n        }\n\n        return context;\n      };\n    }()\n  }); // File:src/audio/PositionalAudio.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.PositionalAudio = function (listener) {\n    THREE.Audio.call(this, listener);\n    this.panner = this.context.createPanner();\n    this.panner.connect(this.gain);\n  };\n\n  THREE.PositionalAudio.prototype = Object.assign(Object.create(THREE.Audio.prototype), {\n    constructor: THREE.PositionalAudio,\n    getOutput: function () {\n      return this.panner;\n    },\n    getRefDistance: function () {\n      return this.panner.refDistance;\n    },\n    setRefDistance: function (value) {\n      this.panner.refDistance = value;\n    },\n    getRolloffFactor: function () {\n      return this.panner.rolloffFactor;\n    },\n    setRolloffFactor: function (value) {\n      this.panner.rolloffFactor = value;\n    },\n    getDistanceModel: function () {\n      return this.panner.distanceModel;\n    },\n    setDistanceModel: function (value) {\n      this.panner.distanceModel = value;\n    },\n    getMaxDistance: function () {\n      return this.panner.maxDistance;\n    },\n    setMaxDistance: function (value) {\n      this.panner.maxDistance = value;\n    },\n    updateMatrixWorld: function () {\n      var position = new THREE.Vector3();\n      return function updateMatrixWorld(force) {\n        THREE.Object3D.prototype.updateMatrixWorld.call(this, force);\n        position.setFromMatrixPosition(this.matrixWorld);\n        this.panner.setPosition(position.x, position.y, position.z);\n      };\n    }()\n  }); // File:src/audio/AudioListener.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.AudioListener = function () {\n    THREE.Object3D.call(this);\n    this.type = 'AudioListener';\n    this.context = THREE.AudioContext;\n    this.gain = this.context.createGain();\n    this.gain.connect(this.context.destination);\n    this.filter = null;\n  };\n\n  THREE.AudioListener.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n    constructor: THREE.AudioListener,\n    getInput: function () {\n      return this.gain;\n    },\n    removeFilter: function () {\n      if (this.filter !== null) {\n        this.gain.disconnect(this.filter);\n        this.filter.disconnect(this.context.destination);\n        this.gain.connect(this.context.destination);\n        this.filter = null;\n      }\n    },\n    getFilter: function () {\n      return this.filter;\n    },\n    setFilter: function (value) {\n      if (this.filter !== null) {\n        this.gain.disconnect(this.filter);\n        this.filter.disconnect(this.context.destination);\n      } else {\n        this.gain.disconnect(this.context.destination);\n      }\n\n      this.filter = value;\n      this.gain.connect(this.filter);\n      this.filter.connect(this.context.destination);\n    },\n    getMasterVolume: function () {\n      return this.gain.gain.value;\n    },\n    setMasterVolume: function (value) {\n      this.gain.gain.value = value;\n    },\n    updateMatrixWorld: function () {\n      var position = new THREE.Vector3();\n      var quaternion = new THREE.Quaternion();\n      var scale = new THREE.Vector3();\n      var orientation = new THREE.Vector3();\n      return function updateMatrixWorld(force) {\n        THREE.Object3D.prototype.updateMatrixWorld.call(this, force);\n        var listener = this.context.listener;\n        var up = this.up;\n        this.matrixWorld.decompose(position, quaternion, scale);\n        orientation.set(0, 0, -1).applyQuaternion(quaternion);\n        listener.setPosition(position.x, position.y, position.z);\n        listener.setOrientation(orientation.x, orientation.y, orientation.z, up.x, up.y, up.z);\n      };\n    }()\n  }); // File:src/cameras/Camera.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author mikael emtinger / http://gomo.se/\n   * @author WestLangley / http://github.com/WestLangley\n  */\n\n  THREE.Camera = function () {\n    THREE.Object3D.call(this);\n    this.type = 'Camera';\n    this.matrixWorldInverse = new THREE.Matrix4();\n    this.projectionMatrix = new THREE.Matrix4();\n  };\n\n  THREE.Camera.prototype = Object.create(THREE.Object3D.prototype);\n  THREE.Camera.prototype.constructor = THREE.Camera;\n\n  THREE.Camera.prototype.getWorldDirection = function () {\n    var quaternion = new THREE.Quaternion();\n    return function getWorldDirection(optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      this.getWorldQuaternion(quaternion);\n      return result.set(0, 0, -1).applyQuaternion(quaternion);\n    };\n  }();\n\n  THREE.Camera.prototype.lookAt = function () {\n    // This routine does not support cameras with rotated and/or translated parent(s)\n    var m1 = new THREE.Matrix4();\n    return function lookAt(vector) {\n      m1.lookAt(this.position, vector, this.up);\n      this.quaternion.setFromRotationMatrix(m1);\n    };\n  }();\n\n  THREE.Camera.prototype.clone = function () {\n    return new this.constructor().copy(this);\n  };\n\n  THREE.Camera.prototype.copy = function (source) {\n    THREE.Object3D.prototype.copy.call(this, source);\n    this.matrixWorldInverse.copy(source.matrixWorldInverse);\n    this.projectionMatrix.copy(source.projectionMatrix);\n    return this;\n  }; // File:src/cameras/CubeCamera.js\n\n  /**\n   * Camera for rendering cube maps\n   *\t- renders scene into axis-aligned cube\n   *\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n\n  THREE.CubeCamera = function (near, far, cubeResolution) {\n    THREE.Object3D.call(this);\n    this.type = 'CubeCamera';\n    var fov = 90,\n        aspect = 1;\n    var cameraPX = new THREE.PerspectiveCamera(fov, aspect, near, far);\n    cameraPX.up.set(0, -1, 0);\n    cameraPX.lookAt(new THREE.Vector3(1, 0, 0));\n    this.add(cameraPX);\n    var cameraNX = new THREE.PerspectiveCamera(fov, aspect, near, far);\n    cameraNX.up.set(0, -1, 0);\n    cameraNX.lookAt(new THREE.Vector3(-1, 0, 0));\n    this.add(cameraNX);\n    var cameraPY = new THREE.PerspectiveCamera(fov, aspect, near, far);\n    cameraPY.up.set(0, 0, 1);\n    cameraPY.lookAt(new THREE.Vector3(0, 1, 0));\n    this.add(cameraPY);\n    var cameraNY = new THREE.PerspectiveCamera(fov, aspect, near, far);\n    cameraNY.up.set(0, 0, -1);\n    cameraNY.lookAt(new THREE.Vector3(0, -1, 0));\n    this.add(cameraNY);\n    var cameraPZ = new THREE.PerspectiveCamera(fov, aspect, near, far);\n    cameraPZ.up.set(0, -1, 0);\n    cameraPZ.lookAt(new THREE.Vector3(0, 0, 1));\n    this.add(cameraPZ);\n    var cameraNZ = new THREE.PerspectiveCamera(fov, aspect, near, far);\n    cameraNZ.up.set(0, -1, 0);\n    cameraNZ.lookAt(new THREE.Vector3(0, 0, -1));\n    this.add(cameraNZ);\n    var options = {\n      format: THREE.RGBFormat,\n      magFilter: THREE.LinearFilter,\n      minFilter: THREE.LinearFilter\n    };\n    this.renderTarget = new THREE.WebGLRenderTargetCube(cubeResolution, cubeResolution, options);\n\n    this.updateCubeMap = function (renderer, scene) {\n      if (this.parent === null) this.updateMatrixWorld();\n      var renderTarget = this.renderTarget;\n      var generateMipmaps = renderTarget.texture.generateMipmaps;\n      renderTarget.texture.generateMipmaps = false;\n      renderTarget.activeCubeFace = 0;\n      renderer.render(scene, cameraPX, renderTarget);\n      renderTarget.activeCubeFace = 1;\n      renderer.render(scene, cameraNX, renderTarget);\n      renderTarget.activeCubeFace = 2;\n      renderer.render(scene, cameraPY, renderTarget);\n      renderTarget.activeCubeFace = 3;\n      renderer.render(scene, cameraNY, renderTarget);\n      renderTarget.activeCubeFace = 4;\n      renderer.render(scene, cameraPZ, renderTarget);\n      renderTarget.texture.generateMipmaps = generateMipmaps;\n      renderTarget.activeCubeFace = 5;\n      renderer.render(scene, cameraNZ, renderTarget);\n      renderer.setRenderTarget(null);\n    };\n  };\n\n  THREE.CubeCamera.prototype = Object.create(THREE.Object3D.prototype);\n  THREE.CubeCamera.prototype.constructor = THREE.CubeCamera; // File:src/cameras/OrthographicCamera.js\n\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author arose / http://github.com/arose\n   */\n\n  THREE.OrthographicCamera = function (left, right, top, bottom, near, far) {\n    THREE.Camera.call(this);\n    this.type = 'OrthographicCamera';\n    this.zoom = 1;\n    this.view = null;\n    this.left = left;\n    this.right = right;\n    this.top = top;\n    this.bottom = bottom;\n    this.near = near !== undefined ? near : 0.1;\n    this.far = far !== undefined ? far : 2000;\n    this.updateProjectionMatrix();\n  };\n\n  THREE.OrthographicCamera.prototype = Object.assign(Object.create(THREE.Camera.prototype), {\n    constructor: THREE.OrthographicCamera,\n    copy: function (source) {\n      THREE.Camera.prototype.copy.call(this, source);\n      this.left = source.left;\n      this.right = source.right;\n      this.top = source.top;\n      this.bottom = source.bottom;\n      this.near = source.near;\n      this.far = source.far;\n      this.zoom = source.zoom;\n      this.view = source.view === null ? null : Object.assign({}, source.view);\n      return this;\n    },\n    setViewOffset: function (fullWidth, fullHeight, x, y, width, height) {\n      this.view = {\n        fullWidth: fullWidth,\n        fullHeight: fullHeight,\n        offsetX: x,\n        offsetY: y,\n        width: width,\n        height: height\n      };\n      this.updateProjectionMatrix();\n    },\n    clearViewOffset: function () {\n      this.view = null;\n      this.updateProjectionMatrix();\n    },\n    updateProjectionMatrix: function () {\n      var dx = (this.right - this.left) / (2 * this.zoom);\n      var dy = (this.top - this.bottom) / (2 * this.zoom);\n      var cx = (this.right + this.left) / 2;\n      var cy = (this.top + this.bottom) / 2;\n      var left = cx - dx;\n      var right = cx + dx;\n      var top = cy + dy;\n      var bottom = cy - dy;\n\n      if (this.view !== null) {\n        var zoomW = this.zoom / (this.view.width / this.view.fullWidth);\n        var zoomH = this.zoom / (this.view.height / this.view.fullHeight);\n        var scaleW = (this.right - this.left) / this.view.width;\n        var scaleH = (this.top - this.bottom) / this.view.height;\n        left += scaleW * (this.view.offsetX / zoomW);\n        right = left + scaleW * (this.view.width / zoomW);\n        top -= scaleH * (this.view.offsetY / zoomH);\n        bottom = top - scaleH * (this.view.height / zoomH);\n      }\n\n      this.projectionMatrix.makeOrthographic(left, right, top, bottom, this.near, this.far);\n    },\n    toJSON: function (meta) {\n      var data = THREE.Object3D.prototype.toJSON.call(this, meta);\n      data.object.zoom = this.zoom;\n      data.object.left = this.left;\n      data.object.right = this.right;\n      data.object.top = this.top;\n      data.object.bottom = this.bottom;\n      data.object.near = this.near;\n      data.object.far = this.far;\n      if (this.view !== null) data.object.view = Object.assign({}, this.view);\n      return data;\n    }\n  }); // File:src/cameras/PerspectiveCamera.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author greggman / http://games.greggman.com/\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * @author tschw\n   */\n\n  THREE.PerspectiveCamera = function (fov, aspect, near, far) {\n    THREE.Camera.call(this);\n    this.type = 'PerspectiveCamera';\n    this.fov = fov !== undefined ? fov : 50;\n    this.zoom = 1;\n    this.near = near !== undefined ? near : 0.1;\n    this.far = far !== undefined ? far : 2000;\n    this.focus = 10;\n    this.aspect = aspect !== undefined ? aspect : 1;\n    this.view = null;\n    this.filmGauge = 35; // width of the film (default in millimeters)\n\n    this.filmOffset = 0; // horizontal film offset (same unit as gauge)\n\n    this.updateProjectionMatrix();\n  };\n\n  THREE.PerspectiveCamera.prototype = Object.assign(Object.create(THREE.Camera.prototype), {\n    constructor: THREE.PerspectiveCamera,\n    copy: function (source) {\n      THREE.Camera.prototype.copy.call(this, source);\n      this.fov = source.fov;\n      this.zoom = source.zoom;\n      this.near = source.near;\n      this.far = source.far;\n      this.focus = source.focus;\n      this.aspect = source.aspect;\n      this.view = source.view === null ? null : Object.assign({}, source.view);\n      this.filmGauge = source.filmGauge;\n      this.filmOffset = source.filmOffset;\n      return this;\n    },\n\n    /**\n     * Sets the FOV by focal length in respect to the current .filmGauge.\n     *\n     * The default film gauge is 35, so that the focal length can be specified for\n     * a 35mm (full frame) camera.\n     *\n     * Values for focal length and film gauge must have the same unit.\n     */\n    setFocalLength: function (focalLength) {\n      // see http://www.bobatkins.com/photography/technical/field_of_view.html\n      var vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n      this.fov = THREE.Math.RAD2DEG * 2 * Math.atan(vExtentSlope);\n      this.updateProjectionMatrix();\n    },\n\n    /**\n     * Calculates the focal length from the current .fov and .filmGauge.\n     */\n    getFocalLength: function () {\n      var vExtentSlope = Math.tan(THREE.Math.DEG2RAD * 0.5 * this.fov);\n      return 0.5 * this.getFilmHeight() / vExtentSlope;\n    },\n    getEffectiveFOV: function () {\n      return THREE.Math.RAD2DEG * 2 * Math.atan(Math.tan(THREE.Math.DEG2RAD * 0.5 * this.fov) / this.zoom);\n    },\n    getFilmWidth: function () {\n      // film not completely covered in portrait format (aspect < 1)\n      return this.filmGauge * Math.min(this.aspect, 1);\n    },\n    getFilmHeight: function () {\n      // film not completely covered in landscape format (aspect > 1)\n      return this.filmGauge / Math.max(this.aspect, 1);\n    },\n\n    /**\n     * Sets an offset in a larger frustum. This is useful for multi-window or\n     * multi-monitor/multi-machine setups.\n     *\n     * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n     * the monitors are in grid like this\n     *\n     *   +---+---+---+\n     *   | A | B | C |\n     *   +---+---+---+\n     *   | D | E | F |\n     *   +---+---+---+\n     *\n     * then for each monitor you would call it like this\n     *\n     *   var w = 1920;\n     *   var h = 1080;\n     *   var fullWidth = w * 3;\n     *   var fullHeight = h * 2;\n     *\n     *   --A--\n     *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n     *   --B--\n     *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n     *   --C--\n     *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n     *   --D--\n     *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n     *   --E--\n     *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n     *   --F--\n     *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n     *\n     *   Note there is no reason monitors have to be the same size or in a grid.\n     */\n    setViewOffset: function (fullWidth, fullHeight, x, y, width, height) {\n      this.aspect = fullWidth / fullHeight;\n      this.view = {\n        fullWidth: fullWidth,\n        fullHeight: fullHeight,\n        offsetX: x,\n        offsetY: y,\n        width: width,\n        height: height\n      };\n      this.updateProjectionMatrix();\n    },\n    clearViewOffset: function () {\n      this.view = null;\n      this.updateProjectionMatrix();\n    },\n    updateProjectionMatrix: function () {\n      var near = this.near,\n          top = near * Math.tan(THREE.Math.DEG2RAD * 0.5 * this.fov) / this.zoom,\n          height = 2 * top,\n          width = this.aspect * height,\n          left = -0.5 * width,\n          view = this.view;\n\n      if (view !== null) {\n        var fullWidth = view.fullWidth,\n            fullHeight = view.fullHeight;\n        left += view.offsetX * width / fullWidth;\n        top -= view.offsetY * height / fullHeight;\n        width *= view.width / fullWidth;\n        height *= view.height / fullHeight;\n      }\n\n      var skew = this.filmOffset;\n      if (skew !== 0) left += near * skew / this.getFilmWidth();\n      this.projectionMatrix.makeFrustum(left, left + width, top - height, top, near, this.far);\n    },\n    toJSON: function (meta) {\n      var data = THREE.Object3D.prototype.toJSON.call(this, meta);\n      data.object.fov = this.fov;\n      data.object.zoom = this.zoom;\n      data.object.near = this.near;\n      data.object.far = this.far;\n      data.object.focus = this.focus;\n      data.object.aspect = this.aspect;\n      if (this.view !== null) data.object.view = Object.assign({}, this.view);\n      data.object.filmGauge = this.filmGauge;\n      data.object.filmOffset = this.filmOffset;\n      return data;\n    }\n  }); // File:src/cameras/StereoCamera.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.StereoCamera = function () {\n    this.type = 'StereoCamera';\n    this.aspect = 1;\n    this.cameraL = new THREE.PerspectiveCamera();\n    this.cameraL.layers.enable(1);\n    this.cameraL.matrixAutoUpdate = false;\n    this.cameraR = new THREE.PerspectiveCamera();\n    this.cameraR.layers.enable(2);\n    this.cameraR.matrixAutoUpdate = false;\n  };\n\n  Object.assign(THREE.StereoCamera.prototype, {\n    update: function () {\n      var focus, fov, aspect, near, far;\n      var eyeRight = new THREE.Matrix4();\n      var eyeLeft = new THREE.Matrix4();\n      return function update(camera) {\n        var needsUpdate = focus !== camera.focus || fov !== camera.fov || aspect !== camera.aspect * this.aspect || near !== camera.near || far !== camera.far;\n\n        if (needsUpdate) {\n          focus = camera.focus;\n          fov = camera.fov;\n          aspect = camera.aspect * this.aspect;\n          near = camera.near;\n          far = camera.far; // Off-axis stereoscopic effect based on\n          // http://paulbourke.net/stereographics/stereorender/\n\n          var projectionMatrix = camera.projectionMatrix.clone();\n          var eyeSep = 0.064 / 2;\n          var eyeSepOnProjection = eyeSep * near / focus;\n          var ymax = near * Math.tan(THREE.Math.DEG2RAD * fov * 0.5);\n          var xmin, xmax; // translate xOffset\n\n          eyeLeft.elements[12] = -eyeSep;\n          eyeRight.elements[12] = eyeSep; // for left eye\n\n          xmin = -ymax * aspect + eyeSepOnProjection;\n          xmax = ymax * aspect + eyeSepOnProjection;\n          projectionMatrix.elements[0] = 2 * near / (xmax - xmin);\n          projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n          this.cameraL.projectionMatrix.copy(projectionMatrix); // for right eye\n\n          xmin = -ymax * aspect - eyeSepOnProjection;\n          xmax = ymax * aspect - eyeSepOnProjection;\n          projectionMatrix.elements[0] = 2 * near / (xmax - xmin);\n          projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n          this.cameraR.projectionMatrix.copy(projectionMatrix);\n        }\n\n        this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(eyeLeft);\n        this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(eyeRight);\n      };\n    }()\n  }); // File:src/lights/Light.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  THREE.Light = function (color, intensity) {\n    THREE.Object3D.call(this);\n    this.type = 'Light';\n    this.color = new THREE.Color(color);\n    this.intensity = intensity !== undefined ? intensity : 1;\n    this.receiveShadow = undefined;\n  };\n\n  THREE.Light.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n    constructor: THREE.Light,\n    copy: function (source) {\n      THREE.Object3D.prototype.copy.call(this, source);\n      this.color.copy(source.color);\n      this.intensity = source.intensity;\n      return this;\n    },\n    toJSON: function (meta) {\n      var data = THREE.Object3D.prototype.toJSON.call(this, meta);\n      data.object.color = this.color.getHex();\n      data.object.intensity = this.intensity;\n      if (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\n      if (this.distance !== undefined) data.object.distance = this.distance;\n      if (this.angle !== undefined) data.object.angle = this.angle;\n      if (this.decay !== undefined) data.object.decay = this.decay;\n      if (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\n      return data;\n    }\n  }); // File:src/lights/LightShadow.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.LightShadow = function (camera) {\n    this.camera = camera;\n    this.bias = 0;\n    this.radius = 1;\n    this.mapSize = new THREE.Vector2(512, 512);\n    this.map = null;\n    this.matrix = new THREE.Matrix4();\n  };\n\n  Object.assign(THREE.LightShadow.prototype, {\n    copy: function (source) {\n      this.camera = source.camera.clone();\n      this.bias = source.bias;\n      this.radius = source.radius;\n      this.mapSize.copy(source.mapSize);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    }\n  }); // File:src/lights/AmbientLight.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.AmbientLight = function (color, intensity) {\n    THREE.Light.call(this, color, intensity);\n    this.type = 'AmbientLight';\n    this.castShadow = undefined;\n  };\n\n  THREE.AmbientLight.prototype = Object.assign(Object.create(THREE.Light.prototype), {\n    constructor: THREE.AmbientLight\n  }); // File:src/lights/DirectionalLight.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  THREE.DirectionalLight = function (color, intensity) {\n    THREE.Light.call(this, color, intensity);\n    this.type = 'DirectionalLight';\n    this.position.copy(THREE.Object3D.DefaultUp);\n    this.updateMatrix();\n    this.target = new THREE.Object3D();\n    this.shadow = new THREE.DirectionalLightShadow();\n  };\n\n  THREE.DirectionalLight.prototype = Object.assign(Object.create(THREE.Light.prototype), {\n    constructor: THREE.DirectionalLight,\n    copy: function (source) {\n      THREE.Light.prototype.copy.call(this, source);\n      this.target = source.target.clone();\n      this.shadow = source.shadow.clone();\n      return this;\n    }\n  }); // File:src/lights/DirectionalLightShadow.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.DirectionalLightShadow = function (light) {\n    THREE.LightShadow.call(this, new THREE.OrthographicCamera(-5, 5, 5, -5, 0.5, 500));\n  };\n\n  THREE.DirectionalLightShadow.prototype = Object.assign(Object.create(THREE.LightShadow.prototype), {\n    constructor: THREE.DirectionalLightShadow\n  }); // File:src/lights/HemisphereLight.js\n\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  THREE.HemisphereLight = function (skyColor, groundColor, intensity) {\n    THREE.Light.call(this, skyColor, intensity);\n    this.type = 'HemisphereLight';\n    this.castShadow = undefined;\n    this.position.copy(THREE.Object3D.DefaultUp);\n    this.updateMatrix();\n    this.groundColor = new THREE.Color(groundColor);\n  };\n\n  THREE.HemisphereLight.prototype = Object.assign(Object.create(THREE.Light.prototype), {\n    constructor: THREE.HemisphereLight,\n    copy: function (source) {\n      THREE.Light.prototype.copy.call(this, source);\n      this.groundColor.copy(source.groundColor);\n      return this;\n    }\n  }); // File:src/lights/PointLight.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.PointLight = function (color, intensity, distance, decay) {\n    THREE.Light.call(this, color, intensity);\n    this.type = 'PointLight';\n    Object.defineProperty(this, 'power', {\n      get: function () {\n        // intensity = power per solid angle.\n        // ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n        return this.intensity * 4 * Math.PI;\n      },\n      set: function (power) {\n        // intensity = power per solid angle.\n        // ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n        this.intensity = power / (4 * Math.PI);\n      }\n    });\n    this.distance = distance !== undefined ? distance : 0;\n    this.decay = decay !== undefined ? decay : 1; // for physically correct lights, should be 2.\n\n    this.shadow = new THREE.LightShadow(new THREE.PerspectiveCamera(90, 1, 0.5, 500));\n  };\n\n  THREE.PointLight.prototype = Object.assign(Object.create(THREE.Light.prototype), {\n    constructor: THREE.PointLight,\n    copy: function (source) {\n      THREE.Light.prototype.copy.call(this, source);\n      this.distance = source.distance;\n      this.decay = source.decay;\n      this.shadow = source.shadow.clone();\n      return this;\n    }\n  }); // File:src/lights/SpotLight.js\n\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  THREE.SpotLight = function (color, intensity, distance, angle, penumbra, decay) {\n    THREE.Light.call(this, color, intensity);\n    this.type = 'SpotLight';\n    this.position.copy(THREE.Object3D.DefaultUp);\n    this.updateMatrix();\n    this.target = new THREE.Object3D();\n    Object.defineProperty(this, 'power', {\n      get: function () {\n        // intensity = power per solid angle.\n        // ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n        return this.intensity * Math.PI;\n      },\n      set: function (power) {\n        // intensity = power per solid angle.\n        // ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n        this.intensity = power / Math.PI;\n      }\n    });\n    this.distance = distance !== undefined ? distance : 0;\n    this.angle = angle !== undefined ? angle : Math.PI / 3;\n    this.penumbra = penumbra !== undefined ? penumbra : 0;\n    this.decay = decay !== undefined ? decay : 1; // for physically correct lights, should be 2.\n\n    this.shadow = new THREE.SpotLightShadow();\n  };\n\n  THREE.SpotLight.prototype = Object.assign(Object.create(THREE.Light.prototype), {\n    constructor: THREE.SpotLight,\n    copy: function (source) {\n      THREE.Light.prototype.copy.call(this, source);\n      this.distance = source.distance;\n      this.angle = source.angle;\n      this.penumbra = source.penumbra;\n      this.decay = source.decay;\n      this.target = source.target.clone();\n      this.shadow = source.shadow.clone();\n      return this;\n    }\n  }); // File:src/lights/SpotLightShadow.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.SpotLightShadow = function () {\n    THREE.LightShadow.call(this, new THREE.PerspectiveCamera(50, 1, 0.5, 500));\n  };\n\n  THREE.SpotLightShadow.prototype = Object.assign(Object.create(THREE.LightShadow.prototype), {\n    constructor: THREE.SpotLightShadow,\n    update: function (light) {\n      var fov = THREE.Math.RAD2DEG * 2 * light.angle;\n      var aspect = this.mapSize.width / this.mapSize.height;\n      var far = light.distance || 500;\n      var camera = this.camera;\n\n      if (fov !== camera.fov || aspect !== camera.aspect || far !== camera.far) {\n        camera.fov = fov;\n        camera.aspect = aspect;\n        camera.far = far;\n        camera.updateProjectionMatrix();\n      }\n    }\n  }); // File:src/loaders/AudioLoader.js\n\n  /**\n   * @author Reece Aaron Lecrivain / http://reecenotes.com/\n   */\n\n  THREE.AudioLoader = function (manager) {\n    this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n  };\n\n  Object.assign(THREE.AudioLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      var loader = new THREE.XHRLoader(this.manager);\n      loader.setResponseType('arraybuffer');\n      loader.load(url, function (buffer) {\n        var context = THREE.AudioContext;\n        context.decodeAudioData(buffer, function (audioBuffer) {\n          onLoad(audioBuffer);\n        });\n      }, onProgress, onError);\n    }\n  }); // File:src/loaders/Cache.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.Cache = {\n    enabled: false,\n    files: {},\n    add: function (key, file) {\n      if (this.enabled === false) return; // console.log( 'THREE.Cache', 'Adding key:', key );\n\n      this.files[key] = file;\n    },\n    get: function (key) {\n      if (this.enabled === false) return; // console.log( 'THREE.Cache', 'Checking key:', key );\n\n      return this.files[key];\n    },\n    remove: function (key) {\n      delete this.files[key];\n    },\n    clear: function () {\n      this.files = {};\n    }\n  }; // File:src/loaders/Loader.js\n\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  THREE.Loader = function () {\n    this.onLoadStart = function () {};\n\n    this.onLoadProgress = function () {};\n\n    this.onLoadComplete = function () {};\n  };\n\n  THREE.Loader.prototype = {\n    constructor: THREE.Loader,\n    crossOrigin: undefined,\n    extractUrlBase: function (url) {\n      var parts = url.split('/');\n      if (parts.length === 1) return './';\n      parts.pop();\n      return parts.join('/') + '/';\n    },\n    initMaterials: function (materials, texturePath, crossOrigin) {\n      var array = [];\n\n      for (var i = 0; i < materials.length; ++i) {\n        array[i] = this.createMaterial(materials[i], texturePath, crossOrigin);\n      }\n\n      return array;\n    },\n    createMaterial: function () {\n      var color, textureLoader, materialLoader;\n      return function createMaterial(m, texturePath, crossOrigin) {\n        if (color === undefined) color = new THREE.Color();\n        if (textureLoader === undefined) textureLoader = new THREE.TextureLoader();\n        if (materialLoader === undefined) materialLoader = new THREE.MaterialLoader(); // convert from old material format\n\n        var textures = {};\n\n        function loadTexture(path, repeat, offset, wrap, anisotropy) {\n          var fullPath = texturePath + path;\n          var loader = THREE.Loader.Handlers.get(fullPath);\n          var texture;\n\n          if (loader !== null) {\n            texture = loader.load(fullPath);\n          } else {\n            textureLoader.setCrossOrigin(crossOrigin);\n            texture = textureLoader.load(fullPath);\n          }\n\n          if (repeat !== undefined) {\n            texture.repeat.fromArray(repeat);\n            if (repeat[0] !== 1) texture.wrapS = THREE.RepeatWrapping;\n            if (repeat[1] !== 1) texture.wrapT = THREE.RepeatWrapping;\n          }\n\n          if (offset !== undefined) {\n            texture.offset.fromArray(offset);\n          }\n\n          if (wrap !== undefined) {\n            if (wrap[0] === 'repeat') texture.wrapS = THREE.RepeatWrapping;\n            if (wrap[0] === 'mirror') texture.wrapS = THREE.MirroredRepeatWrapping;\n            if (wrap[1] === 'repeat') texture.wrapT = THREE.RepeatWrapping;\n            if (wrap[1] === 'mirror') texture.wrapT = THREE.MirroredRepeatWrapping;\n          }\n\n          if (anisotropy !== undefined) {\n            texture.anisotropy = anisotropy;\n          }\n\n          var uuid = THREE.Math.generateUUID();\n          textures[uuid] = texture;\n          return uuid;\n        } //\n\n\n        var json = {\n          uuid: THREE.Math.generateUUID(),\n          type: 'MeshLambertMaterial'\n        };\n\n        for (var name in m) {\n          var value = m[name];\n\n          switch (name) {\n            case 'DbgColor':\n            case 'DbgIndex':\n            case 'opticalDensity':\n            case 'illumination':\n              break;\n\n            case 'DbgName':\n              json.name = value;\n              break;\n\n            case 'blending':\n              json.blending = THREE[value];\n              break;\n\n            case 'colorAmbient':\n            case 'mapAmbient':\n              console.warn('THREE.Loader.createMaterial:', name, 'is no longer supported.');\n              break;\n\n            case 'colorDiffuse':\n              json.color = color.fromArray(value).getHex();\n              break;\n\n            case 'colorSpecular':\n              json.specular = color.fromArray(value).getHex();\n              break;\n\n            case 'colorEmissive':\n              json.emissive = color.fromArray(value).getHex();\n              break;\n\n            case 'specularCoef':\n              json.shininess = value;\n              break;\n\n            case 'shading':\n              if (value.toLowerCase() === 'basic') json.type = 'MeshBasicMaterial';\n              if (value.toLowerCase() === 'phong') json.type = 'MeshPhongMaterial';\n              if (value.toLowerCase() === 'standard') json.type = 'MeshStandardMaterial';\n              break;\n\n            case 'mapDiffuse':\n              json.map = loadTexture(value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy);\n              break;\n\n            case 'mapDiffuseRepeat':\n            case 'mapDiffuseOffset':\n            case 'mapDiffuseWrap':\n            case 'mapDiffuseAnisotropy':\n              break;\n\n            case 'mapEmissive':\n              json.emissiveMap = loadTexture(value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy);\n              break;\n\n            case 'mapEmissiveRepeat':\n            case 'mapEmissiveOffset':\n            case 'mapEmissiveWrap':\n            case 'mapEmissiveAnisotropy':\n              break;\n\n            case 'mapLight':\n              json.lightMap = loadTexture(value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy);\n              break;\n\n            case 'mapLightRepeat':\n            case 'mapLightOffset':\n            case 'mapLightWrap':\n            case 'mapLightAnisotropy':\n              break;\n\n            case 'mapAO':\n              json.aoMap = loadTexture(value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy);\n              break;\n\n            case 'mapAORepeat':\n            case 'mapAOOffset':\n            case 'mapAOWrap':\n            case 'mapAOAnisotropy':\n              break;\n\n            case 'mapBump':\n              json.bumpMap = loadTexture(value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy);\n              break;\n\n            case 'mapBumpScale':\n              json.bumpScale = value;\n              break;\n\n            case 'mapBumpRepeat':\n            case 'mapBumpOffset':\n            case 'mapBumpWrap':\n            case 'mapBumpAnisotropy':\n              break;\n\n            case 'mapNormal':\n              json.normalMap = loadTexture(value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy);\n              break;\n\n            case 'mapNormalFactor':\n              json.normalScale = [value, value];\n              break;\n\n            case 'mapNormalRepeat':\n            case 'mapNormalOffset':\n            case 'mapNormalWrap':\n            case 'mapNormalAnisotropy':\n              break;\n\n            case 'mapSpecular':\n              json.specularMap = loadTexture(value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy);\n              break;\n\n            case 'mapSpecularRepeat':\n            case 'mapSpecularOffset':\n            case 'mapSpecularWrap':\n            case 'mapSpecularAnisotropy':\n              break;\n\n            case 'mapMetalness':\n              json.metalnessMap = loadTexture(value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy);\n              break;\n\n            case 'mapMetalnessRepeat':\n            case 'mapMetalnessOffset':\n            case 'mapMetalnessWrap':\n            case 'mapMetalnessAnisotropy':\n              break;\n\n            case 'mapRoughness':\n              json.roughnessMap = loadTexture(value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy);\n              break;\n\n            case 'mapRoughnessRepeat':\n            case 'mapRoughnessOffset':\n            case 'mapRoughnessWrap':\n            case 'mapRoughnessAnisotropy':\n              break;\n\n            case 'mapAlpha':\n              json.alphaMap = loadTexture(value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy);\n              break;\n\n            case 'mapAlphaRepeat':\n            case 'mapAlphaOffset':\n            case 'mapAlphaWrap':\n            case 'mapAlphaAnisotropy':\n              break;\n\n            case 'flipSided':\n              json.side = THREE.BackSide;\n              break;\n\n            case 'doubleSided':\n              json.side = THREE.DoubleSide;\n              break;\n\n            case 'transparency':\n              console.warn('THREE.Loader.createMaterial: transparency has been renamed to opacity');\n              json.opacity = value;\n              break;\n\n            case 'depthTest':\n            case 'depthWrite':\n            case 'colorWrite':\n            case 'opacity':\n            case 'reflectivity':\n            case 'transparent':\n            case 'visible':\n            case 'wireframe':\n              json[name] = value;\n              break;\n\n            case 'vertexColors':\n              if (value === true) json.vertexColors = THREE.VertexColors;\n              if (value === 'face') json.vertexColors = THREE.FaceColors;\n              break;\n\n            default:\n              console.error('THREE.Loader.createMaterial: Unsupported', name, value);\n              break;\n          }\n        }\n\n        if (json.type === 'MeshBasicMaterial') delete json.emissive;\n        if (json.type !== 'MeshPhongMaterial') delete json.specular;\n        if (json.opacity < 1) json.transparent = true;\n        materialLoader.setTextures(textures);\n        return materialLoader.parse(json);\n      };\n    }()\n  };\n  THREE.Loader.Handlers = {\n    handlers: [],\n    add: function (regex, loader) {\n      this.handlers.push(regex, loader);\n    },\n    get: function (file) {\n      var handlers = this.handlers;\n\n      for (var i = 0, l = handlers.length; i < l; i += 2) {\n        var regex = handlers[i];\n        var loader = handlers[i + 1];\n\n        if (regex.test(file)) {\n          return loader;\n        }\n      }\n\n      return null;\n    }\n  }; // File:src/loaders/XHRLoader.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.XHRLoader = function (manager) {\n    this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n  };\n\n  Object.assign(THREE.XHRLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      if (this.path !== undefined) url = this.path + url;\n      var scope = this;\n      var cached = THREE.Cache.get(url);\n\n      if (cached !== undefined) {\n        scope.manager.itemStart(url);\n        setTimeout(function () {\n          if (onLoad) onLoad(cached);\n          scope.manager.itemEnd(url);\n        }, 0);\n        return cached;\n      }\n\n      var request = new XMLHttpRequest();\n      request.overrideMimeType('text/plain');\n      request.open('GET', url, true);\n      request.addEventListener('load', function (event) {\n        var response = event.target.response;\n        THREE.Cache.add(url, response);\n\n        if (this.status === 200) {\n          if (onLoad) onLoad(response);\n          scope.manager.itemEnd(url);\n        } else if (this.status === 0) {\n          // Some browsers return HTTP Status 0 when using non-http protocol\n          // e.g. 'file://' or 'data://'. Handle as success.\n          console.warn('THREE.XHRLoader: HTTP Status 0 received.');\n          if (onLoad) onLoad(response);\n          scope.manager.itemEnd(url);\n        } else {\n          if (onError) onError(event);\n          scope.manager.itemError(url);\n        }\n      }, false);\n\n      if (onProgress !== undefined) {\n        request.addEventListener('progress', function (event) {\n          onProgress(event);\n        }, false);\n      }\n\n      request.addEventListener('error', function (event) {\n        if (onError) onError(event);\n        scope.manager.itemError(url);\n      }, false);\n      if (this.responseType !== undefined) request.responseType = this.responseType;\n      if (this.withCredentials !== undefined) request.withCredentials = this.withCredentials;\n      request.send(null);\n      scope.manager.itemStart(url);\n      return request;\n    },\n    setPath: function (value) {\n      this.path = value;\n      return this;\n    },\n    setResponseType: function (value) {\n      this.responseType = value;\n      return this;\n    },\n    setWithCredentials: function (value) {\n      this.withCredentials = value;\n      return this;\n    }\n  }); // File:src/loaders/FontLoader.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.FontLoader = function (manager) {\n    this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n  };\n\n  Object.assign(THREE.FontLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new THREE.XHRLoader(this.manager);\n      loader.load(url, function (text) {\n        var json;\n\n        try {\n          json = JSON.parse(text);\n        } catch (e) {\n          console.warn('THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.');\n          json = JSON.parse(text.substring(65, text.length - 2));\n        }\n\n        var font = scope.parse(json);\n        if (onLoad) onLoad(font);\n      }, onProgress, onError);\n    },\n    parse: function (json) {\n      return new THREE.Font(json);\n    }\n  }); // File:src/loaders/ImageLoader.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.ImageLoader = function (manager) {\n    this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n  };\n\n  Object.assign(THREE.ImageLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var image = document.createElementNS('http://www.w3.org/1999/xhtml', 'img');\n\n      image.onload = function () {\n        URL.revokeObjectURL(image.src);\n        if (onLoad) onLoad(image);\n        scope.manager.itemEnd(url);\n      };\n\n      if (url.indexOf('data:') === 0) {\n        image.src = url;\n      } else {\n        var loader = new THREE.XHRLoader();\n        loader.setPath(this.path);\n        loader.setResponseType('blob');\n        loader.load(url, function (blob) {\n          image.src = URL.createObjectURL(blob);\n        }, onProgress, onError);\n      }\n\n      scope.manager.itemStart(url);\n      return image;\n    },\n    setCrossOrigin: function (value) {\n      this.crossOrigin = value;\n      return this;\n    },\n    setPath: function (value) {\n      this.path = value;\n      return this;\n    }\n  }); // File:src/loaders/JSONLoader.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  THREE.JSONLoader = function (manager) {\n    if (typeof manager === 'boolean') {\n      console.warn('THREE.JSONLoader: showStatus parameter has been removed from constructor.');\n      manager = undefined;\n    }\n\n    this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n    this.withCredentials = false;\n  };\n\n  Object.assign(THREE.JSONLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var texturePath = this.texturePath && typeof this.texturePath === \"string\" ? this.texturePath : THREE.Loader.prototype.extractUrlBase(url);\n      var loader = new THREE.XHRLoader(this.manager);\n      loader.setWithCredentials(this.withCredentials);\n      loader.load(url, function (text) {\n        var json = JSON.parse(text);\n        var metadata = json.metadata;\n\n        if (metadata !== undefined) {\n          var type = metadata.type;\n\n          if (type !== undefined) {\n            if (type.toLowerCase() === 'object') {\n              console.error('THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.');\n              return;\n            }\n\n            if (type.toLowerCase() === 'scene') {\n              console.error('THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.');\n              return;\n            }\n          }\n        }\n\n        var object = scope.parse(json, texturePath);\n        onLoad(object.geometry, object.materials);\n      }, onProgress, onError);\n    },\n    setTexturePath: function (value) {\n      this.texturePath = value;\n    },\n    parse: function (json, texturePath) {\n      var geometry = new THREE.Geometry(),\n          scale = json.scale !== undefined ? 1.0 / json.scale : 1.0;\n      parseModel(scale);\n      parseSkin();\n      parseMorphing(scale);\n      parseAnimations();\n      geometry.computeFaceNormals();\n      geometry.computeBoundingSphere();\n\n      function parseModel(scale) {\n        function isBitSet(value, position) {\n          return value & 1 << position;\n        }\n\n        var i,\n            j,\n            fi,\n            offset,\n            zLength,\n            colorIndex,\n            normalIndex,\n            uvIndex,\n            materialIndex,\n            type,\n            isQuad,\n            hasMaterial,\n            hasFaceVertexUv,\n            hasFaceNormal,\n            hasFaceVertexNormal,\n            hasFaceColor,\n            hasFaceVertexColor,\n            vertex,\n            face,\n            faceA,\n            faceB,\n            hex,\n            normal,\n            uvLayer,\n            uv,\n            u,\n            v,\n            faces = json.faces,\n            vertices = json.vertices,\n            normals = json.normals,\n            colors = json.colors,\n            nUvLayers = 0;\n\n        if (json.uvs !== undefined) {\n          // disregard empty arrays\n          for (i = 0; i < json.uvs.length; i++) {\n            if (json.uvs[i].length) nUvLayers++;\n          }\n\n          for (i = 0; i < nUvLayers; i++) {\n            geometry.faceVertexUvs[i] = [];\n          }\n        }\n\n        offset = 0;\n        zLength = vertices.length;\n\n        while (offset < zLength) {\n          vertex = new THREE.Vector3();\n          vertex.x = vertices[offset++] * scale;\n          vertex.y = vertices[offset++] * scale;\n          vertex.z = vertices[offset++] * scale;\n          geometry.vertices.push(vertex);\n        }\n\n        offset = 0;\n        zLength = faces.length;\n\n        while (offset < zLength) {\n          type = faces[offset++];\n          isQuad = isBitSet(type, 0);\n          hasMaterial = isBitSet(type, 1);\n          hasFaceVertexUv = isBitSet(type, 3);\n          hasFaceNormal = isBitSet(type, 4);\n          hasFaceVertexNormal = isBitSet(type, 5);\n          hasFaceColor = isBitSet(type, 6);\n          hasFaceVertexColor = isBitSet(type, 7); // console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n          if (isQuad) {\n            faceA = new THREE.Face3();\n            faceA.a = faces[offset];\n            faceA.b = faces[offset + 1];\n            faceA.c = faces[offset + 3];\n            faceB = new THREE.Face3();\n            faceB.a = faces[offset + 1];\n            faceB.b = faces[offset + 2];\n            faceB.c = faces[offset + 3];\n            offset += 4;\n\n            if (hasMaterial) {\n              materialIndex = faces[offset++];\n              faceA.materialIndex = materialIndex;\n              faceB.materialIndex = materialIndex;\n            } // to get face <=> uv index correspondence\n\n\n            fi = geometry.faces.length;\n\n            if (hasFaceVertexUv) {\n              for (i = 0; i < nUvLayers; i++) {\n                uvLayer = json.uvs[i];\n                geometry.faceVertexUvs[i][fi] = [];\n                geometry.faceVertexUvs[i][fi + 1] = [];\n\n                for (j = 0; j < 4; j++) {\n                  uvIndex = faces[offset++];\n                  u = uvLayer[uvIndex * 2];\n                  v = uvLayer[uvIndex * 2 + 1];\n                  uv = new THREE.Vector2(u, v);\n                  if (j !== 2) geometry.faceVertexUvs[i][fi].push(uv);\n                  if (j !== 0) geometry.faceVertexUvs[i][fi + 1].push(uv);\n                }\n              }\n            }\n\n            if (hasFaceNormal) {\n              normalIndex = faces[offset++] * 3;\n              faceA.normal.set(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n              faceB.normal.copy(faceA.normal);\n            }\n\n            if (hasFaceVertexNormal) {\n              for (i = 0; i < 4; i++) {\n                normalIndex = faces[offset++] * 3;\n                normal = new THREE.Vector3(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n                if (i !== 2) faceA.vertexNormals.push(normal);\n                if (i !== 0) faceB.vertexNormals.push(normal);\n              }\n            }\n\n            if (hasFaceColor) {\n              colorIndex = faces[offset++];\n              hex = colors[colorIndex];\n              faceA.color.setHex(hex);\n              faceB.color.setHex(hex);\n            }\n\n            if (hasFaceVertexColor) {\n              for (i = 0; i < 4; i++) {\n                colorIndex = faces[offset++];\n                hex = colors[colorIndex];\n                if (i !== 2) faceA.vertexColors.push(new THREE.Color(hex));\n                if (i !== 0) faceB.vertexColors.push(new THREE.Color(hex));\n              }\n            }\n\n            geometry.faces.push(faceA);\n            geometry.faces.push(faceB);\n          } else {\n            face = new THREE.Face3();\n            face.a = faces[offset++];\n            face.b = faces[offset++];\n            face.c = faces[offset++];\n\n            if (hasMaterial) {\n              materialIndex = faces[offset++];\n              face.materialIndex = materialIndex;\n            } // to get face <=> uv index correspondence\n\n\n            fi = geometry.faces.length;\n\n            if (hasFaceVertexUv) {\n              for (i = 0; i < nUvLayers; i++) {\n                uvLayer = json.uvs[i];\n                geometry.faceVertexUvs[i][fi] = [];\n\n                for (j = 0; j < 3; j++) {\n                  uvIndex = faces[offset++];\n                  u = uvLayer[uvIndex * 2];\n                  v = uvLayer[uvIndex * 2 + 1];\n                  uv = new THREE.Vector2(u, v);\n                  geometry.faceVertexUvs[i][fi].push(uv);\n                }\n              }\n            }\n\n            if (hasFaceNormal) {\n              normalIndex = faces[offset++] * 3;\n              face.normal.set(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n            }\n\n            if (hasFaceVertexNormal) {\n              for (i = 0; i < 3; i++) {\n                normalIndex = faces[offset++] * 3;\n                normal = new THREE.Vector3(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n                face.vertexNormals.push(normal);\n              }\n            }\n\n            if (hasFaceColor) {\n              colorIndex = faces[offset++];\n              face.color.setHex(colors[colorIndex]);\n            }\n\n            if (hasFaceVertexColor) {\n              for (i = 0; i < 3; i++) {\n                colorIndex = faces[offset++];\n                face.vertexColors.push(new THREE.Color(colors[colorIndex]));\n              }\n            }\n\n            geometry.faces.push(face);\n          }\n        }\n      }\n\n      function parseSkin() {\n        var influencesPerVertex = json.influencesPerVertex !== undefined ? json.influencesPerVertex : 2;\n\n        if (json.skinWeights) {\n          for (var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex) {\n            var x = json.skinWeights[i];\n            var y = influencesPerVertex > 1 ? json.skinWeights[i + 1] : 0;\n            var z = influencesPerVertex > 2 ? json.skinWeights[i + 2] : 0;\n            var w = influencesPerVertex > 3 ? json.skinWeights[i + 3] : 0;\n            geometry.skinWeights.push(new THREE.Vector4(x, y, z, w));\n          }\n        }\n\n        if (json.skinIndices) {\n          for (var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex) {\n            var a = json.skinIndices[i];\n            var b = influencesPerVertex > 1 ? json.skinIndices[i + 1] : 0;\n            var c = influencesPerVertex > 2 ? json.skinIndices[i + 2] : 0;\n            var d = influencesPerVertex > 3 ? json.skinIndices[i + 3] : 0;\n            geometry.skinIndices.push(new THREE.Vector4(a, b, c, d));\n          }\n        }\n\n        geometry.bones = json.bones;\n\n        if (geometry.bones && geometry.bones.length > 0 && (geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length)) {\n          console.warn('When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' + geometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.');\n        }\n      }\n\n      function parseMorphing(scale) {\n        if (json.morphTargets !== undefined) {\n          for (var i = 0, l = json.morphTargets.length; i < l; i++) {\n            geometry.morphTargets[i] = {};\n            geometry.morphTargets[i].name = json.morphTargets[i].name;\n            geometry.morphTargets[i].vertices = [];\n            var dstVertices = geometry.morphTargets[i].vertices;\n            var srcVertices = json.morphTargets[i].vertices;\n\n            for (var v = 0, vl = srcVertices.length; v < vl; v += 3) {\n              var vertex = new THREE.Vector3();\n              vertex.x = srcVertices[v] * scale;\n              vertex.y = srcVertices[v + 1] * scale;\n              vertex.z = srcVertices[v + 2] * scale;\n              dstVertices.push(vertex);\n            }\n          }\n        }\n\n        if (json.morphColors !== undefined && json.morphColors.length > 0) {\n          console.warn('THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.');\n          var faces = geometry.faces;\n          var morphColors = json.morphColors[0].colors;\n\n          for (var i = 0, l = faces.length; i < l; i++) {\n            faces[i].color.fromArray(morphColors, i * 3);\n          }\n        }\n      }\n\n      function parseAnimations() {\n        var outputAnimations = []; // parse old style Bone/Hierarchy animations\n\n        var animations = [];\n\n        if (json.animation !== undefined) {\n          animations.push(json.animation);\n        }\n\n        if (json.animations !== undefined) {\n          if (json.animations.length) {\n            animations = animations.concat(json.animations);\n          } else {\n            animations.push(json.animations);\n          }\n        }\n\n        for (var i = 0; i < animations.length; i++) {\n          var clip = THREE.AnimationClip.parseAnimation(animations[i], geometry.bones);\n          if (clip) outputAnimations.push(clip);\n        } // parse implicit morph animations\n\n\n        if (geometry.morphTargets) {\n          // TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n          var morphAnimationClips = THREE.AnimationClip.CreateClipsFromMorphTargetSequences(geometry.morphTargets, 10);\n          outputAnimations = outputAnimations.concat(morphAnimationClips);\n        }\n\n        if (outputAnimations.length > 0) geometry.animations = outputAnimations;\n      }\n\n      if (json.materials === undefined || json.materials.length === 0) {\n        return {\n          geometry: geometry\n        };\n      } else {\n        var materials = THREE.Loader.prototype.initMaterials(json.materials, texturePath, this.crossOrigin);\n        return {\n          geometry: geometry,\n          materials: materials\n        };\n      }\n    }\n  }); // File:src/loaders/LoadingManager.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.LoadingManager = function (onLoad, onProgress, onError) {\n    var scope = this;\n    var isLoading = false,\n        itemsLoaded = 0,\n        itemsTotal = 0;\n    this.onStart = undefined;\n    this.onLoad = onLoad;\n    this.onProgress = onProgress;\n    this.onError = onError;\n\n    this.itemStart = function (url) {\n      itemsTotal++;\n\n      if (isLoading === false) {\n        if (scope.onStart !== undefined) {\n          scope.onStart(url, itemsLoaded, itemsTotal);\n        }\n      }\n\n      isLoading = true;\n    };\n\n    this.itemEnd = function (url) {\n      itemsLoaded++;\n\n      if (scope.onProgress !== undefined) {\n        scope.onProgress(url, itemsLoaded, itemsTotal);\n      }\n\n      if (itemsLoaded === itemsTotal) {\n        isLoading = false;\n\n        if (scope.onLoad !== undefined) {\n          scope.onLoad();\n        }\n      }\n    };\n\n    this.itemError = function (url) {\n      if (scope.onError !== undefined) {\n        scope.onError(url);\n      }\n    };\n  };\n\n  THREE.DefaultLoadingManager = new THREE.LoadingManager(); // File:src/loaders/BufferGeometryLoader.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.BufferGeometryLoader = function (manager) {\n    this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n  };\n\n  Object.assign(THREE.BufferGeometryLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new THREE.XHRLoader(scope.manager);\n      loader.load(url, function (text) {\n        onLoad(scope.parse(JSON.parse(text)));\n      }, onProgress, onError);\n    },\n    parse: function (json) {\n      var geometry = new THREE.BufferGeometry();\n      var index = json.data.index;\n      var TYPED_ARRAYS = {\n        'Int8Array': Int8Array,\n        'Uint8Array': Uint8Array,\n        'Uint8ClampedArray': Uint8ClampedArray,\n        'Int16Array': Int16Array,\n        'Uint16Array': Uint16Array,\n        'Int32Array': Int32Array,\n        'Uint32Array': Uint32Array,\n        'Float32Array': Float32Array,\n        'Float64Array': Float64Array\n      };\n\n      if (index !== undefined) {\n        var typedArray = new TYPED_ARRAYS[index.type](index.array);\n        geometry.setIndex(new THREE.BufferAttribute(typedArray, 1));\n      }\n\n      var attributes = json.data.attributes;\n\n      for (var key in attributes) {\n        var attribute = attributes[key];\n        var typedArray = new TYPED_ARRAYS[attribute.type](attribute.array);\n        geometry.addAttribute(key, new THREE.BufferAttribute(typedArray, attribute.itemSize, attribute.normalized));\n      }\n\n      var groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n      if (groups !== undefined) {\n        for (var i = 0, n = groups.length; i !== n; ++i) {\n          var group = groups[i];\n          geometry.addGroup(group.start, group.count, group.materialIndex);\n        }\n      }\n\n      var boundingSphere = json.data.boundingSphere;\n\n      if (boundingSphere !== undefined) {\n        var center = new THREE.Vector3();\n\n        if (boundingSphere.center !== undefined) {\n          center.fromArray(boundingSphere.center);\n        }\n\n        geometry.boundingSphere = new THREE.Sphere(center, boundingSphere.radius);\n      }\n\n      return geometry;\n    }\n  }); // File:src/loaders/MaterialLoader.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.MaterialLoader = function (manager) {\n    this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n    this.textures = {};\n  };\n\n  Object.assign(THREE.MaterialLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new THREE.XHRLoader(scope.manager);\n      loader.load(url, function (text) {\n        onLoad(scope.parse(JSON.parse(text)));\n      }, onProgress, onError);\n    },\n    setTextures: function (value) {\n      this.textures = value;\n    },\n    getTexture: function (name) {\n      var textures = this.textures;\n\n      if (textures[name] === undefined) {\n        console.warn('THREE.MaterialLoader: Undefined texture', name);\n      }\n\n      return textures[name];\n    },\n    parse: function (json) {\n      var material = new THREE[json.type]();\n      if (json.uuid !== undefined) material.uuid = json.uuid;\n      if (json.name !== undefined) material.name = json.name;\n      if (json.color !== undefined) material.color.setHex(json.color);\n      if (json.roughness !== undefined) material.roughness = json.roughness;\n      if (json.metalness !== undefined) material.metalness = json.metalness;\n      if (json.emissive !== undefined) material.emissive.setHex(json.emissive);\n      if (json.specular !== undefined) material.specular.setHex(json.specular);\n      if (json.shininess !== undefined) material.shininess = json.shininess;\n      if (json.uniforms !== undefined) material.uniforms = json.uniforms;\n      if (json.vertexShader !== undefined) material.vertexShader = json.vertexShader;\n      if (json.fragmentShader !== undefined) material.fragmentShader = json.fragmentShader;\n      if (json.vertexColors !== undefined) material.vertexColors = json.vertexColors;\n      if (json.shading !== undefined) material.shading = json.shading;\n      if (json.blending !== undefined) material.blending = json.blending;\n      if (json.side !== undefined) material.side = json.side;\n      if (json.opacity !== undefined) material.opacity = json.opacity;\n      if (json.transparent !== undefined) material.transparent = json.transparent;\n      if (json.alphaTest !== undefined) material.alphaTest = json.alphaTest;\n      if (json.depthTest !== undefined) material.depthTest = json.depthTest;\n      if (json.depthWrite !== undefined) material.depthWrite = json.depthWrite;\n      if (json.colorWrite !== undefined) material.colorWrite = json.colorWrite;\n      if (json.wireframe !== undefined) material.wireframe = json.wireframe;\n      if (json.wireframeLinewidth !== undefined) material.wireframeLinewidth = json.wireframeLinewidth; // for PointsMaterial\n\n      if (json.size !== undefined) material.size = json.size;\n      if (json.sizeAttenuation !== undefined) material.sizeAttenuation = json.sizeAttenuation; // maps\n\n      if (json.map !== undefined) material.map = this.getTexture(json.map);\n\n      if (json.alphaMap !== undefined) {\n        material.alphaMap = this.getTexture(json.alphaMap);\n        material.transparent = true;\n      }\n\n      if (json.bumpMap !== undefined) material.bumpMap = this.getTexture(json.bumpMap);\n      if (json.bumpScale !== undefined) material.bumpScale = json.bumpScale;\n      if (json.normalMap !== undefined) material.normalMap = this.getTexture(json.normalMap);\n\n      if (json.normalScale !== undefined) {\n        var normalScale = json.normalScale;\n\n        if (Array.isArray(normalScale) === false) {\n          // Blender exporter used to export a scalar. See #7459\n          normalScale = [normalScale, normalScale];\n        }\n\n        material.normalScale = new THREE.Vector2().fromArray(normalScale);\n      }\n\n      if (json.displacementMap !== undefined) material.displacementMap = this.getTexture(json.displacementMap);\n      if (json.displacementScale !== undefined) material.displacementScale = json.displacementScale;\n      if (json.displacementBias !== undefined) material.displacementBias = json.displacementBias;\n      if (json.roughnessMap !== undefined) material.roughnessMap = this.getTexture(json.roughnessMap);\n      if (json.metalnessMap !== undefined) material.metalnessMap = this.getTexture(json.metalnessMap);\n      if (json.emissiveMap !== undefined) material.emissiveMap = this.getTexture(json.emissiveMap);\n      if (json.emissiveIntensity !== undefined) material.emissiveIntensity = json.emissiveIntensity;\n      if (json.specularMap !== undefined) material.specularMap = this.getTexture(json.specularMap);\n\n      if (json.envMap !== undefined) {\n        material.envMap = this.getTexture(json.envMap);\n        material.combine = THREE.MultiplyOperation;\n      }\n\n      if (json.reflectivity !== undefined) material.reflectivity = json.reflectivity;\n      if (json.lightMap !== undefined) material.lightMap = this.getTexture(json.lightMap);\n      if (json.lightMapIntensity !== undefined) material.lightMapIntensity = json.lightMapIntensity;\n      if (json.aoMap !== undefined) material.aoMap = this.getTexture(json.aoMap);\n      if (json.aoMapIntensity !== undefined) material.aoMapIntensity = json.aoMapIntensity; // MultiMaterial\n\n      if (json.materials !== undefined) {\n        for (var i = 0, l = json.materials.length; i < l; i++) {\n          material.materials.push(this.parse(json.materials[i]));\n        }\n      }\n\n      return material;\n    }\n  }); // File:src/loaders/ObjectLoader.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.ObjectLoader = function (manager) {\n    this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n    this.texturePath = '';\n  };\n\n  Object.assign(THREE.ObjectLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      if (this.texturePath === '') {\n        this.texturePath = url.substring(0, url.lastIndexOf('/') + 1);\n      }\n\n      var scope = this;\n      var loader = new THREE.XHRLoader(scope.manager);\n      loader.load(url, function (text) {\n        scope.parse(JSON.parse(text), onLoad);\n      }, onProgress, onError);\n    },\n    setTexturePath: function (value) {\n      this.texturePath = value;\n    },\n    setCrossOrigin: function (value) {\n      this.crossOrigin = value;\n    },\n    parse: function (json, onLoad) {\n      var geometries = this.parseGeometries(json.geometries);\n      var images = this.parseImages(json.images, function () {\n        if (onLoad !== undefined) onLoad(object);\n      });\n      var textures = this.parseTextures(json.textures, images);\n      var materials = this.parseMaterials(json.materials, textures);\n      var object = this.parseObject(json.object, geometries, materials);\n\n      if (json.animations) {\n        object.animations = this.parseAnimations(json.animations);\n      }\n\n      if (json.images === undefined || json.images.length === 0) {\n        if (onLoad !== undefined) onLoad(object);\n      }\n\n      return object;\n    },\n    parseGeometries: function (json) {\n      var geometries = {};\n\n      if (json !== undefined) {\n        var geometryLoader = new THREE.JSONLoader();\n        var bufferGeometryLoader = new THREE.BufferGeometryLoader();\n\n        for (var i = 0, l = json.length; i < l; i++) {\n          var geometry;\n          var data = json[i];\n\n          switch (data.type) {\n            case 'PlaneGeometry':\n            case 'PlaneBufferGeometry':\n              geometry = new THREE[data.type](data.width, data.height, data.widthSegments, data.heightSegments);\n              break;\n\n            case 'BoxGeometry':\n            case 'BoxBufferGeometry':\n            case 'CubeGeometry':\n              // backwards compatible\n              geometry = new THREE[data.type](data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);\n              break;\n\n            case 'CircleGeometry':\n            case 'CircleBufferGeometry':\n              geometry = new THREE[data.type](data.radius, data.segments, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'CylinderGeometry':\n            case 'CylinderBufferGeometry':\n              geometry = new THREE[data.type](data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'ConeGeometry':\n            case 'ConeBufferGeometry':\n              geometry = new THREE[data.type](data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'SphereGeometry':\n            case 'SphereBufferGeometry':\n              geometry = new THREE[data.type](data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'DodecahedronGeometry':\n            case 'IcosahedronGeometry':\n            case 'OctahedronGeometry':\n            case 'TetrahedronGeometry':\n              geometry = new THREE[data.type](data.radius, data.detail);\n              break;\n\n            case 'RingGeometry':\n            case 'RingBufferGeometry':\n              geometry = new THREE[data.type](data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'TorusGeometry':\n            case 'TorusBufferGeometry':\n              geometry = new THREE[data.type](data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc);\n              break;\n\n            case 'TorusKnotGeometry':\n            case 'TorusKnotBufferGeometry':\n              geometry = new THREE[data.type](data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q);\n              break;\n\n            case 'LatheGeometry':\n            case 'LatheBufferGeometry':\n              geometry = new THREE[data.type](data.points, data.segments, data.phiStart, data.phiLength);\n              break;\n\n            case 'BufferGeometry':\n              geometry = bufferGeometryLoader.parse(data);\n              break;\n\n            case 'Geometry':\n              geometry = geometryLoader.parse(data.data, this.texturePath).geometry;\n              break;\n\n            default:\n              console.warn('THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"');\n              continue;\n          }\n\n          geometry.uuid = data.uuid;\n          if (data.name !== undefined) geometry.name = data.name;\n          geometries[data.uuid] = geometry;\n        }\n      }\n\n      return geometries;\n    },\n    parseMaterials: function (json, textures) {\n      var materials = {};\n\n      if (json !== undefined) {\n        var loader = new THREE.MaterialLoader();\n        loader.setTextures(textures);\n\n        for (var i = 0, l = json.length; i < l; i++) {\n          var material = loader.parse(json[i]);\n          materials[material.uuid] = material;\n        }\n      }\n\n      return materials;\n    },\n    parseAnimations: function (json) {\n      var animations = [];\n\n      for (var i = 0; i < json.length; i++) {\n        var clip = THREE.AnimationClip.parse(json[i]);\n        animations.push(clip);\n      }\n\n      return animations;\n    },\n    parseImages: function (json, onLoad) {\n      var scope = this;\n      var images = {};\n\n      function loadImage(url) {\n        scope.manager.itemStart(url);\n        return loader.load(url, function () {\n          scope.manager.itemEnd(url);\n        });\n      }\n\n      if (json !== undefined && json.length > 0) {\n        var manager = new THREE.LoadingManager(onLoad);\n        var loader = new THREE.ImageLoader(manager);\n        loader.setCrossOrigin(this.crossOrigin);\n\n        for (var i = 0, l = json.length; i < l; i++) {\n          var image = json[i];\n          var path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(image.url) ? image.url : scope.texturePath + image.url;\n          images[image.uuid] = loadImage(path);\n        }\n      }\n\n      return images;\n    },\n    parseTextures: function (json, images) {\n      function parseConstant(value) {\n        if (typeof value === 'number') return value;\n        console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\n        return THREE[value];\n      }\n\n      var textures = {};\n\n      if (json !== undefined) {\n        for (var i = 0, l = json.length; i < l; i++) {\n          var data = json[i];\n\n          if (data.image === undefined) {\n            console.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\n          }\n\n          if (images[data.image] === undefined) {\n            console.warn('THREE.ObjectLoader: Undefined image', data.image);\n          }\n\n          var texture = new THREE.Texture(images[data.image]);\n          texture.needsUpdate = true;\n          texture.uuid = data.uuid;\n          if (data.name !== undefined) texture.name = data.name;\n          if (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping);\n          if (data.offset !== undefined) texture.offset.fromArray(data.offset);\n          if (data.repeat !== undefined) texture.repeat.fromArray(data.repeat);\n\n          if (data.wrap !== undefined) {\n            texture.wrapS = parseConstant(data.wrap[0]);\n            texture.wrapT = parseConstant(data.wrap[1]);\n          }\n\n          if (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter);\n          if (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter);\n          if (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\n          if (data.flipY !== undefined) texture.flipY = data.flipY;\n          textures[data.uuid] = texture;\n        }\n      }\n\n      return textures;\n    },\n    parseObject: function () {\n      var matrix = new THREE.Matrix4();\n      return function parseObject(data, geometries, materials) {\n        var object;\n\n        function getGeometry(name) {\n          if (geometries[name] === undefined) {\n            console.warn('THREE.ObjectLoader: Undefined geometry', name);\n          }\n\n          return geometries[name];\n        }\n\n        function getMaterial(name) {\n          if (name === undefined) return undefined;\n\n          if (materials[name] === undefined) {\n            console.warn('THREE.ObjectLoader: Undefined material', name);\n          }\n\n          return materials[name];\n        }\n\n        switch (data.type) {\n          case 'Scene':\n            object = new THREE.Scene();\n            break;\n\n          case 'PerspectiveCamera':\n            object = new THREE.PerspectiveCamera(data.fov, data.aspect, data.near, data.far);\n            if (data.focus !== undefined) object.focus = data.focus;\n            if (data.zoom !== undefined) object.zoom = data.zoom;\n            if (data.filmGauge !== undefined) object.filmGauge = data.filmGauge;\n            if (data.filmOffset !== undefined) object.filmOffset = data.filmOffset;\n            if (data.view !== undefined) object.view = Object.assign({}, data.view);\n            break;\n\n          case 'OrthographicCamera':\n            object = new THREE.OrthographicCamera(data.left, data.right, data.top, data.bottom, data.near, data.far);\n            break;\n\n          case 'AmbientLight':\n            object = new THREE.AmbientLight(data.color, data.intensity);\n            break;\n\n          case 'DirectionalLight':\n            object = new THREE.DirectionalLight(data.color, data.intensity);\n            break;\n\n          case 'PointLight':\n            object = new THREE.PointLight(data.color, data.intensity, data.distance, data.decay);\n            break;\n\n          case 'SpotLight':\n            object = new THREE.SpotLight(data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay);\n            break;\n\n          case 'HemisphereLight':\n            object = new THREE.HemisphereLight(data.color, data.groundColor, data.intensity);\n            break;\n\n          case 'Mesh':\n            var geometry = getGeometry(data.geometry);\n            var material = getMaterial(data.material);\n\n            if (geometry.bones && geometry.bones.length > 0) {\n              object = new THREE.SkinnedMesh(geometry, material);\n            } else {\n              object = new THREE.Mesh(geometry, material);\n            }\n\n            break;\n\n          case 'LOD':\n            object = new THREE.LOD();\n            break;\n\n          case 'Line':\n            object = new THREE.Line(getGeometry(data.geometry), getMaterial(data.material), data.mode);\n            break;\n\n          case 'PointCloud':\n          case 'Points':\n            object = new THREE.Points(getGeometry(data.geometry), getMaterial(data.material));\n            break;\n\n          case 'Sprite':\n            object = new THREE.Sprite(getMaterial(data.material));\n            break;\n\n          case 'Group':\n            object = new THREE.Group();\n            break;\n\n          default:\n            object = new THREE.Object3D();\n        }\n\n        object.uuid = data.uuid;\n        if (data.name !== undefined) object.name = data.name;\n\n        if (data.matrix !== undefined) {\n          matrix.fromArray(data.matrix);\n          matrix.decompose(object.position, object.quaternion, object.scale);\n        } else {\n          if (data.position !== undefined) object.position.fromArray(data.position);\n          if (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n          if (data.scale !== undefined) object.scale.fromArray(data.scale);\n        }\n\n        if (data.castShadow !== undefined) object.castShadow = data.castShadow;\n        if (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\n        if (data.visible !== undefined) object.visible = data.visible;\n        if (data.userData !== undefined) object.userData = data.userData;\n\n        if (data.children !== undefined) {\n          for (var child in data.children) {\n            object.add(this.parseObject(data.children[child], geometries, materials));\n          }\n        }\n\n        if (data.type === 'LOD') {\n          var levels = data.levels;\n\n          for (var l = 0; l < levels.length; l++) {\n            var level = levels[l];\n            var child = object.getObjectByProperty('uuid', level.object);\n\n            if (child !== undefined) {\n              object.addLevel(child, level.distance);\n            }\n          }\n        }\n\n        return object;\n      };\n    }()\n  }); // File:src/loaders/TextureLoader.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.TextureLoader = function (manager) {\n    this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n  };\n\n  Object.assign(THREE.TextureLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      var texture = new THREE.Texture();\n      var loader = new THREE.ImageLoader(this.manager);\n      loader.setCrossOrigin(this.crossOrigin);\n      loader.setPath(this.path);\n      loader.load(url, function (image) {\n        // JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n        var isJPEG = url.search(/\\.(jpg|jpeg)$/) > 0 || url.search(/^data\\:image\\/jpeg/) === 0;\n        texture.format = isJPEG ? THREE.RGBFormat : THREE.RGBAFormat;\n        texture.image = image;\n        texture.needsUpdate = true;\n\n        if (onLoad !== undefined) {\n          onLoad(texture);\n        }\n      }, onProgress, onError);\n      return texture;\n    },\n    setCrossOrigin: function (value) {\n      this.crossOrigin = value;\n      return this;\n    },\n    setPath: function (value) {\n      this.path = value;\n      return this;\n    }\n  }); // File:src/loaders/CubeTextureLoader.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.CubeTextureLoader = function (manager) {\n    this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n  };\n\n  Object.assign(THREE.CubeTextureLoader.prototype, {\n    load: function (urls, onLoad, onProgress, onError) {\n      var texture = new THREE.CubeTexture();\n      var loader = new THREE.ImageLoader(this.manager);\n      loader.setCrossOrigin(this.crossOrigin);\n      loader.setPath(this.path);\n      var loaded = 0;\n\n      function loadTexture(i) {\n        loader.load(urls[i], function (image) {\n          texture.images[i] = image;\n          loaded++;\n\n          if (loaded === 6) {\n            texture.needsUpdate = true;\n            if (onLoad) onLoad(texture);\n          }\n        }, undefined, onError);\n      }\n\n      for (var i = 0; i < urls.length; ++i) {\n        loadTexture(i);\n      }\n\n      return texture;\n    },\n    setCrossOrigin: function (value) {\n      this.crossOrigin = value;\n      return this;\n    },\n    setPath: function (value) {\n      this.path = value;\n      return this;\n    }\n  }); // File:src/loaders/BinaryTextureLoader.js\n\n  /**\n   * @author Nikos M. / https://github.com/foo123/\n   *\n   * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n   */\n\n  THREE.DataTextureLoader = THREE.BinaryTextureLoader = function (manager) {\n    this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager; // override in sub classes\n\n    this._parser = null;\n  };\n\n  Object.assign(THREE.BinaryTextureLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var texture = new THREE.DataTexture();\n      var loader = new THREE.XHRLoader(this.manager);\n      loader.setResponseType('arraybuffer');\n      loader.load(url, function (buffer) {\n        var texData = scope._parser(buffer);\n\n        if (!texData) return;\n\n        if (undefined !== texData.image) {\n          texture.image = texData.image;\n        } else if (undefined !== texData.data) {\n          texture.image.width = texData.width;\n          texture.image.height = texData.height;\n          texture.image.data = texData.data;\n        }\n\n        texture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\n        texture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\n        texture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\n        texture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\n        texture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n        if (undefined !== texData.format) {\n          texture.format = texData.format;\n        }\n\n        if (undefined !== texData.type) {\n          texture.type = texData.type;\n        }\n\n        if (undefined !== texData.mipmaps) {\n          texture.mipmaps = texData.mipmaps;\n        }\n\n        if (1 === texData.mipmapCount) {\n          texture.minFilter = THREE.LinearFilter;\n        }\n\n        texture.needsUpdate = true;\n        if (onLoad) onLoad(texture, texData);\n      }, onProgress, onError);\n      return texture;\n    }\n  }); // File:src/loaders/CompressedTextureLoader.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   *\n   * Abstract Base class to block based textures loader (dds, pvr, ...)\n   */\n\n  THREE.CompressedTextureLoader = function (manager) {\n    this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager; // override in sub classes\n\n    this._parser = null;\n  };\n\n  Object.assign(THREE.CompressedTextureLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var images = [];\n      var texture = new THREE.CompressedTexture();\n      texture.image = images;\n      var loader = new THREE.XHRLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setResponseType('arraybuffer');\n\n      function loadTexture(i) {\n        loader.load(url[i], function (buffer) {\n          var texDatas = scope._parser(buffer, true);\n\n          images[i] = {\n            width: texDatas.width,\n            height: texDatas.height,\n            format: texDatas.format,\n            mipmaps: texDatas.mipmaps\n          };\n          loaded += 1;\n\n          if (loaded === 6) {\n            if (texDatas.mipmapCount === 1) texture.minFilter = THREE.LinearFilter;\n            texture.format = texDatas.format;\n            texture.needsUpdate = true;\n            if (onLoad) onLoad(texture);\n          }\n        }, onProgress, onError);\n      }\n\n      if (Array.isArray(url)) {\n        var loaded = 0;\n\n        for (var i = 0, il = url.length; i < il; ++i) {\n          loadTexture(i);\n        }\n      } else {\n        // compressed cubemap texture stored in a single DDS file\n        loader.load(url, function (buffer) {\n          var texDatas = scope._parser(buffer, true);\n\n          if (texDatas.isCubemap) {\n            var faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n            for (var f = 0; f < faces; f++) {\n              images[f] = {\n                mipmaps: []\n              };\n\n              for (var i = 0; i < texDatas.mipmapCount; i++) {\n                images[f].mipmaps.push(texDatas.mipmaps[f * texDatas.mipmapCount + i]);\n                images[f].format = texDatas.format;\n                images[f].width = texDatas.width;\n                images[f].height = texDatas.height;\n              }\n            }\n          } else {\n            texture.image.width = texDatas.width;\n            texture.image.height = texDatas.height;\n            texture.mipmaps = texDatas.mipmaps;\n          }\n\n          if (texDatas.mipmapCount === 1) {\n            texture.minFilter = THREE.LinearFilter;\n          }\n\n          texture.format = texDatas.format;\n          texture.needsUpdate = true;\n          if (onLoad) onLoad(texture);\n        }, onProgress, onError);\n      }\n\n      return texture;\n    },\n    setPath: function (value) {\n      this.path = value;\n      return this;\n    }\n  }); // File:src/materials/Material.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  THREE.Material = function () {\n    Object.defineProperty(this, 'id', {\n      value: THREE.MaterialIdCount++\n    });\n    this.uuid = THREE.Math.generateUUID();\n    this.name = '';\n    this.type = 'Material';\n    this.fog = true;\n    this.lights = true;\n    this.blending = THREE.NormalBlending;\n    this.side = THREE.FrontSide;\n    this.shading = THREE.SmoothShading; // THREE.FlatShading, THREE.SmoothShading\n\n    this.vertexColors = THREE.NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n    this.opacity = 1;\n    this.transparent = false;\n    this.blendSrc = THREE.SrcAlphaFactor;\n    this.blendDst = THREE.OneMinusSrcAlphaFactor;\n    this.blendEquation = THREE.AddEquation;\n    this.blendSrcAlpha = null;\n    this.blendDstAlpha = null;\n    this.blendEquationAlpha = null;\n    this.depthFunc = THREE.LessEqualDepth;\n    this.depthTest = true;\n    this.depthWrite = true;\n    this.clippingPlanes = null;\n    this.clipShadows = false;\n    this.colorWrite = true;\n    this.precision = null; // override the renderer's default precision for this material\n\n    this.polygonOffset = false;\n    this.polygonOffsetFactor = 0;\n    this.polygonOffsetUnits = 0;\n    this.alphaTest = 0;\n    this.premultipliedAlpha = false;\n    this.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n    this.visible = true;\n    this._needsUpdate = true;\n  };\n\n  THREE.Material.prototype = {\n    constructor: THREE.Material,\n\n    get needsUpdate() {\n      return this._needsUpdate;\n    },\n\n    set needsUpdate(value) {\n      if (value === true) this.update();\n      this._needsUpdate = value;\n    },\n\n    setValues: function (values) {\n      if (values === undefined) return;\n\n      for (var key in values) {\n        var newValue = values[key];\n\n        if (newValue === undefined) {\n          console.warn(\"THREE.Material: '\" + key + \"' parameter is undefined.\");\n          continue;\n        }\n\n        var currentValue = this[key];\n\n        if (currentValue === undefined) {\n          console.warn(\"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\");\n          continue;\n        }\n\n        if (currentValue instanceof THREE.Color) {\n          currentValue.set(newValue);\n        } else if (currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3) {\n          currentValue.copy(newValue);\n        } else if (key === 'overdraw') {\n          // ensure overdraw is backwards-compatible with legacy boolean type\n          this[key] = Number(newValue);\n        } else {\n          this[key] = newValue;\n        }\n      }\n    },\n    toJSON: function (meta) {\n      var isRoot = meta === undefined;\n\n      if (isRoot) {\n        meta = {\n          textures: {},\n          images: {}\n        };\n      }\n\n      var data = {\n        metadata: {\n          version: 4.4,\n          type: 'Material',\n          generator: 'Material.toJSON'\n        }\n      }; // standard Material serialization\n\n      data.uuid = this.uuid;\n      data.type = this.type;\n      if (this.name !== '') data.name = this.name;\n      if (this.color instanceof THREE.Color) data.color = this.color.getHex();\n      if (this.roughness !== undefined) data.roughness = this.roughness;\n      if (this.metalness !== undefined) data.metalness = this.metalness;\n      if (this.emissive instanceof THREE.Color) data.emissive = this.emissive.getHex();\n      if (this.specular instanceof THREE.Color) data.specular = this.specular.getHex();\n      if (this.shininess !== undefined) data.shininess = this.shininess;\n      if (this.map instanceof THREE.Texture) data.map = this.map.toJSON(meta).uuid;\n      if (this.alphaMap instanceof THREE.Texture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n      if (this.lightMap instanceof THREE.Texture) data.lightMap = this.lightMap.toJSON(meta).uuid;\n\n      if (this.bumpMap instanceof THREE.Texture) {\n        data.bumpMap = this.bumpMap.toJSON(meta).uuid;\n        data.bumpScale = this.bumpScale;\n      }\n\n      if (this.normalMap instanceof THREE.Texture) {\n        data.normalMap = this.normalMap.toJSON(meta).uuid;\n        data.normalScale = this.normalScale.toArray();\n      }\n\n      if (this.displacementMap instanceof THREE.Texture) {\n        data.displacementMap = this.displacementMap.toJSON(meta).uuid;\n        data.displacementScale = this.displacementScale;\n        data.displacementBias = this.displacementBias;\n      }\n\n      if (this.roughnessMap instanceof THREE.Texture) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\n      if (this.metalnessMap instanceof THREE.Texture) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\n      if (this.emissiveMap instanceof THREE.Texture) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\n      if (this.specularMap instanceof THREE.Texture) data.specularMap = this.specularMap.toJSON(meta).uuid;\n\n      if (this.envMap instanceof THREE.Texture) {\n        data.envMap = this.envMap.toJSON(meta).uuid;\n        data.reflectivity = this.reflectivity; // Scale behind envMap\n      }\n\n      if (this.size !== undefined) data.size = this.size;\n      if (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n      if (this.blending !== THREE.NormalBlending) data.blending = this.blending;\n      if (this.shading !== THREE.SmoothShading) data.shading = this.shading;\n      if (this.side !== THREE.FrontSide) data.side = this.side;\n      if (this.vertexColors !== THREE.NoColors) data.vertexColors = this.vertexColors;\n      if (this.opacity < 1) data.opacity = this.opacity;\n      if (this.transparent === true) data.transparent = this.transparent;\n      if (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n      if (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\n      if (this.wireframe === true) data.wireframe = this.wireframe;\n      if (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth; // TODO: Copied from Object3D.toJSON\n\n      function extractFromCache(cache) {\n        var values = [];\n\n        for (var key in cache) {\n          var data = cache[key];\n          delete data.metadata;\n          values.push(data);\n        }\n\n        return values;\n      }\n\n      if (isRoot) {\n        var textures = extractFromCache(meta.textures);\n        var images = extractFromCache(meta.images);\n        if (textures.length > 0) data.textures = textures;\n        if (images.length > 0) data.images = images;\n      }\n\n      return data;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (source) {\n      this.name = source.name;\n      this.fog = source.fog;\n      this.lights = source.lights;\n      this.blending = source.blending;\n      this.side = source.side;\n      this.shading = source.shading;\n      this.vertexColors = source.vertexColors;\n      this.opacity = source.opacity;\n      this.transparent = source.transparent;\n      this.blendSrc = source.blendSrc;\n      this.blendDst = source.blendDst;\n      this.blendEquation = source.blendEquation;\n      this.blendSrcAlpha = source.blendSrcAlpha;\n      this.blendDstAlpha = source.blendDstAlpha;\n      this.blendEquationAlpha = source.blendEquationAlpha;\n      this.depthFunc = source.depthFunc;\n      this.depthTest = source.depthTest;\n      this.depthWrite = source.depthWrite;\n      this.colorWrite = source.colorWrite;\n      this.precision = source.precision;\n      this.polygonOffset = source.polygonOffset;\n      this.polygonOffsetFactor = source.polygonOffsetFactor;\n      this.polygonOffsetUnits = source.polygonOffsetUnits;\n      this.alphaTest = source.alphaTest;\n      this.premultipliedAlpha = source.premultipliedAlpha;\n      this.overdraw = source.overdraw;\n      this.visible = source.visible;\n      this.clipShadows = source.clipShadows;\n      var srcPlanes = source.clippingPlanes,\n          dstPlanes = null;\n\n      if (srcPlanes !== null) {\n        var n = srcPlanes.length;\n        dstPlanes = new Array(n);\n\n        for (var i = 0; i !== n; ++i) dstPlanes[i] = srcPlanes[i].clone();\n      }\n\n      this.clippingPlanes = dstPlanes;\n      return this;\n    },\n    update: function () {\n      this.dispatchEvent({\n        type: 'update'\n      });\n    },\n    dispose: function () {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  };\n  Object.assign(THREE.Material.prototype, THREE.EventDispatcher.prototype);\n  THREE.MaterialIdCount = 0; // File:src/materials/LineBasicMaterial.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *\n   *  linewidth: <float>,\n   *  linecap: \"round\",\n   *  linejoin: \"round\"\n   * }\n   */\n\n  THREE.LineBasicMaterial = function (parameters) {\n    THREE.Material.call(this);\n    this.type = 'LineBasicMaterial';\n    this.color = new THREE.Color(0xffffff);\n    this.linewidth = 1;\n    this.linecap = 'round';\n    this.linejoin = 'round';\n    this.lights = false;\n    this.setValues(parameters);\n  };\n\n  THREE.LineBasicMaterial.prototype = Object.create(THREE.Material.prototype);\n  THREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\n\n  THREE.LineBasicMaterial.prototype.copy = function (source) {\n    THREE.Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.linewidth = source.linewidth;\n    this.linecap = source.linecap;\n    this.linejoin = source.linejoin;\n    return this;\n  }; // File:src/materials/LineDashedMaterial.js\n\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *\n   *  linewidth: <float>,\n   *\n   *  scale: <float>,\n   *  dashSize: <float>,\n   *  gapSize: <float>\n   * }\n   */\n\n\n  THREE.LineDashedMaterial = function (parameters) {\n    THREE.Material.call(this);\n    this.type = 'LineDashedMaterial';\n    this.color = new THREE.Color(0xffffff);\n    this.linewidth = 1;\n    this.scale = 1;\n    this.dashSize = 3;\n    this.gapSize = 1;\n    this.lights = false;\n    this.setValues(parameters);\n  };\n\n  THREE.LineDashedMaterial.prototype = Object.create(THREE.Material.prototype);\n  THREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\n\n  THREE.LineDashedMaterial.prototype.copy = function (source) {\n    THREE.Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.linewidth = source.linewidth;\n    this.scale = source.scale;\n    this.dashSize = source.dashSize;\n    this.gapSize = source.gapSize;\n    return this;\n  }; // File:src/materials/MeshBasicMaterial.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  aoMap: new THREE.Texture( <Image> ),\n   *  aoMapIntensity: <float>\n   *\n   *  specularMap: new THREE.Texture( <Image> ),\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n   *  combine: THREE.Multiply,\n   *  reflectivity: <float>,\n   *  refractionRatio: <float>,\n   *\n   *  shading: THREE.SmoothShading,\n   *  depthTest: <bool>,\n   *  depthWrite: <bool>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>,\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>\n   * }\n   */\n\n\n  THREE.MeshBasicMaterial = function (parameters) {\n    THREE.Material.call(this);\n    this.type = 'MeshBasicMaterial';\n    this.color = new THREE.Color(0xffffff); // emissive\n\n    this.map = null;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.specularMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.combine = THREE.MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.lights = false;\n    this.setValues(parameters);\n  };\n\n  THREE.MeshBasicMaterial.prototype = Object.create(THREE.Material.prototype);\n  THREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\n\n  THREE.MeshBasicMaterial.prototype.copy = function (source) {\n    THREE.Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.specularMap = source.specularMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    return this;\n  }; // File:src/materials/MeshDepthMaterial.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   * @author bhouston / https://clara.io\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * parameters = {\n   *\n   *  opacity: <float>,\n   *\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  displacementMap: new THREE.Texture( <Image> ),\n   *  displacementScale: <float>,\n   *  displacementBias: <float>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>\n   * }\n   */\n\n\n  THREE.MeshDepthMaterial = function (parameters) {\n    THREE.Material.call(this);\n    this.type = 'MeshDepthMaterial';\n    this.depthPacking = THREE.BasicDepthPacking;\n    this.skinning = false;\n    this.morphTargets = false;\n    this.map = null;\n    this.alphaMap = null;\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.fog = false;\n    this.lights = false;\n    this.setValues(parameters);\n  };\n\n  THREE.MeshDepthMaterial.prototype = Object.create(THREE.Material.prototype);\n  THREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\n\n  THREE.MeshDepthMaterial.prototype.copy = function (source) {\n    THREE.Material.prototype.copy.call(this, source);\n    this.depthPacking = source.depthPacking;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.map = source.map;\n    this.alphaMap = source.alphaMap;\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    return this;\n  }; // File:src/materials/MeshLambertMaterial.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  lightMap: new THREE.Texture( <Image> ),\n   *  lightMapIntensity: <float>\n   *\n   *  aoMap: new THREE.Texture( <Image> ),\n   *  aoMapIntensity: <float>\n   *\n   *  emissive: <hex>,\n   *  emissiveIntensity: <float>\n   *  emissiveMap: new THREE.Texture( <Image> ),\n   *\n   *  specularMap: new THREE.Texture( <Image> ),\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n   *  combine: THREE.Multiply,\n   *  reflectivity: <float>,\n   *  refractionRatio: <float>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>,\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *  morphNormals: <bool>\n   * }\n   */\n\n\n  THREE.MeshLambertMaterial = function (parameters) {\n    THREE.Material.call(this);\n    this.type = 'MeshLambertMaterial';\n    this.color = new THREE.Color(0xffffff); // diffuse\n\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.emissive = new THREE.Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n    this.specularMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.combine = THREE.MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.setValues(parameters);\n  };\n\n  THREE.MeshLambertMaterial.prototype = Object.create(THREE.Material.prototype);\n  THREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\n\n  THREE.MeshLambertMaterial.prototype.copy = function (source) {\n    THREE.Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n    this.specularMap = source.specularMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  }; // File:src/materials/MeshNormalMaterial.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   *\n   * parameters = {\n   *  opacity: <float>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>\n   * }\n   */\n\n\n  THREE.MeshNormalMaterial = function (parameters) {\n    THREE.Material.call(this, parameters);\n    this.type = 'MeshNormalMaterial';\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.fog = false;\n    this.lights = false;\n    this.morphTargets = false;\n    this.setValues(parameters);\n  };\n\n  THREE.MeshNormalMaterial.prototype = Object.create(THREE.Material.prototype);\n  THREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\n\n  THREE.MeshNormalMaterial.prototype.copy = function (source) {\n    THREE.Material.prototype.copy.call(this, source);\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    return this;\n  }; // File:src/materials/MeshPhongMaterial.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  specular: <hex>,\n   *  shininess: <float>,\n   *  opacity: <float>,\n   *\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  lightMap: new THREE.Texture( <Image> ),\n   *  lightMapIntensity: <float>\n   *\n   *  aoMap: new THREE.Texture( <Image> ),\n   *  aoMapIntensity: <float>\n   *\n   *  emissive: <hex>,\n   *  emissiveIntensity: <float>\n   *  emissiveMap: new THREE.Texture( <Image> ),\n   *\n   *  bumpMap: new THREE.Texture( <Image> ),\n   *  bumpScale: <float>,\n   *\n   *  normalMap: new THREE.Texture( <Image> ),\n   *  normalScale: <Vector2>,\n   *\n   *  displacementMap: new THREE.Texture( <Image> ),\n   *  displacementScale: <float>,\n   *  displacementBias: <float>,\n   *\n   *  specularMap: new THREE.Texture( <Image> ),\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n   *  combine: THREE.Multiply,\n   *  reflectivity: <float>,\n   *  refractionRatio: <float>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>,\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *  morphNormals: <bool>\n   * }\n   */\n\n\n  THREE.MeshPhongMaterial = function (parameters) {\n    THREE.Material.call(this);\n    this.type = 'MeshPhongMaterial';\n    this.color = new THREE.Color(0xffffff); // diffuse\n\n    this.specular = new THREE.Color(0x111111);\n    this.shininess = 30;\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.emissive = new THREE.Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalScale = new THREE.Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.specularMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.combine = THREE.MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.setValues(parameters);\n  };\n\n  THREE.MeshPhongMaterial.prototype = Object.create(THREE.Material.prototype);\n  THREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\n\n  THREE.MeshPhongMaterial.prototype.copy = function (source) {\n    THREE.Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.specular.copy(source.specular);\n    this.shininess = source.shininess;\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.specularMap = source.specularMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  }; // File:src/materials/MeshStandardMaterial.js\n\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  roughness: <float>,\n   *  metalness: <float>,\n   *  opacity: <float>,\n   *\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  lightMap: new THREE.Texture( <Image> ),\n   *  lightMapIntensity: <float>\n   *\n   *  aoMap: new THREE.Texture( <Image> ),\n   *  aoMapIntensity: <float>\n   *\n   *  emissive: <hex>,\n   *  emissiveIntensity: <float>\n   *  emissiveMap: new THREE.Texture( <Image> ),\n   *\n   *  bumpMap: new THREE.Texture( <Image> ),\n   *  bumpScale: <float>,\n   *\n   *  normalMap: new THREE.Texture( <Image> ),\n   *  normalScale: <Vector2>,\n   *\n   *  displacementMap: new THREE.Texture( <Image> ),\n   *  displacementScale: <float>,\n   *  displacementBias: <float>,\n   *\n   *  roughnessMap: new THREE.Texture( <Image> ),\n   *\n   *  metalnessMap: new THREE.Texture( <Image> ),\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n   *  envMapIntensity: <float>\n   *\n   *  refractionRatio: <float>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>,\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *  morphNormals: <bool>\n   * }\n   */\n\n\n  THREE.MeshStandardMaterial = function (parameters) {\n    THREE.Material.call(this);\n    this.defines = {\n      'STANDARD': ''\n    };\n    this.type = 'MeshStandardMaterial';\n    this.color = new THREE.Color(0xffffff); // diffuse\n\n    this.roughness = 0.5;\n    this.metalness = 0.5;\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.emissive = new THREE.Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalScale = new THREE.Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.roughnessMap = null;\n    this.metalnessMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.envMapIntensity = 1.0;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.setValues(parameters);\n  };\n\n  THREE.MeshStandardMaterial.prototype = Object.create(THREE.Material.prototype);\n  THREE.MeshStandardMaterial.prototype.constructor = THREE.MeshStandardMaterial;\n\n  THREE.MeshStandardMaterial.prototype.copy = function (source) {\n    THREE.Material.prototype.copy.call(this, source);\n    this.defines = {\n      'STANDARD': ''\n    };\n    this.color.copy(source.color);\n    this.roughness = source.roughness;\n    this.metalness = source.metalness;\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.roughnessMap = source.roughnessMap;\n    this.metalnessMap = source.metalnessMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.envMapIntensity = source.envMapIntensity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  }; // File:src/materials/MeshPhysicalMaterial.js\n\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * parameters = {\n   *  reflectivity: <float>\n   * }\n   */\n\n\n  THREE.MeshPhysicalMaterial = function (parameters) {\n    THREE.MeshStandardMaterial.call(this);\n    this.defines = {\n      'PHYSICAL': ''\n    };\n    this.type = 'MeshPhysicalMaterial';\n    this.reflectivity = 0.5; // maps to F0 = 0.04\n\n    this.clearCoat = 0.0;\n    this.clearCoatRoughness = 0.0;\n    this.setValues(parameters);\n  };\n\n  THREE.MeshPhysicalMaterial.prototype = Object.create(THREE.MeshStandardMaterial.prototype);\n  THREE.MeshPhysicalMaterial.prototype.constructor = THREE.MeshPhysicalMaterial;\n\n  THREE.MeshPhysicalMaterial.prototype.copy = function (source) {\n    THREE.MeshStandardMaterial.prototype.copy.call(this, source);\n    this.defines = {\n      'PHYSICAL': ''\n    };\n    this.reflectivity = source.reflectivity;\n    this.clearCoat = source.clearCoat;\n    this.clearCoatRoughness = source.clearCoatRoughness;\n    return this;\n  }; // File:src/materials/MultiMaterial.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  THREE.MultiMaterial = function (materials) {\n    this.uuid = THREE.Math.generateUUID();\n    this.type = 'MultiMaterial';\n    this.materials = materials instanceof Array ? materials : [];\n    this.visible = true;\n  };\n\n  THREE.MultiMaterial.prototype = {\n    constructor: THREE.MultiMaterial,\n    toJSON: function (meta) {\n      var output = {\n        metadata: {\n          version: 4.2,\n          type: 'material',\n          generator: 'MaterialExporter'\n        },\n        uuid: this.uuid,\n        type: this.type,\n        materials: []\n      };\n      var materials = this.materials;\n\n      for (var i = 0, l = materials.length; i < l; i++) {\n        var material = materials[i].toJSON(meta);\n        delete material.metadata;\n        output.materials.push(material);\n      }\n\n      output.visible = this.visible;\n      return output;\n    },\n    clone: function () {\n      var material = new this.constructor();\n\n      for (var i = 0; i < this.materials.length; i++) {\n        material.materials.push(this.materials[i].clone());\n      }\n\n      material.visible = this.visible;\n      return material;\n    }\n  }; // File:src/materials/PointsMaterial.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  size: <float>,\n   *  sizeAttenuation: <bool>\n   * }\n   */\n\n  THREE.PointsMaterial = function (parameters) {\n    THREE.Material.call(this);\n    this.type = 'PointsMaterial';\n    this.color = new THREE.Color(0xffffff);\n    this.map = null;\n    this.size = 1;\n    this.sizeAttenuation = true;\n    this.lights = false;\n    this.setValues(parameters);\n  };\n\n  THREE.PointsMaterial.prototype = Object.create(THREE.Material.prototype);\n  THREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\n\n  THREE.PointsMaterial.prototype.copy = function (source) {\n    THREE.Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.size = source.size;\n    this.sizeAttenuation = source.sizeAttenuation;\n    return this;\n  }; // File:src/materials/ShaderMaterial.js\n\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  defines: { \"label\" : \"value\" },\n   *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n   *\n   *  fragmentShader: <string>,\n   *  vertexShader: <string>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>,\n   *\n   *  lights: <bool>,\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *  morphNormals: <bool>\n   * }\n   */\n\n\n  THREE.ShaderMaterial = function (parameters) {\n    THREE.Material.call(this);\n    this.type = 'ShaderMaterial';\n    this.defines = {};\n    this.uniforms = {};\n    this.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n    this.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n    this.linewidth = 1;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.fog = false; // set to use scene fog\n\n    this.lights = false; // set to use scene lights\n\n    this.clipping = false; // set to use user-defined clipping planes\n\n    this.skinning = false; // set to use skinning attribute streams\n\n    this.morphTargets = false; // set to use morph targets\n\n    this.morphNormals = false; // set to use morph normals\n\n    this.extensions = {\n      derivatives: false,\n      // set to use derivatives\n      fragDepth: false,\n      // set to use fragment depth values\n      drawBuffers: false,\n      // set to use draw buffers\n      shaderTextureLOD: false // set to use shader texture LOD\n\n    }; // When rendered geometry doesn't include these attributes but the material does,\n    // use these default values in WebGL. This avoids errors when buffer data is missing.\n\n    this.defaultAttributeValues = {\n      'color': [1, 1, 1],\n      'uv': [0, 0],\n      'uv2': [0, 0]\n    };\n    this.index0AttributeName = undefined;\n\n    if (parameters !== undefined) {\n      if (parameters.attributes !== undefined) {\n        console.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');\n      }\n\n      this.setValues(parameters);\n    }\n  };\n\n  THREE.ShaderMaterial.prototype = Object.create(THREE.Material.prototype);\n  THREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\n\n  THREE.ShaderMaterial.prototype.copy = function (source) {\n    THREE.Material.prototype.copy.call(this, source);\n    this.fragmentShader = source.fragmentShader;\n    this.vertexShader = source.vertexShader;\n    this.uniforms = THREE.UniformsUtils.clone(source.uniforms);\n    this.defines = source.defines;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.lights = source.lights;\n    this.clipping = source.clipping;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    this.extensions = source.extensions;\n    return this;\n  };\n\n  THREE.ShaderMaterial.prototype.toJSON = function (meta) {\n    var data = THREE.Material.prototype.toJSON.call(this, meta);\n    data.uniforms = this.uniforms;\n    data.vertexShader = this.vertexShader;\n    data.fragmentShader = this.fragmentShader;\n    return data;\n  }; // File:src/materials/RawShaderMaterial.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  THREE.RawShaderMaterial = function (parameters) {\n    THREE.ShaderMaterial.call(this, parameters);\n    this.type = 'RawShaderMaterial';\n  };\n\n  THREE.RawShaderMaterial.prototype = Object.create(THREE.ShaderMaterial.prototype);\n  THREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial; // File:src/materials/SpriteMaterial.js\n\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *\tuvOffset: new THREE.Vector2(),\n   *\tuvScale: new THREE.Vector2()\n   * }\n   */\n\n  THREE.SpriteMaterial = function (parameters) {\n    THREE.Material.call(this);\n    this.type = 'SpriteMaterial';\n    this.color = new THREE.Color(0xffffff);\n    this.map = null;\n    this.rotation = 0;\n    this.fog = false;\n    this.lights = false;\n    this.setValues(parameters);\n  };\n\n  THREE.SpriteMaterial.prototype = Object.create(THREE.Material.prototype);\n  THREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\n\n  THREE.SpriteMaterial.prototype.copy = function (source) {\n    THREE.Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.rotation = source.rotation;\n    return this;\n  }; // File:src/materials/ShadowMaterial.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  THREE.ShadowMaterial = function () {\n    THREE.ShaderMaterial.call(this, {\n      uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib[\"lights\"], {\n        opacity: {\n          value: 1.0\n        }\n      }]),\n      vertexShader: THREE.ShaderChunk['shadow_vert'],\n      fragmentShader: THREE.ShaderChunk['shadow_frag']\n    });\n    this.lights = true;\n    this.transparent = true;\n    Object.defineProperties(this, {\n      opacity: {\n        enumerable: true,\n        get: function () {\n          return this.uniforms.opacity.value;\n        },\n        set: function (value) {\n          this.uniforms.opacity.value = value;\n        }\n      }\n    });\n  };\n\n  THREE.ShadowMaterial.prototype = Object.create(THREE.ShaderMaterial.prototype);\n  THREE.ShadowMaterial.prototype.constructor = THREE.ShadowMaterial; // File:src/textures/Texture.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   * @author szimek / https://github.com/szimek/\n   */\n\n  THREE.Texture = function (image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n    Object.defineProperty(this, 'id', {\n      value: THREE.TextureIdCount++\n    });\n    this.uuid = THREE.Math.generateUUID();\n    this.name = '';\n    this.sourceFile = '';\n    this.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\n    this.mipmaps = [];\n    this.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\n    this.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\n    this.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\n    this.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\n    this.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\n    this.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n    this.format = format !== undefined ? format : THREE.RGBAFormat;\n    this.type = type !== undefined ? type : THREE.UnsignedByteType;\n    this.offset = new THREE.Vector2(0, 0);\n    this.repeat = new THREE.Vector2(1, 1);\n    this.generateMipmaps = true;\n    this.premultiplyAlpha = false;\n    this.flipY = true;\n    this.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n    // Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n    //\n    // Also changing the encoding after already used by a Material will not automatically make the Material\n    // update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\n    this.encoding = encoding !== undefined ? encoding : THREE.LinearEncoding;\n    this.version = 0;\n    this.onUpdate = null;\n  };\n\n  THREE.Texture.DEFAULT_IMAGE = undefined;\n  THREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\n  THREE.Texture.prototype = {\n    constructor: THREE.Texture,\n\n    set needsUpdate(value) {\n      if (value === true) this.version++;\n    },\n\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (source) {\n      this.image = source.image;\n      this.mipmaps = source.mipmaps.slice(0);\n      this.mapping = source.mapping;\n      this.wrapS = source.wrapS;\n      this.wrapT = source.wrapT;\n      this.magFilter = source.magFilter;\n      this.minFilter = source.minFilter;\n      this.anisotropy = source.anisotropy;\n      this.format = source.format;\n      this.type = source.type;\n      this.offset.copy(source.offset);\n      this.repeat.copy(source.repeat);\n      this.generateMipmaps = source.generateMipmaps;\n      this.premultiplyAlpha = source.premultiplyAlpha;\n      this.flipY = source.flipY;\n      this.unpackAlignment = source.unpackAlignment;\n      this.encoding = source.encoding;\n      return this;\n    },\n    toJSON: function (meta) {\n      if (meta.textures[this.uuid] !== undefined) {\n        return meta.textures[this.uuid];\n      }\n\n      function getDataURL(image) {\n        var canvas;\n\n        if (image.toDataURL !== undefined) {\n          canvas = image;\n        } else {\n          canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n          canvas.width = image.width;\n          canvas.height = image.height;\n          canvas.getContext('2d').drawImage(image, 0, 0, image.width, image.height);\n        }\n\n        if (canvas.width > 2048 || canvas.height > 2048) {\n          return canvas.toDataURL('image/jpeg', 0.6);\n        } else {\n          return canvas.toDataURL('image/png');\n        }\n      }\n\n      var output = {\n        metadata: {\n          version: 4.4,\n          type: 'Texture',\n          generator: 'Texture.toJSON'\n        },\n        uuid: this.uuid,\n        name: this.name,\n        mapping: this.mapping,\n        repeat: [this.repeat.x, this.repeat.y],\n        offset: [this.offset.x, this.offset.y],\n        wrap: [this.wrapS, this.wrapT],\n        minFilter: this.minFilter,\n        magFilter: this.magFilter,\n        anisotropy: this.anisotropy,\n        flipY: this.flipY\n      };\n\n      if (this.image !== undefined) {\n        // TODO: Move to THREE.Image\n        var image = this.image;\n\n        if (image.uuid === undefined) {\n          image.uuid = THREE.Math.generateUUID(); // UGH\n        }\n\n        if (meta.images[image.uuid] === undefined) {\n          meta.images[image.uuid] = {\n            uuid: image.uuid,\n            url: getDataURL(image)\n          };\n        }\n\n        output.image = image.uuid;\n      }\n\n      meta.textures[this.uuid] = output;\n      return output;\n    },\n    dispose: function () {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    },\n    transformUv: function (uv) {\n      if (this.mapping !== THREE.UVMapping) return;\n      uv.multiply(this.repeat);\n      uv.add(this.offset);\n\n      if (uv.x < 0 || uv.x > 1) {\n        switch (this.wrapS) {\n          case THREE.RepeatWrapping:\n            uv.x = uv.x - Math.floor(uv.x);\n            break;\n\n          case THREE.ClampToEdgeWrapping:\n            uv.x = uv.x < 0 ? 0 : 1;\n            break;\n\n          case THREE.MirroredRepeatWrapping:\n            if (Math.abs(Math.floor(uv.x) % 2) === 1) {\n              uv.x = Math.ceil(uv.x) - uv.x;\n            } else {\n              uv.x = uv.x - Math.floor(uv.x);\n            }\n\n            break;\n        }\n      }\n\n      if (uv.y < 0 || uv.y > 1) {\n        switch (this.wrapT) {\n          case THREE.RepeatWrapping:\n            uv.y = uv.y - Math.floor(uv.y);\n            break;\n\n          case THREE.ClampToEdgeWrapping:\n            uv.y = uv.y < 0 ? 0 : 1;\n            break;\n\n          case THREE.MirroredRepeatWrapping:\n            if (Math.abs(Math.floor(uv.y) % 2) === 1) {\n              uv.y = Math.ceil(uv.y) - uv.y;\n            } else {\n              uv.y = uv.y - Math.floor(uv.y);\n            }\n\n            break;\n        }\n      }\n\n      if (this.flipY) {\n        uv.y = 1 - uv.y;\n      }\n    }\n  };\n  Object.assign(THREE.Texture.prototype, THREE.EventDispatcher.prototype);\n  THREE.TextureIdCount = 0; // File:src/textures/DepthTexture.js\n\n  /**\n   * @author Matt DesLauriers / @mattdesl\n   */\n\n  THREE.DepthTexture = function (width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy) {\n    THREE.Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, THREE.DepthFormat, type, anisotropy);\n    this.image = {\n      width: width,\n      height: height\n    };\n    this.type = type !== undefined ? type : THREE.UnsignedShortType;\n    this.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\n    this.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\n    this.flipY = false;\n    this.generateMipmaps = false;\n  };\n\n  THREE.DepthTexture.prototype = Object.create(THREE.Texture.prototype);\n  THREE.DepthTexture.prototype.constructor = THREE.DepthTexture; // File:src/textures/CanvasTexture.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.CanvasTexture = function (canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n    THREE.Texture.call(this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n    this.needsUpdate = true;\n  };\n\n  THREE.CanvasTexture.prototype = Object.create(THREE.Texture.prototype);\n  THREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture; // File:src/textures/CubeTexture.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.CubeTexture = function (images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n    images = images !== undefined ? images : [];\n    mapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\n    THREE.Texture.call(this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n    this.flipY = false;\n  };\n\n  THREE.CubeTexture.prototype = Object.create(THREE.Texture.prototype);\n  THREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\n  Object.defineProperty(THREE.CubeTexture.prototype, 'images', {\n    get: function () {\n      return this.image;\n    },\n    set: function (value) {\n      this.image = value;\n    }\n  }); // File:src/textures/CompressedTexture.js\n\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  THREE.CompressedTexture = function (mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n    THREE.Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n    this.image = {\n      width: width,\n      height: height\n    };\n    this.mipmaps = mipmaps; // no flipping for cube textures\n    // (also flipping doesn't work for compressed textures )\n\n    this.flipY = false; // can't generate mipmaps for compressed textures\n    // mips must be embedded in DDS files\n\n    this.generateMipmaps = false;\n  };\n\n  THREE.CompressedTexture.prototype = Object.create(THREE.Texture.prototype);\n  THREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture; // File:src/textures/DataTexture.js\n\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  THREE.DataTexture = function (data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n    THREE.Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n    this.image = {\n      data: data,\n      width: width,\n      height: height\n    };\n    this.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\n    this.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\n    this.flipY = false;\n    this.generateMipmaps = false;\n  };\n\n  THREE.DataTexture.prototype = Object.create(THREE.Texture.prototype);\n  THREE.DataTexture.prototype.constructor = THREE.DataTexture; // File:src/textures/VideoTexture.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.VideoTexture = function (video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n    THREE.Texture.call(this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n    this.generateMipmaps = false;\n    var scope = this;\n\n    function update() {\n      requestAnimationFrame(update);\n\n      if (video.readyState >= video.HAVE_CURRENT_DATA) {\n        scope.needsUpdate = true;\n      }\n    }\n\n    update();\n  };\n\n  THREE.VideoTexture.prototype = Object.create(THREE.Texture.prototype);\n  THREE.VideoTexture.prototype.constructor = THREE.VideoTexture; // File:src/objects/Group.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.Group = function () {\n    THREE.Object3D.call(this);\n    this.type = 'Group';\n  };\n\n  THREE.Group.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n    constructor: THREE.Group\n  }); // File:src/objects/Points.js\n\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  THREE.Points = function (geometry, material) {\n    THREE.Object3D.call(this);\n    this.type = 'Points';\n    this.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\n    this.material = material !== undefined ? material : new THREE.PointsMaterial({\n      color: Math.random() * 0xffffff\n    });\n  };\n\n  THREE.Points.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n    constructor: THREE.Points,\n    raycast: function () {\n      var inverseMatrix = new THREE.Matrix4();\n      var ray = new THREE.Ray();\n      var sphere = new THREE.Sphere();\n      return function raycast(raycaster, intersects) {\n        var object = this;\n        var geometry = this.geometry;\n        var matrixWorld = this.matrixWorld;\n        var threshold = raycaster.params.Points.threshold; // Checking boundingSphere distance to ray\n\n        if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n        sphere.copy(geometry.boundingSphere);\n        sphere.applyMatrix4(matrixWorld);\n        if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n        inverseMatrix.getInverse(matrixWorld);\n        ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n        var localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n        var localThresholdSq = localThreshold * localThreshold;\n        var position = new THREE.Vector3();\n\n        function testPoint(point, index) {\n          var rayPointDistanceSq = ray.distanceSqToPoint(point);\n\n          if (rayPointDistanceSq < localThresholdSq) {\n            var intersectPoint = ray.closestPointToPoint(point);\n            intersectPoint.applyMatrix4(matrixWorld);\n            var distance = raycaster.ray.origin.distanceTo(intersectPoint);\n            if (distance < raycaster.near || distance > raycaster.far) return;\n            intersects.push({\n              distance: distance,\n              distanceToRay: Math.sqrt(rayPointDistanceSq),\n              point: intersectPoint.clone(),\n              index: index,\n              face: null,\n              object: object\n            });\n          }\n        }\n\n        if (geometry instanceof THREE.BufferGeometry) {\n          var index = geometry.index;\n          var attributes = geometry.attributes;\n          var positions = attributes.position.array;\n\n          if (index !== null) {\n            var indices = index.array;\n\n            for (var i = 0, il = indices.length; i < il; i++) {\n              var a = indices[i];\n              position.fromArray(positions, a * 3);\n              testPoint(position, a);\n            }\n          } else {\n            for (var i = 0, l = positions.length / 3; i < l; i++) {\n              position.fromArray(positions, i * 3);\n              testPoint(position, i);\n            }\n          }\n        } else {\n          var vertices = geometry.vertices;\n\n          for (var i = 0, l = vertices.length; i < l; i++) {\n            testPoint(vertices[i], i);\n          }\n        }\n      };\n    }(),\n    clone: function () {\n      return new this.constructor(this.geometry, this.material).copy(this);\n    }\n  }); // File:src/objects/Line.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.Line = function (geometry, material, mode) {\n    if (mode === 1) {\n      console.warn('THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.');\n      return new THREE.LineSegments(geometry, material);\n    }\n\n    THREE.Object3D.call(this);\n    this.type = 'Line';\n    this.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\n    this.material = material !== undefined ? material : new THREE.LineBasicMaterial({\n      color: Math.random() * 0xffffff\n    });\n  };\n\n  THREE.Line.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n    constructor: THREE.Line,\n    raycast: function () {\n      var inverseMatrix = new THREE.Matrix4();\n      var ray = new THREE.Ray();\n      var sphere = new THREE.Sphere();\n      return function raycast(raycaster, intersects) {\n        var precision = raycaster.linePrecision;\n        var precisionSq = precision * precision;\n        var geometry = this.geometry;\n        var matrixWorld = this.matrixWorld; // Checking boundingSphere distance to ray\n\n        if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n        sphere.copy(geometry.boundingSphere);\n        sphere.applyMatrix4(matrixWorld);\n        if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n        inverseMatrix.getInverse(matrixWorld);\n        ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n        var vStart = new THREE.Vector3();\n        var vEnd = new THREE.Vector3();\n        var interSegment = new THREE.Vector3();\n        var interRay = new THREE.Vector3();\n        var step = this instanceof THREE.LineSegments ? 2 : 1;\n\n        if (geometry instanceof THREE.BufferGeometry) {\n          var index = geometry.index;\n          var attributes = geometry.attributes;\n          var positions = attributes.position.array;\n\n          if (index !== null) {\n            var indices = index.array;\n\n            for (var i = 0, l = indices.length - 1; i < l; i += step) {\n              var a = indices[i];\n              var b = indices[i + 1];\n              vStart.fromArray(positions, a * 3);\n              vEnd.fromArray(positions, b * 3);\n              var distSq = ray.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n              if (distSq > precisionSq) continue;\n              interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n              var distance = raycaster.ray.origin.distanceTo(interRay);\n              if (distance < raycaster.near || distance > raycaster.far) continue;\n              intersects.push({\n                distance: distance,\n                // What do we want? intersection point on the ray or on the segment??\n                // point: raycaster.ray.at( distance ),\n                point: interSegment.clone().applyMatrix4(this.matrixWorld),\n                index: i,\n                face: null,\n                faceIndex: null,\n                object: this\n              });\n            }\n          } else {\n            for (var i = 0, l = positions.length / 3 - 1; i < l; i += step) {\n              vStart.fromArray(positions, 3 * i);\n              vEnd.fromArray(positions, 3 * i + 3);\n              var distSq = ray.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n              if (distSq > precisionSq) continue;\n              interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n              var distance = raycaster.ray.origin.distanceTo(interRay);\n              if (distance < raycaster.near || distance > raycaster.far) continue;\n              intersects.push({\n                distance: distance,\n                // What do we want? intersection point on the ray or on the segment??\n                // point: raycaster.ray.at( distance ),\n                point: interSegment.clone().applyMatrix4(this.matrixWorld),\n                index: i,\n                face: null,\n                faceIndex: null,\n                object: this\n              });\n            }\n          }\n        } else if (geometry instanceof THREE.Geometry) {\n          var vertices = geometry.vertices;\n          var nbVertices = vertices.length;\n\n          for (var i = 0; i < nbVertices - 1; i += step) {\n            var distSq = ray.distanceSqToSegment(vertices[i], vertices[i + 1], interRay, interSegment);\n            if (distSq > precisionSq) continue;\n            interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n            var distance = raycaster.ray.origin.distanceTo(interRay);\n            if (distance < raycaster.near || distance > raycaster.far) continue;\n            intersects.push({\n              distance: distance,\n              // What do we want? intersection point on the ray or on the segment??\n              // point: raycaster.ray.at( distance ),\n              point: interSegment.clone().applyMatrix4(this.matrixWorld),\n              index: i,\n              face: null,\n              faceIndex: null,\n              object: this\n            });\n          }\n        }\n      };\n    }(),\n    clone: function () {\n      return new this.constructor(this.geometry, this.material).copy(this);\n    }\n  }); // File:src/objects/LineSegments.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.LineSegments = function (geometry, material) {\n    THREE.Line.call(this, geometry, material);\n    this.type = 'LineSegments';\n  };\n\n  THREE.LineSegments.prototype = Object.assign(Object.create(THREE.Line.prototype), {\n    constructor: THREE.LineSegments\n  }); // File:src/objects/Mesh.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   * @author mikael emtinger / http://gomo.se/\n   * @author jonobr1 / http://jonobr1.com/\n   */\n\n  THREE.Mesh = function (geometry, material) {\n    THREE.Object3D.call(this);\n    this.type = 'Mesh';\n    this.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\n    this.material = material !== undefined ? material : new THREE.MeshBasicMaterial({\n      color: Math.random() * 0xffffff\n    });\n    this.drawMode = THREE.TrianglesDrawMode;\n    this.updateMorphTargets();\n  };\n\n  THREE.Mesh.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n    constructor: THREE.Mesh,\n    setDrawMode: function (value) {\n      this.drawMode = value;\n    },\n    copy: function (source) {\n      THREE.Object3D.prototype.copy.call(this, source);\n      this.drawMode = source.drawMode;\n      return this;\n    },\n    updateMorphTargets: function () {\n      if (this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0) {\n        this.morphTargetBase = -1;\n        this.morphTargetInfluences = [];\n        this.morphTargetDictionary = {};\n\n        for (var m = 0, ml = this.geometry.morphTargets.length; m < ml; m++) {\n          this.morphTargetInfluences.push(0);\n          this.morphTargetDictionary[this.geometry.morphTargets[m].name] = m;\n        }\n      }\n    },\n    getMorphTargetIndexByName: function (name) {\n      if (this.morphTargetDictionary[name] !== undefined) {\n        return this.morphTargetDictionary[name];\n      }\n\n      console.warn('THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.');\n      return 0;\n    },\n    raycast: function () {\n      var inverseMatrix = new THREE.Matrix4();\n      var ray = new THREE.Ray();\n      var sphere = new THREE.Sphere();\n      var vA = new THREE.Vector3();\n      var vB = new THREE.Vector3();\n      var vC = new THREE.Vector3();\n      var tempA = new THREE.Vector3();\n      var tempB = new THREE.Vector3();\n      var tempC = new THREE.Vector3();\n      var uvA = new THREE.Vector2();\n      var uvB = new THREE.Vector2();\n      var uvC = new THREE.Vector2();\n      var barycoord = new THREE.Vector3();\n      var intersectionPoint = new THREE.Vector3();\n      var intersectionPointWorld = new THREE.Vector3();\n\n      function uvIntersection(point, p1, p2, p3, uv1, uv2, uv3) {\n        THREE.Triangle.barycoordFromPoint(point, p1, p2, p3, barycoord);\n        uv1.multiplyScalar(barycoord.x);\n        uv2.multiplyScalar(barycoord.y);\n        uv3.multiplyScalar(barycoord.z);\n        uv1.add(uv2).add(uv3);\n        return uv1.clone();\n      }\n\n      function checkIntersection(object, raycaster, ray, pA, pB, pC, point) {\n        var intersect;\n        var material = object.material;\n\n        if (material.side === THREE.BackSide) {\n          intersect = ray.intersectTriangle(pC, pB, pA, true, point);\n        } else {\n          intersect = ray.intersectTriangle(pA, pB, pC, material.side !== THREE.DoubleSide, point);\n        }\n\n        if (intersect === null) return null;\n        intersectionPointWorld.copy(point);\n        intersectionPointWorld.applyMatrix4(object.matrixWorld);\n        var distance = raycaster.ray.origin.distanceTo(intersectionPointWorld);\n        if (distance < raycaster.near || distance > raycaster.far) return null;\n        return {\n          distance: distance,\n          point: intersectionPointWorld.clone(),\n          object: object\n        };\n      }\n\n      function checkBufferGeometryIntersection(object, raycaster, ray, positions, uvs, a, b, c) {\n        vA.fromArray(positions, a * 3);\n        vB.fromArray(positions, b * 3);\n        vC.fromArray(positions, c * 3);\n        var intersection = checkIntersection(object, raycaster, ray, vA, vB, vC, intersectionPoint);\n\n        if (intersection) {\n          if (uvs) {\n            uvA.fromArray(uvs, a * 2);\n            uvB.fromArray(uvs, b * 2);\n            uvC.fromArray(uvs, c * 2);\n            intersection.uv = uvIntersection(intersectionPoint, vA, vB, vC, uvA, uvB, uvC);\n          }\n\n          intersection.face = new THREE.Face3(a, b, c, THREE.Triangle.normal(vA, vB, vC));\n          intersection.faceIndex = a;\n        }\n\n        return intersection;\n      }\n\n      return function raycast(raycaster, intersects) {\n        var geometry = this.geometry;\n        var material = this.material;\n        var matrixWorld = this.matrixWorld;\n        if (material === undefined) return; // Checking boundingSphere distance to ray\n\n        if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n        sphere.copy(geometry.boundingSphere);\n        sphere.applyMatrix4(matrixWorld);\n        if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n        inverseMatrix.getInverse(matrixWorld);\n        ray.copy(raycaster.ray).applyMatrix4(inverseMatrix); // Check boundingBox before continuing\n\n        if (geometry.boundingBox !== null) {\n          if (ray.intersectsBox(geometry.boundingBox) === false) return;\n        }\n\n        var uvs, intersection;\n\n        if (geometry instanceof THREE.BufferGeometry) {\n          var a, b, c;\n          var index = geometry.index;\n          var attributes = geometry.attributes;\n          var positions = attributes.position.array;\n\n          if (attributes.uv !== undefined) {\n            uvs = attributes.uv.array;\n          }\n\n          if (index !== null) {\n            var indices = index.array;\n\n            for (var i = 0, l = indices.length; i < l; i += 3) {\n              a = indices[i];\n              b = indices[i + 1];\n              c = indices[i + 2];\n              intersection = checkBufferGeometryIntersection(this, raycaster, ray, positions, uvs, a, b, c);\n\n              if (intersection) {\n                intersection.faceIndex = Math.floor(i / 3); // triangle number in indices buffer semantics\n\n                intersects.push(intersection);\n              }\n            }\n          } else {\n            for (var i = 0, l = positions.length; i < l; i += 9) {\n              a = i / 3;\n              b = a + 1;\n              c = a + 2;\n              intersection = checkBufferGeometryIntersection(this, raycaster, ray, positions, uvs, a, b, c);\n\n              if (intersection) {\n                intersection.index = a; // triangle number in positions buffer semantics\n\n                intersects.push(intersection);\n              }\n            }\n          }\n        } else if (geometry instanceof THREE.Geometry) {\n          var fvA, fvB, fvC;\n          var isFaceMaterial = material instanceof THREE.MultiMaterial;\n          var materials = isFaceMaterial === true ? material.materials : null;\n          var vertices = geometry.vertices;\n          var faces = geometry.faces;\n          var faceVertexUvs = geometry.faceVertexUvs[0];\n          if (faceVertexUvs.length > 0) uvs = faceVertexUvs;\n\n          for (var f = 0, fl = faces.length; f < fl; f++) {\n            var face = faces[f];\n            var faceMaterial = isFaceMaterial === true ? materials[face.materialIndex] : material;\n            if (faceMaterial === undefined) continue;\n            fvA = vertices[face.a];\n            fvB = vertices[face.b];\n            fvC = vertices[face.c];\n\n            if (faceMaterial.morphTargets === true) {\n              var morphTargets = geometry.morphTargets;\n              var morphInfluences = this.morphTargetInfluences;\n              vA.set(0, 0, 0);\n              vB.set(0, 0, 0);\n              vC.set(0, 0, 0);\n\n              for (var t = 0, tl = morphTargets.length; t < tl; t++) {\n                var influence = morphInfluences[t];\n                if (influence === 0) continue;\n                var targets = morphTargets[t].vertices;\n                vA.addScaledVector(tempA.subVectors(targets[face.a], fvA), influence);\n                vB.addScaledVector(tempB.subVectors(targets[face.b], fvB), influence);\n                vC.addScaledVector(tempC.subVectors(targets[face.c], fvC), influence);\n              }\n\n              vA.add(fvA);\n              vB.add(fvB);\n              vC.add(fvC);\n              fvA = vA;\n              fvB = vB;\n              fvC = vC;\n            }\n\n            intersection = checkIntersection(this, raycaster, ray, fvA, fvB, fvC, intersectionPoint);\n\n            if (intersection) {\n              if (uvs) {\n                var uvs_f = uvs[f];\n                uvA.copy(uvs_f[0]);\n                uvB.copy(uvs_f[1]);\n                uvC.copy(uvs_f[2]);\n                intersection.uv = uvIntersection(intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC);\n              }\n\n              intersection.face = face;\n              intersection.faceIndex = f;\n              intersects.push(intersection);\n            }\n          }\n        }\n      };\n    }(),\n    clone: function () {\n      return new this.constructor(this.geometry, this.material).copy(this);\n    }\n  }); // File:src/objects/Bone.js\n\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author ikerr / http://verold.com\n   */\n\n  THREE.Bone = function (skin) {\n    THREE.Object3D.call(this);\n    this.type = 'Bone';\n    this.skin = skin;\n  };\n\n  THREE.Bone.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n    constructor: THREE.Bone,\n    copy: function (source) {\n      THREE.Object3D.prototype.copy.call(this, source);\n      this.skin = source.skin;\n      return this;\n    }\n  }); // File:src/objects/Skeleton.js\n\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author michael guerrero / http://realitymeltdown.com\n   * @author ikerr / http://verold.com\n   */\n\n  THREE.Skeleton = function (bones, boneInverses, useVertexTexture) {\n    this.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\n    this.identityMatrix = new THREE.Matrix4(); // copy the bone array\n\n    bones = bones || [];\n    this.bones = bones.slice(0); // create a bone texture or an array of floats\n\n    if (this.useVertexTexture) {\n      // layout (1 matrix = 4 pixels)\n      //      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n      //  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n      //       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n      //       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n      //       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n      var size = Math.sqrt(this.bones.length * 4); // 4 pixels needed for 1 matrix\n\n      size = THREE.Math.nextPowerOfTwo(Math.ceil(size));\n      size = Math.max(size, 4);\n      this.boneTextureWidth = size;\n      this.boneTextureHeight = size;\n      this.boneMatrices = new Float32Array(this.boneTextureWidth * this.boneTextureHeight * 4); // 4 floats per RGBA pixel\n\n      this.boneTexture = new THREE.DataTexture(this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType);\n    } else {\n      this.boneMatrices = new Float32Array(16 * this.bones.length);\n    } // use the supplied bone inverses or calculate the inverses\n\n\n    if (boneInverses === undefined) {\n      this.calculateInverses();\n    } else {\n      if (this.bones.length === boneInverses.length) {\n        this.boneInverses = boneInverses.slice(0);\n      } else {\n        console.warn('THREE.Skeleton bonInverses is the wrong length.');\n        this.boneInverses = [];\n\n        for (var b = 0, bl = this.bones.length; b < bl; b++) {\n          this.boneInverses.push(new THREE.Matrix4());\n        }\n      }\n    }\n  };\n\n  Object.assign(THREE.Skeleton.prototype, {\n    calculateInverses: function () {\n      this.boneInverses = [];\n\n      for (var b = 0, bl = this.bones.length; b < bl; b++) {\n        var inverse = new THREE.Matrix4();\n\n        if (this.bones[b]) {\n          inverse.getInverse(this.bones[b].matrixWorld);\n        }\n\n        this.boneInverses.push(inverse);\n      }\n    },\n    pose: function () {\n      var bone; // recover the bind-time world matrices\n\n      for (var b = 0, bl = this.bones.length; b < bl; b++) {\n        bone = this.bones[b];\n\n        if (bone) {\n          bone.matrixWorld.getInverse(this.boneInverses[b]);\n        }\n      } // compute the local matrices, positions, rotations and scales\n\n\n      for (var b = 0, bl = this.bones.length; b < bl; b++) {\n        bone = this.bones[b];\n\n        if (bone) {\n          if (bone.parent instanceof THREE.Bone) {\n            bone.matrix.getInverse(bone.parent.matrixWorld);\n            bone.matrix.multiply(bone.matrixWorld);\n          } else {\n            bone.matrix.copy(bone.matrixWorld);\n          }\n\n          bone.matrix.decompose(bone.position, bone.quaternion, bone.scale);\n        }\n      }\n    },\n    update: function () {\n      var offsetMatrix = new THREE.Matrix4();\n      return function update() {\n        // flatten bone matrices to array\n        for (var b = 0, bl = this.bones.length; b < bl; b++) {\n          // compute the offset between the current and the original transform\n          var matrix = this.bones[b] ? this.bones[b].matrixWorld : this.identityMatrix;\n          offsetMatrix.multiplyMatrices(matrix, this.boneInverses[b]);\n          offsetMatrix.toArray(this.boneMatrices, b * 16);\n        }\n\n        if (this.useVertexTexture) {\n          this.boneTexture.needsUpdate = true;\n        }\n      };\n    }(),\n    clone: function () {\n      return new THREE.Skeleton(this.bones, this.boneInverses, this.useVertexTexture);\n    }\n  }); // File:src/objects/SkinnedMesh.js\n\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author ikerr / http://verold.com\n   */\n\n  THREE.SkinnedMesh = function (geometry, material, useVertexTexture) {\n    THREE.Mesh.call(this, geometry, material);\n    this.type = 'SkinnedMesh';\n    this.bindMode = \"attached\";\n    this.bindMatrix = new THREE.Matrix4();\n    this.bindMatrixInverse = new THREE.Matrix4(); // init bones\n    // TODO: remove bone creation as there is no reason (other than\n    // convenience) for THREE.SkinnedMesh to do this.\n\n    var bones = [];\n\n    if (this.geometry && this.geometry.bones !== undefined) {\n      var bone, gbone;\n\n      for (var b = 0, bl = this.geometry.bones.length; b < bl; ++b) {\n        gbone = this.geometry.bones[b];\n        bone = new THREE.Bone(this);\n        bones.push(bone);\n        bone.name = gbone.name;\n        bone.position.fromArray(gbone.pos);\n        bone.quaternion.fromArray(gbone.rotq);\n        if (gbone.scl !== undefined) bone.scale.fromArray(gbone.scl);\n      }\n\n      for (var b = 0, bl = this.geometry.bones.length; b < bl; ++b) {\n        gbone = this.geometry.bones[b];\n\n        if (gbone.parent !== -1 && gbone.parent !== null && bones[gbone.parent] !== undefined) {\n          bones[gbone.parent].add(bones[b]);\n        } else {\n          this.add(bones[b]);\n        }\n      }\n    }\n\n    this.normalizeSkinWeights();\n    this.updateMatrixWorld(true);\n    this.bind(new THREE.Skeleton(bones, undefined, useVertexTexture), this.matrixWorld);\n  };\n\n  THREE.SkinnedMesh.prototype = Object.assign(Object.create(THREE.Mesh.prototype), {\n    constructor: THREE.SkinnedMesh,\n    bind: function (skeleton, bindMatrix) {\n      this.skeleton = skeleton;\n\n      if (bindMatrix === undefined) {\n        this.updateMatrixWorld(true);\n        this.skeleton.calculateInverses();\n        bindMatrix = this.matrixWorld;\n      }\n\n      this.bindMatrix.copy(bindMatrix);\n      this.bindMatrixInverse.getInverse(bindMatrix);\n    },\n    pose: function () {\n      this.skeleton.pose();\n    },\n    normalizeSkinWeights: function () {\n      if (this.geometry instanceof THREE.Geometry) {\n        for (var i = 0; i < this.geometry.skinWeights.length; i++) {\n          var sw = this.geometry.skinWeights[i];\n          var scale = 1.0 / sw.lengthManhattan();\n\n          if (scale !== Infinity) {\n            sw.multiplyScalar(scale);\n          } else {\n            sw.set(1, 0, 0, 0); // do something reasonable\n          }\n        }\n      } else if (this.geometry instanceof THREE.BufferGeometry) {\n        var vec = new THREE.Vector4();\n        var skinWeight = this.geometry.attributes.skinWeight;\n\n        for (var i = 0; i < skinWeight.count; i++) {\n          vec.x = skinWeight.getX(i);\n          vec.y = skinWeight.getY(i);\n          vec.z = skinWeight.getZ(i);\n          vec.w = skinWeight.getW(i);\n          var scale = 1.0 / vec.lengthManhattan();\n\n          if (scale !== Infinity) {\n            vec.multiplyScalar(scale);\n          } else {\n            vec.set(1, 0, 0, 0); // do something reasonable\n          }\n\n          skinWeight.setXYZW(i, vec.x, vec.y, vec.z, vec.w);\n        }\n      }\n    },\n    updateMatrixWorld: function (force) {\n      THREE.Mesh.prototype.updateMatrixWorld.call(this, true);\n\n      if (this.bindMode === \"attached\") {\n        this.bindMatrixInverse.getInverse(this.matrixWorld);\n      } else if (this.bindMode === \"detached\") {\n        this.bindMatrixInverse.getInverse(this.bindMatrix);\n      } else {\n        console.warn('THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode);\n      }\n    },\n    clone: function () {\n      return new this.constructor(this.geometry, this.material, this.skeleton.useVertexTexture).copy(this);\n    }\n  }); // File:src/objects/LOD.js\n\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.LOD = function () {\n    THREE.Object3D.call(this);\n    this.type = 'LOD';\n    Object.defineProperties(this, {\n      levels: {\n        enumerable: true,\n        value: []\n      }\n    });\n  };\n\n  THREE.LOD.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n    constructor: THREE.LOD,\n    copy: function (source) {\n      THREE.Object3D.prototype.copy.call(this, source, false);\n      var levels = source.levels;\n\n      for (var i = 0, l = levels.length; i < l; i++) {\n        var level = levels[i];\n        this.addLevel(level.object.clone(), level.distance);\n      }\n\n      return this;\n    },\n    addLevel: function (object, distance) {\n      if (distance === undefined) distance = 0;\n      distance = Math.abs(distance);\n      var levels = this.levels;\n\n      for (var l = 0; l < levels.length; l++) {\n        if (distance < levels[l].distance) {\n          break;\n        }\n      }\n\n      levels.splice(l, 0, {\n        distance: distance,\n        object: object\n      });\n      this.add(object);\n    },\n    getObjectForDistance: function (distance) {\n      var levels = this.levels;\n\n      for (var i = 1, l = levels.length; i < l; i++) {\n        if (distance < levels[i].distance) {\n          break;\n        }\n      }\n\n      return levels[i - 1].object;\n    },\n    raycast: function () {\n      var matrixPosition = new THREE.Vector3();\n      return function raycast(raycaster, intersects) {\n        matrixPosition.setFromMatrixPosition(this.matrixWorld);\n        var distance = raycaster.ray.origin.distanceTo(matrixPosition);\n        this.getObjectForDistance(distance).raycast(raycaster, intersects);\n      };\n    }(),\n    update: function () {\n      var v1 = new THREE.Vector3();\n      var v2 = new THREE.Vector3();\n      return function update(camera) {\n        var levels = this.levels;\n\n        if (levels.length > 1) {\n          v1.setFromMatrixPosition(camera.matrixWorld);\n          v2.setFromMatrixPosition(this.matrixWorld);\n          var distance = v1.distanceTo(v2);\n          levels[0].object.visible = true;\n\n          for (var i = 1, l = levels.length; i < l; i++) {\n            if (distance >= levels[i].distance) {\n              levels[i - 1].object.visible = false;\n              levels[i].object.visible = true;\n            } else {\n              break;\n            }\n          }\n\n          for (; i < l; i++) {\n            levels[i].object.visible = false;\n          }\n        }\n      };\n    }(),\n    toJSON: function (meta) {\n      var data = THREE.Object3D.prototype.toJSON.call(this, meta);\n      data.object.levels = [];\n      var levels = this.levels;\n\n      for (var i = 0, l = levels.length; i < l; i++) {\n        var level = levels[i];\n        data.object.levels.push({\n          object: level.object.uuid,\n          distance: level.distance\n        });\n      }\n\n      return data;\n    }\n  }); // File:src/objects/Sprite.js\n\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  THREE.Sprite = function (material) {\n    THREE.Object3D.call(this);\n    this.type = 'Sprite';\n    this.material = material !== undefined ? material : new THREE.SpriteMaterial();\n  };\n\n  THREE.Sprite.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n    constructor: THREE.Sprite,\n    raycast: function () {\n      var matrixPosition = new THREE.Vector3();\n      return function raycast(raycaster, intersects) {\n        matrixPosition.setFromMatrixPosition(this.matrixWorld);\n        var distanceSq = raycaster.ray.distanceSqToPoint(matrixPosition);\n        var guessSizeSq = this.scale.x * this.scale.y / 4;\n\n        if (distanceSq > guessSizeSq) {\n          return;\n        }\n\n        intersects.push({\n          distance: Math.sqrt(distanceSq),\n          point: this.position,\n          face: null,\n          object: this\n        });\n      };\n    }(),\n    clone: function () {\n      return new this.constructor(this.material).copy(this);\n    }\n  }); // File:src/objects/LensFlare.js\n\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  THREE.LensFlare = function (texture, size, distance, blending, color) {\n    THREE.Object3D.call(this);\n    this.lensFlares = [];\n    this.positionScreen = new THREE.Vector3();\n    this.customUpdateCallback = undefined;\n\n    if (texture !== undefined) {\n      this.add(texture, size, distance, blending, color);\n    }\n  };\n\n  THREE.LensFlare.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n    constructor: THREE.LensFlare,\n    copy: function (source) {\n      THREE.Object3D.prototype.copy.call(this, source);\n      this.positionScreen.copy(source.positionScreen);\n      this.customUpdateCallback = source.customUpdateCallback;\n\n      for (var i = 0, l = source.lensFlares.length; i < l; i++) {\n        this.lensFlares.push(source.lensFlares[i]);\n      }\n\n      return this;\n    },\n    add: function (texture, size, distance, blending, color, opacity) {\n      if (size === undefined) size = -1;\n      if (distance === undefined) distance = 0;\n      if (opacity === undefined) opacity = 1;\n      if (color === undefined) color = new THREE.Color(0xffffff);\n      if (blending === undefined) blending = THREE.NormalBlending;\n      distance = Math.min(distance, Math.max(0, distance));\n      this.lensFlares.push({\n        texture: texture,\n        // THREE.Texture\n        size: size,\n        // size in pixels (-1 = use texture.width)\n        distance: distance,\n        // distance (0-1) from light source (0=at light source)\n        x: 0,\n        y: 0,\n        z: 0,\n        // screen position (-1 => 1) z = 0 is in front z = 1 is back\n        scale: 1,\n        // scale\n        rotation: 0,\n        // rotation\n        opacity: opacity,\n        // opacity\n        color: color,\n        // color\n        blending: blending // blending\n\n      });\n    },\n\n    /*\n     * Update lens flares update positions on all flares based on the screen position\n     * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\n     */\n    updateLensFlares: function () {\n      var f,\n          fl = this.lensFlares.length;\n      var flare;\n      var vecX = -this.positionScreen.x * 2;\n      var vecY = -this.positionScreen.y * 2;\n\n      for (f = 0; f < fl; f++) {\n        flare = this.lensFlares[f];\n        flare.x = this.positionScreen.x + vecX * flare.distance;\n        flare.y = this.positionScreen.y + vecY * flare.distance;\n        flare.wantedRotation = flare.x * Math.PI * 0.25;\n        flare.rotation += (flare.wantedRotation - flare.rotation) * 0.25;\n      }\n    }\n  }); // File:src/scenes/Scene.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.Scene = function () {\n    THREE.Object3D.call(this);\n    this.type = 'Scene';\n    this.background = null;\n    this.fog = null;\n    this.overrideMaterial = null;\n    this.autoUpdate = true; // checked by the renderer\n  };\n\n  THREE.Scene.prototype = Object.create(THREE.Object3D.prototype);\n  THREE.Scene.prototype.constructor = THREE.Scene;\n\n  THREE.Scene.prototype.copy = function (source, recursive) {\n    THREE.Object3D.prototype.copy.call(this, source, recursive);\n    if (source.background !== null) this.background = source.background.clone();\n    if (source.fog !== null) this.fog = source.fog.clone();\n    if (source.overrideMaterial !== null) this.overrideMaterial = source.overrideMaterial.clone();\n    this.autoUpdate = source.autoUpdate;\n    this.matrixAutoUpdate = source.matrixAutoUpdate;\n    return this;\n  }; // File:src/scenes/Fog.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n\n  THREE.Fog = function (color, near, far) {\n    this.name = '';\n    this.color = new THREE.Color(color);\n    this.near = near !== undefined ? near : 1;\n    this.far = far !== undefined ? far : 1000;\n  };\n\n  THREE.Fog.prototype.clone = function () {\n    return new THREE.Fog(this.color.getHex(), this.near, this.far);\n  }; // File:src/scenes/FogExp2.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n\n  THREE.FogExp2 = function (color, density) {\n    this.name = '';\n    this.color = new THREE.Color(color);\n    this.density = density !== undefined ? density : 0.00025;\n  };\n\n  THREE.FogExp2.prototype.clone = function () {\n    return new THREE.FogExp2(this.color.getHex(), this.density);\n  }; // File:src/renderers/shaders/ShaderChunk.js\n\n\n  THREE.ShaderChunk = {}; // File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\n\n  THREE.ShaderChunk['alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\n\n  THREE.ShaderChunk['alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\tuniform sampler2D alphaMap;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\n\n  THREE.ShaderChunk['alphatest_fragment'] = \"#ifdef ALPHATEST\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\n\n  THREE.ShaderChunk['aomap_fragment'] = \"#ifdef USE_AOMAP\\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\n\n  THREE.ShaderChunk['aomap_pars_fragment'] = \"#ifdef USE_AOMAP\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\n\n  THREE.ShaderChunk['begin_vertex'] = \"\\nvec3 transformed = vec3( position );\\n\"; // File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\n\n  THREE.ShaderChunk['beginnormal_vertex'] = \"\\nvec3 objectNormal = vec3( normal );\\n\"; // File:src/renderers/shaders/ShaderChunk/bsdfs.glsl\n\n  THREE.ShaderChunk['bsdfs'] = \"bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\\n\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\t\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\t\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\t\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\t\t\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\t\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\t\t}\\n\t\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\tfloat alpha = pow2( roughness );\\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\tfloat D = D_GGX( alpha, dotNH );\\n\treturn F * ( G * D );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\tvec4 r = roughness * c0 + c1;\\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\tfloat G = G_BlinnPhong_Implicit( );\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\"; // File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\n\n  THREE.ShaderChunk['bumpmap_pars_fragment'] = \"#ifdef USE_BUMPMAP\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\tvec2 dHdxy_fwd() {\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\t\treturn vec2( dBx, dBy );\\n\t}\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\t}\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/clipping_planes_fragment.glsl\n\n  THREE.ShaderChunk['clipping_planes_fragment'] = \"#if NUM_CLIPPING_PLANES > 0\\n\tfor ( int i = 0; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\t\tvec4 plane = clippingPlanes[ i ];\\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\t}\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/clipping_planes_pars_fragment.glsl\n\n  THREE.ShaderChunk['clipping_planes_pars_fragment'] = \"#if NUM_CLIPPING_PLANES > 0\\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\t\tvarying vec3 vViewPosition;\\n\t#endif\\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/clipping_planes_pars_vertex.glsl\n\n  THREE.ShaderChunk['clipping_planes_pars_vertex'] = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\tvarying vec3 vViewPosition;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/clipping_planes_vertex.glsl\n\n  THREE.ShaderChunk['clipping_planes_vertex'] = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\n\n  THREE.ShaderChunk['color_fragment'] = \"#ifdef USE_COLOR\\n\tdiffuseColor.rgb *= vColor;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\n\n  THREE.ShaderChunk['color_pars_fragment'] = \"#ifdef USE_COLOR\\n\tvarying vec3 vColor;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\n\n  THREE.ShaderChunk['color_pars_vertex'] = \"#ifdef USE_COLOR\\n\tvarying vec3 vColor;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\n\n  THREE.ShaderChunk['color_vertex'] = \"#ifdef USE_COLOR\\n\tvColor.xyz = color.xyz;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/common.glsl\n\n  THREE.ShaderChunk['common'] = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\tvec3 color;\\n\tvec3 direction;\\n\tbool visible;\\n};\\nstruct ReflectedLight {\\n\tvec3 directDiffuse;\\n\tvec3 directSpecular;\\n\tvec3 indirectDiffuse;\\n\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\tvec3 position;\\n\tvec3 normal;\\n\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\n\"; // File:src/renderers/shaders/ShaderChunk/cube_uv_reflection_fragment.glsl\n\n  THREE.ShaderChunk['cube_uv_reflection_fragment'] = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\tvec3 absDirection = abs(direction);\\n\tint face = -1;\\n\tif( absDirection.x > absDirection.z ) {\\n\t\tif(absDirection.x > absDirection.y )\\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\\n\t\telse\\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\\n\t}\\n\telse {\\n\t\tif(absDirection.z > absDirection.y )\\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\\n\t\telse\\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\\n\t}\\n\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\tfloat dxRoughness = dFdx(roughness);\\n\tfloat dyRoughness = dFdy(roughness);\\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\tfloat mipLevel = 0.5 * log2(d);\\n\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\tbool bRes = mipLevel == 0.0;\\n\tscale =  bRes && (scale < a) ? a : scale;\\n\tvec3 r;\\n\tvec2 offset;\\n\tint face = getFaceFromDirection(direction);\\n\tfloat rcpPowScale = 1.0 / powScale;\\n\tif( face == 0) {\\n\t\tr = vec3(direction.x, -direction.z, direction.y);\\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\t}\\n\telse if( face == 1) {\\n\t\tr = vec3(direction.y, direction.x, direction.z);\\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\t}\\n\telse if( face == 2) {\\n\t\tr = vec3(direction.z, direction.x, direction.y);\\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\t}\\n\telse if( face == 3) {\\n\t\tr = vec3(direction.x, direction.z, direction.y);\\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\t}\\n\telse if( face == 4) {\\n\t\tr = vec3(direction.y, direction.x, -direction.z);\\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\t}\\n\telse {\\n\t\tr = vec3(direction.z, -direction.x, direction.y);\\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\t}\\n\tr = normalize(r);\\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\tvec2 base = offset + vec2( texelOffset );\\n\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\tfloat r1 = floor(roughnessVal);\\n\tfloat r2 = r1 + 1.0;\\n\tfloat t = fract(roughnessVal);\\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\tfloat s = mipInfo.y;\\n\tfloat level0 = mipInfo.x;\\n\tfloat level1 = level0 + 1.0;\\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\tvec4 result = mix(color10, color20, t);\\n\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\n\n  THREE.ShaderChunk['defaultnormal_vertex'] = \"#ifdef FLIP_SIDED\\n\tobjectNormal = -objectNormal;\\n#endif\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\"; // File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\n\n  THREE.ShaderChunk['displacementmap_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\n\n  THREE.ShaderChunk['displacementmap_pars_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\n\n  THREE.ShaderChunk['emissivemap_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\n\n  THREE.ShaderChunk['emissivemap_pars_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\tuniform sampler2D emissiveMap;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/encodings_pars_fragment.glsl\n\n  THREE.ShaderChunk['encodings_pars_fragment'] = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n  return value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n  float maxComponent = max( max( value.r, value.g ), value.b );\\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n  float maxRGB = max( value.x, max( value.g, value.b ) );\\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n  M            = ceil( M * 255.0 ) / 255.0;\\n  return vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n    float maxRGB = max( value.x, max( value.g, value.b ) );\\n    float D      = max( maxRange / maxRGB, 1.0 );\\n    D            = min( floor( D ) / 255.0, 1.0 );\\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n  vec4 vResult;\\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n  vResult.w = fract(Le);\\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n  return vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n  float Le = value.z * 255.0 + value.w;\\n  vec3 Xp_Y_XYZp;\\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n  return vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\"; // File:src/renderers/shaders/ShaderChunk/encodings_fragment.glsl\n\n  THREE.ShaderChunk['encodings_fragment'] = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\"; // File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\n\n  THREE.ShaderChunk['envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\t\t#else\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\t\t#endif\\n\t#else\\n\t\tvec3 reflectVec = vReflect;\\n\t#endif\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\tenvColor = envMapTexelToLinear( envColor );\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\n\n  THREE.ShaderChunk['envmap_pars_fragment'] = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\tuniform float reflectivity;\\n\tuniform float envMapIntenstiy;\\n#endif\\n#ifdef USE_ENVMAP\\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\t\tvarying vec3 vWorldPosition;\\n\t#endif\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\t\tuniform float refractionRatio;\\n\t#else\\n\t\tvarying vec3 vReflect;\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\n\n  THREE.ShaderChunk['envmap_pars_vertex'] = \"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\t\tvarying vec3 vWorldPosition;\\n\t#else\\n\t\tvarying vec3 vReflect;\\n\t\tuniform float refractionRatio;\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\n\n  THREE.ShaderChunk['envmap_vertex'] = \"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\t\tvWorldPosition = worldPosition.xyz;\\n\t#else\\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\t\t#else\\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\t\t#endif\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\n\n  THREE.ShaderChunk['fog_fragment'] = \"#ifdef USE_FOG\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\t#else\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\t#endif\\n\t#ifdef FOG_EXP2\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\t#else\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\t#endif\\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\n\n  THREE.ShaderChunk['fog_pars_fragment'] = \"#ifdef USE_FOG\\n\tuniform vec3 fogColor;\\n\t#ifdef FOG_EXP2\\n\t\tuniform float fogDensity;\\n\t#else\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\n\n  THREE.ShaderChunk['lightmap_fragment'] = \"#ifdef USE_LIGHTMAP\\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\n\n  THREE.ShaderChunk['lightmap_pars_fragment'] = \"#ifdef USE_LIGHTMAP\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\n\n  THREE.ShaderChunk['lights_lambert_vertex'] = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\t\t#endif\\n\t}\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/lights_pars.glsl\n\n  THREE.ShaderChunk['lights_pars'] = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\tvec3 irradiance = ambientLightColor;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\tstruct DirectionalLight {\\n\t\tvec3 direction;\\n\t\tvec3 color;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\t\tdirectLight.color = directionalLight.color;\\n\t\tdirectLight.direction = directionalLight.direction;\\n\t\tdirectLight.visible = true;\\n\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\tstruct PointLight {\\n\t\tvec3 position;\\n\t\tvec3 color;\\n\t\tfloat distance;\\n\t\tfloat decay;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\t\tvec3 lVector = pointLight.position - geometry.position;\\n\t\tdirectLight.direction = normalize( lVector );\\n\t\tfloat lightDistance = length( lVector );\\n\t\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\\n\t\t\tdirectLight.color = pointLight.color;\\n\t\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\t\t\tdirectLight.visible = true;\\n\t\t} else {\\n\t\t\tdirectLight.color = vec3( 0.0 );\\n\t\t\tdirectLight.visible = false;\\n\t\t}\\n\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\tstruct SpotLight {\\n\t\tvec3 position;\\n\t\tvec3 direction;\\n\t\tvec3 color;\\n\t\tfloat distance;\\n\t\tfloat decay;\\n\t\tfloat coneCos;\\n\t\tfloat penumbraCos;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\t\tvec3 lVector = spotLight.position - geometry.position;\\n\t\tdirectLight.direction = normalize( lVector );\\n\t\tfloat lightDistance = length( lVector );\\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\t\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\t\t\tdirectLight.color = spotLight.color;\\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\t\t\tdirectLight.visible = true;\\n\t\t} else {\\n\t\t\tdirectLight.color = vec3( 0.0 );\\n\t\t\tdirectLight.visible = false;\\n\t\t}\\n\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\tstruct HemisphereLight {\\n\t\tvec3 direction;\\n\t\tvec3 skyColor;\\n\t\tvec3 groundColor;\\n\t};\\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\t\tirradiance *= PI;\\n\t\t#endif\\n\t\treturn irradiance;\\n\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\t\t#include <normal_flip>\\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\t\t#ifdef ENVMAP_TYPE_CUBE\\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\t\t#else\\n\t\t\tvec4 envMapColor = vec4( 0.0 );\\n\t\t#endif\\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\\n\t}\\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\t}\\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\t\t#else\\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\t\t#endif\\n\t\t#include <normal_flip>\\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\t\t#ifdef ENVMAP_TYPE_CUBE\\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\t\tvec2 sampleUV;\\n\t\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\t\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#endif\\n\t\treturn envMapColor.rgb * envMapIntensity;\\n\t}\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\n\n  THREE.ShaderChunk['lights_phong_fragment'] = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\"; // File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\n\n  THREE.ShaderChunk['lights_phong_pars_fragment'] = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\tvec3\tdiffuseColor;\\n\tvec3\tspecularColor;\\n\tfloat\tspecularShininess;\\n\tfloat\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\tvec3 irradiance = dotNL * directLight.color;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\t(0)\\n\"; // File:src/renderers/shaders/ShaderChunk/lights_physical_fragment.glsl\n\n  THREE.ShaderChunk['lights_physical_fragment'] = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/lights_physical_pars_fragment.glsl\n\n  THREE.ShaderChunk['lights_physical_pars_fragment'] = \"struct PhysicalMaterial {\\n\tvec3\tdiffuseColor;\\n\tfloat\tspecularRoughness;\\n\tvec3\tspecularColor;\\n\t#ifndef STANDARD\\n\t\tfloat clearCoat;\\n\t\tfloat clearCoatRoughness;\\n\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\tvec3 irradiance = dotNL * directLight.color;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\t#ifndef STANDARD\\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\t#else\\n\t\tfloat clearCoatDHR = 0.0;\\n\t#endif\\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\t#ifndef STANDARD\\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\t#ifndef STANDARD\\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\t\tfloat dotNL = dotNV;\\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\t#else\\n\t\tfloat clearCoatDHR = 0.0;\\n\t#endif\\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\t#ifndef STANDARD\\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\t#endif\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_Physical\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\"; // File:src/renderers/shaders/ShaderChunk/lights_template.glsl\n\n  THREE.ShaderChunk['lights_template'] = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\tPointLight pointLight;\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tpointLight = pointLights[ i ];\\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\tSpotLight spotLight;\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tspotLight = spotLights[ i ];\\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\tDirectionalLight directionalLight;\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tdirectionalLight = directionalLights[ i ];\\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\t#ifdef USE_LIGHTMAP\\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\t\tlightMapIrradiance *= PI;\\n\t\t#endif\\n\t\tirradiance += lightMapIrradiance;\\n\t#endif\\n\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\t\t}\\n\t#endif\\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\t \tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\t#endif\\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\t#ifndef STANDARD\\n\t\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\t#else\\n\t\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\t#endif\\n\t\t\\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\n\n  THREE.ShaderChunk['logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\n\n  THREE.ShaderChunk['logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\tuniform float logDepthBufFC;\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvarying float vFragDepth;\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\n\n  THREE.ShaderChunk['logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvarying float vFragDepth;\\n\t#endif\\n\tuniform float logDepthBufFC;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\n\n  THREE.ShaderChunk['logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\t#else\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\n\n  THREE.ShaderChunk['map_fragment'] = \"#ifdef USE_MAP\\n\tvec4 texelColor = texture2D( map, vUv );\\n\ttexelColor = mapTexelToLinear( texelColor );\\n\tdiffuseColor *= texelColor;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\n\n  THREE.ShaderChunk['map_pars_fragment'] = \"#ifdef USE_MAP\\n\tuniform sampler2D map;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\n\n  THREE.ShaderChunk['map_particle_fragment'] = \"#ifdef USE_MAP\\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\n\n  THREE.ShaderChunk['map_particle_pars_fragment'] = \"#ifdef USE_MAP\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/metalnessmap_fragment.glsl\n\n  THREE.ShaderChunk['metalnessmap_fragment'] = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\tmetalnessFactor *= texelMetalness.r;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/metalnessmap_pars_fragment.glsl\n\n  THREE.ShaderChunk['metalnessmap_pars_fragment'] = \"#ifdef USE_METALNESSMAP\\n\tuniform sampler2D metalnessMap;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\n\n  THREE.ShaderChunk['morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\n\n  THREE.ShaderChunk['morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\t#ifndef USE_MORPHNORMALS\\n\tuniform float morphTargetInfluences[ 8 ];\\n\t#else\\n\tuniform float morphTargetInfluences[ 4 ];\\n\t#endif\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\n\n  THREE.ShaderChunk['morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\t#ifndef USE_MORPHNORMALS\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/normal_flip.glsl\n\n  THREE.ShaderChunk['normal_flip'] = \"#ifdef DOUBLE_SIDED\\n\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n#else\\n\tfloat flipNormal = 1.0;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/normal_fragment.glsl\n\n  THREE.ShaderChunk['normal_fragment'] = \"#ifdef FLAT_SHADED\\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\tvec3 normal = normalize( vNormal ) * flipNormal;\\n#endif\\n#ifdef USE_NORMALMAP\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\n\n  THREE.ShaderChunk['normalmap_pars_fragment'] = \"#ifdef USE_NORMALMAP\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\t}\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/packing.glsl\n\n  THREE.ShaderChunk['packing'] = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n  return normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n  return 1.0 - 2.0 * rgb.xyz;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n  return ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n  return linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\"; // File:src/renderers/shaders/ShaderChunk/premultiplied_alpha_fragment.glsl\n\n  THREE.ShaderChunk['premultiplied_alpha_fragment'] = \"#ifdef PREMULTIPLIED_ALPHA\\n\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\n\n  THREE.ShaderChunk['project_vertex'] = \"#ifdef USE_SKINNING\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n#else\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n#endif\\ngl_Position = projectionMatrix * mvPosition;\\n\"; // File:src/renderers/shaders/ShaderChunk/roughnessmap_fragment.glsl\n\n  THREE.ShaderChunk['roughnessmap_fragment'] = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\troughnessFactor *= texelRoughness.r;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/roughnessmap_pars_fragment.glsl\n\n  THREE.ShaderChunk['roughnessmap_pars_fragment'] = \"#ifdef USE_ROUGHNESSMAP\\n\tuniform sampler2D roughnessMap;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\n\n  THREE.ShaderChunk['shadowmap_pars_fragment'] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\t#endif\\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\t}\\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\t\tvec2 f = fract( uv * size + 0.5 );\\n\t\tfloat a = mix( lb, lt, f.y );\\n\t\tfloat b = mix( rb, rt, f.y );\\n\t\tfloat c = mix( a, b, f.x );\\n\t\treturn c;\\n\t}\\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\t\tshadowCoord.xyz /= shadowCoord.w;\\n\t\tshadowCoord.z += shadowBias;\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\t\tbool frustumTest = all( frustumTestVec );\\n\t\tif ( frustumTest ) {\\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\\n\t\t\treturn (\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\\n\t\t\treturn (\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#else\\n\t\t\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\t\t#endif\\n\t\t}\\n\t\treturn 1.0;\\n\t}\\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\t\tvec3 absV = abs( v );\\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\t\tabsV *= scaleToCube;\\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\t\tvec2 planar = v.xy;\\n\t\tfloat almostATexel = 1.5 * texelSizeY;\\n\t\tfloat almostOne = 1.0 - almostATexel;\\n\t\tif ( absV.z >= almostOne ) {\\n\t\t\tif ( v.z > 0.0 )\\n\t\t\t\tplanar.x = 4.0 - v.x;\\n\t\t} else if ( absV.x >= almostOne ) {\\n\t\t\tfloat signX = sign( v.x );\\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\\n\t\t} else if ( absV.y >= almostOne ) {\\n\t\t\tfloat signY = sign( v.y );\\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\t\t\tplanar.y = v.z * signY - 2.0;\\n\t\t}\\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\t}\\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\t\tvec3 lightToPosition = shadowCoord.xyz;\\n\t\tvec3 bd3D = normalize( lightToPosition );\\n\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\t\t\treturn (\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#else\\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\t\t#endif\\n\t}\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\n\n  THREE.ShaderChunk['shadowmap_pars_vertex'] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\n\n  THREE.ShaderChunk['shadowmap_vertex'] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/shadowmask_pars_fragment.glsl\n\n  THREE.ShaderChunk['shadowmask_pars_fragment'] = \"float getShadowMask() {\\n\tfloat shadow = 1.0;\\n\t#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\tDirectionalLight directionalLight;\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tdirectionalLight = directionalLights[ i ];\\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\tSpotLight spotLight;\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tspotLight = spotLights[ i ];\\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\tPointLight pointLight;\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tpointLight = pointLights[ i ];\\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#endif\\n\treturn shadow;\\n}\\n\"; // File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\n\n  THREE.ShaderChunk['skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\n\n  THREE.ShaderChunk['skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\t#ifdef BONE_TEXTURE\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\t\t\ty = dy * ( y + 0.5 );\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\t\t\treturn bone;\\n\t\t}\\n\t#else\\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\t\t}\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\n\n  THREE.ShaderChunk['skinning_vertex'] = \"#ifdef USE_SKINNING\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\n\n  THREE.ShaderChunk['skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\n\n  THREE.ShaderChunk['specularmap_fragment'] = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n#else\\n\tspecularStrength = 1.0;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\n\n  THREE.ShaderChunk['specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\tuniform sampler2D specularMap;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/tonemapping_fragment.glsl\n\n  THREE.ShaderChunk['tonemapping_fragment'] = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/tonemapping_pars_fragment.glsl\n\n  THREE.ShaderChunk['tonemapping_pars_fragment'] = \"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n  return toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  color = max( vec3( 0.0 ), color - 0.004 );\\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\"; // File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\n\n  THREE.ShaderChunk['uv2_pars_fragment'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tvarying vec2 vUv2;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\n\n  THREE.ShaderChunk['uv2_pars_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\n\n  THREE.ShaderChunk['uv2_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tvUv2 = uv2;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\n\n  THREE.ShaderChunk['uv_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvarying vec2 vUv;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\n\n  THREE.ShaderChunk['uv_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\n\n  THREE.ShaderChunk['uv_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\n\n  THREE.ShaderChunk['worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\t#ifdef USE_SKINNING\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\t#else\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/UniformsUtils.js\n\n  /**\n   * Uniform Utilities\n   */\n\n  THREE.UniformsUtils = {\n    merge: function (uniforms) {\n      var merged = {};\n\n      for (var u = 0; u < uniforms.length; u++) {\n        var tmp = this.clone(uniforms[u]);\n\n        for (var p in tmp) {\n          merged[p] = tmp[p];\n        }\n      }\n\n      return merged;\n    },\n    clone: function (uniforms_src) {\n      var uniforms_dst = {};\n\n      for (var u in uniforms_src) {\n        uniforms_dst[u] = {};\n\n        for (var p in uniforms_src[u]) {\n          var parameter_src = uniforms_src[u][p];\n\n          if (parameter_src instanceof THREE.Color || parameter_src instanceof THREE.Vector2 || parameter_src instanceof THREE.Vector3 || parameter_src instanceof THREE.Vector4 || parameter_src instanceof THREE.Matrix3 || parameter_src instanceof THREE.Matrix4 || parameter_src instanceof THREE.Texture) {\n            uniforms_dst[u][p] = parameter_src.clone();\n          } else if (Array.isArray(parameter_src)) {\n            uniforms_dst[u][p] = parameter_src.slice();\n          } else {\n            uniforms_dst[u][p] = parameter_src;\n          }\n        }\n      }\n\n      return uniforms_dst;\n    }\n  }; // File:src/renderers/shaders/UniformsLib.js\n\n  /**\n   * Uniforms library for shared webgl shaders\n   */\n\n  THREE.UniformsLib = {\n    common: {\n      \"diffuse\": {\n        value: new THREE.Color(0xeeeeee)\n      },\n      \"opacity\": {\n        value: 1.0\n      },\n      \"map\": {\n        value: null\n      },\n      \"offsetRepeat\": {\n        value: new THREE.Vector4(0, 0, 1, 1)\n      },\n      \"specularMap\": {\n        value: null\n      },\n      \"alphaMap\": {\n        value: null\n      },\n      \"envMap\": {\n        value: null\n      },\n      \"flipEnvMap\": {\n        value: -1\n      },\n      \"reflectivity\": {\n        value: 1.0\n      },\n      \"refractionRatio\": {\n        value: 0.98\n      }\n    },\n    aomap: {\n      \"aoMap\": {\n        value: null\n      },\n      \"aoMapIntensity\": {\n        value: 1\n      }\n    },\n    lightmap: {\n      \"lightMap\": {\n        value: null\n      },\n      \"lightMapIntensity\": {\n        value: 1\n      }\n    },\n    emissivemap: {\n      \"emissiveMap\": {\n        value: null\n      }\n    },\n    bumpmap: {\n      \"bumpMap\": {\n        value: null\n      },\n      \"bumpScale\": {\n        value: 1\n      }\n    },\n    normalmap: {\n      \"normalMap\": {\n        value: null\n      },\n      \"normalScale\": {\n        value: new THREE.Vector2(1, 1)\n      }\n    },\n    displacementmap: {\n      \"displacementMap\": {\n        value: null\n      },\n      \"displacementScale\": {\n        value: 1\n      },\n      \"displacementBias\": {\n        value: 0\n      }\n    },\n    roughnessmap: {\n      \"roughnessMap\": {\n        value: null\n      }\n    },\n    metalnessmap: {\n      \"metalnessMap\": {\n        value: null\n      }\n    },\n    fog: {\n      \"fogDensity\": {\n        value: 0.00025\n      },\n      \"fogNear\": {\n        value: 1\n      },\n      \"fogFar\": {\n        value: 2000\n      },\n      \"fogColor\": {\n        value: new THREE.Color(0xffffff)\n      }\n    },\n    lights: {\n      \"ambientLightColor\": {\n        value: []\n      },\n      \"directionalLights\": {\n        value: [],\n        properties: {\n          \"direction\": {},\n          \"color\": {},\n          \"shadow\": {},\n          \"shadowBias\": {},\n          \"shadowRadius\": {},\n          \"shadowMapSize\": {}\n        }\n      },\n      \"directionalShadowMap\": {\n        value: []\n      },\n      \"directionalShadowMatrix\": {\n        value: []\n      },\n      \"spotLights\": {\n        value: [],\n        properties: {\n          \"color\": {},\n          \"position\": {},\n          \"direction\": {},\n          \"distance\": {},\n          \"coneCos\": {},\n          \"penumbraCos\": {},\n          \"decay\": {},\n          \"shadow\": {},\n          \"shadowBias\": {},\n          \"shadowRadius\": {},\n          \"shadowMapSize\": {}\n        }\n      },\n      \"spotShadowMap\": {\n        value: []\n      },\n      \"spotShadowMatrix\": {\n        value: []\n      },\n      \"pointLights\": {\n        value: [],\n        properties: {\n          \"color\": {},\n          \"position\": {},\n          \"decay\": {},\n          \"distance\": {},\n          \"shadow\": {},\n          \"shadowBias\": {},\n          \"shadowRadius\": {},\n          \"shadowMapSize\": {}\n        }\n      },\n      \"pointShadowMap\": {\n        value: []\n      },\n      \"pointShadowMatrix\": {\n        value: []\n      },\n      \"hemisphereLights\": {\n        value: [],\n        properties: {\n          \"direction\": {},\n          \"skyColor\": {},\n          \"groundColor\": {}\n        }\n      }\n    },\n    points: {\n      \"diffuse\": {\n        value: new THREE.Color(0xeeeeee)\n      },\n      \"opacity\": {\n        value: 1.0\n      },\n      \"size\": {\n        value: 1.0\n      },\n      \"scale\": {\n        value: 1.0\n      },\n      \"map\": {\n        value: null\n      },\n      \"offsetRepeat\": {\n        value: new THREE.Vector4(0, 0, 1, 1)\n      }\n    }\n  }; // File:src/renderers/shaders/ShaderLib/cube_frag.glsl\n\n  THREE.ShaderChunk['cube_frag'] = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\tgl_FragColor.a *= opacity;\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/cube_vert.glsl\n\n  THREE.ShaderChunk['cube_vert'] = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\tvWorldPosition = transformDirection( position, modelMatrix );\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/depth_frag.glsl\n\n  THREE.ShaderChunk['depth_frag'] = \"#if DEPTH_PACKING == 3200\\n\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( 1.0 );\\n\t#if DEPTH_PACKING == 3200\\n\t\tdiffuseColor.a = opacity;\\n\t#endif\\n\t#include <map_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <logdepthbuf_fragment>\\n\t#if DEPTH_PACKING == 3200\\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\t#elif DEPTH_PACKING == 3201\\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\t#endif\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/depth_vert.glsl\n\n  THREE.ShaderChunk['depth_vert'] = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <begin_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/distanceRGBA_frag.glsl\n\n  THREE.ShaderChunk['distanceRGBA_frag'] = \"uniform vec3 lightPos;\\nvarying vec4 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\t#include <clipping_planes_fragment>\\n\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/distanceRGBA_vert.glsl\n\n  THREE.ShaderChunk['distanceRGBA_vert'] = \"varying vec4 vWorldPosition;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <skinbase_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvWorldPosition = worldPosition;\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/equirect_frag.glsl\n\n  THREE.ShaderChunk['equirect_frag'] = \"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\tvec3 direction = normalize( vWorldPosition );\\n\tvec2 sampleUV;\\n\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/equirect_vert.glsl\n\n  THREE.ShaderChunk['equirect_vert'] = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\tvWorldPosition = transformDirection( position, modelMatrix );\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/linedashed_frag.glsl\n\n  THREE.ShaderChunk['linedashed_frag'] = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\t\tdiscard;\\n\t}\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <color_fragment>\\n\toutgoingLight = diffuseColor.rgb;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/linedashed_vert.glsl\n\n  THREE.ShaderChunk['linedashed_vert'] = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <color_vertex>\\n\tvLineDistance = scale * lineDistance;\\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\tgl_Position = projectionMatrix * mvPosition;\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/meshbasic_frag.glsl\n\n  THREE.ShaderChunk['meshbasic_frag'] = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\tReflectedLight reflectedLight;\\n\treflectedLight.directDiffuse = vec3( 0.0 );\\n\treflectedLight.directSpecular = vec3( 0.0 );\\n\treflectedLight.indirectDiffuse = diffuseColor.rgb;\\n\treflectedLight.indirectSpecular = vec3( 0.0 );\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\t#include <normal_flip>\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/meshbasic_vert.glsl\n\n  THREE.ShaderChunk['meshbasic_vert'] = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <skinbase_vertex>\\n\t#ifdef USE_ENVMAP\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#endif\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <envmap_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/meshlambert_frag.glsl\n\n  THREE.ShaderChunk['meshlambert_frag'] = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <emissivemap_fragment>\\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\t#include <lightmap_fragment>\\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\t#ifdef DOUBLE_SIDED\\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\t#else\\n\t\treflectedLight.directDiffuse = vLightFront;\\n\t#endif\\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\t#include <normal_flip>\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/meshlambert_vert.glsl\n\n  THREE.ShaderChunk['meshlambert_vert'] = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n\t#include <lights_lambert_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/meshphong_frag.glsl\n\n  THREE.ShaderChunk['meshphong_frag'] = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <normal_flip>\\n\t#include <normal_fragment>\\n\t#include <emissivemap_fragment>\\n\t#include <lights_phong_fragment>\\n\t#include <lights_template>\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/meshphong_vert.glsl\n\n  THREE.ShaderChunk['meshphong_vert'] = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\tvNormal = normalize( transformedNormal );\\n#endif\\n\t#include <begin_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/meshphysical_frag.glsl\n\n  THREE.ShaderChunk['meshphysical_frag'] = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\tuniform float clearCoat;\\n\tuniform float clearCoatRoughness;\\n#endif\\nuniform float envMapIntensity;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <roughnessmap_fragment>\\n\t#include <metalnessmap_fragment>\\n\t#include <normal_flip>\\n\t#include <normal_fragment>\\n\t#include <emissivemap_fragment>\\n\t#include <lights_physical_fragment>\\n\t#include <lights_template>\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/meshphysical_vert.glsl\n\n  THREE.ShaderChunk['meshphysical_vert'] = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\tvNormal = normalize( transformedNormal );\\n#endif\\n\t#include <begin_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/normal_frag.glsl\n\n  THREE.ShaderChunk['normal_frag'] = \"uniform float opacity;\\nvarying vec3 vNormal;\\n#include <common>\\n#include <packing>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tgl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\\n\t#include <logdepthbuf_fragment>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/normal_vert.glsl\n\n  THREE.ShaderChunk['normal_vert'] = \"varying vec3 vNormal;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\tvNormal = normalize( normalMatrix * normal );\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/points_frag.glsl\n\n  THREE.ShaderChunk['points_frag'] = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_particle_fragment>\\n\t#include <color_fragment>\\n\t#include <alphatest_fragment>\\n\toutgoingLight = diffuseColor.rgb;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/points_vert.glsl\n\n  THREE.ShaderChunk['points_vert'] = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <color_vertex>\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\t#ifdef USE_SIZEATTENUATION\\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\t#else\\n\t\tgl_PointSize = size;\\n\t#endif\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/shadow_frag.glsl\n\n  THREE.ShaderChunk['shadow_frag'] = \"uniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/shadow_vert.glsl\n\n  THREE.ShaderChunk['shadow_vert'] = \"#include <shadowmap_pars_vertex>\\nvoid main() {\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib.js\n\n  /**\n   * Webgl Shader Library for three.js\n   *\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   * @author mikael emtinger / http://gomo.se/\n   */\n\n  THREE.ShaderLib = {\n    'basic': {\n      uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib['common'], THREE.UniformsLib['aomap'], THREE.UniformsLib['fog']]),\n      vertexShader: THREE.ShaderChunk['meshbasic_vert'],\n      fragmentShader: THREE.ShaderChunk['meshbasic_frag']\n    },\n    'lambert': {\n      uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib['common'], THREE.UniformsLib['aomap'], THREE.UniformsLib['lightmap'], THREE.UniformsLib['emissivemap'], THREE.UniformsLib['fog'], THREE.UniformsLib['lights'], {\n        \"emissive\": {\n          value: new THREE.Color(0x000000)\n        }\n      }]),\n      vertexShader: THREE.ShaderChunk['meshlambert_vert'],\n      fragmentShader: THREE.ShaderChunk['meshlambert_frag']\n    },\n    'phong': {\n      uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib['common'], THREE.UniformsLib['aomap'], THREE.UniformsLib['lightmap'], THREE.UniformsLib['emissivemap'], THREE.UniformsLib['bumpmap'], THREE.UniformsLib['normalmap'], THREE.UniformsLib['displacementmap'], THREE.UniformsLib['fog'], THREE.UniformsLib['lights'], {\n        \"emissive\": {\n          value: new THREE.Color(0x000000)\n        },\n        \"specular\": {\n          value: new THREE.Color(0x111111)\n        },\n        \"shininess\": {\n          value: 30\n        }\n      }]),\n      vertexShader: THREE.ShaderChunk['meshphong_vert'],\n      fragmentShader: THREE.ShaderChunk['meshphong_frag']\n    },\n    'standard': {\n      uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib['common'], THREE.UniformsLib['aomap'], THREE.UniformsLib['lightmap'], THREE.UniformsLib['emissivemap'], THREE.UniformsLib['bumpmap'], THREE.UniformsLib['normalmap'], THREE.UniformsLib['displacementmap'], THREE.UniformsLib['roughnessmap'], THREE.UniformsLib['metalnessmap'], THREE.UniformsLib['fog'], THREE.UniformsLib['lights'], {\n        \"emissive\": {\n          value: new THREE.Color(0x000000)\n        },\n        \"roughness\": {\n          value: 0.5\n        },\n        \"metalness\": {\n          value: 0\n        },\n        \"envMapIntensity\": {\n          value: 1\n        } // temporary\n\n      }]),\n      vertexShader: THREE.ShaderChunk['meshphysical_vert'],\n      fragmentShader: THREE.ShaderChunk['meshphysical_frag']\n    },\n    'points': {\n      uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib['points'], THREE.UniformsLib['fog']]),\n      vertexShader: THREE.ShaderChunk['points_vert'],\n      fragmentShader: THREE.ShaderChunk['points_frag']\n    },\n    'dashed': {\n      uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib['common'], THREE.UniformsLib['fog'], {\n        \"scale\": {\n          value: 1\n        },\n        \"dashSize\": {\n          value: 1\n        },\n        \"totalSize\": {\n          value: 2\n        }\n      }]),\n      vertexShader: THREE.ShaderChunk['linedashed_vert'],\n      fragmentShader: THREE.ShaderChunk['linedashed_frag']\n    },\n    'depth': {\n      uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib['common'], THREE.UniformsLib['displacementmap']]),\n      vertexShader: THREE.ShaderChunk['depth_vert'],\n      fragmentShader: THREE.ShaderChunk['depth_frag']\n    },\n    'normal': {\n      uniforms: {\n        \"opacity\": {\n          value: 1.0\n        }\n      },\n      vertexShader: THREE.ShaderChunk['normal_vert'],\n      fragmentShader: THREE.ShaderChunk['normal_frag']\n    },\n\n    /* -------------------------------------------------------------------------\n    //\tCube map shader\n     ------------------------------------------------------------------------- */\n    'cube': {\n      uniforms: {\n        \"tCube\": {\n          value: null\n        },\n        \"tFlip\": {\n          value: -1\n        },\n        \"opacity\": {\n          value: 1.0\n        }\n      },\n      vertexShader: THREE.ShaderChunk['cube_vert'],\n      fragmentShader: THREE.ShaderChunk['cube_frag']\n    },\n\n    /* -------------------------------------------------------------------------\n    //\tCube map shader\n     ------------------------------------------------------------------------- */\n    'equirect': {\n      uniforms: {\n        \"tEquirect\": {\n          value: null\n        },\n        \"tFlip\": {\n          value: -1\n        }\n      },\n      vertexShader: THREE.ShaderChunk['equirect_vert'],\n      fragmentShader: THREE.ShaderChunk['equirect_frag']\n    },\n    'distanceRGBA': {\n      uniforms: {\n        \"lightPos\": {\n          value: new THREE.Vector3()\n        }\n      },\n      vertexShader: THREE.ShaderChunk['distanceRGBA_vert'],\n      fragmentShader: THREE.ShaderChunk['distanceRGBA_frag']\n    }\n  };\n  THREE.ShaderLib['physical'] = {\n    uniforms: THREE.UniformsUtils.merge([THREE.ShaderLib['standard'].uniforms, {\n      \"clearCoat\": {\n        value: 0\n      },\n      \"clearCoatRoughness\": {\n        value: 0\n      }\n    }]),\n    vertexShader: THREE.ShaderChunk['meshphysical_vert'],\n    fragmentShader: THREE.ShaderChunk['meshphysical_frag']\n  }; // File:src/renderers/WebGLRenderer.js\n\n  /**\n   * @author supereggbert / http://www.paulbrunt.co.uk/\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   * @author szimek / https://github.com/szimek/\n   * @author tschw\n   */\n\n  THREE.WebGLRenderer = function (parameters) {\n    console.log('THREE.WebGLRenderer', THREE.REVISION);\n    parameters = parameters || {};\n\n    var _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas'),\n        _context = parameters.context !== undefined ? parameters.context : null,\n        _alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n        _depth = parameters.depth !== undefined ? parameters.depth : true,\n        _stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n        _antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n        _premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n        _preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\n\n    var lights = [];\n    var opaqueObjects = [];\n    var opaqueObjectsLastIndex = -1;\n    var transparentObjects = [];\n    var transparentObjectsLastIndex = -1;\n    var morphInfluences = new Float32Array(8);\n    var sprites = [];\n    var lensFlares = []; // public properties\n\n    this.domElement = _canvas;\n    this.context = null; // clearing\n\n    this.autoClear = true;\n    this.autoClearColor = true;\n    this.autoClearDepth = true;\n    this.autoClearStencil = true; // scene graph\n\n    this.sortObjects = true; // user-defined clipping\n\n    this.clippingPlanes = [];\n    this.localClippingEnabled = false; // physically based shading\n\n    this.gammaFactor = 2.0; // for backwards compatibility\n\n    this.gammaInput = false;\n    this.gammaOutput = false; // physical lights\n\n    this.physicallyCorrectLights = false; // tone mapping\n\n    this.toneMapping = THREE.LinearToneMapping;\n    this.toneMappingExposure = 1.0;\n    this.toneMappingWhitePoint = 1.0; // morphs\n\n    this.maxMorphTargets = 8;\n    this.maxMorphNormals = 4; // internal properties\n\n    var _this = this,\n        // internal state cache\n    _currentProgram = null,\n        _currentRenderTarget = null,\n        _currentFramebuffer = null,\n        _currentMaterialId = -1,\n        _currentGeometryProgram = '',\n        _currentCamera = null,\n        _currentScissor = new THREE.Vector4(),\n        _currentScissorTest = null,\n        _currentViewport = new THREE.Vector4(),\n        //\n    _usedTextureUnits = 0,\n        //\n    _clearColor = new THREE.Color(0x000000),\n        _clearAlpha = 0,\n        _width = _canvas.width,\n        _height = _canvas.height,\n        _pixelRatio = 1,\n        _scissor = new THREE.Vector4(0, 0, _width, _height),\n        _scissorTest = false,\n        _viewport = new THREE.Vector4(0, 0, _width, _height),\n        // frustum\n    _frustum = new THREE.Frustum(),\n        // clipping\n    _clipping = new THREE.WebGLClipping(),\n        _clippingEnabled = false,\n        _localClippingEnabled = false,\n        _sphere = new THREE.Sphere(),\n        // camera matrices cache\n    _projScreenMatrix = new THREE.Matrix4(),\n        _vector3 = new THREE.Vector3(),\n        // light arrays cache\n    _lights = {\n      hash: '',\n      ambient: [0, 0, 0],\n      directional: [],\n      directionalShadowMap: [],\n      directionalShadowMatrix: [],\n      spot: [],\n      spotShadowMap: [],\n      spotShadowMatrix: [],\n      point: [],\n      pointShadowMap: [],\n      pointShadowMatrix: [],\n      hemi: [],\n      shadows: []\n    },\n        // info\n    _infoRender = {\n      calls: 0,\n      vertices: 0,\n      faces: 0,\n      points: 0\n    };\n\n    this.info = {\n      render: _infoRender,\n      memory: {\n        geometries: 0,\n        textures: 0\n      },\n      programs: null\n    }; // initialize\n\n    var _gl;\n\n    try {\n      var attributes = {\n        alpha: _alpha,\n        depth: _depth,\n        stencil: _stencil,\n        antialias: _antialias,\n        premultipliedAlpha: _premultipliedAlpha,\n        preserveDrawingBuffer: _preserveDrawingBuffer\n      };\n      _gl = _context || _canvas.getContext('webgl', attributes) || _canvas.getContext('experimental-webgl', attributes);\n\n      if (_gl === null) {\n        if (_canvas.getContext('webgl') !== null) {\n          throw 'Error creating WebGL context with your selected attributes.';\n        } else {\n          throw 'Error creating WebGL context.';\n        }\n      } // Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\n      if (_gl.getShaderPrecisionFormat === undefined) {\n        _gl.getShaderPrecisionFormat = function () {\n          return {\n            'rangeMin': 1,\n            'rangeMax': 1,\n            'precision': 1\n          };\n        };\n      }\n\n      _canvas.addEventListener('webglcontextlost', onContextLost, false);\n    } catch (error) {\n      console.error('THREE.WebGLRenderer: ' + error);\n    }\n\n    var extensions = new THREE.WebGLExtensions(_gl);\n    extensions.get('WEBGL_depth_texture');\n    extensions.get('OES_texture_float');\n    extensions.get('OES_texture_float_linear');\n    extensions.get('OES_texture_half_float');\n    extensions.get('OES_texture_half_float_linear');\n    extensions.get('OES_standard_derivatives');\n    extensions.get('ANGLE_instanced_arrays');\n\n    if (extensions.get('OES_element_index_uint')) {\n      THREE.BufferGeometry.MaxIndex = 4294967296;\n    }\n\n    var capabilities = new THREE.WebGLCapabilities(_gl, extensions, parameters);\n    var state = new THREE.WebGLState(_gl, extensions, paramThreeToGL);\n    var properties = new THREE.WebGLProperties();\n    var textures = new THREE.WebGLTextures(_gl, extensions, state, properties, capabilities, paramThreeToGL, this.info);\n    var objects = new THREE.WebGLObjects(_gl, properties, this.info);\n    var programCache = new THREE.WebGLPrograms(this, capabilities);\n    var lightCache = new THREE.WebGLLights();\n    this.info.programs = programCache.programs;\n    var bufferRenderer = new THREE.WebGLBufferRenderer(_gl, extensions, _infoRender);\n    var indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer(_gl, extensions, _infoRender); //\n\n    var backgroundCamera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);\n    var backgroundCamera2 = new THREE.PerspectiveCamera();\n    var backgroundPlaneMesh = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), new THREE.MeshBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      fog: false\n    }));\n    var backgroundBoxShader = THREE.ShaderLib['cube'];\n    var backgroundBoxMesh = new THREE.Mesh(new THREE.BoxBufferGeometry(5, 5, 5), new THREE.ShaderMaterial({\n      uniforms: backgroundBoxShader.uniforms,\n      vertexShader: backgroundBoxShader.vertexShader,\n      fragmentShader: backgroundBoxShader.fragmentShader,\n      side: THREE.BackSide,\n      depthTest: false,\n      depthWrite: false,\n      fog: false\n    })); //\n\n    function getTargetPixelRatio() {\n      return _currentRenderTarget === null ? _pixelRatio : 1;\n    }\n\n    function glClearColor(r, g, b, a) {\n      if (_premultipliedAlpha === true) {\n        r *= a;\n        g *= a;\n        b *= a;\n      }\n\n      state.clearColor(r, g, b, a);\n    }\n\n    function setDefaultGLState() {\n      state.init();\n      state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio));\n      state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio));\n      glClearColor(_clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha);\n    }\n\n    function resetGLState() {\n      _currentProgram = null;\n      _currentCamera = null;\n      _currentGeometryProgram = '';\n      _currentMaterialId = -1;\n      state.reset();\n    }\n\n    setDefaultGLState();\n    this.context = _gl;\n    this.capabilities = capabilities;\n    this.extensions = extensions;\n    this.properties = properties;\n    this.state = state; // shadow map\n\n    var shadowMap = new THREE.WebGLShadowMap(this, _lights, objects, capabilities);\n    this.shadowMap = shadowMap; // Plugins\n\n    var spritePlugin = new THREE.SpritePlugin(this, sprites);\n    var lensFlarePlugin = new THREE.LensFlarePlugin(this, lensFlares); // API\n\n    this.getContext = function () {\n      return _gl;\n    };\n\n    this.getContextAttributes = function () {\n      return _gl.getContextAttributes();\n    };\n\n    this.forceContextLoss = function () {\n      extensions.get('WEBGL_lose_context').loseContext();\n    };\n\n    this.getMaxAnisotropy = function () {\n      return capabilities.getMaxAnisotropy();\n    };\n\n    this.getPrecision = function () {\n      return capabilities.precision;\n    };\n\n    this.getPixelRatio = function () {\n      return _pixelRatio;\n    };\n\n    this.setPixelRatio = function (value) {\n      if (value === undefined) return;\n      _pixelRatio = value;\n      this.setSize(_viewport.z, _viewport.w, false);\n    };\n\n    this.getSize = function () {\n      return {\n        width: _width,\n        height: _height\n      };\n    };\n\n    this.setSize = function (width, height, updateStyle) {\n      _width = width;\n      _height = height;\n      _canvas.width = width * _pixelRatio;\n      _canvas.height = height * _pixelRatio;\n\n      if (updateStyle !== false) {\n        _canvas.style.width = width + 'px';\n        _canvas.style.height = height + 'px';\n      }\n\n      this.setViewport(0, 0, width, height);\n    };\n\n    this.setViewport = function (x, y, width, height) {\n      state.viewport(_viewport.set(x, y, width, height));\n    };\n\n    this.setScissor = function (x, y, width, height) {\n      state.scissor(_scissor.set(x, y, width, height));\n    };\n\n    this.setScissorTest = function (boolean) {\n      state.setScissorTest(_scissorTest = boolean);\n    }; // Clearing\n\n\n    this.getClearColor = function () {\n      return _clearColor;\n    };\n\n    this.setClearColor = function (color, alpha) {\n      _clearColor.set(color);\n\n      _clearAlpha = alpha !== undefined ? alpha : 1;\n      glClearColor(_clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha);\n    };\n\n    this.getClearAlpha = function () {\n      return _clearAlpha;\n    };\n\n    this.setClearAlpha = function (alpha) {\n      _clearAlpha = alpha;\n      glClearColor(_clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha);\n    };\n\n    this.clear = function (color, depth, stencil) {\n      var bits = 0;\n      if (color === undefined || color) bits |= _gl.COLOR_BUFFER_BIT;\n      if (depth === undefined || depth) bits |= _gl.DEPTH_BUFFER_BIT;\n      if (stencil === undefined || stencil) bits |= _gl.STENCIL_BUFFER_BIT;\n\n      _gl.clear(bits);\n    };\n\n    this.clearColor = function () {\n      this.clear(true, false, false);\n    };\n\n    this.clearDepth = function () {\n      this.clear(false, true, false);\n    };\n\n    this.clearStencil = function () {\n      this.clear(false, false, true);\n    };\n\n    this.clearTarget = function (renderTarget, color, depth, stencil) {\n      this.setRenderTarget(renderTarget);\n      this.clear(color, depth, stencil);\n    }; // Reset\n\n\n    this.resetGLState = resetGLState;\n\n    this.dispose = function () {\n      transparentObjects = [];\n      transparentObjectsLastIndex = -1;\n      opaqueObjects = [];\n      opaqueObjectsLastIndex = -1;\n\n      _canvas.removeEventListener('webglcontextlost', onContextLost, false);\n    }; // Events\n\n\n    function onContextLost(event) {\n      event.preventDefault();\n      resetGLState();\n      setDefaultGLState();\n      properties.clear();\n    }\n\n    function onMaterialDispose(event) {\n      var material = event.target;\n      material.removeEventListener('dispose', onMaterialDispose);\n      deallocateMaterial(material);\n    } // Buffer deallocation\n\n\n    function deallocateMaterial(material) {\n      releaseMaterialProgramReference(material);\n      properties.delete(material);\n    }\n\n    function releaseMaterialProgramReference(material) {\n      var programInfo = properties.get(material).program;\n      material.program = undefined;\n\n      if (programInfo !== undefined) {\n        programCache.releaseProgram(programInfo);\n      }\n    } // Buffer rendering\n\n\n    this.renderBufferImmediate = function (object, program, material) {\n      state.initAttributes();\n      var buffers = properties.get(object);\n      if (object.hasPositions && !buffers.position) buffers.position = _gl.createBuffer();\n      if (object.hasNormals && !buffers.normal) buffers.normal = _gl.createBuffer();\n      if (object.hasUvs && !buffers.uv) buffers.uv = _gl.createBuffer();\n      if (object.hasColors && !buffers.color) buffers.color = _gl.createBuffer();\n      var attributes = program.getAttributes();\n\n      if (object.hasPositions) {\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.position);\n\n        _gl.bufferData(_gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW);\n\n        state.enableAttribute(attributes.position);\n\n        _gl.vertexAttribPointer(attributes.position, 3, _gl.FLOAT, false, 0, 0);\n      }\n\n      if (object.hasNormals) {\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.normal);\n\n        if (material.type !== 'MeshPhongMaterial' && material.type !== 'MeshStandardMaterial' && material.type !== 'MeshPhysicalMaterial' && material.shading === THREE.FlatShading) {\n          for (var i = 0, l = object.count * 3; i < l; i += 9) {\n            var array = object.normalArray;\n            var nx = (array[i + 0] + array[i + 3] + array[i + 6]) / 3;\n            var ny = (array[i + 1] + array[i + 4] + array[i + 7]) / 3;\n            var nz = (array[i + 2] + array[i + 5] + array[i + 8]) / 3;\n            array[i + 0] = nx;\n            array[i + 1] = ny;\n            array[i + 2] = nz;\n            array[i + 3] = nx;\n            array[i + 4] = ny;\n            array[i + 5] = nz;\n            array[i + 6] = nx;\n            array[i + 7] = ny;\n            array[i + 8] = nz;\n          }\n        }\n\n        _gl.bufferData(_gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW);\n\n        state.enableAttribute(attributes.normal);\n\n        _gl.vertexAttribPointer(attributes.normal, 3, _gl.FLOAT, false, 0, 0);\n      }\n\n      if (object.hasUvs && material.map) {\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.uv);\n\n        _gl.bufferData(_gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW);\n\n        state.enableAttribute(attributes.uv);\n\n        _gl.vertexAttribPointer(attributes.uv, 2, _gl.FLOAT, false, 0, 0);\n      }\n\n      if (object.hasColors && material.vertexColors !== THREE.NoColors) {\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.color);\n\n        _gl.bufferData(_gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW);\n\n        state.enableAttribute(attributes.color);\n\n        _gl.vertexAttribPointer(attributes.color, 3, _gl.FLOAT, false, 0, 0);\n      }\n\n      state.disableUnusedAttributes();\n\n      _gl.drawArrays(_gl.TRIANGLES, 0, object.count);\n\n      object.count = 0;\n    };\n\n    this.renderBufferDirect = function (camera, fog, geometry, material, object, group) {\n      setMaterial(material);\n      var program = setProgram(camera, fog, material, object);\n      var updateBuffers = false;\n      var geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\n\n      if (geometryProgram !== _currentGeometryProgram) {\n        _currentGeometryProgram = geometryProgram;\n        updateBuffers = true;\n      } // morph targets\n\n\n      var morphTargetInfluences = object.morphTargetInfluences;\n\n      if (morphTargetInfluences !== undefined) {\n        var activeInfluences = [];\n\n        for (var i = 0, l = morphTargetInfluences.length; i < l; i++) {\n          var influence = morphTargetInfluences[i];\n          activeInfluences.push([influence, i]);\n        }\n\n        activeInfluences.sort(absNumericalSort);\n\n        if (activeInfluences.length > 8) {\n          activeInfluences.length = 8;\n        }\n\n        var morphAttributes = geometry.morphAttributes;\n\n        for (var i = 0, l = activeInfluences.length; i < l; i++) {\n          var influence = activeInfluences[i];\n          morphInfluences[i] = influence[0];\n\n          if (influence[0] !== 0) {\n            var index = influence[1];\n            if (material.morphTargets === true && morphAttributes.position) geometry.addAttribute('morphTarget' + i, morphAttributes.position[index]);\n            if (material.morphNormals === true && morphAttributes.normal) geometry.addAttribute('morphNormal' + i, morphAttributes.normal[index]);\n          } else {\n            if (material.morphTargets === true) geometry.removeAttribute('morphTarget' + i);\n            if (material.morphNormals === true) geometry.removeAttribute('morphNormal' + i);\n          }\n        }\n\n        program.getUniforms().setValue(_gl, 'morphTargetInfluences', morphInfluences);\n        updateBuffers = true;\n      } //\n\n\n      var index = geometry.index;\n      var position = geometry.attributes.position;\n\n      if (material.wireframe === true) {\n        index = objects.getWireframeAttribute(geometry);\n      }\n\n      var renderer;\n\n      if (index !== null) {\n        renderer = indexedBufferRenderer;\n        renderer.setIndex(index);\n      } else {\n        renderer = bufferRenderer;\n      }\n\n      if (updateBuffers) {\n        setupVertexAttributes(material, program, geometry);\n\n        if (index !== null) {\n          _gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer(index));\n        }\n      } //\n\n\n      var dataStart = 0;\n      var dataCount = Infinity;\n\n      if (index !== null) {\n        dataCount = index.count;\n      } else if (position !== undefined) {\n        dataCount = position.count;\n      }\n\n      var rangeStart = geometry.drawRange.start;\n      var rangeCount = geometry.drawRange.count;\n      var groupStart = group !== null ? group.start : 0;\n      var groupCount = group !== null ? group.count : Infinity;\n      var drawStart = Math.max(dataStart, rangeStart, groupStart);\n      var drawEnd = Math.min(dataStart + dataCount, rangeStart + rangeCount, groupStart + groupCount) - 1;\n      var drawCount = Math.max(0, drawEnd - drawStart + 1); //\n\n      if (object instanceof THREE.Mesh) {\n        if (material.wireframe === true) {\n          state.setLineWidth(material.wireframeLinewidth * getTargetPixelRatio());\n          renderer.setMode(_gl.LINES);\n        } else {\n          switch (object.drawMode) {\n            case THREE.TrianglesDrawMode:\n              renderer.setMode(_gl.TRIANGLES);\n              break;\n\n            case THREE.TriangleStripDrawMode:\n              renderer.setMode(_gl.TRIANGLE_STRIP);\n              break;\n\n            case THREE.TriangleFanDrawMode:\n              renderer.setMode(_gl.TRIANGLE_FAN);\n              break;\n          }\n        }\n      } else if (object instanceof THREE.Line) {\n        var lineWidth = material.linewidth;\n        if (lineWidth === undefined) lineWidth = 1; // Not using Line*Material\n\n        state.setLineWidth(lineWidth * getTargetPixelRatio());\n\n        if (object instanceof THREE.LineSegments) {\n          renderer.setMode(_gl.LINES);\n        } else {\n          renderer.setMode(_gl.LINE_STRIP);\n        }\n      } else if (object instanceof THREE.Points) {\n        renderer.setMode(_gl.POINTS);\n      }\n\n      if (geometry instanceof THREE.InstancedBufferGeometry) {\n        if (geometry.maxInstancedCount > 0) {\n          renderer.renderInstances(geometry, drawStart, drawCount);\n        }\n      } else {\n        renderer.render(drawStart, drawCount);\n      }\n    };\n\n    function setupVertexAttributes(material, program, geometry, startIndex) {\n      var extension;\n\n      if (geometry instanceof THREE.InstancedBufferGeometry) {\n        extension = extensions.get('ANGLE_instanced_arrays');\n\n        if (extension === null) {\n          console.error('THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n          return;\n        }\n      }\n\n      if (startIndex === undefined) startIndex = 0;\n      state.initAttributes();\n      var geometryAttributes = geometry.attributes;\n      var programAttributes = program.getAttributes();\n      var materialDefaultAttributeValues = material.defaultAttributeValues;\n\n      for (var name in programAttributes) {\n        var programAttribute = programAttributes[name];\n\n        if (programAttribute >= 0) {\n          var geometryAttribute = geometryAttributes[name];\n\n          if (geometryAttribute !== undefined) {\n            var type = _gl.FLOAT;\n            var array = geometryAttribute.array;\n            var normalized = geometryAttribute.normalized;\n\n            if (array instanceof Float32Array) {\n              type = _gl.FLOAT;\n            } else if (array instanceof Float64Array) {\n              console.warn(\"Unsupported data buffer format: Float64Array\");\n            } else if (array instanceof Uint16Array) {\n              type = _gl.UNSIGNED_SHORT;\n            } else if (array instanceof Int16Array) {\n              type = _gl.SHORT;\n            } else if (array instanceof Uint32Array) {\n              type = _gl.UNSIGNED_INT;\n            } else if (array instanceof Int32Array) {\n              type = _gl.INT;\n            } else if (array instanceof Int8Array) {\n              type = _gl.BYTE;\n            } else if (array instanceof Uint8Array) {\n              type = _gl.UNSIGNED_BYTE;\n            }\n\n            var size = geometryAttribute.itemSize;\n            var buffer = objects.getAttributeBuffer(geometryAttribute);\n\n            if (geometryAttribute instanceof THREE.InterleavedBufferAttribute) {\n              var data = geometryAttribute.data;\n              var stride = data.stride;\n              var offset = geometryAttribute.offset;\n\n              if (data instanceof THREE.InstancedInterleavedBuffer) {\n                state.enableAttributeAndDivisor(programAttribute, data.meshPerAttribute, extension);\n\n                if (geometry.maxInstancedCount === undefined) {\n                  geometry.maxInstancedCount = data.meshPerAttribute * data.count;\n                }\n              } else {\n                state.enableAttribute(programAttribute);\n              }\n\n              _gl.bindBuffer(_gl.ARRAY_BUFFER, buffer);\n\n              _gl.vertexAttribPointer(programAttribute, size, type, normalized, stride * data.array.BYTES_PER_ELEMENT, (startIndex * stride + offset) * data.array.BYTES_PER_ELEMENT);\n            } else {\n              if (geometryAttribute instanceof THREE.InstancedBufferAttribute) {\n                state.enableAttributeAndDivisor(programAttribute, geometryAttribute.meshPerAttribute, extension);\n\n                if (geometry.maxInstancedCount === undefined) {\n                  geometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n                }\n              } else {\n                state.enableAttribute(programAttribute);\n              }\n\n              _gl.bindBuffer(_gl.ARRAY_BUFFER, buffer);\n\n              _gl.vertexAttribPointer(programAttribute, size, type, normalized, 0, startIndex * size * geometryAttribute.array.BYTES_PER_ELEMENT);\n            }\n          } else if (materialDefaultAttributeValues !== undefined) {\n            var value = materialDefaultAttributeValues[name];\n\n            if (value !== undefined) {\n              switch (value.length) {\n                case 2:\n                  _gl.vertexAttrib2fv(programAttribute, value);\n\n                  break;\n\n                case 3:\n                  _gl.vertexAttrib3fv(programAttribute, value);\n\n                  break;\n\n                case 4:\n                  _gl.vertexAttrib4fv(programAttribute, value);\n\n                  break;\n\n                default:\n                  _gl.vertexAttrib1fv(programAttribute, value);\n\n              }\n            }\n          }\n        }\n      }\n\n      state.disableUnusedAttributes();\n    } // Sorting\n\n\n    function absNumericalSort(a, b) {\n      return Math.abs(b[0]) - Math.abs(a[0]);\n    }\n\n    function painterSortStable(a, b) {\n      if (a.object.renderOrder !== b.object.renderOrder) {\n        return a.object.renderOrder - b.object.renderOrder;\n      } else if (a.material.program && b.material.program && a.material.program !== b.material.program) {\n        return a.material.program.id - b.material.program.id;\n      } else if (a.material.id !== b.material.id) {\n        return a.material.id - b.material.id;\n      } else if (a.z !== b.z) {\n        return a.z - b.z;\n      } else {\n        return a.id - b.id;\n      }\n    }\n\n    function reversePainterSortStable(a, b) {\n      if (a.object.renderOrder !== b.object.renderOrder) {\n        return a.object.renderOrder - b.object.renderOrder;\n      }\n\n      if (a.z !== b.z) {\n        return b.z - a.z;\n      } else {\n        return a.id - b.id;\n      }\n    } // Rendering\n\n\n    this.render = function (scene, camera, renderTarget, forceClear) {\n      if (camera instanceof THREE.Camera === false) {\n        console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');\n        return;\n      }\n\n      var fog = scene.fog; // reset caching for this frame\n\n      _currentGeometryProgram = '';\n      _currentMaterialId = -1;\n      _currentCamera = null; // update scene graph\n\n      if (scene.autoUpdate === true) scene.updateMatrixWorld(); // update camera matrices and frustum\n\n      if (camera.parent === null) camera.updateMatrixWorld();\n      camera.matrixWorldInverse.getInverse(camera.matrixWorld);\n\n      _projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n      _frustum.setFromMatrix(_projScreenMatrix);\n\n      lights.length = 0;\n      opaqueObjectsLastIndex = -1;\n      transparentObjectsLastIndex = -1;\n      sprites.length = 0;\n      lensFlares.length = 0;\n      _localClippingEnabled = this.localClippingEnabled;\n      _clippingEnabled = _clipping.init(this.clippingPlanes, _localClippingEnabled, camera);\n      projectObject(scene, camera);\n      opaqueObjects.length = opaqueObjectsLastIndex + 1;\n      transparentObjects.length = transparentObjectsLastIndex + 1;\n\n      if (_this.sortObjects === true) {\n        opaqueObjects.sort(painterSortStable);\n        transparentObjects.sort(reversePainterSortStable);\n      } //\n\n\n      if (_clippingEnabled) _clipping.beginShadows();\n      setupShadows(lights);\n      shadowMap.render(scene, camera);\n      setupLights(lights, camera);\n      if (_clippingEnabled) _clipping.endShadows(); //\n\n      _infoRender.calls = 0;\n      _infoRender.vertices = 0;\n      _infoRender.faces = 0;\n      _infoRender.points = 0;\n\n      if (renderTarget === undefined) {\n        renderTarget = null;\n      }\n\n      this.setRenderTarget(renderTarget); //\n\n      var background = scene.background;\n\n      if (background === null) {\n        glClearColor(_clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha);\n      } else if (background instanceof THREE.Color) {\n        glClearColor(background.r, background.g, background.b, 1);\n      }\n\n      if (this.autoClear || forceClear) {\n        this.clear(this.autoClearColor, this.autoClearDepth, this.autoClearStencil);\n      }\n\n      if (background instanceof THREE.CubeTexture) {\n        backgroundCamera2.projectionMatrix.copy(camera.projectionMatrix);\n        backgroundCamera2.matrixWorld.extractRotation(camera.matrixWorld);\n        backgroundCamera2.matrixWorldInverse.getInverse(backgroundCamera2.matrixWorld);\n        backgroundBoxMesh.material.uniforms[\"tCube\"].value = background;\n        backgroundBoxMesh.modelViewMatrix.multiplyMatrices(backgroundCamera2.matrixWorldInverse, backgroundBoxMesh.matrixWorld);\n        objects.update(backgroundBoxMesh);\n\n        _this.renderBufferDirect(backgroundCamera2, null, backgroundBoxMesh.geometry, backgroundBoxMesh.material, backgroundBoxMesh, null);\n      } else if (background instanceof THREE.Texture) {\n        backgroundPlaneMesh.material.map = background;\n        objects.update(backgroundPlaneMesh);\n\n        _this.renderBufferDirect(backgroundCamera, null, backgroundPlaneMesh.geometry, backgroundPlaneMesh.material, backgroundPlaneMesh, null);\n      } //\n\n\n      if (scene.overrideMaterial) {\n        var overrideMaterial = scene.overrideMaterial;\n        renderObjects(opaqueObjects, camera, fog, overrideMaterial);\n        renderObjects(transparentObjects, camera, fog, overrideMaterial);\n      } else {\n        // opaque pass (front-to-back order)\n        state.setBlending(THREE.NoBlending);\n        renderObjects(opaqueObjects, camera, fog); // transparent pass (back-to-front order)\n\n        renderObjects(transparentObjects, camera, fog);\n      } // custom render plugins (post pass)\n\n\n      spritePlugin.render(scene, camera);\n      lensFlarePlugin.render(scene, camera, _currentViewport); // Generate mipmap if we're using any kind of mipmap filtering\n\n      if (renderTarget) {\n        textures.updateRenderTargetMipmap(renderTarget);\n      } // Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\n      state.setDepthTest(true);\n      state.setDepthWrite(true);\n      state.setColorWrite(true); // _gl.finish();\n    };\n\n    function pushRenderItem(object, geometry, material, z, group) {\n      var array, index; // allocate the next position in the appropriate array\n\n      if (material.transparent) {\n        array = transparentObjects;\n        index = ++transparentObjectsLastIndex;\n      } else {\n        array = opaqueObjects;\n        index = ++opaqueObjectsLastIndex;\n      } // recycle existing render item or grow the array\n\n\n      var renderItem = array[index];\n\n      if (renderItem !== undefined) {\n        renderItem.id = object.id;\n        renderItem.object = object;\n        renderItem.geometry = geometry;\n        renderItem.material = material;\n        renderItem.z = _vector3.z;\n        renderItem.group = group;\n      } else {\n        renderItem = {\n          id: object.id,\n          object: object,\n          geometry: geometry,\n          material: material,\n          z: _vector3.z,\n          group: group\n        }; // assert( index === array.length );\n\n        array.push(renderItem);\n      }\n    } // TODO Duplicated code (Frustum)\n\n\n    function isObjectViewable(object) {\n      var geometry = object.geometry;\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n      _sphere.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);\n\n      return isSphereViewable(_sphere);\n    }\n\n    function isSpriteViewable(sprite) {\n      _sphere.center.set(0, 0, 0);\n\n      _sphere.radius = 0.7071067811865476;\n\n      _sphere.applyMatrix4(sprite.matrixWorld);\n\n      return isSphereViewable(_sphere);\n    }\n\n    function isSphereViewable(sphere) {\n      if (!_frustum.intersectsSphere(sphere)) return false;\n      var numPlanes = _clipping.numPlanes;\n      if (numPlanes === 0) return true;\n      var planes = _this.clippingPlanes,\n          center = sphere.center,\n          negRad = -sphere.radius,\n          i = 0;\n\n      do {\n        // out when deeper than radius in the negative halfspace\n        if (planes[i].distanceToPoint(center) < negRad) return false;\n      } while (++i !== numPlanes);\n\n      return true;\n    }\n\n    function projectObject(object, camera) {\n      if (object.visible === false) return;\n\n      if (object.layers.test(camera.layers)) {\n        if (object instanceof THREE.Light) {\n          lights.push(object);\n        } else if (object instanceof THREE.Sprite) {\n          if (object.frustumCulled === false || isSpriteViewable(object) === true) {\n            sprites.push(object);\n          }\n        } else if (object instanceof THREE.LensFlare) {\n          lensFlares.push(object);\n        } else if (object instanceof THREE.ImmediateRenderObject) {\n          if (_this.sortObjects === true) {\n            _vector3.setFromMatrixPosition(object.matrixWorld);\n\n            _vector3.applyProjection(_projScreenMatrix);\n          }\n\n          pushRenderItem(object, null, object.material, _vector3.z, null);\n        } else if (object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points) {\n          if (object instanceof THREE.SkinnedMesh) {\n            object.skeleton.update();\n          }\n\n          if (object.frustumCulled === false || isObjectViewable(object) === true) {\n            var material = object.material;\n\n            if (material.visible === true) {\n              if (_this.sortObjects === true) {\n                _vector3.setFromMatrixPosition(object.matrixWorld);\n\n                _vector3.applyProjection(_projScreenMatrix);\n              }\n\n              var geometry = objects.update(object);\n\n              if (material instanceof THREE.MultiMaterial) {\n                var groups = geometry.groups;\n                var materials = material.materials;\n\n                for (var i = 0, l = groups.length; i < l; i++) {\n                  var group = groups[i];\n                  var groupMaterial = materials[group.materialIndex];\n\n                  if (groupMaterial.visible === true) {\n                    pushRenderItem(object, geometry, groupMaterial, _vector3.z, group);\n                  }\n                }\n              } else {\n                pushRenderItem(object, geometry, material, _vector3.z, null);\n              }\n            }\n          }\n        }\n      }\n\n      var children = object.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        projectObject(children[i], camera);\n      }\n    }\n\n    function renderObjects(renderList, camera, fog, overrideMaterial) {\n      for (var i = 0, l = renderList.length; i < l; i++) {\n        var renderItem = renderList[i];\n        var object = renderItem.object;\n        var geometry = renderItem.geometry;\n        var material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n        var group = renderItem.group;\n        object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n        object.normalMatrix.getNormalMatrix(object.modelViewMatrix);\n\n        if (object instanceof THREE.ImmediateRenderObject) {\n          setMaterial(material);\n          var program = setProgram(camera, fog, material, object);\n          _currentGeometryProgram = '';\n          object.render(function (object) {\n            _this.renderBufferImmediate(object, program, material);\n          });\n        } else {\n          _this.renderBufferDirect(camera, fog, geometry, material, object, group);\n        }\n      }\n    }\n\n    function initMaterial(material, fog, object) {\n      var materialProperties = properties.get(material);\n      var parameters = programCache.getParameters(material, _lights, fog, _clipping.numPlanes, object);\n      var code = programCache.getProgramCode(material, parameters);\n      var program = materialProperties.program;\n      var programChange = true;\n\n      if (program === undefined) {\n        // new material\n        material.addEventListener('dispose', onMaterialDispose);\n      } else if (program.code !== code) {\n        // changed glsl or parameters\n        releaseMaterialProgramReference(material);\n      } else if (parameters.shaderID !== undefined) {\n        // same glsl and uniform list\n        return;\n      } else {\n        // only rebuild uniform list\n        programChange = false;\n      }\n\n      if (programChange) {\n        if (parameters.shaderID) {\n          var shader = THREE.ShaderLib[parameters.shaderID];\n          materialProperties.__webglShader = {\n            name: material.type,\n            uniforms: THREE.UniformsUtils.clone(shader.uniforms),\n            vertexShader: shader.vertexShader,\n            fragmentShader: shader.fragmentShader\n          };\n        } else {\n          materialProperties.__webglShader = {\n            name: material.type,\n            uniforms: material.uniforms,\n            vertexShader: material.vertexShader,\n            fragmentShader: material.fragmentShader\n          };\n        }\n\n        material.__webglShader = materialProperties.__webglShader;\n        program = programCache.acquireProgram(material, parameters, code);\n        materialProperties.program = program;\n        material.program = program;\n      }\n\n      var attributes = program.getAttributes();\n\n      if (material.morphTargets) {\n        material.numSupportedMorphTargets = 0;\n\n        for (var i = 0; i < _this.maxMorphTargets; i++) {\n          if (attributes['morphTarget' + i] >= 0) {\n            material.numSupportedMorphTargets++;\n          }\n        }\n      }\n\n      if (material.morphNormals) {\n        material.numSupportedMorphNormals = 0;\n\n        for (var i = 0; i < _this.maxMorphNormals; i++) {\n          if (attributes['morphNormal' + i] >= 0) {\n            material.numSupportedMorphNormals++;\n          }\n        }\n      }\n\n      var uniforms = materialProperties.__webglShader.uniforms;\n\n      if (!(material instanceof THREE.ShaderMaterial) && !(material instanceof THREE.RawShaderMaterial) || material.clipping === true) {\n        materialProperties.numClippingPlanes = _clipping.numPlanes;\n        uniforms.clippingPlanes = _clipping.uniform;\n      }\n\n      if (material.lights) {\n        // store the light setup it was created for\n        materialProperties.lightsHash = _lights.hash; // wire up the material to this renderer's lighting state\n\n        uniforms.ambientLightColor.value = _lights.ambient;\n        uniforms.directionalLights.value = _lights.directional;\n        uniforms.spotLights.value = _lights.spot;\n        uniforms.pointLights.value = _lights.point;\n        uniforms.hemisphereLights.value = _lights.hemi;\n        uniforms.directionalShadowMap.value = _lights.directionalShadowMap;\n        uniforms.directionalShadowMatrix.value = _lights.directionalShadowMatrix;\n        uniforms.spotShadowMap.value = _lights.spotShadowMap;\n        uniforms.spotShadowMatrix.value = _lights.spotShadowMatrix;\n        uniforms.pointShadowMap.value = _lights.pointShadowMap;\n        uniforms.pointShadowMatrix.value = _lights.pointShadowMatrix;\n      }\n\n      var progUniforms = materialProperties.program.getUniforms(),\n          uniformsList = THREE.WebGLUniforms.seqWithValue(progUniforms.seq, uniforms);\n      materialProperties.uniformsList = uniformsList;\n      materialProperties.dynamicUniforms = THREE.WebGLUniforms.splitDynamic(uniformsList, uniforms);\n    }\n\n    function setMaterial(material) {\n      if (material.side !== THREE.DoubleSide) state.enable(_gl.CULL_FACE);else state.disable(_gl.CULL_FACE);\n      state.setFlipSided(material.side === THREE.BackSide);\n\n      if (material.transparent === true) {\n        state.setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha);\n      } else {\n        state.setBlending(THREE.NoBlending);\n      }\n\n      state.setDepthFunc(material.depthFunc);\n      state.setDepthTest(material.depthTest);\n      state.setDepthWrite(material.depthWrite);\n      state.setColorWrite(material.colorWrite);\n      state.setPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n    }\n\n    function setProgram(camera, fog, material, object) {\n      _usedTextureUnits = 0;\n      var materialProperties = properties.get(material);\n\n      if (_clippingEnabled) {\n        if (_localClippingEnabled || camera !== _currentCamera) {\n          var useCache = camera === _currentCamera && material.id === _currentMaterialId; // we might want to call this function with some ClippingGroup\n          // object instead of the material, once it becomes feasible\n          // (#8465, #8379)\n\n          _clipping.setState(material.clippingPlanes, material.clipShadows, camera, materialProperties, useCache);\n        }\n\n        if (materialProperties.numClippingPlanes !== undefined && materialProperties.numClippingPlanes !== _clipping.numPlanes) {\n          material.needsUpdate = true;\n        }\n      }\n\n      if (materialProperties.program === undefined) {\n        material.needsUpdate = true;\n      }\n\n      if (materialProperties.lightsHash !== undefined && materialProperties.lightsHash !== _lights.hash) {\n        material.needsUpdate = true;\n      }\n\n      if (material.needsUpdate) {\n        initMaterial(material, fog, object);\n        material.needsUpdate = false;\n      }\n\n      var refreshProgram = false;\n      var refreshMaterial = false;\n      var refreshLights = false;\n      var program = materialProperties.program,\n          p_uniforms = program.getUniforms(),\n          m_uniforms = materialProperties.__webglShader.uniforms;\n\n      if (program.id !== _currentProgram) {\n        _gl.useProgram(program.program);\n\n        _currentProgram = program.id;\n        refreshProgram = true;\n        refreshMaterial = true;\n        refreshLights = true;\n      }\n\n      if (material.id !== _currentMaterialId) {\n        _currentMaterialId = material.id;\n        refreshMaterial = true;\n      }\n\n      if (refreshProgram || camera !== _currentCamera) {\n        p_uniforms.set(_gl, camera, 'projectionMatrix');\n\n        if (capabilities.logarithmicDepthBuffer) {\n          p_uniforms.setValue(_gl, 'logDepthBufFC', 2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\n        }\n\n        if (camera !== _currentCamera) {\n          _currentCamera = camera; // lighting uniforms depend on the camera so enforce an update\n          // now, in case this material supports lights - or later, when\n          // the next material that does gets activated:\n\n          refreshMaterial = true; // set to true on material change\n\n          refreshLights = true; // remains set until update done\n        } // load material specific uniforms\n        // (shader material also gets them for the sake of genericity)\n\n\n        if (material instanceof THREE.ShaderMaterial || material instanceof THREE.MeshPhongMaterial || material instanceof THREE.MeshStandardMaterial || material.envMap) {\n          var uCamPos = p_uniforms.map.cameraPosition;\n\n          if (uCamPos !== undefined) {\n            uCamPos.setValue(_gl, _vector3.setFromMatrixPosition(camera.matrixWorld));\n          }\n        }\n\n        if (material instanceof THREE.MeshPhongMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshBasicMaterial || material instanceof THREE.MeshStandardMaterial || material instanceof THREE.ShaderMaterial || material.skinning) {\n          p_uniforms.setValue(_gl, 'viewMatrix', camera.matrixWorldInverse);\n        }\n\n        p_uniforms.set(_gl, _this, 'toneMappingExposure');\n        p_uniforms.set(_gl, _this, 'toneMappingWhitePoint');\n      } // skinning uniforms must be set even if material didn't change\n      // auto-setting of texture unit for bone texture must go before other textures\n      // not sure why, but otherwise weird things happen\n\n\n      if (material.skinning) {\n        p_uniforms.setOptional(_gl, object, 'bindMatrix');\n        p_uniforms.setOptional(_gl, object, 'bindMatrixInverse');\n        var skeleton = object.skeleton;\n\n        if (skeleton) {\n          if (capabilities.floatVertexTextures && skeleton.useVertexTexture) {\n            p_uniforms.set(_gl, skeleton, 'boneTexture');\n            p_uniforms.set(_gl, skeleton, 'boneTextureWidth');\n            p_uniforms.set(_gl, skeleton, 'boneTextureHeight');\n          } else {\n            p_uniforms.setOptional(_gl, skeleton, 'boneMatrices');\n          }\n        }\n      }\n\n      if (refreshMaterial) {\n        if (material.lights) {\n          // the current material requires lighting info\n          // note: all lighting uniforms are always set correctly\n          // they simply reference the renderer's state for their\n          // values\n          //\n          // use the current material's .needsUpdate flags to set\n          // the GL state when required\n          markUniformsLightsNeedsUpdate(m_uniforms, refreshLights);\n        } // refresh uniforms common to several materials\n\n\n        if (fog && material.fog) {\n          refreshUniformsFog(m_uniforms, fog);\n        }\n\n        if (material instanceof THREE.MeshBasicMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial || material instanceof THREE.MeshStandardMaterial || material instanceof THREE.MeshDepthMaterial) {\n          refreshUniformsCommon(m_uniforms, material);\n        } // refresh single material specific uniforms\n\n\n        if (material instanceof THREE.LineBasicMaterial) {\n          refreshUniformsLine(m_uniforms, material);\n        } else if (material instanceof THREE.LineDashedMaterial) {\n          refreshUniformsLine(m_uniforms, material);\n          refreshUniformsDash(m_uniforms, material);\n        } else if (material instanceof THREE.PointsMaterial) {\n          refreshUniformsPoints(m_uniforms, material);\n        } else if (material instanceof THREE.MeshLambertMaterial) {\n          refreshUniformsLambert(m_uniforms, material);\n        } else if (material instanceof THREE.MeshPhongMaterial) {\n          refreshUniformsPhong(m_uniforms, material);\n        } else if (material instanceof THREE.MeshPhysicalMaterial) {\n          refreshUniformsPhysical(m_uniforms, material);\n        } else if (material instanceof THREE.MeshStandardMaterial) {\n          refreshUniformsStandard(m_uniforms, material);\n        } else if (material instanceof THREE.MeshDepthMaterial) {\n          if (material.displacementMap) {\n            m_uniforms.displacementMap.value = material.displacementMap;\n            m_uniforms.displacementScale.value = material.displacementScale;\n            m_uniforms.displacementBias.value = material.displacementBias;\n          }\n        } else if (material instanceof THREE.MeshNormalMaterial) {\n          m_uniforms.opacity.value = material.opacity;\n        }\n\n        THREE.WebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, _this);\n      } // common matrices\n\n\n      p_uniforms.set(_gl, object, 'modelViewMatrix');\n      p_uniforms.set(_gl, object, 'normalMatrix');\n      p_uniforms.setValue(_gl, 'modelMatrix', object.matrixWorld); // dynamic uniforms\n\n      var dynUniforms = materialProperties.dynamicUniforms;\n\n      if (dynUniforms !== null) {\n        THREE.WebGLUniforms.evalDynamic(dynUniforms, m_uniforms, object, camera);\n        THREE.WebGLUniforms.upload(_gl, dynUniforms, m_uniforms, _this);\n      }\n\n      return program;\n    } // Uniforms (refresh uniforms objects)\n\n\n    function refreshUniformsCommon(uniforms, material) {\n      uniforms.opacity.value = material.opacity;\n      uniforms.diffuse.value = material.color;\n\n      if (material.emissive) {\n        uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\n      }\n\n      uniforms.map.value = material.map;\n      uniforms.specularMap.value = material.specularMap;\n      uniforms.alphaMap.value = material.alphaMap;\n\n      if (material.aoMap) {\n        uniforms.aoMap.value = material.aoMap;\n        uniforms.aoMapIntensity.value = material.aoMapIntensity;\n      } // uv repeat and offset setting priorities\n      // 1. color map\n      // 2. specular map\n      // 3. normal map\n      // 4. bump map\n      // 5. alpha map\n      // 6. emissive map\n\n\n      var uvScaleMap;\n\n      if (material.map) {\n        uvScaleMap = material.map;\n      } else if (material.specularMap) {\n        uvScaleMap = material.specularMap;\n      } else if (material.displacementMap) {\n        uvScaleMap = material.displacementMap;\n      } else if (material.normalMap) {\n        uvScaleMap = material.normalMap;\n      } else if (material.bumpMap) {\n        uvScaleMap = material.bumpMap;\n      } else if (material.roughnessMap) {\n        uvScaleMap = material.roughnessMap;\n      } else if (material.metalnessMap) {\n        uvScaleMap = material.metalnessMap;\n      } else if (material.alphaMap) {\n        uvScaleMap = material.alphaMap;\n      } else if (material.emissiveMap) {\n        uvScaleMap = material.emissiveMap;\n      }\n\n      if (uvScaleMap !== undefined) {\n        // backwards compatibility\n        if (uvScaleMap instanceof THREE.WebGLRenderTarget) {\n          uvScaleMap = uvScaleMap.texture;\n        }\n\n        var offset = uvScaleMap.offset;\n        var repeat = uvScaleMap.repeat;\n        uniforms.offsetRepeat.value.set(offset.x, offset.y, repeat.x, repeat.y);\n      }\n\n      uniforms.envMap.value = material.envMap; // don't flip CubeTexture envMaps, flip everything else:\n      //  WebGLRenderTargetCube will be flipped for backwards compatibility\n      //  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n      // this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\n      uniforms.flipEnvMap.value = !(material.envMap instanceof THREE.CubeTexture) ? 1 : -1;\n      uniforms.reflectivity.value = material.reflectivity;\n      uniforms.refractionRatio.value = material.refractionRatio;\n    }\n\n    function refreshUniformsLine(uniforms, material) {\n      uniforms.diffuse.value = material.color;\n      uniforms.opacity.value = material.opacity;\n    }\n\n    function refreshUniformsDash(uniforms, material) {\n      uniforms.dashSize.value = material.dashSize;\n      uniforms.totalSize.value = material.dashSize + material.gapSize;\n      uniforms.scale.value = material.scale;\n    }\n\n    function refreshUniformsPoints(uniforms, material) {\n      uniforms.diffuse.value = material.color;\n      uniforms.opacity.value = material.opacity;\n      uniforms.size.value = material.size * _pixelRatio;\n      uniforms.scale.value = _canvas.clientHeight * 0.5;\n      uniforms.map.value = material.map;\n\n      if (material.map !== null) {\n        var offset = material.map.offset;\n        var repeat = material.map.repeat;\n        uniforms.offsetRepeat.value.set(offset.x, offset.y, repeat.x, repeat.y);\n      }\n    }\n\n    function refreshUniformsFog(uniforms, fog) {\n      uniforms.fogColor.value = fog.color;\n\n      if (fog instanceof THREE.Fog) {\n        uniforms.fogNear.value = fog.near;\n        uniforms.fogFar.value = fog.far;\n      } else if (fog instanceof THREE.FogExp2) {\n        uniforms.fogDensity.value = fog.density;\n      }\n    }\n\n    function refreshUniformsLambert(uniforms, material) {\n      if (material.lightMap) {\n        uniforms.lightMap.value = material.lightMap;\n        uniforms.lightMapIntensity.value = material.lightMapIntensity;\n      }\n\n      if (material.emissiveMap) {\n        uniforms.emissiveMap.value = material.emissiveMap;\n      }\n    }\n\n    function refreshUniformsPhong(uniforms, material) {\n      uniforms.specular.value = material.specular;\n      uniforms.shininess.value = Math.max(material.shininess, 1e-4); // to prevent pow( 0.0, 0.0 )\n\n      if (material.lightMap) {\n        uniforms.lightMap.value = material.lightMap;\n        uniforms.lightMapIntensity.value = material.lightMapIntensity;\n      }\n\n      if (material.emissiveMap) {\n        uniforms.emissiveMap.value = material.emissiveMap;\n      }\n\n      if (material.bumpMap) {\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.bumpScale.value = material.bumpScale;\n      }\n\n      if (material.normalMap) {\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.normalScale.value.copy(material.normalScale);\n      }\n\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n    }\n\n    function refreshUniformsStandard(uniforms, material) {\n      uniforms.roughness.value = material.roughness;\n      uniforms.metalness.value = material.metalness;\n\n      if (material.roughnessMap) {\n        uniforms.roughnessMap.value = material.roughnessMap;\n      }\n\n      if (material.metalnessMap) {\n        uniforms.metalnessMap.value = material.metalnessMap;\n      }\n\n      if (material.lightMap) {\n        uniforms.lightMap.value = material.lightMap;\n        uniforms.lightMapIntensity.value = material.lightMapIntensity;\n      }\n\n      if (material.emissiveMap) {\n        uniforms.emissiveMap.value = material.emissiveMap;\n      }\n\n      if (material.bumpMap) {\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.bumpScale.value = material.bumpScale;\n      }\n\n      if (material.normalMap) {\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.normalScale.value.copy(material.normalScale);\n      }\n\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n\n      if (material.envMap) {\n        //uniforms.envMap.value = material.envMap; // part of uniforms common\n        uniforms.envMapIntensity.value = material.envMapIntensity;\n      }\n    }\n\n    function refreshUniformsPhysical(uniforms, material) {\n      uniforms.clearCoat.value = material.clearCoat;\n      uniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n      refreshUniformsStandard(uniforms, material);\n    } // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\n    function markUniformsLightsNeedsUpdate(uniforms, value) {\n      uniforms.ambientLightColor.needsUpdate = value;\n      uniforms.directionalLights.needsUpdate = value;\n      uniforms.pointLights.needsUpdate = value;\n      uniforms.spotLights.needsUpdate = value;\n      uniforms.hemisphereLights.needsUpdate = value;\n    } // Lighting\n\n\n    function setupShadows(lights) {\n      var lightShadowsLength = 0;\n\n      for (var i = 0, l = lights.length; i < l; i++) {\n        var light = lights[i];\n\n        if (light.castShadow) {\n          _lights.shadows[lightShadowsLength++] = light;\n        }\n      }\n\n      _lights.shadows.length = lightShadowsLength;\n    }\n\n    function setupLights(lights, camera) {\n      var l,\n          ll,\n          light,\n          r = 0,\n          g = 0,\n          b = 0,\n          color,\n          intensity,\n          distance,\n          shadowMap,\n          viewMatrix = camera.matrixWorldInverse,\n          directionalLength = 0,\n          pointLength = 0,\n          spotLength = 0,\n          hemiLength = 0;\n\n      for (l = 0, ll = lights.length; l < ll; l++) {\n        light = lights[l];\n        color = light.color;\n        intensity = light.intensity;\n        distance = light.distance;\n        shadowMap = light.shadow && light.shadow.map ? light.shadow.map.texture : null;\n\n        if (light instanceof THREE.AmbientLight) {\n          r += color.r * intensity;\n          g += color.g * intensity;\n          b += color.b * intensity;\n        } else if (light instanceof THREE.DirectionalLight) {\n          var uniforms = lightCache.get(light);\n          uniforms.color.copy(light.color).multiplyScalar(light.intensity);\n          uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\n          _vector3.setFromMatrixPosition(light.target.matrixWorld);\n\n          uniforms.direction.sub(_vector3);\n          uniforms.direction.transformDirection(viewMatrix);\n          uniforms.shadow = light.castShadow;\n\n          if (light.castShadow) {\n            uniforms.shadowBias = light.shadow.bias;\n            uniforms.shadowRadius = light.shadow.radius;\n            uniforms.shadowMapSize = light.shadow.mapSize;\n          }\n\n          _lights.directionalShadowMap[directionalLength] = shadowMap;\n          _lights.directionalShadowMatrix[directionalLength] = light.shadow.matrix;\n          _lights.directional[directionalLength++] = uniforms;\n        } else if (light instanceof THREE.SpotLight) {\n          var uniforms = lightCache.get(light);\n          uniforms.position.setFromMatrixPosition(light.matrixWorld);\n          uniforms.position.applyMatrix4(viewMatrix);\n          uniforms.color.copy(color).multiplyScalar(intensity);\n          uniforms.distance = distance;\n          uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\n          _vector3.setFromMatrixPosition(light.target.matrixWorld);\n\n          uniforms.direction.sub(_vector3);\n          uniforms.direction.transformDirection(viewMatrix);\n          uniforms.coneCos = Math.cos(light.angle);\n          uniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));\n          uniforms.decay = light.distance === 0 ? 0.0 : light.decay;\n          uniforms.shadow = light.castShadow;\n\n          if (light.castShadow) {\n            uniforms.shadowBias = light.shadow.bias;\n            uniforms.shadowRadius = light.shadow.radius;\n            uniforms.shadowMapSize = light.shadow.mapSize;\n          }\n\n          _lights.spotShadowMap[spotLength] = shadowMap;\n          _lights.spotShadowMatrix[spotLength] = light.shadow.matrix;\n          _lights.spot[spotLength++] = uniforms;\n        } else if (light instanceof THREE.PointLight) {\n          var uniforms = lightCache.get(light);\n          uniforms.position.setFromMatrixPosition(light.matrixWorld);\n          uniforms.position.applyMatrix4(viewMatrix);\n          uniforms.color.copy(light.color).multiplyScalar(light.intensity);\n          uniforms.distance = light.distance;\n          uniforms.decay = light.distance === 0 ? 0.0 : light.decay;\n          uniforms.shadow = light.castShadow;\n\n          if (light.castShadow) {\n            uniforms.shadowBias = light.shadow.bias;\n            uniforms.shadowRadius = light.shadow.radius;\n            uniforms.shadowMapSize = light.shadow.mapSize;\n          }\n\n          _lights.pointShadowMap[pointLength] = shadowMap;\n\n          if (_lights.pointShadowMatrix[pointLength] === undefined) {\n            _lights.pointShadowMatrix[pointLength] = new THREE.Matrix4();\n          } // for point lights we set the shadow matrix to be a translation-only matrix\n          // equal to inverse of the light's position\n\n\n          _vector3.setFromMatrixPosition(light.matrixWorld).negate();\n\n          _lights.pointShadowMatrix[pointLength].identity().setPosition(_vector3);\n\n          _lights.point[pointLength++] = uniforms;\n        } else if (light instanceof THREE.HemisphereLight) {\n          var uniforms = lightCache.get(light);\n          uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n          uniforms.direction.transformDirection(viewMatrix);\n          uniforms.direction.normalize();\n          uniforms.skyColor.copy(light.color).multiplyScalar(intensity);\n          uniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity);\n          _lights.hemi[hemiLength++] = uniforms;\n        }\n      }\n\n      _lights.ambient[0] = r;\n      _lights.ambient[1] = g;\n      _lights.ambient[2] = b;\n      _lights.directional.length = directionalLength;\n      _lights.spot.length = spotLength;\n      _lights.point.length = pointLength;\n      _lights.hemi.length = hemiLength;\n      _lights.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + hemiLength + ',' + _lights.shadows.length;\n    } // GL state setting\n\n\n    this.setFaceCulling = function (cullFace, frontFaceDirection) {\n      state.setCullFace(cullFace);\n      state.setFlipSided(frontFaceDirection === THREE.FrontFaceDirectionCW);\n    }; // Textures\n\n\n    function allocTextureUnit() {\n      var textureUnit = _usedTextureUnits;\n\n      if (textureUnit >= capabilities.maxTextures) {\n        console.warn('WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures);\n      }\n\n      _usedTextureUnits += 1;\n      return textureUnit;\n    }\n\n    this.allocTextureUnit = allocTextureUnit; // this.setTexture2D = setTexture2D;\n\n    this.setTexture2D = function () {\n      var warned = false; // backwards compatibility: peel texture.texture\n\n      return function setTexture2D(texture, slot) {\n        if (texture instanceof THREE.WebGLRenderTarget) {\n          if (!warned) {\n            console.warn(\"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\");\n            warned = true;\n          }\n\n          texture = texture.texture;\n        }\n\n        textures.setTexture2D(texture, slot);\n      };\n    }();\n\n    this.setTexture = function () {\n      var warned = false;\n      return function setTexture(texture, slot) {\n        if (!warned) {\n          console.warn(\"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\");\n          warned = true;\n        }\n\n        textures.setTexture2D(texture, slot);\n      };\n    }();\n\n    this.setTextureCube = function () {\n      var warned = false;\n      return function setTextureCube(texture, slot) {\n        // backwards compatibility: peel texture.texture\n        if (texture instanceof THREE.WebGLRenderTargetCube) {\n          if (!warned) {\n            console.warn(\"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\");\n            warned = true;\n          }\n\n          texture = texture.texture;\n        } // currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n        // TODO: unify these code paths\n\n\n        if (texture instanceof THREE.CubeTexture || Array.isArray(texture.image) && texture.image.length === 6) {\n          // CompressedTexture can have Array in image :/\n          // this function alone should take care of cube textures\n          textures.setTextureCube(texture, slot);\n        } else {\n          // assumed: texture property of THREE.WebGLRenderTargetCube\n          textures.setTextureCubeDynamic(texture, slot);\n        }\n      };\n    }();\n\n    this.getCurrentRenderTarget = function () {\n      return _currentRenderTarget;\n    };\n\n    this.setRenderTarget = function (renderTarget) {\n      _currentRenderTarget = renderTarget;\n\n      if (renderTarget && properties.get(renderTarget).__webglFramebuffer === undefined) {\n        textures.setupRenderTarget(renderTarget);\n      }\n\n      var isCube = renderTarget instanceof THREE.WebGLRenderTargetCube;\n      var framebuffer;\n\n      if (renderTarget) {\n        var renderTargetProperties = properties.get(renderTarget);\n\n        if (isCube) {\n          framebuffer = renderTargetProperties.__webglFramebuffer[renderTarget.activeCubeFace];\n        } else {\n          framebuffer = renderTargetProperties.__webglFramebuffer;\n        }\n\n        _currentScissor.copy(renderTarget.scissor);\n\n        _currentScissorTest = renderTarget.scissorTest;\n\n        _currentViewport.copy(renderTarget.viewport);\n      } else {\n        framebuffer = null;\n\n        _currentScissor.copy(_scissor).multiplyScalar(_pixelRatio);\n\n        _currentScissorTest = _scissorTest;\n\n        _currentViewport.copy(_viewport).multiplyScalar(_pixelRatio);\n      }\n\n      if (_currentFramebuffer !== framebuffer) {\n        _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n        _currentFramebuffer = framebuffer;\n      }\n\n      state.scissor(_currentScissor);\n      state.setScissorTest(_currentScissorTest);\n      state.viewport(_currentViewport);\n\n      if (isCube) {\n        var textureProperties = properties.get(renderTarget.texture);\n\n        _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel);\n      }\n    };\n\n    this.readRenderTargetPixels = function (renderTarget, x, y, width, height, buffer) {\n      if (renderTarget instanceof THREE.WebGLRenderTarget === false) {\n        console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');\n        return;\n      }\n\n      var framebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n      if (framebuffer) {\n        var restore = false;\n\n        if (framebuffer !== _currentFramebuffer) {\n          _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n          restore = true;\n        }\n\n        try {\n          var texture = renderTarget.texture;\n\n          if (texture.format !== THREE.RGBAFormat && paramThreeToGL(texture.format) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_FORMAT)) {\n            console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');\n            return;\n          }\n\n          if (texture.type !== THREE.UnsignedByteType && paramThreeToGL(texture.type) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_TYPE) && !(texture.type === THREE.FloatType && extensions.get('WEBGL_color_buffer_float')) && !(texture.type === THREE.HalfFloatType && extensions.get('EXT_color_buffer_half_float'))) {\n            console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');\n            return;\n          }\n\n          if (_gl.checkFramebufferStatus(_gl.FRAMEBUFFER) === _gl.FRAMEBUFFER_COMPLETE) {\n            // the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n            if (x >= 0 && x <= renderTarget.width - width && y >= 0 && y <= renderTarget.height - height) {\n              _gl.readPixels(x, y, width, height, paramThreeToGL(texture.format), paramThreeToGL(texture.type), buffer);\n            }\n          } else {\n            console.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');\n          }\n        } finally {\n          if (restore) {\n            _gl.bindFramebuffer(_gl.FRAMEBUFFER, _currentFramebuffer);\n          }\n        }\n      }\n    }; // Map three.js constants to WebGL constants\n\n\n    function paramThreeToGL(p) {\n      var extension;\n      if (p === THREE.RepeatWrapping) return _gl.REPEAT;\n      if (p === THREE.ClampToEdgeWrapping) return _gl.CLAMP_TO_EDGE;\n      if (p === THREE.MirroredRepeatWrapping) return _gl.MIRRORED_REPEAT;\n      if (p === THREE.NearestFilter) return _gl.NEAREST;\n      if (p === THREE.NearestMipMapNearestFilter) return _gl.NEAREST_MIPMAP_NEAREST;\n      if (p === THREE.NearestMipMapLinearFilter) return _gl.NEAREST_MIPMAP_LINEAR;\n      if (p === THREE.LinearFilter) return _gl.LINEAR;\n      if (p === THREE.LinearMipMapNearestFilter) return _gl.LINEAR_MIPMAP_NEAREST;\n      if (p === THREE.LinearMipMapLinearFilter) return _gl.LINEAR_MIPMAP_LINEAR;\n      if (p === THREE.UnsignedByteType) return _gl.UNSIGNED_BYTE;\n      if (p === THREE.UnsignedShort4444Type) return _gl.UNSIGNED_SHORT_4_4_4_4;\n      if (p === THREE.UnsignedShort5551Type) return _gl.UNSIGNED_SHORT_5_5_5_1;\n      if (p === THREE.UnsignedShort565Type) return _gl.UNSIGNED_SHORT_5_6_5;\n      if (p === THREE.ByteType) return _gl.BYTE;\n      if (p === THREE.ShortType) return _gl.SHORT;\n      if (p === THREE.UnsignedShortType) return _gl.UNSIGNED_SHORT;\n      if (p === THREE.IntType) return _gl.INT;\n      if (p === THREE.UnsignedIntType) return _gl.UNSIGNED_INT;\n      if (p === THREE.FloatType) return _gl.FLOAT;\n      extension = extensions.get('OES_texture_half_float');\n\n      if (extension !== null) {\n        if (p === THREE.HalfFloatType) return extension.HALF_FLOAT_OES;\n      }\n\n      if (p === THREE.AlphaFormat) return _gl.ALPHA;\n      if (p === THREE.RGBFormat) return _gl.RGB;\n      if (p === THREE.RGBAFormat) return _gl.RGBA;\n      if (p === THREE.LuminanceFormat) return _gl.LUMINANCE;\n      if (p === THREE.LuminanceAlphaFormat) return _gl.LUMINANCE_ALPHA;\n      if (p === THREE.DepthFormat) return _gl.DEPTH_COMPONENT;\n      if (p === THREE.AddEquation) return _gl.FUNC_ADD;\n      if (p === THREE.SubtractEquation) return _gl.FUNC_SUBTRACT;\n      if (p === THREE.ReverseSubtractEquation) return _gl.FUNC_REVERSE_SUBTRACT;\n      if (p === THREE.ZeroFactor) return _gl.ZERO;\n      if (p === THREE.OneFactor) return _gl.ONE;\n      if (p === THREE.SrcColorFactor) return _gl.SRC_COLOR;\n      if (p === THREE.OneMinusSrcColorFactor) return _gl.ONE_MINUS_SRC_COLOR;\n      if (p === THREE.SrcAlphaFactor) return _gl.SRC_ALPHA;\n      if (p === THREE.OneMinusSrcAlphaFactor) return _gl.ONE_MINUS_SRC_ALPHA;\n      if (p === THREE.DstAlphaFactor) return _gl.DST_ALPHA;\n      if (p === THREE.OneMinusDstAlphaFactor) return _gl.ONE_MINUS_DST_ALPHA;\n      if (p === THREE.DstColorFactor) return _gl.DST_COLOR;\n      if (p === THREE.OneMinusDstColorFactor) return _gl.ONE_MINUS_DST_COLOR;\n      if (p === THREE.SrcAlphaSaturateFactor) return _gl.SRC_ALPHA_SATURATE;\n      extension = extensions.get('WEBGL_compressed_texture_s3tc');\n\n      if (extension !== null) {\n        if (p === THREE.RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n        if (p === THREE.RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n        if (p === THREE.RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n        if (p === THREE.RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n      }\n\n      extension = extensions.get('WEBGL_compressed_texture_pvrtc');\n\n      if (extension !== null) {\n        if (p === THREE.RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n        if (p === THREE.RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n        if (p === THREE.RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n        if (p === THREE.RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n      }\n\n      extension = extensions.get('WEBGL_compressed_texture_etc1');\n\n      if (extension !== null) {\n        if (p === THREE.RGB_ETC1_Format) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n      }\n\n      extension = extensions.get('EXT_blend_minmax');\n\n      if (extension !== null) {\n        if (p === THREE.MinEquation) return extension.MIN_EXT;\n        if (p === THREE.MaxEquation) return extension.MAX_EXT;\n      }\n\n      return 0;\n    }\n  }; // File:src/renderers/WebGLRenderTarget.js\n\n  /**\n   * @author szimek / https://github.com/szimek/\n   * @author alteredq / http://alteredqualia.com/\n   * @author Marius Kintel / https://github.com/kintel\n   */\n\n  /*\n   In options, we can specify:\n   * Texture parameters for an auto-generated target texture\n   * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n  */\n\n\n  THREE.WebGLRenderTarget = function (width, height, options) {\n    this.uuid = THREE.Math.generateUUID();\n    this.width = width;\n    this.height = height;\n    this.scissor = new THREE.Vector4(0, 0, width, height);\n    this.scissorTest = false;\n    this.viewport = new THREE.Vector4(0, 0, width, height);\n    options = options || {};\n    if (options.minFilter === undefined) options.minFilter = THREE.LinearFilter;\n    this.texture = new THREE.Texture(undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n    this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n    this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n    this.depthTexture = null;\n  };\n\n  Object.assign(THREE.WebGLRenderTarget.prototype, THREE.EventDispatcher.prototype, {\n    setSize: function (width, height) {\n      if (this.width !== width || this.height !== height) {\n        this.width = width;\n        this.height = height;\n        this.dispose();\n      }\n\n      this.viewport.set(0, 0, width, height);\n      this.scissor.set(0, 0, width, height);\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (source) {\n      this.width = source.width;\n      this.height = source.height;\n      this.viewport.copy(source.viewport);\n      this.texture = source.texture.clone();\n      this.depthBuffer = source.depthBuffer;\n      this.stencilBuffer = source.stencilBuffer;\n      this.depthTexture = source.depthTexture;\n      return this;\n    },\n    dispose: function () {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  }); // File:src/renderers/WebGLRenderTargetCube.js\n\n  /**\n   * @author alteredq / http://alteredqualia.com\n   */\n\n  THREE.WebGLRenderTargetCube = function (width, height, options) {\n    THREE.WebGLRenderTarget.call(this, width, height, options);\n    this.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\n    this.activeMipMapLevel = 0;\n  };\n\n  THREE.WebGLRenderTargetCube.prototype = Object.create(THREE.WebGLRenderTarget.prototype);\n  THREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube; // File:src/renderers/webgl/WebGLBufferRenderer.js\n\n  /**\n  * @author mrdoob / http://mrdoob.com/\n  */\n\n  THREE.WebGLBufferRenderer = function (_gl, extensions, _infoRender) {\n    var mode;\n\n    function setMode(value) {\n      mode = value;\n    }\n\n    function render(start, count) {\n      _gl.drawArrays(mode, start, count);\n\n      _infoRender.calls++;\n      _infoRender.vertices += count;\n      if (mode === _gl.TRIANGLES) _infoRender.faces += count / 3;\n    }\n\n    function renderInstances(geometry) {\n      var extension = extensions.get('ANGLE_instanced_arrays');\n\n      if (extension === null) {\n        console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n        return;\n      }\n\n      var position = geometry.attributes.position;\n      var count = 0;\n\n      if (position instanceof THREE.InterleavedBufferAttribute) {\n        count = position.data.count;\n        extension.drawArraysInstancedANGLE(mode, 0, count, geometry.maxInstancedCount);\n      } else {\n        count = position.count;\n        extension.drawArraysInstancedANGLE(mode, 0, count, geometry.maxInstancedCount);\n      }\n\n      _infoRender.calls++;\n      _infoRender.vertices += count * geometry.maxInstancedCount;\n      if (mode === _gl.TRIANGLES) _infoRender.faces += geometry.maxInstancedCount * count / 3;\n    }\n\n    this.setMode = setMode;\n    this.render = render;\n    this.renderInstances = renderInstances;\n  }; // File:src/renderers/webgl/WebGLClipping.js\n\n\n  THREE.WebGLClipping = function () {\n    var scope = this,\n        globalState = null,\n        numGlobalPlanes = 0,\n        localClippingEnabled = false,\n        renderingShadows = false,\n        plane = new THREE.Plane(),\n        viewNormalMatrix = new THREE.Matrix3(),\n        uniform = {\n      value: null,\n      needsUpdate: false\n    };\n    this.uniform = uniform;\n    this.numPlanes = 0;\n\n    this.init = function (planes, enableLocalClipping, camera) {\n      var enabled = planes.length !== 0 || enableLocalClipping || // enable state of previous frame - the clipping code has to\n      // run another frame in order to reset the state:\n      numGlobalPlanes !== 0 || localClippingEnabled;\n      localClippingEnabled = enableLocalClipping;\n      globalState = projectPlanes(planes, camera, 0);\n      numGlobalPlanes = planes.length;\n      return enabled;\n    };\n\n    this.beginShadows = function () {\n      renderingShadows = true;\n      projectPlanes(null);\n    };\n\n    this.endShadows = function () {\n      renderingShadows = false;\n      resetGlobalState();\n    };\n\n    this.setState = function (planes, clipShadows, camera, cache, fromCache) {\n      if (!localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && !clipShadows) {\n        // there's no local clipping\n        if (renderingShadows) {\n          // there's no global clipping\n          projectPlanes(null);\n        } else {\n          resetGlobalState();\n        }\n      } else {\n        var nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n            lGlobal = nGlobal * 4,\n            dstArray = cache.clippingState || null;\n        uniform.value = dstArray; // ensure unique state\n\n        dstArray = projectPlanes(planes, camera, lGlobal, fromCache);\n\n        for (var i = 0; i !== lGlobal; ++i) {\n          dstArray[i] = globalState[i];\n        }\n\n        cache.clippingState = dstArray;\n        this.numPlanes += nGlobal;\n      }\n    };\n\n    function resetGlobalState() {\n      if (uniform.value !== globalState) {\n        uniform.value = globalState;\n        uniform.needsUpdate = numGlobalPlanes > 0;\n      }\n\n      scope.numPlanes = numGlobalPlanes;\n    }\n\n    function projectPlanes(planes, camera, dstOffset, skipTransform) {\n      var nPlanes = planes !== null ? planes.length : 0,\n          dstArray = null;\n\n      if (nPlanes !== 0) {\n        dstArray = uniform.value;\n\n        if (skipTransform !== true || dstArray === null) {\n          var flatSize = dstOffset + nPlanes * 4,\n              viewMatrix = camera.matrixWorldInverse;\n          viewNormalMatrix.getNormalMatrix(viewMatrix);\n\n          if (dstArray === null || dstArray.length < flatSize) {\n            dstArray = new Float32Array(flatSize);\n          }\n\n          for (var i = 0, i4 = dstOffset; i !== nPlanes; ++i, i4 += 4) {\n            plane.copy(planes[i]).applyMatrix4(viewMatrix, viewNormalMatrix);\n            plane.normal.toArray(dstArray, i4);\n            dstArray[i4 + 3] = plane.constant;\n          }\n        }\n\n        uniform.value = dstArray;\n        uniform.needsUpdate = true;\n      }\n\n      scope.numPlanes = nPlanes;\n      return dstArray;\n    }\n  }; // File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\n\n  /**\n  * @author mrdoob / http://mrdoob.com/\n  */\n\n\n  THREE.WebGLIndexedBufferRenderer = function (_gl, extensions, _infoRender) {\n    var mode;\n\n    function setMode(value) {\n      mode = value;\n    }\n\n    var type, size;\n\n    function setIndex(index) {\n      if (index.array instanceof Uint32Array && extensions.get('OES_element_index_uint')) {\n        type = _gl.UNSIGNED_INT;\n        size = 4;\n      } else {\n        type = _gl.UNSIGNED_SHORT;\n        size = 2;\n      }\n    }\n\n    function render(start, count) {\n      _gl.drawElements(mode, count, type, start * size);\n\n      _infoRender.calls++;\n      _infoRender.vertices += count;\n      if (mode === _gl.TRIANGLES) _infoRender.faces += count / 3;\n    }\n\n    function renderInstances(geometry, start, count) {\n      var extension = extensions.get('ANGLE_instanced_arrays');\n\n      if (extension === null) {\n        console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n        return;\n      }\n\n      extension.drawElementsInstancedANGLE(mode, count, type, start * size, geometry.maxInstancedCount);\n      _infoRender.calls++;\n      _infoRender.vertices += count * geometry.maxInstancedCount;\n      if (mode === _gl.TRIANGLES) _infoRender.faces += geometry.maxInstancedCount * count / 3;\n    }\n\n    this.setMode = setMode;\n    this.setIndex = setIndex;\n    this.render = render;\n    this.renderInstances = renderInstances;\n  }; // File:src/renderers/webgl/WebGLExtensions.js\n\n  /**\n  * @author mrdoob / http://mrdoob.com/\n  */\n\n\n  THREE.WebGLExtensions = function (gl) {\n    var extensions = {};\n\n    this.get = function (name) {\n      if (extensions[name] !== undefined) {\n        return extensions[name];\n      }\n\n      var extension;\n\n      switch (name) {\n        case 'WEBGL_depth_texture':\n          extension = gl.getExtension('WEBGL_depth_texture') || gl.getExtension('MOZ_WEBGL_depth_texture') || gl.getExtension('WEBKIT_WEBGL_depth_texture');\n          break;\n\n        case 'EXT_texture_filter_anisotropic':\n          extension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n          break;\n\n        case 'WEBGL_compressed_texture_s3tc':\n          extension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\n          break;\n\n        case 'WEBGL_compressed_texture_pvrtc':\n          extension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n          break;\n\n        case 'WEBGL_compressed_texture_etc1':\n          extension = gl.getExtension('WEBGL_compressed_texture_etc1');\n          break;\n\n        default:\n          extension = gl.getExtension(name);\n      }\n\n      if (extension === null) {\n        console.warn('THREE.WebGLRenderer: ' + name + ' extension not supported.');\n      }\n\n      extensions[name] = extension;\n      return extension;\n    };\n  }; // File:src/renderers/webgl/WebGLCapabilities.js\n\n\n  THREE.WebGLCapabilities = function (gl, extensions, parameters) {\n    var maxAnisotropy;\n\n    function getMaxAnisotropy() {\n      if (maxAnisotropy !== undefined) return maxAnisotropy;\n      var extension = extensions.get('EXT_texture_filter_anisotropic');\n\n      if (extension !== null) {\n        maxAnisotropy = gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n      } else {\n        maxAnisotropy = 0;\n      }\n\n      return maxAnisotropy;\n    }\n\n    function getMaxPrecision(precision) {\n      if (precision === 'highp') {\n        if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision > 0) {\n          return 'highp';\n        }\n\n        precision = 'mediump';\n      }\n\n      if (precision === 'mediump') {\n        if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision > 0) {\n          return 'mediump';\n        }\n      }\n\n      return 'lowp';\n    }\n\n    this.getMaxAnisotropy = getMaxAnisotropy;\n    this.getMaxPrecision = getMaxPrecision;\n    this.precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n    this.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\n    this.maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    this.maxVertexTextures = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n    this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    this.maxCubemapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n    this.maxAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n    this.maxVertexUniforms = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n    this.maxVaryings = gl.getParameter(gl.MAX_VARYING_VECTORS);\n    this.maxFragmentUniforms = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n    this.vertexTextures = this.maxVertexTextures > 0;\n    this.floatFragmentTextures = !!extensions.get('OES_texture_float');\n    this.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\n\n    var _maxPrecision = getMaxPrecision(this.precision);\n\n    if (_maxPrecision !== this.precision) {\n      console.warn('THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.');\n      this.precision = _maxPrecision;\n    }\n\n    if (this.logarithmicDepthBuffer) {\n      this.logarithmicDepthBuffer = !!extensions.get('EXT_frag_depth');\n    }\n  }; // File:src/renderers/webgl/WebGLGeometries.js\n\n  /**\n  * @author mrdoob / http://mrdoob.com/\n  */\n\n\n  THREE.WebGLGeometries = function (gl, properties, info) {\n    var geometries = {};\n\n    function get(object) {\n      var geometry = object.geometry;\n\n      if (geometries[geometry.id] !== undefined) {\n        return geometries[geometry.id];\n      }\n\n      geometry.addEventListener('dispose', onGeometryDispose);\n      var buffergeometry;\n\n      if (geometry instanceof THREE.BufferGeometry) {\n        buffergeometry = geometry;\n      } else if (geometry instanceof THREE.Geometry) {\n        if (geometry._bufferGeometry === undefined) {\n          geometry._bufferGeometry = new THREE.BufferGeometry().setFromObject(object);\n        }\n\n        buffergeometry = geometry._bufferGeometry;\n      }\n\n      geometries[geometry.id] = buffergeometry;\n      info.memory.geometries++;\n      return buffergeometry;\n    }\n\n    function onGeometryDispose(event) {\n      var geometry = event.target;\n      var buffergeometry = geometries[geometry.id];\n\n      if (buffergeometry.index !== null) {\n        deleteAttribute(buffergeometry.index);\n      }\n\n      deleteAttributes(buffergeometry.attributes);\n      geometry.removeEventListener('dispose', onGeometryDispose);\n      delete geometries[geometry.id]; // TODO\n\n      var property = properties.get(geometry);\n\n      if (property.wireframe) {\n        deleteAttribute(property.wireframe);\n      }\n\n      properties.delete(geometry);\n      var bufferproperty = properties.get(buffergeometry);\n\n      if (bufferproperty.wireframe) {\n        deleteAttribute(bufferproperty.wireframe);\n      }\n\n      properties.delete(buffergeometry); //\n\n      info.memory.geometries--;\n    }\n\n    function getAttributeBuffer(attribute) {\n      if (attribute instanceof THREE.InterleavedBufferAttribute) {\n        return properties.get(attribute.data).__webglBuffer;\n      }\n\n      return properties.get(attribute).__webglBuffer;\n    }\n\n    function deleteAttribute(attribute) {\n      var buffer = getAttributeBuffer(attribute);\n\n      if (buffer !== undefined) {\n        gl.deleteBuffer(buffer);\n        removeAttributeBuffer(attribute);\n      }\n    }\n\n    function deleteAttributes(attributes) {\n      for (var name in attributes) {\n        deleteAttribute(attributes[name]);\n      }\n    }\n\n    function removeAttributeBuffer(attribute) {\n      if (attribute instanceof THREE.InterleavedBufferAttribute) {\n        properties.delete(attribute.data);\n      } else {\n        properties.delete(attribute);\n      }\n    }\n\n    this.get = get;\n  }; // File:src/renderers/webgl/WebGLLights.js\n\n  /**\n  * @author mrdoob / http://mrdoob.com/\n  */\n\n\n  THREE.WebGLLights = function () {\n    var lights = {};\n\n    this.get = function (light) {\n      if (lights[light.id] !== undefined) {\n        return lights[light.id];\n      }\n\n      var uniforms;\n\n      switch (light.type) {\n        case 'DirectionalLight':\n          uniforms = {\n            direction: new THREE.Vector3(),\n            color: new THREE.Color(),\n            shadow: false,\n            shadowBias: 0,\n            shadowRadius: 1,\n            shadowMapSize: new THREE.Vector2()\n          };\n          break;\n\n        case 'SpotLight':\n          uniforms = {\n            position: new THREE.Vector3(),\n            direction: new THREE.Vector3(),\n            color: new THREE.Color(),\n            distance: 0,\n            coneCos: 0,\n            penumbraCos: 0,\n            decay: 0,\n            shadow: false,\n            shadowBias: 0,\n            shadowRadius: 1,\n            shadowMapSize: new THREE.Vector2()\n          };\n          break;\n\n        case 'PointLight':\n          uniforms = {\n            position: new THREE.Vector3(),\n            color: new THREE.Color(),\n            distance: 0,\n            decay: 0,\n            shadow: false,\n            shadowBias: 0,\n            shadowRadius: 1,\n            shadowMapSize: new THREE.Vector2()\n          };\n          break;\n\n        case 'HemisphereLight':\n          uniforms = {\n            direction: new THREE.Vector3(),\n            skyColor: new THREE.Color(),\n            groundColor: new THREE.Color()\n          };\n          break;\n      }\n\n      lights[light.id] = uniforms;\n      return uniforms;\n    };\n  }; // File:src/renderers/webgl/WebGLObjects.js\n\n  /**\n  * @author mrdoob / http://mrdoob.com/\n  */\n\n\n  THREE.WebGLObjects = function (gl, properties, info) {\n    var geometries = new THREE.WebGLGeometries(gl, properties, info); //\n\n    function update(object) {\n      // TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\n      var geometry = geometries.get(object);\n\n      if (object.geometry instanceof THREE.Geometry) {\n        geometry.updateFromObject(object);\n      }\n\n      var index = geometry.index;\n      var attributes = geometry.attributes;\n\n      if (index !== null) {\n        updateAttribute(index, gl.ELEMENT_ARRAY_BUFFER);\n      }\n\n      for (var name in attributes) {\n        updateAttribute(attributes[name], gl.ARRAY_BUFFER);\n      } // morph targets\n\n\n      var morphAttributes = geometry.morphAttributes;\n\n      for (var name in morphAttributes) {\n        var array = morphAttributes[name];\n\n        for (var i = 0, l = array.length; i < l; i++) {\n          updateAttribute(array[i], gl.ARRAY_BUFFER);\n        }\n      }\n\n      return geometry;\n    }\n\n    function updateAttribute(attribute, bufferType) {\n      var data = attribute instanceof THREE.InterleavedBufferAttribute ? attribute.data : attribute;\n      var attributeProperties = properties.get(data);\n\n      if (attributeProperties.__webglBuffer === undefined) {\n        createBuffer(attributeProperties, data, bufferType);\n      } else if (attributeProperties.version !== data.version) {\n        updateBuffer(attributeProperties, data, bufferType);\n      }\n    }\n\n    function createBuffer(attributeProperties, data, bufferType) {\n      attributeProperties.__webglBuffer = gl.createBuffer();\n      gl.bindBuffer(bufferType, attributeProperties.__webglBuffer);\n      var usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n      gl.bufferData(bufferType, data.array, usage);\n      attributeProperties.version = data.version;\n    }\n\n    function updateBuffer(attributeProperties, data, bufferType) {\n      gl.bindBuffer(bufferType, attributeProperties.__webglBuffer);\n\n      if (data.dynamic === false || data.updateRange.count === -1) {\n        // Not using update ranges\n        gl.bufferSubData(bufferType, 0, data.array);\n      } else if (data.updateRange.count === 0) {\n        console.error('THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.');\n      } else {\n        gl.bufferSubData(bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT, data.array.subarray(data.updateRange.offset, data.updateRange.offset + data.updateRange.count));\n        data.updateRange.count = 0; // reset range\n      }\n\n      attributeProperties.version = data.version;\n    }\n\n    function getAttributeBuffer(attribute) {\n      if (attribute instanceof THREE.InterleavedBufferAttribute) {\n        return properties.get(attribute.data).__webglBuffer;\n      }\n\n      return properties.get(attribute).__webglBuffer;\n    }\n\n    function getWireframeAttribute(geometry) {\n      var property = properties.get(geometry);\n\n      if (property.wireframe !== undefined) {\n        return property.wireframe;\n      }\n\n      var indices = [];\n      var index = geometry.index;\n      var attributes = geometry.attributes;\n      var position = attributes.position; // console.time( 'wireframe' );\n\n      if (index !== null) {\n        var edges = {};\n        var array = index.array;\n\n        for (var i = 0, l = array.length; i < l; i += 3) {\n          var a = array[i + 0];\n          var b = array[i + 1];\n          var c = array[i + 2];\n          if (checkEdge(edges, a, b)) indices.push(a, b);\n          if (checkEdge(edges, b, c)) indices.push(b, c);\n          if (checkEdge(edges, c, a)) indices.push(c, a);\n        }\n      } else {\n        var array = attributes.position.array;\n\n        for (var i = 0, l = array.length / 3 - 1; i < l; i += 3) {\n          var a = i + 0;\n          var b = i + 1;\n          var c = i + 2;\n          indices.push(a, b, b, c, c, a);\n        }\n      } // console.timeEnd( 'wireframe' );\n\n\n      var TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\n      var attribute = new THREE.BufferAttribute(new TypeArray(indices), 1);\n      updateAttribute(attribute, gl.ELEMENT_ARRAY_BUFFER);\n      property.wireframe = attribute;\n      return attribute;\n    }\n\n    function checkEdge(edges, a, b) {\n      if (a > b) {\n        var tmp = a;\n        a = b;\n        b = tmp;\n      }\n\n      var list = edges[a];\n\n      if (list === undefined) {\n        edges[a] = [b];\n        return true;\n      } else if (list.indexOf(b) === -1) {\n        list.push(b);\n        return true;\n      }\n\n      return false;\n    }\n\n    this.getAttributeBuffer = getAttributeBuffer;\n    this.getWireframeAttribute = getWireframeAttribute;\n    this.update = update;\n  }; // File:src/renderers/webgl/WebGLProgram.js\n\n\n  THREE.WebGLProgram = function () {\n    var programIdCount = 0;\n\n    function getEncodingComponents(encoding) {\n      switch (encoding) {\n        case THREE.LinearEncoding:\n          return ['Linear', '( value )'];\n\n        case THREE.sRGBEncoding:\n          return ['sRGB', '( value )'];\n\n        case THREE.RGBEEncoding:\n          return ['RGBE', '( value )'];\n\n        case THREE.RGBM7Encoding:\n          return ['RGBM', '( value, 7.0 )'];\n\n        case THREE.RGBM16Encoding:\n          return ['RGBM', '( value, 16.0 )'];\n\n        case THREE.RGBDEncoding:\n          return ['RGBD', '( value, 256.0 )'];\n\n        case THREE.GammaEncoding:\n          return ['Gamma', '( value, float( GAMMA_FACTOR ) )'];\n\n        default:\n          throw new Error('unsupported encoding: ' + encoding);\n      }\n    }\n\n    function getTexelDecodingFunction(functionName, encoding) {\n      var components = getEncodingComponents(encoding);\n      return \"vec4 \" + functionName + \"( vec4 value ) { return \" + components[0] + \"ToLinear\" + components[1] + \"; }\";\n    }\n\n    function getTexelEncodingFunction(functionName, encoding) {\n      var components = getEncodingComponents(encoding);\n      return \"vec4 \" + functionName + \"( vec4 value ) { return LinearTo\" + components[0] + components[1] + \"; }\";\n    }\n\n    function getToneMappingFunction(functionName, toneMapping) {\n      var toneMappingName;\n\n      switch (toneMapping) {\n        case THREE.LinearToneMapping:\n          toneMappingName = \"Linear\";\n          break;\n\n        case THREE.ReinhardToneMapping:\n          toneMappingName = \"Reinhard\";\n          break;\n\n        case THREE.Uncharted2ToneMapping:\n          toneMappingName = \"Uncharted2\";\n          break;\n\n        case THREE.CineonToneMapping:\n          toneMappingName = \"OptimizedCineon\";\n          break;\n\n        default:\n          throw new Error('unsupported toneMapping: ' + toneMapping);\n      }\n\n      return \"vec3 \" + functionName + \"( vec3 color ) { return \" + toneMappingName + \"ToneMapping( color ); }\";\n    }\n\n    function generateExtensions(extensions, parameters, rendererExtensions) {\n      extensions = extensions || {};\n      var chunks = [extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ? '#extension GL_OES_standard_derivatives : enable' : '', (extensions.fragDepth || parameters.logarithmicDepthBuffer) && rendererExtensions.get('EXT_frag_depth') ? '#extension GL_EXT_frag_depth : enable' : '', extensions.drawBuffers && rendererExtensions.get('WEBGL_draw_buffers') ? '#extension GL_EXT_draw_buffers : require' : '', (extensions.shaderTextureLOD || parameters.envMap) && rendererExtensions.get('EXT_shader_texture_lod') ? '#extension GL_EXT_shader_texture_lod : enable' : ''];\n      return chunks.filter(filterEmptyLine).join('\\n');\n    }\n\n    function generateDefines(defines) {\n      var chunks = [];\n\n      for (var name in defines) {\n        var value = defines[name];\n        if (value === false) continue;\n        chunks.push('#define ' + name + ' ' + value);\n      }\n\n      return chunks.join('\\n');\n    }\n\n    function fetchAttributeLocations(gl, program, identifiers) {\n      var attributes = {};\n      var n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n      for (var i = 0; i < n; i++) {\n        var info = gl.getActiveAttrib(program, i);\n        var name = info.name; // console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\n\n        attributes[name] = gl.getAttribLocation(program, name);\n      }\n\n      return attributes;\n    }\n\n    function filterEmptyLine(string) {\n      return string !== '';\n    }\n\n    function replaceLightNums(string, parameters) {\n      return string.replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights).replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights);\n    }\n\n    function parseIncludes(string) {\n      var pattern = /#include +<([\\w\\d.]+)>/g;\n\n      function replace(match, include) {\n        var replace = THREE.ShaderChunk[include];\n\n        if (replace === undefined) {\n          throw new Error('Can not resolve #include <' + include + '>');\n        }\n\n        return parseIncludes(replace);\n      }\n\n      return string.replace(pattern, replace);\n    }\n\n    function unrollLoops(string) {\n      var pattern = /for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n      function replace(match, start, end, snippet) {\n        var unroll = '';\n\n        for (var i = parseInt(start); i < parseInt(end); i++) {\n          unroll += snippet.replace(/\\[ i \\]/g, '[ ' + i + ' ]');\n        }\n\n        return unroll;\n      }\n\n      return string.replace(pattern, replace);\n    }\n\n    return function WebGLProgram(renderer, code, material, parameters) {\n      var gl = renderer.context;\n      var extensions = material.extensions;\n      var defines = material.defines;\n      var vertexShader = material.__webglShader.vertexShader;\n      var fragmentShader = material.__webglShader.fragmentShader;\n      var shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n      if (parameters.shadowMapType === THREE.PCFShadowMap) {\n        shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n      } else if (parameters.shadowMapType === THREE.PCFSoftShadowMap) {\n        shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n      }\n\n      var envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n      var envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n      var envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n      if (parameters.envMap) {\n        switch (material.envMap.mapping) {\n          case THREE.CubeReflectionMapping:\n          case THREE.CubeRefractionMapping:\n            envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n            break;\n\n          case THREE.CubeUVReflectionMapping:\n          case THREE.CubeUVRefractionMapping:\n            envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n            break;\n\n          case THREE.EquirectangularReflectionMapping:\n          case THREE.EquirectangularRefractionMapping:\n            envMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n            break;\n\n          case THREE.SphericalReflectionMapping:\n            envMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n            break;\n        }\n\n        switch (material.envMap.mapping) {\n          case THREE.CubeRefractionMapping:\n          case THREE.EquirectangularRefractionMapping:\n            envMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n            break;\n        }\n\n        switch (material.combine) {\n          case THREE.MultiplyOperation:\n            envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n            break;\n\n          case THREE.MixOperation:\n            envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n            break;\n\n          case THREE.AddOperation:\n            envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n            break;\n        }\n      }\n\n      var gammaFactorDefine = renderer.gammaFactor > 0 ? renderer.gammaFactor : 1.0; // console.log( 'building new program ' );\n      //\n\n      var customExtensions = generateExtensions(extensions, parameters, renderer.extensions);\n      var customDefines = generateDefines(defines); //\n\n      var program = gl.createProgram();\n      var prefixVertex, prefixFragment;\n\n      if (material instanceof THREE.RawShaderMaterial) {\n        prefixVertex = [customDefines].filter(filterEmptyLine).join('\\n');\n        prefixFragment = [customDefines].filter(filterEmptyLine).join('\\n');\n      } else {\n        prefixVertex = ['precision ' + parameters.precision + ' float;', 'precision ' + parameters.precision + ' int;', '#define SHADER_NAME ' + material.__webglShader.name, customDefines, parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, '#define MAX_BONES ' + parameters.maxBones, parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.skinning ? '#define USE_SKINNING' : '', parameters.useVertexTexture ? '#define BONE_TEXTURE' : '', parameters.morphTargets ? '#define USE_MORPHTARGETS' : '', parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', '#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes, parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && renderer.extensions.get('EXT_frag_depth') ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 modelMatrix;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;', 'uniform vec3 cameraPosition;', 'attribute vec3 position;', 'attribute vec3 normal;', 'attribute vec2 uv;', '#ifdef USE_COLOR', '\tattribute vec3 color;', '#endif', '#ifdef USE_MORPHTARGETS', '\tattribute vec3 morphTarget0;', '\tattribute vec3 morphTarget1;', '\tattribute vec3 morphTarget2;', '\tattribute vec3 morphTarget3;', '\t#ifdef USE_MORPHNORMALS', '\t\tattribute vec3 morphNormal0;', '\t\tattribute vec3 morphNormal1;', '\t\tattribute vec3 morphNormal2;', '\t\tattribute vec3 morphNormal3;', '\t#else', '\t\tattribute vec3 morphTarget4;', '\t\tattribute vec3 morphTarget5;', '\t\tattribute vec3 morphTarget6;', '\t\tattribute vec3 morphTarget7;', '\t#endif', '#endif', '#ifdef USE_SKINNING', '\tattribute vec4 skinIndex;', '\tattribute vec4 skinWeight;', '#endif', '\\n'].filter(filterEmptyLine).join('\\n');\n        prefixFragment = [customExtensions, 'precision ' + parameters.precision + ' float;', 'precision ' + parameters.precision + ' int;', '#define SHADER_NAME ' + material.__webglShader.name, customDefines, parameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapTypeDefine : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.envMap ? '#define ' + envMapBlendingDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', '#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes, parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '', parameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && renderer.extensions.get('EXT_frag_depth') ? '#define USE_LOGDEPTHBUF_EXT' : '', parameters.envMap && renderer.extensions.get('EXT_shader_texture_lod') ? '#define TEXTURE_LOD_EXT' : '', 'uniform mat4 viewMatrix;', 'uniform vec3 cameraPosition;', parameters.toneMapping !== THREE.NoToneMapping ? \"#define TONE_MAPPING\" : '', parameters.toneMapping !== THREE.NoToneMapping ? THREE.ShaderChunk['tonemapping_pars_fragment'] : '', // this code is required here because it is used by the toneMapping() function defined below\n        parameters.toneMapping !== THREE.NoToneMapping ? getToneMappingFunction(\"toneMapping\", parameters.toneMapping) : '', parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ? THREE.ShaderChunk['encodings_pars_fragment'] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n        parameters.mapEncoding ? getTexelDecodingFunction('mapTexelToLinear', parameters.mapEncoding) : '', parameters.envMapEncoding ? getTexelDecodingFunction('envMapTexelToLinear', parameters.envMapEncoding) : '', parameters.emissiveMapEncoding ? getTexelDecodingFunction('emissiveMapTexelToLinear', parameters.emissiveMapEncoding) : '', parameters.outputEncoding ? getTexelEncodingFunction(\"linearToOutputTexel\", parameters.outputEncoding) : '', parameters.depthPacking ? \"#define DEPTH_PACKING \" + material.depthPacking : '', '\\n'].filter(filterEmptyLine).join('\\n');\n      }\n\n      vertexShader = parseIncludes(vertexShader, parameters);\n      vertexShader = replaceLightNums(vertexShader, parameters);\n      fragmentShader = parseIncludes(fragmentShader, parameters);\n      fragmentShader = replaceLightNums(fragmentShader, parameters);\n\n      if (material instanceof THREE.ShaderMaterial === false) {\n        vertexShader = unrollLoops(vertexShader);\n        fragmentShader = unrollLoops(fragmentShader);\n      }\n\n      var vertexGlsl = prefixVertex + vertexShader;\n      var fragmentGlsl = prefixFragment + fragmentShader; // console.log( '*VERTEX*', vertexGlsl );\n      // console.log( '*FRAGMENT*', fragmentGlsl );\n\n      var glVertexShader = THREE.WebGLShader(gl, gl.VERTEX_SHADER, vertexGlsl);\n      var glFragmentShader = THREE.WebGLShader(gl, gl.FRAGMENT_SHADER, fragmentGlsl);\n      gl.attachShader(program, glVertexShader);\n      gl.attachShader(program, glFragmentShader); // Force a particular attribute to index 0.\n\n      if (material.index0AttributeName !== undefined) {\n        gl.bindAttribLocation(program, 0, material.index0AttributeName);\n      } else if (parameters.morphTargets === true) {\n        // programs with morphTargets displace position out of attribute 0\n        gl.bindAttribLocation(program, 0, 'position');\n      }\n\n      gl.linkProgram(program);\n      var programLog = gl.getProgramInfoLog(program);\n      var vertexLog = gl.getShaderInfoLog(glVertexShader);\n      var fragmentLog = gl.getShaderInfoLog(glFragmentShader);\n      var runnable = true;\n      var haveDiagnostics = true; // console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n      // console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n      if (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n        runnable = false;\n        console.error('THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter(program, gl.VALIDATE_STATUS), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog);\n      } else if (programLog !== '') {\n        console.warn('THREE.WebGLProgram: gl.getProgramInfoLog()', programLog);\n      } else if (vertexLog === '' || fragmentLog === '') {\n        haveDiagnostics = false;\n      }\n\n      if (haveDiagnostics) {\n        this.diagnostics = {\n          runnable: runnable,\n          material: material,\n          programLog: programLog,\n          vertexShader: {\n            log: vertexLog,\n            prefix: prefixVertex\n          },\n          fragmentShader: {\n            log: fragmentLog,\n            prefix: prefixFragment\n          }\n        };\n      } // clean up\n\n\n      gl.deleteShader(glVertexShader);\n      gl.deleteShader(glFragmentShader); // set up caching for uniform locations\n\n      var cachedUniforms;\n\n      this.getUniforms = function () {\n        if (cachedUniforms === undefined) {\n          cachedUniforms = new THREE.WebGLUniforms(gl, program, renderer);\n        }\n\n        return cachedUniforms;\n      }; // set up caching for attribute locations\n\n\n      var cachedAttributes;\n\n      this.getAttributes = function () {\n        if (cachedAttributes === undefined) {\n          cachedAttributes = fetchAttributeLocations(gl, program);\n        }\n\n        return cachedAttributes;\n      }; // free resource\n\n\n      this.destroy = function () {\n        gl.deleteProgram(program);\n        this.program = undefined;\n      }; // DEPRECATED\n\n\n      Object.defineProperties(this, {\n        uniforms: {\n          get: function () {\n            console.warn('THREE.WebGLProgram: .uniforms is now .getUniforms().');\n            return this.getUniforms();\n          }\n        },\n        attributes: {\n          get: function () {\n            console.warn('THREE.WebGLProgram: .attributes is now .getAttributes().');\n            return this.getAttributes();\n          }\n        }\n      }); //\n\n      this.id = programIdCount++;\n      this.code = code;\n      this.usedTimes = 1;\n      this.program = program;\n      this.vertexShader = glVertexShader;\n      this.fragmentShader = glFragmentShader;\n      return this;\n    };\n  }(); // File:src/renderers/webgl/WebGLPrograms.js\n\n\n  THREE.WebGLPrograms = function (renderer, capabilities) {\n    var programs = [];\n    var shaderIDs = {\n      MeshDepthMaterial: 'depth',\n      MeshNormalMaterial: 'normal',\n      MeshBasicMaterial: 'basic',\n      MeshLambertMaterial: 'lambert',\n      MeshPhongMaterial: 'phong',\n      MeshStandardMaterial: 'physical',\n      MeshPhysicalMaterial: 'physical',\n      LineBasicMaterial: 'basic',\n      LineDashedMaterial: 'dashed',\n      PointsMaterial: 'points'\n    };\n    var parameterNames = [\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\", \"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\", \"roughnessMap\", \"metalnessMap\", \"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\", \"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\", \"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\", \"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\", \"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights', \"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"depthPacking\"];\n\n    function allocateBones(object) {\n      if (capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture) {\n        return 1024;\n      } else {\n        // default for when object is not specified\n        // ( for example when prebuilding shader to be used with multiple objects )\n        //\n        //  - leave some extra space for other uniforms\n        //  - limit here is ANGLE's 254 max uniform vectors\n        //    (up to 54 should be safe)\n        var nVertexUniforms = capabilities.maxVertexUniforms;\n        var nVertexMatrices = Math.floor((nVertexUniforms - 20) / 4);\n        var maxBones = nVertexMatrices;\n\n        if (object !== undefined && object instanceof THREE.SkinnedMesh) {\n          maxBones = Math.min(object.skeleton.bones.length, maxBones);\n\n          if (maxBones < object.skeleton.bones.length) {\n            console.warn('WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)');\n          }\n        }\n\n        return maxBones;\n      }\n    }\n\n    function getTextureEncodingFromMap(map, gammaOverrideLinear) {\n      var encoding;\n\n      if (!map) {\n        encoding = THREE.LinearEncoding;\n      } else if (map instanceof THREE.Texture) {\n        encoding = map.encoding;\n      } else if (map instanceof THREE.WebGLRenderTarget) {\n        console.warn(\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\");\n        encoding = map.texture.encoding;\n      } // add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\n\n      if (encoding === THREE.LinearEncoding && gammaOverrideLinear) {\n        encoding = THREE.GammaEncoding;\n      }\n\n      return encoding;\n    }\n\n    this.getParameters = function (material, lights, fog, nClipPlanes, object) {\n      var shaderID = shaderIDs[material.type]; // heuristics to create shader parameters according to lights in the scene\n      // (not to blow over maxLights budget)\n\n      var maxBones = allocateBones(object);\n      var precision = renderer.getPrecision();\n\n      if (material.precision !== null) {\n        precision = capabilities.getMaxPrecision(material.precision);\n\n        if (precision !== material.precision) {\n          console.warn('THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.');\n        }\n      }\n\n      var currentRenderTarget = renderer.getCurrentRenderTarget();\n      var parameters = {\n        shaderID: shaderID,\n        precision: precision,\n        supportsVertexTextures: capabilities.vertexTextures,\n        outputEncoding: getTextureEncodingFromMap(!currentRenderTarget ? null : currentRenderTarget.texture, renderer.gammaOutput),\n        map: !!material.map,\n        mapEncoding: getTextureEncodingFromMap(material.map, renderer.gammaInput),\n        envMap: !!material.envMap,\n        envMapMode: material.envMap && material.envMap.mapping,\n        envMapEncoding: getTextureEncodingFromMap(material.envMap, renderer.gammaInput),\n        envMapCubeUV: !!material.envMap && (material.envMap.mapping === THREE.CubeUVReflectionMapping || material.envMap.mapping === THREE.CubeUVRefractionMapping),\n        lightMap: !!material.lightMap,\n        aoMap: !!material.aoMap,\n        emissiveMap: !!material.emissiveMap,\n        emissiveMapEncoding: getTextureEncodingFromMap(material.emissiveMap, renderer.gammaInput),\n        bumpMap: !!material.bumpMap,\n        normalMap: !!material.normalMap,\n        displacementMap: !!material.displacementMap,\n        roughnessMap: !!material.roughnessMap,\n        metalnessMap: !!material.metalnessMap,\n        specularMap: !!material.specularMap,\n        alphaMap: !!material.alphaMap,\n        combine: material.combine,\n        vertexColors: material.vertexColors,\n        fog: !!fog,\n        useFog: material.fog,\n        fogExp: fog instanceof THREE.FogExp2,\n        flatShading: material.shading === THREE.FlatShading,\n        sizeAttenuation: material.sizeAttenuation,\n        logarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n        skinning: material.skinning,\n        maxBones: maxBones,\n        useVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\n        morphTargets: material.morphTargets,\n        morphNormals: material.morphNormals,\n        maxMorphTargets: renderer.maxMorphTargets,\n        maxMorphNormals: renderer.maxMorphNormals,\n        numDirLights: lights.directional.length,\n        numPointLights: lights.point.length,\n        numSpotLights: lights.spot.length,\n        numHemiLights: lights.hemi.length,\n        numClippingPlanes: nClipPlanes,\n        shadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && lights.shadows.length > 0,\n        shadowMapType: renderer.shadowMap.type,\n        toneMapping: renderer.toneMapping,\n        physicallyCorrectLights: renderer.physicallyCorrectLights,\n        premultipliedAlpha: material.premultipliedAlpha,\n        alphaTest: material.alphaTest,\n        doubleSided: material.side === THREE.DoubleSide,\n        flipSided: material.side === THREE.BackSide,\n        depthPacking: material.depthPacking !== undefined ? material.depthPacking : false\n      };\n      return parameters;\n    };\n\n    this.getProgramCode = function (material, parameters) {\n      var array = [];\n\n      if (parameters.shaderID) {\n        array.push(parameters.shaderID);\n      } else {\n        array.push(material.fragmentShader);\n        array.push(material.vertexShader);\n      }\n\n      if (material.defines !== undefined) {\n        for (var name in material.defines) {\n          array.push(name);\n          array.push(material.defines[name]);\n        }\n      }\n\n      for (var i = 0; i < parameterNames.length; i++) {\n        array.push(parameters[parameterNames[i]]);\n      }\n\n      return array.join();\n    };\n\n    this.acquireProgram = function (material, parameters, code) {\n      var program; // Check if code has been already compiled\n\n      for (var p = 0, pl = programs.length; p < pl; p++) {\n        var programInfo = programs[p];\n\n        if (programInfo.code === code) {\n          program = programInfo;\n          ++program.usedTimes;\n          break;\n        }\n      }\n\n      if (program === undefined) {\n        program = new THREE.WebGLProgram(renderer, code, material, parameters);\n        programs.push(program);\n      }\n\n      return program;\n    };\n\n    this.releaseProgram = function (program) {\n      if (--program.usedTimes === 0) {\n        // Remove from unordered set\n        var i = programs.indexOf(program);\n        programs[i] = programs[programs.length - 1];\n        programs.pop(); // Free WebGL resources\n\n        program.destroy();\n      }\n    }; // Exposed for resource monitoring & error feedback via renderer.info:\n\n\n    this.programs = programs;\n  }; // File:src/renderers/webgl/WebGLProperties.js\n\n  /**\n  * @author fordacious / fordacious.github.io\n  */\n\n\n  THREE.WebGLProperties = function () {\n    var properties = {};\n\n    this.get = function (object) {\n      var uuid = object.uuid;\n      var map = properties[uuid];\n\n      if (map === undefined) {\n        map = {};\n        properties[uuid] = map;\n      }\n\n      return map;\n    };\n\n    this.delete = function (object) {\n      delete properties[object.uuid];\n    };\n\n    this.clear = function () {\n      properties = {};\n    };\n  }; // File:src/renderers/webgl/WebGLShader.js\n\n\n  THREE.WebGLShader = function () {\n    function addLineNumbers(string) {\n      var lines = string.split('\\n');\n\n      for (var i = 0; i < lines.length; i++) {\n        lines[i] = i + 1 + ': ' + lines[i];\n      }\n\n      return lines.join('\\n');\n    }\n\n    return function WebGLShader(gl, type, string) {\n      var shader = gl.createShader(type);\n      gl.shaderSource(shader, string);\n      gl.compileShader(shader);\n\n      if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\n        console.error('THREE.WebGLShader: Shader couldn\\'t compile.');\n      }\n\n      if (gl.getShaderInfoLog(shader) !== '') {\n        console.warn('THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog(shader), addLineNumbers(string));\n      } // --enable-privileged-webgl-extension\n      // console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\n      return shader;\n    };\n  }(); // File:src/renderers/webgl/WebGLShadowMap.js\n\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  THREE.WebGLShadowMap = function (_renderer, _lights, _objects, capabilities) {\n    var _gl = _renderer.context,\n        _state = _renderer.state,\n        _frustum = new THREE.Frustum(),\n        _projScreenMatrix = new THREE.Matrix4(),\n        _lightShadows = _lights.shadows,\n        _shadowMapSize = new THREE.Vector2(),\n        _maxShadowMapSize = new THREE.Vector2(capabilities.maxTextureSize, capabilities.maxTextureSize),\n        _lookTarget = new THREE.Vector3(),\n        _lightPositionWorld = new THREE.Vector3(),\n        _renderList = [],\n        _MorphingFlag = 1,\n        _SkinningFlag = 2,\n        _NumberOfMaterialVariants = (_MorphingFlag | _SkinningFlag) + 1,\n        _depthMaterials = new Array(_NumberOfMaterialVariants),\n        _distanceMaterials = new Array(_NumberOfMaterialVariants),\n        _materialCache = {};\n\n    var cubeDirections = [new THREE.Vector3(1, 0, 0), new THREE.Vector3(-1, 0, 0), new THREE.Vector3(0, 0, 1), new THREE.Vector3(0, 0, -1), new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, -1, 0)];\n    var cubeUps = [new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 0, 1), new THREE.Vector3(0, 0, -1)];\n    var cube2DViewPorts = [new THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4()]; // init\n\n    var depthMaterialTemplate = new THREE.MeshDepthMaterial();\n    depthMaterialTemplate.depthPacking = THREE.RGBADepthPacking;\n    depthMaterialTemplate.clipping = true;\n    var distanceShader = THREE.ShaderLib[\"distanceRGBA\"];\n    var distanceUniforms = THREE.UniformsUtils.clone(distanceShader.uniforms);\n\n    for (var i = 0; i !== _NumberOfMaterialVariants; ++i) {\n      var useMorphing = (i & _MorphingFlag) !== 0;\n      var useSkinning = (i & _SkinningFlag) !== 0;\n      var depthMaterial = depthMaterialTemplate.clone();\n      depthMaterial.morphTargets = useMorphing;\n      depthMaterial.skinning = useSkinning;\n      _depthMaterials[i] = depthMaterial;\n      var distanceMaterial = new THREE.ShaderMaterial({\n        defines: {\n          'USE_SHADOWMAP': ''\n        },\n        uniforms: distanceUniforms,\n        vertexShader: distanceShader.vertexShader,\n        fragmentShader: distanceShader.fragmentShader,\n        morphTargets: useMorphing,\n        skinning: useSkinning,\n        clipping: true\n      });\n      _distanceMaterials[i] = distanceMaterial;\n    } //\n\n\n    var scope = this;\n    this.enabled = false;\n    this.autoUpdate = true;\n    this.needsUpdate = false;\n    this.type = THREE.PCFShadowMap;\n    this.renderReverseSided = true;\n    this.renderSingleSided = true;\n\n    this.render = function (scene, camera) {\n      if (scope.enabled === false) return;\n      if (scope.autoUpdate === false && scope.needsUpdate === false) return;\n      if (_lightShadows.length === 0) return; // Set GL state for depth map.\n\n      _state.clearColor(1, 1, 1, 1);\n\n      _state.disable(_gl.BLEND);\n\n      _state.setDepthTest(true);\n\n      _state.setScissorTest(false); // render depth map\n\n\n      var faceCount, isPointLight;\n\n      for (var i = 0, il = _lightShadows.length; i < il; i++) {\n        var light = _lightShadows[i];\n        var shadow = light.shadow;\n\n        if (shadow === undefined) {\n          console.warn('THREE.WebGLShadowMap:', light, 'has no shadow.');\n          continue;\n        }\n\n        var shadowCamera = shadow.camera;\n\n        _shadowMapSize.copy(shadow.mapSize);\n\n        _shadowMapSize.min(_maxShadowMapSize);\n\n        if (light instanceof THREE.PointLight) {\n          faceCount = 6;\n          isPointLight = true;\n          var vpWidth = _shadowMapSize.x;\n          var vpHeight = _shadowMapSize.y; // These viewports map a cube-map onto a 2D texture with the\n          // following orientation:\n          //\n          //  xzXZ\n          //   y Y\n          //\n          // X - Positive x direction\n          // x - Negative x direction\n          // Y - Positive y direction\n          // y - Negative y direction\n          // Z - Positive z direction\n          // z - Negative z direction\n          // positive X\n\n          cube2DViewPorts[0].set(vpWidth * 2, vpHeight, vpWidth, vpHeight); // negative X\n\n          cube2DViewPorts[1].set(0, vpHeight, vpWidth, vpHeight); // positive Z\n\n          cube2DViewPorts[2].set(vpWidth * 3, vpHeight, vpWidth, vpHeight); // negative Z\n\n          cube2DViewPorts[3].set(vpWidth, vpHeight, vpWidth, vpHeight); // positive Y\n\n          cube2DViewPorts[4].set(vpWidth * 3, 0, vpWidth, vpHeight); // negative Y\n\n          cube2DViewPorts[5].set(vpWidth, 0, vpWidth, vpHeight);\n          _shadowMapSize.x *= 4.0;\n          _shadowMapSize.y *= 2.0;\n        } else {\n          faceCount = 1;\n          isPointLight = false;\n        }\n\n        if (shadow.map === null) {\n          var pars = {\n            minFilter: THREE.NearestFilter,\n            magFilter: THREE.NearestFilter,\n            format: THREE.RGBAFormat\n          };\n          shadow.map = new THREE.WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n          shadowCamera.updateProjectionMatrix();\n        }\n\n        if (shadow instanceof THREE.SpotLightShadow) {\n          shadow.update(light);\n        }\n\n        var shadowMap = shadow.map;\n        var shadowMatrix = shadow.matrix;\n\n        _lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n\n        shadowCamera.position.copy(_lightPositionWorld);\n\n        _renderer.setRenderTarget(shadowMap);\n\n        _renderer.clear(); // render shadow map for each cube face (if omni-directional) or\n        // run a single pass if not\n\n\n        for (var face = 0; face < faceCount; face++) {\n          if (isPointLight) {\n            _lookTarget.copy(shadowCamera.position);\n\n            _lookTarget.add(cubeDirections[face]);\n\n            shadowCamera.up.copy(cubeUps[face]);\n            shadowCamera.lookAt(_lookTarget);\n            var vpDimensions = cube2DViewPorts[face];\n\n            _state.viewport(vpDimensions);\n          } else {\n            _lookTarget.setFromMatrixPosition(light.target.matrixWorld);\n\n            shadowCamera.lookAt(_lookTarget);\n          }\n\n          shadowCamera.updateMatrixWorld();\n          shadowCamera.matrixWorldInverse.getInverse(shadowCamera.matrixWorld); // compute shadow matrix\n\n          shadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n          shadowMatrix.multiply(shadowCamera.projectionMatrix);\n          shadowMatrix.multiply(shadowCamera.matrixWorldInverse); // update camera matrices and frustum\n\n          _projScreenMatrix.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\n\n          _frustum.setFromMatrix(_projScreenMatrix); // set object matrices & frustum culling\n\n\n          _renderList.length = 0;\n          projectObject(scene, camera, shadowCamera); // render shadow map\n          // render regular objects\n\n          for (var j = 0, jl = _renderList.length; j < jl; j++) {\n            var object = _renderList[j];\n\n            var geometry = _objects.update(object);\n\n            var material = object.material;\n\n            if (material instanceof THREE.MultiMaterial) {\n              var groups = geometry.groups;\n              var materials = material.materials;\n\n              for (var k = 0, kl = groups.length; k < kl; k++) {\n                var group = groups[k];\n                var groupMaterial = materials[group.materialIndex];\n\n                if (groupMaterial.visible === true) {\n                  var depthMaterial = getDepthMaterial(object, groupMaterial, isPointLight, _lightPositionWorld);\n\n                  _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, group);\n                }\n              }\n            } else {\n              var depthMaterial = getDepthMaterial(object, material, isPointLight, _lightPositionWorld);\n\n              _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, null);\n            }\n          }\n        }\n      } // Restore GL state.\n\n\n      var clearColor = _renderer.getClearColor(),\n          clearAlpha = _renderer.getClearAlpha();\n\n      _renderer.setClearColor(clearColor, clearAlpha);\n\n      scope.needsUpdate = false;\n    };\n\n    function getDepthMaterial(object, material, isPointLight, lightPositionWorld) {\n      var geometry = object.geometry;\n      var result = null;\n      var materialVariants = _depthMaterials;\n      var customMaterial = object.customDepthMaterial;\n\n      if (isPointLight) {\n        materialVariants = _distanceMaterials;\n        customMaterial = object.customDistanceMaterial;\n      }\n\n      if (!customMaterial) {\n        var useMorphing = false;\n\n        if (material.morphTargets) {\n          if (geometry instanceof THREE.BufferGeometry) {\n            useMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n          } else if (geometry instanceof THREE.Geometry) {\n            useMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n          }\n        }\n\n        var useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\n        var variantIndex = 0;\n        if (useMorphing) variantIndex |= _MorphingFlag;\n        if (useSkinning) variantIndex |= _SkinningFlag;\n        result = materialVariants[variantIndex];\n      } else {\n        result = customMaterial;\n      }\n\n      if (_renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0) {\n        // in this case we need a unique material instance reflecting the\n        // appropriate state\n        var keyA = result.uuid,\n            keyB = material.uuid;\n        var materialsForVariant = _materialCache[keyA];\n\n        if (materialsForVariant === undefined) {\n          materialsForVariant = {};\n          _materialCache[keyA] = materialsForVariant;\n        }\n\n        var cachedMaterial = materialsForVariant[keyB];\n\n        if (cachedMaterial === undefined) {\n          cachedMaterial = result.clone();\n          materialsForVariant[keyB] = cachedMaterial;\n        }\n\n        result = cachedMaterial;\n      }\n\n      result.visible = material.visible;\n      result.wireframe = material.wireframe;\n      var side = material.side;\n\n      if (scope.renderSingleSided && side == THREE.DoubleSide) {\n        side = THREE.FrontSide;\n      }\n\n      if (scope.renderReverseSided) {\n        if (side === THREE.FrontSide) side = THREE.BackSide;else if (side === THREE.BackSide) side = THREE.FrontSide;\n      }\n\n      result.side = side;\n      result.clipShadows = material.clipShadows;\n      result.clippingPlanes = material.clippingPlanes;\n      result.wireframeLinewidth = material.wireframeLinewidth;\n      result.linewidth = material.linewidth;\n\n      if (isPointLight && result.uniforms.lightPos !== undefined) {\n        result.uniforms.lightPos.value.copy(lightPositionWorld);\n      }\n\n      return result;\n    }\n\n    function projectObject(object, camera, shadowCamera) {\n      if (object.visible === false) return;\n\n      if (object.layers.test(camera.layers) && (object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points)) {\n        if (object.castShadow && (object.frustumCulled === false || _frustum.intersectsObject(object) === true)) {\n          var material = object.material;\n\n          if (material.visible === true) {\n            object.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse, object.matrixWorld);\n\n            _renderList.push(object);\n          }\n        }\n      }\n\n      var children = object.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        projectObject(children[i], camera, shadowCamera);\n      }\n    }\n  }; // File:src/renderers/webgl/WebGLState.js\n\n  /**\n  * @author mrdoob / http://mrdoob.com/\n  */\n\n\n  THREE.WebGLState = function (gl, extensions, paramThreeToGL) {\n    var _this = this;\n\n    this.buffers = {\n      color: new THREE.WebGLColorBuffer(gl, this),\n      depth: new THREE.WebGLDepthBuffer(gl, this),\n      stencil: new THREE.WebGLStencilBuffer(gl, this)\n    };\n    var maxVertexAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n    var newAttributes = new Uint8Array(maxVertexAttributes);\n    var enabledAttributes = new Uint8Array(maxVertexAttributes);\n    var attributeDivisors = new Uint8Array(maxVertexAttributes);\n    var capabilities = {};\n    var compressedTextureFormats = null;\n    var currentBlending = null;\n    var currentBlendEquation = null;\n    var currentBlendSrc = null;\n    var currentBlendDst = null;\n    var currentBlendEquationAlpha = null;\n    var currentBlendSrcAlpha = null;\n    var currentBlendDstAlpha = null;\n    var currentPremultipledAlpha = false;\n    var currentFlipSided = null;\n    var currentCullFace = null;\n    var currentLineWidth = null;\n    var currentPolygonOffsetFactor = null;\n    var currentPolygonOffsetUnits = null;\n    var currentScissorTest = null;\n    var maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    var currentTextureSlot = null;\n    var currentBoundTextures = {};\n    var currentScissor = new THREE.Vector4();\n    var currentViewport = new THREE.Vector4();\n\n    function createTexture(type, target, count) {\n      var data = new Uint8Array(4); // 4 is required to match default unpack alignment of 4.\n\n      var texture = gl.createTexture();\n      gl.bindTexture(type, texture);\n      gl.texParameteri(type, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(type, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n      for (var i = 0; i < count; i++) {\n        gl.texImage2D(target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\n      }\n\n      return texture;\n    }\n\n    var emptyTextures = {};\n    emptyTextures[gl.TEXTURE_2D] = createTexture(gl.TEXTURE_2D, gl.TEXTURE_2D, 1);\n    emptyTextures[gl.TEXTURE_CUBE_MAP] = createTexture(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6); //\n\n    this.init = function () {\n      this.clearColor(0, 0, 0, 1);\n      this.clearDepth(1);\n      this.clearStencil(0);\n      this.enable(gl.DEPTH_TEST);\n      this.setDepthFunc(THREE.LessEqualDepth);\n      this.setFlipSided(false);\n      this.setCullFace(THREE.CullFaceBack);\n      this.enable(gl.CULL_FACE);\n      this.enable(gl.BLEND);\n      this.setBlending(THREE.NormalBlending);\n    };\n\n    this.initAttributes = function () {\n      for (var i = 0, l = newAttributes.length; i < l; i++) {\n        newAttributes[i] = 0;\n      }\n    };\n\n    this.enableAttribute = function (attribute) {\n      newAttributes[attribute] = 1;\n\n      if (enabledAttributes[attribute] === 0) {\n        gl.enableVertexAttribArray(attribute);\n        enabledAttributes[attribute] = 1;\n      }\n\n      if (attributeDivisors[attribute] !== 0) {\n        var extension = extensions.get('ANGLE_instanced_arrays');\n        extension.vertexAttribDivisorANGLE(attribute, 0);\n        attributeDivisors[attribute] = 0;\n      }\n    };\n\n    this.enableAttributeAndDivisor = function (attribute, meshPerAttribute, extension) {\n      newAttributes[attribute] = 1;\n\n      if (enabledAttributes[attribute] === 0) {\n        gl.enableVertexAttribArray(attribute);\n        enabledAttributes[attribute] = 1;\n      }\n\n      if (attributeDivisors[attribute] !== meshPerAttribute) {\n        extension.vertexAttribDivisorANGLE(attribute, meshPerAttribute);\n        attributeDivisors[attribute] = meshPerAttribute;\n      }\n    };\n\n    this.disableUnusedAttributes = function () {\n      for (var i = 0, l = enabledAttributes.length; i !== l; ++i) {\n        if (enabledAttributes[i] !== newAttributes[i]) {\n          gl.disableVertexAttribArray(i);\n          enabledAttributes[i] = 0;\n        }\n      }\n    };\n\n    this.enable = function (id) {\n      if (capabilities[id] !== true) {\n        gl.enable(id);\n        capabilities[id] = true;\n      }\n    };\n\n    this.disable = function (id) {\n      if (capabilities[id] !== false) {\n        gl.disable(id);\n        capabilities[id] = false;\n      }\n    };\n\n    this.getCompressedTextureFormats = function () {\n      if (compressedTextureFormats === null) {\n        compressedTextureFormats = [];\n\n        if (extensions.get('WEBGL_compressed_texture_pvrtc') || extensions.get('WEBGL_compressed_texture_s3tc') || extensions.get('WEBGL_compressed_texture_etc1')) {\n          var formats = gl.getParameter(gl.COMPRESSED_TEXTURE_FORMATS);\n\n          for (var i = 0; i < formats.length; i++) {\n            compressedTextureFormats.push(formats[i]);\n          }\n        }\n      }\n\n      return compressedTextureFormats;\n    };\n\n    this.setBlending = function (blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {\n      if (blending !== THREE.NoBlending) {\n        this.enable(gl.BLEND);\n      } else {\n        this.disable(gl.BLEND);\n        currentBlending = blending; // no blending, that is\n\n        return;\n      }\n\n      if (blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha) {\n        if (blending === THREE.AdditiveBlending) {\n          if (premultipliedAlpha) {\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n            gl.blendFuncSeparate(gl.ONE, gl.ONE, gl.ONE, gl.ONE);\n          } else {\n            gl.blendEquation(gl.FUNC_ADD);\n            gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n          }\n        } else if (blending === THREE.SubtractiveBlending) {\n          if (premultipliedAlpha) {\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n            gl.blendFuncSeparate(gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA);\n          } else {\n            gl.blendEquation(gl.FUNC_ADD);\n            gl.blendFunc(gl.ZERO, gl.ONE_MINUS_SRC_COLOR);\n          }\n        } else if (blending === THREE.MultiplyBlending) {\n          if (premultipliedAlpha) {\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n            gl.blendFuncSeparate(gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA);\n          } else {\n            gl.blendEquation(gl.FUNC_ADD);\n            gl.blendFunc(gl.ZERO, gl.SRC_COLOR);\n          }\n        } else {\n          if (premultipliedAlpha) {\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n            gl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n          } else {\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n            gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n          }\n        }\n\n        currentBlending = blending;\n        currentPremultipledAlpha = premultipliedAlpha;\n      }\n\n      if (blending === THREE.CustomBlending) {\n        blendEquationAlpha = blendEquationAlpha || blendEquation;\n        blendSrcAlpha = blendSrcAlpha || blendSrc;\n        blendDstAlpha = blendDstAlpha || blendDst;\n\n        if (blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha) {\n          gl.blendEquationSeparate(paramThreeToGL(blendEquation), paramThreeToGL(blendEquationAlpha));\n          currentBlendEquation = blendEquation;\n          currentBlendEquationAlpha = blendEquationAlpha;\n        }\n\n        if (blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha) {\n          gl.blendFuncSeparate(paramThreeToGL(blendSrc), paramThreeToGL(blendDst), paramThreeToGL(blendSrcAlpha), paramThreeToGL(blendDstAlpha));\n          currentBlendSrc = blendSrc;\n          currentBlendDst = blendDst;\n          currentBlendSrcAlpha = blendSrcAlpha;\n          currentBlendDstAlpha = blendDstAlpha;\n        }\n      } else {\n        currentBlendEquation = null;\n        currentBlendSrc = null;\n        currentBlendDst = null;\n        currentBlendEquationAlpha = null;\n        currentBlendSrcAlpha = null;\n        currentBlendDstAlpha = null;\n      }\n    }; // TODO Deprecate\n\n\n    this.setColorWrite = function (colorWrite) {\n      this.buffers.color.setMask(colorWrite);\n    };\n\n    this.setDepthTest = function (depthTest) {\n      this.buffers.depth.setTest(depthTest);\n    };\n\n    this.setDepthWrite = function (depthWrite) {\n      this.buffers.depth.setMask(depthWrite);\n    };\n\n    this.setDepthFunc = function (depthFunc) {\n      this.buffers.depth.setFunc(depthFunc);\n    };\n\n    this.setStencilTest = function (stencilTest) {\n      this.buffers.stencil.setTest(stencilTest);\n    };\n\n    this.setStencilWrite = function (stencilWrite) {\n      this.buffers.stencil.setMask(stencilWrite);\n    };\n\n    this.setStencilFunc = function (stencilFunc, stencilRef, stencilMask) {\n      this.buffers.stencil.setFunc(stencilFunc, stencilRef, stencilMask);\n    };\n\n    this.setStencilOp = function (stencilFail, stencilZFail, stencilZPass) {\n      this.buffers.stencil.setOp(stencilFail, stencilZFail, stencilZPass);\n    }; //\n\n\n    this.setFlipSided = function (flipSided) {\n      if (currentFlipSided !== flipSided) {\n        if (flipSided) {\n          gl.frontFace(gl.CW);\n        } else {\n          gl.frontFace(gl.CCW);\n        }\n\n        currentFlipSided = flipSided;\n      }\n    };\n\n    this.setCullFace = function (cullFace) {\n      if (cullFace !== THREE.CullFaceNone) {\n        this.enable(gl.CULL_FACE);\n\n        if (cullFace !== currentCullFace) {\n          if (cullFace === THREE.CullFaceBack) {\n            gl.cullFace(gl.BACK);\n          } else if (cullFace === THREE.CullFaceFront) {\n            gl.cullFace(gl.FRONT);\n          } else {\n            gl.cullFace(gl.FRONT_AND_BACK);\n          }\n        }\n      } else {\n        this.disable(gl.CULL_FACE);\n      }\n\n      currentCullFace = cullFace;\n    };\n\n    this.setLineWidth = function (width) {\n      if (width !== currentLineWidth) {\n        gl.lineWidth(width);\n        currentLineWidth = width;\n      }\n    };\n\n    this.setPolygonOffset = function (polygonOffset, factor, units) {\n      if (polygonOffset) {\n        this.enable(gl.POLYGON_OFFSET_FILL);\n\n        if (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units) {\n          gl.polygonOffset(factor, units);\n          currentPolygonOffsetFactor = factor;\n          currentPolygonOffsetUnits = units;\n        }\n      } else {\n        this.disable(gl.POLYGON_OFFSET_FILL);\n      }\n    };\n\n    this.getScissorTest = function () {\n      return currentScissorTest;\n    };\n\n    this.setScissorTest = function (scissorTest) {\n      currentScissorTest = scissorTest;\n\n      if (scissorTest) {\n        this.enable(gl.SCISSOR_TEST);\n      } else {\n        this.disable(gl.SCISSOR_TEST);\n      }\n    }; // texture\n\n\n    this.activeTexture = function (webglSlot) {\n      if (webglSlot === undefined) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n      if (currentTextureSlot !== webglSlot) {\n        gl.activeTexture(webglSlot);\n        currentTextureSlot = webglSlot;\n      }\n    };\n\n    this.bindTexture = function (webglType, webglTexture) {\n      if (currentTextureSlot === null) {\n        _this.activeTexture();\n      }\n\n      var boundTexture = currentBoundTextures[currentTextureSlot];\n\n      if (boundTexture === undefined) {\n        boundTexture = {\n          type: undefined,\n          texture: undefined\n        };\n        currentBoundTextures[currentTextureSlot] = boundTexture;\n      }\n\n      if (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\n        gl.bindTexture(webglType, webglTexture || emptyTextures[webglType]);\n        boundTexture.type = webglType;\n        boundTexture.texture = webglTexture;\n      }\n    };\n\n    this.compressedTexImage2D = function () {\n      try {\n        gl.compressedTexImage2D.apply(gl, arguments);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.texImage2D = function () {\n      try {\n        gl.texImage2D.apply(gl, arguments);\n      } catch (error) {\n        console.error(error);\n      }\n    }; // TODO Deprecate\n\n\n    this.clearColor = function (r, g, b, a) {\n      this.buffers.color.setClear(r, g, b, a);\n    };\n\n    this.clearDepth = function (depth) {\n      this.buffers.depth.setClear(depth);\n    };\n\n    this.clearStencil = function (stencil) {\n      this.buffers.stencil.setClear(stencil);\n    }; //\n\n\n    this.scissor = function (scissor) {\n      if (currentScissor.equals(scissor) === false) {\n        gl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\n        currentScissor.copy(scissor);\n      }\n    };\n\n    this.viewport = function (viewport) {\n      if (currentViewport.equals(viewport) === false) {\n        gl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\n        currentViewport.copy(viewport);\n      }\n    }; //\n\n\n    this.reset = function () {\n      for (var i = 0; i < enabledAttributes.length; i++) {\n        if (enabledAttributes[i] === 1) {\n          gl.disableVertexAttribArray(i);\n          enabledAttributes[i] = 0;\n        }\n      }\n\n      capabilities = {};\n      compressedTextureFormats = null;\n      currentTextureSlot = null;\n      currentBoundTextures = {};\n      currentBlending = null;\n      currentFlipSided = null;\n      currentCullFace = null;\n      this.buffers.color.reset();\n      this.buffers.depth.reset();\n      this.buffers.stencil.reset();\n    };\n  };\n\n  THREE.WebGLColorBuffer = function (gl, state) {\n    var locked = false;\n    var color = new THREE.Vector4();\n    var currentColorMask = null;\n    var currentColorClear = new THREE.Vector4();\n\n    this.setMask = function (colorMask) {\n      if (currentColorMask !== colorMask && !locked) {\n        gl.colorMask(colorMask, colorMask, colorMask, colorMask);\n        currentColorMask = colorMask;\n      }\n    };\n\n    this.setLocked = function (lock) {\n      locked = lock;\n    };\n\n    this.setClear = function (r, g, b, a) {\n      color.set(r, g, b, a);\n\n      if (currentColorClear.equals(color) === false) {\n        gl.clearColor(r, g, b, a);\n        currentColorClear.copy(color);\n      }\n    };\n\n    this.reset = function () {\n      locked = false;\n      currentColorMask = null;\n      currentColorClear = new THREE.Vector4();\n    };\n  };\n\n  THREE.WebGLDepthBuffer = function (gl, state) {\n    var locked = false;\n    var currentDepthMask = null;\n    var currentDepthFunc = null;\n    var currentDepthClear = null;\n\n    this.setTest = function (depthTest) {\n      if (depthTest) {\n        state.enable(gl.DEPTH_TEST);\n      } else {\n        state.disable(gl.DEPTH_TEST);\n      }\n    };\n\n    this.setMask = function (depthMask) {\n      if (currentDepthMask !== depthMask && !locked) {\n        gl.depthMask(depthMask);\n        currentDepthMask = depthMask;\n      }\n    };\n\n    this.setFunc = function (depthFunc) {\n      if (currentDepthFunc !== depthFunc) {\n        if (depthFunc) {\n          switch (depthFunc) {\n            case THREE.NeverDepth:\n              gl.depthFunc(gl.NEVER);\n              break;\n\n            case THREE.AlwaysDepth:\n              gl.depthFunc(gl.ALWAYS);\n              break;\n\n            case THREE.LessDepth:\n              gl.depthFunc(gl.LESS);\n              break;\n\n            case THREE.LessEqualDepth:\n              gl.depthFunc(gl.LEQUAL);\n              break;\n\n            case THREE.EqualDepth:\n              gl.depthFunc(gl.EQUAL);\n              break;\n\n            case THREE.GreaterEqualDepth:\n              gl.depthFunc(gl.GEQUAL);\n              break;\n\n            case THREE.GreaterDepth:\n              gl.depthFunc(gl.GREATER);\n              break;\n\n            case THREE.NotEqualDepth:\n              gl.depthFunc(gl.NOTEQUAL);\n              break;\n\n            default:\n              gl.depthFunc(gl.LEQUAL);\n          }\n        } else {\n          gl.depthFunc(gl.LEQUAL);\n        }\n\n        currentDepthFunc = depthFunc;\n      }\n    };\n\n    this.setLocked = function (lock) {\n      locked = lock;\n    };\n\n    this.setClear = function (depth) {\n      if (currentDepthClear !== depth) {\n        gl.clearDepth(depth);\n        currentDepthClear = depth;\n      }\n    };\n\n    this.reset = function () {\n      locked = false;\n      currentDepthMask = null;\n      currentDepthFunc = null;\n      currentDepthClear = null;\n    };\n  };\n\n  THREE.WebGLStencilBuffer = function (gl, state) {\n    var locked = false;\n    var currentStencilMask = null;\n    var currentStencilFunc = null;\n    var currentStencilRef = null;\n    var currentStencilFuncMask = null;\n    var currentStencilFail = null;\n    var currentStencilZFail = null;\n    var currentStencilZPass = null;\n    var currentStencilClear = null;\n\n    this.setTest = function (stencilTest) {\n      if (stencilTest) {\n        state.enable(gl.STENCIL_TEST);\n      } else {\n        state.disable(gl.STENCIL_TEST);\n      }\n    };\n\n    this.setMask = function (stencilMask) {\n      if (currentStencilMask !== stencilMask && !locked) {\n        gl.stencilMask(stencilMask);\n        currentStencilMask = stencilMask;\n      }\n    };\n\n    this.setFunc = function (stencilFunc, stencilRef, stencilMask) {\n      if (currentStencilFunc !== stencilFunc || currentStencilRef !== stencilRef || currentStencilFuncMask !== stencilMask) {\n        gl.stencilFunc(stencilFunc, stencilRef, stencilMask);\n        currentStencilFunc = stencilFunc;\n        currentStencilRef = stencilRef;\n        currentStencilFuncMask = stencilMask;\n      }\n    };\n\n    this.setOp = function (stencilFail, stencilZFail, stencilZPass) {\n      if (currentStencilFail !== stencilFail || currentStencilZFail !== stencilZFail || currentStencilZPass !== stencilZPass) {\n        gl.stencilOp(stencilFail, stencilZFail, stencilZPass);\n        currentStencilFail = stencilFail;\n        currentStencilZFail = stencilZFail;\n        currentStencilZPass = stencilZPass;\n      }\n    };\n\n    this.setLocked = function (lock) {\n      locked = lock;\n    };\n\n    this.setClear = function (stencil) {\n      if (currentStencilClear !== stencil) {\n        gl.clearStencil(stencil);\n        currentStencilClear = stencil;\n      }\n    };\n\n    this.reset = function () {\n      locked = false;\n      currentStencilMask = null;\n      currentStencilFunc = null;\n      currentStencilRef = null;\n      currentStencilFuncMask = null;\n      currentStencilFail = null;\n      currentStencilZFail = null;\n      currentStencilZPass = null;\n      currentStencilClear = null;\n    };\n  }; // File:src/renderers/webgl/WebGLTextures.js\n\n  /**\n  * @author mrdoob / http://mrdoob.com/\n  */\n\n\n  THREE.WebGLTextures = function (_gl, extensions, state, properties, capabilities, paramThreeToGL, info) {\n    var _infoMemory = info.memory;\n\n    var _isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext; //\n\n\n    function clampToMaxSize(image, maxSize) {\n      if (image.width > maxSize || image.height > maxSize) {\n        // Warning: Scaling through the canvas will only work with images that use\n        // premultiplied alpha.\n        var scale = maxSize / Math.max(image.width, image.height);\n        var canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n        canvas.width = Math.floor(image.width * scale);\n        canvas.height = Math.floor(image.height * scale);\n        var context = canvas.getContext('2d');\n        context.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\n        console.warn('THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image);\n        return canvas;\n      }\n\n      return image;\n    }\n\n    function isPowerOfTwo(image) {\n      return THREE.Math.isPowerOfTwo(image.width) && THREE.Math.isPowerOfTwo(image.height);\n    }\n\n    function makePowerOfTwo(image) {\n      if (image instanceof HTMLImageElement || image instanceof HTMLCanvasElement) {\n        var canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n        canvas.width = THREE.Math.nearestPowerOfTwo(image.width);\n        canvas.height = THREE.Math.nearestPowerOfTwo(image.height);\n        var context = canvas.getContext('2d');\n        context.drawImage(image, 0, 0, canvas.width, canvas.height);\n        console.warn('THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image);\n        return canvas;\n      }\n\n      return image;\n    }\n\n    function textureNeedsPowerOfTwo(texture) {\n      if (texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping) return true;\n      if (texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter) return true;\n      return false;\n    } // Fallback filters for non-power-of-2 textures\n\n\n    function filterFallback(f) {\n      if (f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter) {\n        return _gl.NEAREST;\n      }\n\n      return _gl.LINEAR;\n    } //\n\n\n    function onTextureDispose(event) {\n      var texture = event.target;\n      texture.removeEventListener('dispose', onTextureDispose);\n      deallocateTexture(texture);\n      _infoMemory.textures--;\n    }\n\n    function onRenderTargetDispose(event) {\n      var renderTarget = event.target;\n      renderTarget.removeEventListener('dispose', onRenderTargetDispose);\n      deallocateRenderTarget(renderTarget);\n      _infoMemory.textures--;\n    } //\n\n\n    function deallocateTexture(texture) {\n      var textureProperties = properties.get(texture);\n\n      if (texture.image && textureProperties.__image__webglTextureCube) {\n        // cube texture\n        _gl.deleteTexture(textureProperties.__image__webglTextureCube);\n      } else {\n        // 2D texture\n        if (textureProperties.__webglInit === undefined) return;\n\n        _gl.deleteTexture(textureProperties.__webglTexture);\n      } // remove all webgl properties\n\n\n      properties.delete(texture);\n    }\n\n    function deallocateRenderTarget(renderTarget) {\n      var renderTargetProperties = properties.get(renderTarget);\n      var textureProperties = properties.get(renderTarget.texture);\n      if (!renderTarget) return;\n\n      if (textureProperties.__webglTexture !== undefined) {\n        _gl.deleteTexture(textureProperties.__webglTexture);\n      }\n\n      if (renderTarget.depthTexture) {\n        renderTarget.depthTexture.dispose();\n      }\n\n      if (renderTarget instanceof THREE.WebGLRenderTargetCube) {\n        for (var i = 0; i < 6; i++) {\n          _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);\n\n          if (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);\n        }\n      } else {\n        _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);\n\n        if (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);\n      }\n\n      properties.delete(renderTarget.texture);\n      properties.delete(renderTarget);\n    } //\n\n\n    function setTexture2D(texture, slot) {\n      var textureProperties = properties.get(texture);\n\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\n        var image = texture.image;\n\n        if (image === undefined) {\n          console.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined', texture);\n        } else if (image.complete === false) {\n          console.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture);\n        } else {\n          uploadTexture(textureProperties, texture, slot);\n          return;\n        }\n      }\n\n      state.activeTexture(_gl.TEXTURE0 + slot);\n      state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n    }\n\n    function setTextureCube(texture, slot) {\n      var textureProperties = properties.get(texture);\n\n      if (texture.image.length === 6) {\n        if (texture.version > 0 && textureProperties.__version !== texture.version) {\n          if (!textureProperties.__image__webglTextureCube) {\n            texture.addEventListener('dispose', onTextureDispose);\n            textureProperties.__image__webglTextureCube = _gl.createTexture();\n            _infoMemory.textures++;\n          }\n\n          state.activeTexture(_gl.TEXTURE0 + slot);\n          state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube);\n\n          _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n          var isCompressed = texture instanceof THREE.CompressedTexture;\n          var isDataTexture = texture.image[0] instanceof THREE.DataTexture;\n          var cubeImage = [];\n\n          for (var i = 0; i < 6; i++) {\n            if (!isCompressed && !isDataTexture) {\n              cubeImage[i] = clampToMaxSize(texture.image[i], capabilities.maxCubemapSize);\n            } else {\n              cubeImage[i] = isDataTexture ? texture.image[i].image : texture.image[i];\n            }\n          }\n\n          var image = cubeImage[0],\n              isPowerOfTwoImage = isPowerOfTwo(image),\n              glFormat = paramThreeToGL(texture.format),\n              glType = paramThreeToGL(texture.type);\n          setTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage);\n\n          for (var i = 0; i < 6; i++) {\n            if (!isCompressed) {\n              if (isDataTexture) {\n                state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[i].width, cubeImage[i].height, 0, glFormat, glType, cubeImage[i].data);\n              } else {\n                state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[i]);\n              }\n            } else {\n              var mipmap,\n                  mipmaps = cubeImage[i].mipmaps;\n\n              for (var j = 0, jl = mipmaps.length; j < jl; j++) {\n                mipmap = mipmaps[j];\n\n                if (texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat) {\n                  if (state.getCompressedTextureFormats().indexOf(glFormat) > -1) {\n                    state.compressedTexImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n                  } else {\n                    console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\");\n                  }\n                } else {\n                  state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n                }\n              }\n            }\n          }\n\n          if (texture.generateMipmaps && isPowerOfTwoImage) {\n            _gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);\n          }\n\n          textureProperties.__version = texture.version;\n          if (texture.onUpdate) texture.onUpdate(texture);\n        } else {\n          state.activeTexture(_gl.TEXTURE0 + slot);\n          state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube);\n        }\n      }\n    }\n\n    function setTextureCubeDynamic(texture, slot) {\n      state.activeTexture(_gl.TEXTURE0 + slot);\n      state.bindTexture(_gl.TEXTURE_CUBE_MAP, properties.get(texture).__webglTexture);\n    }\n\n    function setTextureParameters(textureType, texture, isPowerOfTwoImage) {\n      var extension;\n\n      if (isPowerOfTwoImage) {\n        _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL(texture.wrapS));\n\n        _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL(texture.wrapT));\n\n        _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL(texture.magFilter));\n\n        _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL(texture.minFilter));\n      } else {\n        _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE);\n\n        _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE);\n\n        if (texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping) {\n          console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture);\n        }\n\n        _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterFallback(texture.magFilter));\n\n        _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterFallback(texture.minFilter));\n\n        if (texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter) {\n          console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture);\n        }\n      }\n\n      extension = extensions.get('EXT_texture_filter_anisotropic');\n\n      if (extension) {\n        if (texture.type === THREE.FloatType && extensions.get('OES_texture_float_linear') === null) return;\n        if (texture.type === THREE.HalfFloatType && extensions.get('OES_texture_half_float_linear') === null) return;\n\n        if (texture.anisotropy > 1 || properties.get(texture).__currentAnisotropy) {\n          _gl.texParameterf(textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(texture.anisotropy, capabilities.getMaxAnisotropy()));\n\n          properties.get(texture).__currentAnisotropy = texture.anisotropy;\n        }\n      }\n    }\n\n    function uploadTexture(textureProperties, texture, slot) {\n      if (textureProperties.__webglInit === undefined) {\n        textureProperties.__webglInit = true;\n        texture.addEventListener('dispose', onTextureDispose);\n        textureProperties.__webglTexture = _gl.createTexture();\n        _infoMemory.textures++;\n      }\n\n      state.activeTexture(_gl.TEXTURE0 + slot);\n      state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n\n      _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n      _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n\n      _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\n\n      var image = clampToMaxSize(texture.image, capabilities.maxTextureSize);\n\n      if (textureNeedsPowerOfTwo(texture) && isPowerOfTwo(image) === false) {\n        image = makePowerOfTwo(image);\n      }\n\n      var isPowerOfTwoImage = isPowerOfTwo(image),\n          glFormat = paramThreeToGL(texture.format),\n          glType = paramThreeToGL(texture.type);\n      setTextureParameters(_gl.TEXTURE_2D, texture, isPowerOfTwoImage);\n      var mipmap,\n          mipmaps = texture.mipmaps;\n\n      if (texture instanceof THREE.DepthTexture) {\n        // populate depth texture with dummy data\n        var internalFormat = _gl.DEPTH_COMPONENT;\n\n        if (texture.type === THREE.FloatType) {\n          if (!_isWebGL2) throw new Error('Float Depth Texture only supported in WebGL2.0');\n          internalFormat = _gl.DEPTH_COMPONENT32F;\n        } else if (_isWebGL2) {\n          // WebGL 2.0 requires signed internalformat for glTexImage2D\n          internalFormat = _gl.DEPTH_COMPONENT16;\n        }\n\n        state.texImage2D(_gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null);\n      } else if (texture instanceof THREE.DataTexture) {\n        // use manually created mipmaps if available\n        // if there are no manual mipmaps\n        // set 0 level mipmap and then use GL to generate other mipmap levels\n        if (mipmaps.length > 0 && isPowerOfTwoImage) {\n          for (var i = 0, il = mipmaps.length; i < il; i++) {\n            mipmap = mipmaps[i];\n            state.texImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n          }\n\n          texture.generateMipmaps = false;\n        } else {\n          state.texImage2D(_gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data);\n        }\n      } else if (texture instanceof THREE.CompressedTexture) {\n        for (var i = 0, il = mipmaps.length; i < il; i++) {\n          mipmap = mipmaps[i];\n\n          if (texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat) {\n            if (state.getCompressedTextureFormats().indexOf(glFormat) > -1) {\n              state.compressedTexImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n            } else {\n              console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\");\n            }\n          } else {\n            state.texImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n          }\n        }\n      } else {\n        // regular Texture (image, video, canvas)\n        // use manually created mipmaps if available\n        // if there are no manual mipmaps\n        // set 0 level mipmap and then use GL to generate other mipmap levels\n        if (mipmaps.length > 0 && isPowerOfTwoImage) {\n          for (var i = 0, il = mipmaps.length; i < il; i++) {\n            mipmap = mipmaps[i];\n            state.texImage2D(_gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap);\n          }\n\n          texture.generateMipmaps = false;\n        } else {\n          state.texImage2D(_gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image);\n        }\n      }\n\n      if (texture.generateMipmaps && isPowerOfTwoImage) _gl.generateMipmap(_gl.TEXTURE_2D);\n      textureProperties.__version = texture.version;\n      if (texture.onUpdate) texture.onUpdate(texture);\n    } // Render targets\n    // Setup storage for target texture and bind it to correct framebuffer\n\n\n    function setupFrameBufferTexture(framebuffer, renderTarget, attachment, textureTarget) {\n      var glFormat = paramThreeToGL(renderTarget.texture.format);\n      var glType = paramThreeToGL(renderTarget.texture.type);\n      state.texImage2D(textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);\n\n      _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n      _gl.framebufferTexture2D(_gl.FRAMEBUFFER, attachment, textureTarget, properties.get(renderTarget.texture).__webglTexture, 0);\n\n      _gl.bindFramebuffer(_gl.FRAMEBUFFER, null);\n    } // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\n\n    function setupRenderBufferStorage(renderbuffer, renderTarget) {\n      _gl.bindRenderbuffer(_gl.RENDERBUFFER, renderbuffer);\n\n      if (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\n        _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height);\n\n        _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n      } else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\n        _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height);\n\n        _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n      } else {\n        // FIXME: We don't support !depth !stencil\n        _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height);\n      }\n\n      _gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\n    } // Setup resources for a Depth Texture for a FBO (needs an extension)\n\n\n    function setupDepthTexture(framebuffer, renderTarget) {\n      var isCube = renderTarget instanceof THREE.WebGLRenderTargetCube;\n      if (isCube) throw new Error('Depth Texture with cube render targets is not supported!');\n\n      _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n      if (!(renderTarget.depthTexture instanceof THREE.DepthTexture)) {\n        throw new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n      } // upload an empty depth texture with framebuffer size\n\n\n      if (!properties.get(renderTarget.depthTexture).__webglTexture || renderTarget.depthTexture.image.width !== renderTarget.width || renderTarget.depthTexture.image.height !== renderTarget.height) {\n        renderTarget.depthTexture.image.width = renderTarget.width;\n        renderTarget.depthTexture.image.height = renderTarget.height;\n        renderTarget.depthTexture.needsUpdate = true;\n      }\n\n      setTexture2D(renderTarget.depthTexture, 0);\n\n      var webglDepthTexture = properties.get(renderTarget.depthTexture).__webglTexture;\n\n      _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\n    } // Setup GL resources for a non-texture depth buffer\n\n\n    function setupDepthRenderbuffer(renderTarget) {\n      var renderTargetProperties = properties.get(renderTarget);\n      var isCube = renderTarget instanceof THREE.WebGLRenderTargetCube;\n\n      if (renderTarget.depthTexture) {\n        if (isCube) throw new Error('target.depthTexture not supported in Cube render targets');\n        setupDepthTexture(renderTargetProperties.__webglFramebuffer, renderTarget);\n      } else {\n        if (isCube) {\n          renderTargetProperties.__webglDepthbuffer = [];\n\n          for (var i = 0; i < 6; i++) {\n            _gl.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[i]);\n\n            renderTargetProperties.__webglDepthbuffer[i] = _gl.createRenderbuffer();\n            setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i], renderTarget);\n          }\n        } else {\n          _gl.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\n\n          renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n          setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer, renderTarget);\n        }\n      }\n\n      _gl.bindFramebuffer(_gl.FRAMEBUFFER, null);\n    } // Set up GL resources for the render target\n\n\n    function setupRenderTarget(renderTarget) {\n      var renderTargetProperties = properties.get(renderTarget);\n      var textureProperties = properties.get(renderTarget.texture);\n      renderTarget.addEventListener('dispose', onRenderTargetDispose);\n      textureProperties.__webglTexture = _gl.createTexture();\n      _infoMemory.textures++;\n      var isCube = renderTarget instanceof THREE.WebGLRenderTargetCube;\n      var isTargetPowerOfTwo = isPowerOfTwo(renderTarget); // Setup framebuffer\n\n      if (isCube) {\n        renderTargetProperties.__webglFramebuffer = [];\n\n        for (var i = 0; i < 6; i++) {\n          renderTargetProperties.__webglFramebuffer[i] = _gl.createFramebuffer();\n        }\n      } else {\n        renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n      } // Setup color buffer\n\n\n      if (isCube) {\n        state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n        setTextureParameters(_gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo);\n\n        for (var i = 0; i < 6; i++) {\n          setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[i], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i);\n        }\n\n        if (renderTarget.texture.generateMipmaps && isTargetPowerOfTwo) _gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);\n        state.bindTexture(_gl.TEXTURE_CUBE_MAP, null);\n      } else {\n        state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n        setTextureParameters(_gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo);\n        setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D);\n        if (renderTarget.texture.generateMipmaps && isTargetPowerOfTwo) _gl.generateMipmap(_gl.TEXTURE_2D);\n        state.bindTexture(_gl.TEXTURE_2D, null);\n      } // Setup depth and stencil buffers\n\n\n      if (renderTarget.depthBuffer) {\n        setupDepthRenderbuffer(renderTarget);\n      }\n    }\n\n    function updateRenderTargetMipmap(renderTarget) {\n      var texture = renderTarget.texture;\n\n      if (texture.generateMipmaps && isPowerOfTwo(renderTarget) && texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter) {\n        var target = renderTarget instanceof THREE.WebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\n        var webglTexture = properties.get(texture).__webglTexture;\n\n        state.bindTexture(target, webglTexture);\n\n        _gl.generateMipmap(target);\n\n        state.bindTexture(target, null);\n      }\n    }\n\n    this.setTexture2D = setTexture2D;\n    this.setTextureCube = setTextureCube;\n    this.setTextureCubeDynamic = setTextureCubeDynamic;\n    this.setupRenderTarget = setupRenderTarget;\n    this.updateRenderTargetMipmap = updateRenderTargetMipmap;\n  }; // File:src/renderers/webgl/WebGLUniforms.js\n\n  /**\n   *\n   * Uniforms of a program.\n   * Those form a tree structure with a special top-level container for the root,\n   * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n   *\n   *\n   * Properties of inner nodes including the top-level container:\n   *\n   * .seq - array of nested uniforms\n   * .map - nested uniforms by name\n   *\n   *\n   * Methods of all nodes except the top-level container:\n   *\n   * .setValue( gl, value, [renderer] )\n   *\n   * \t\tuploads a uniform value(s)\n   *  \tthe 'renderer' parameter is needed for sampler uniforms\n   *\n   *\n   * Static methods of the top-level container (renderer factorizations):\n   *\n   * .upload( gl, seq, values, renderer )\n   *\n   * \t\tsets uniforms in 'seq' to 'values[id].value'\n   *\n   * .seqWithValue( seq, values ) : filteredSeq\n   *\n   * \t\tfilters 'seq' entries with corresponding entry in values\n   *\n   * .splitDynamic( seq, values ) : filteredSeq\n   *\n   * \t\tfilters 'seq' entries with dynamic entry and removes them from 'seq'\n   *\n   *\n   * Methods of the top-level container (renderer factorizations):\n   *\n   * .setValue( gl, name, value )\n   *\n   * \t\tsets uniform with  name 'name' to 'value'\n   *\n   * .set( gl, obj, prop )\n   *\n   * \t\tsets uniform from object and property with same name than uniform\n   *\n   * .setOptional( gl, obj, prop )\n   *\n   * \t\tlike .set for an optional property of the object\n   *\n   *\n   * @author tschw\n   *\n   */\n\n\n  THREE.WebGLUniforms = function () {\n    // scope\n    var emptyTexture = new THREE.Texture();\n    var emptyCubeTexture = new THREE.CubeTexture(); // --- Base for inner nodes (including the root) ---\n\n    var UniformContainer = function () {\n      this.seq = [];\n      this.map = {};\n    },\n        // --- Utilities ---\n    // Array Caches (provide typed arrays for temporary by size)\n    arrayCacheF32 = [],\n        arrayCacheI32 = [],\n        uncacheTemporaryArrays = function () {\n      arrayCacheF32.length = 0;\n      arrayCacheI32.length = 0;\n    },\n        // Flattening for arrays of vectors and matrices\n    flatten = function (array, nBlocks, blockSize) {\n      var firstElem = array[0];\n      if (firstElem <= 0 || firstElem > 0) return array; // unoptimized: ! isNaN( firstElem )\n      // see http://jacksondunstan.com/articles/983\n\n      var n = nBlocks * blockSize,\n          r = arrayCacheF32[n];\n\n      if (r === undefined) {\n        r = new Float32Array(n);\n        arrayCacheF32[n] = r;\n      }\n\n      if (nBlocks !== 0) {\n        firstElem.toArray(r, 0);\n\n        for (var i = 1, offset = 0; i !== nBlocks; ++i) {\n          offset += blockSize;\n          array[i].toArray(r, offset);\n        }\n      }\n\n      return r;\n    },\n        // Texture unit allocation\n    allocTexUnits = function (renderer, n) {\n      var r = arrayCacheI32[n];\n\n      if (r === undefined) {\n        r = new Int32Array(n);\n        arrayCacheI32[n] = r;\n      }\n\n      for (var i = 0; i !== n; ++i) r[i] = renderer.allocTextureUnit();\n\n      return r;\n    },\n        // --- Setters ---\n    // Note: Defining these methods externally, because they come in a bunch\n    // and this way their names minify.\n    // Single scalar\n    setValue1f = function (gl, v) {\n      gl.uniform1f(this.addr, v);\n    },\n        setValue1i = function (gl, v) {\n      gl.uniform1i(this.addr, v);\n    },\n        // Single float vector (from flat array or THREE.VectorN)\n    setValue2fv = function (gl, v) {\n      if (v.x === undefined) gl.uniform2fv(this.addr, v);else gl.uniform2f(this.addr, v.x, v.y);\n    },\n        setValue3fv = function (gl, v) {\n      if (v.x !== undefined) gl.uniform3f(this.addr, v.x, v.y, v.z);else if (v.r !== undefined) gl.uniform3f(this.addr, v.r, v.g, v.b);else gl.uniform3fv(this.addr, v);\n    },\n        setValue4fv = function (gl, v) {\n      if (v.x === undefined) gl.uniform4fv(this.addr, v);else gl.uniform4f(this.addr, v.x, v.y, v.z, v.w);\n    },\n        // Single matrix (from flat array or MatrixN)\n    setValue2fm = function (gl, v) {\n      gl.uniformMatrix2fv(this.addr, false, v.elements || v);\n    },\n        setValue3fm = function (gl, v) {\n      gl.uniformMatrix3fv(this.addr, false, v.elements || v);\n    },\n        setValue4fm = function (gl, v) {\n      gl.uniformMatrix4fv(this.addr, false, v.elements || v);\n    },\n        // Single texture (2D / Cube)\n    setValueT1 = function (gl, v, renderer) {\n      var unit = renderer.allocTextureUnit();\n      gl.uniform1i(this.addr, unit);\n      renderer.setTexture2D(v || emptyTexture, unit);\n    },\n        setValueT6 = function (gl, v, renderer) {\n      var unit = renderer.allocTextureUnit();\n      gl.uniform1i(this.addr, unit);\n      renderer.setTextureCube(v || emptyCubeTexture, unit);\n    },\n        // Integer / Boolean vectors or arrays thereof (always flat arrays)\n    setValue2iv = function (gl, v) {\n      gl.uniform2iv(this.addr, v);\n    },\n        setValue3iv = function (gl, v) {\n      gl.uniform3iv(this.addr, v);\n    },\n        setValue4iv = function (gl, v) {\n      gl.uniform4iv(this.addr, v);\n    },\n        // Helper to pick the right setter for the singular case\n    getSingularSetter = function (type) {\n      switch (type) {\n        case 0x1406:\n          return setValue1f;\n        // FLOAT\n\n        case 0x8b50:\n          return setValue2fv;\n        // _VEC2\n\n        case 0x8b51:\n          return setValue3fv;\n        // _VEC3\n\n        case 0x8b52:\n          return setValue4fv;\n        // _VEC4\n\n        case 0x8b5a:\n          return setValue2fm;\n        // _MAT2\n\n        case 0x8b5b:\n          return setValue3fm;\n        // _MAT3\n\n        case 0x8b5c:\n          return setValue4fm;\n        // _MAT4\n\n        case 0x8b5e:\n          return setValueT1;\n        // SAMPLER_2D\n\n        case 0x8b60:\n          return setValueT6;\n        // SAMPLER_CUBE\n\n        case 0x1404:\n        case 0x8b56:\n          return setValue1i;\n        // INT, BOOL\n\n        case 0x8b53:\n        case 0x8b57:\n          return setValue2iv;\n        // _VEC2\n\n        case 0x8b54:\n        case 0x8b58:\n          return setValue3iv;\n        // _VEC3\n\n        case 0x8b55:\n        case 0x8b59:\n          return setValue4iv;\n        // _VEC4\n      }\n    },\n        // Array of scalars\n    setValue1fv = function (gl, v) {\n      gl.uniform1fv(this.addr, v);\n    },\n        setValue1iv = function (gl, v) {\n      gl.uniform1iv(this.addr, v);\n    },\n        // Array of vectors (flat or from THREE classes)\n    setValueV2a = function (gl, v) {\n      gl.uniform2fv(this.addr, flatten(v, this.size, 2));\n    },\n        setValueV3a = function (gl, v) {\n      gl.uniform3fv(this.addr, flatten(v, this.size, 3));\n    },\n        setValueV4a = function (gl, v) {\n      gl.uniform4fv(this.addr, flatten(v, this.size, 4));\n    },\n        // Array of matrices (flat or from THREE clases)\n    setValueM2a = function (gl, v) {\n      gl.uniformMatrix2fv(this.addr, false, flatten(v, this.size, 4));\n    },\n        setValueM3a = function (gl, v) {\n      gl.uniformMatrix3fv(this.addr, false, flatten(v, this.size, 9));\n    },\n        setValueM4a = function (gl, v) {\n      gl.uniformMatrix4fv(this.addr, false, flatten(v, this.size, 16));\n    },\n        // Array of textures (2D / Cube)\n    setValueT1a = function (gl, v, renderer) {\n      var n = v.length,\n          units = allocTexUnits(renderer, n);\n      gl.uniform1iv(this.addr, units);\n\n      for (var i = 0; i !== n; ++i) {\n        renderer.setTexture2D(v[i] || emptyTexture, units[i]);\n      }\n    },\n        setValueT6a = function (gl, v, renderer) {\n      var n = v.length,\n          units = allocTexUnits(renderer, n);\n      gl.uniform1iv(this.addr, units);\n\n      for (var i = 0; i !== n; ++i) {\n        renderer.setTextureCube(v[i] || emptyCubeTexture, units[i]);\n      }\n    },\n        // Helper to pick the right setter for a pure (bottom-level) array\n    getPureArraySetter = function (type) {\n      switch (type) {\n        case 0x1406:\n          return setValue1fv;\n        // FLOAT\n\n        case 0x8b50:\n          return setValueV2a;\n        // _VEC2\n\n        case 0x8b51:\n          return setValueV3a;\n        // _VEC3\n\n        case 0x8b52:\n          return setValueV4a;\n        // _VEC4\n\n        case 0x8b5a:\n          return setValueM2a;\n        // _MAT2\n\n        case 0x8b5b:\n          return setValueM3a;\n        // _MAT3\n\n        case 0x8b5c:\n          return setValueM4a;\n        // _MAT4\n\n        case 0x8b5e:\n          return setValueT1a;\n        // SAMPLER_2D\n\n        case 0x8b60:\n          return setValueT6a;\n        // SAMPLER_CUBE\n\n        case 0x1404:\n        case 0x8b56:\n          return setValue1iv;\n        // INT, BOOL\n\n        case 0x8b53:\n        case 0x8b57:\n          return setValue2iv;\n        // _VEC2\n\n        case 0x8b54:\n        case 0x8b58:\n          return setValue3iv;\n        // _VEC3\n\n        case 0x8b55:\n        case 0x8b59:\n          return setValue4iv;\n        // _VEC4\n      }\n    },\n        // --- Uniform Classes ---\n    SingleUniform = function SingleUniform(id, activeInfo, addr) {\n      this.id = id;\n      this.addr = addr;\n      this.setValue = getSingularSetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n    },\n        PureArrayUniform = function (id, activeInfo, addr) {\n      this.id = id;\n      this.addr = addr;\n      this.size = activeInfo.size;\n      this.setValue = getPureArraySetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n    },\n        StructuredUniform = function (id) {\n      this.id = id;\n      UniformContainer.call(this); // mix-in\n    };\n\n    StructuredUniform.prototype.setValue = function (gl, value) {\n      // Note: Don't need an extra 'renderer' parameter, since samplers\n      // are not allowed in structured uniforms.\n      var seq = this.seq;\n\n      for (var i = 0, n = seq.length; i !== n; ++i) {\n        var u = seq[i];\n        u.setValue(gl, value[u.id]);\n      }\n    }; // --- Top-level ---\n    // Parser - builds up the property tree from the path strings\n\n\n    var RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g,\n        // extracts\n    // \t- the identifier (member name or array index)\n    //  - followed by an optional right bracket (found when array index)\n    //  - followed by an optional left bracket or dot (type of subscript)\n    //\n    // Note: These portions can be read in a non-overlapping fashion and\n    // allow straightforward parsing of the hierarchy that WebGL encodes\n    // in the uniform names.\n    addUniform = function (container, uniformObject) {\n      container.seq.push(uniformObject);\n      container.map[uniformObject.id] = uniformObject;\n    },\n        parseUniform = function (activeInfo, addr, container) {\n      var path = activeInfo.name,\n          pathLength = path.length; // reset RegExp object, because of the early exit of a previous run\n\n      RePathPart.lastIndex = 0;\n\n      for (;;) {\n        var match = RePathPart.exec(path),\n            matchEnd = RePathPart.lastIndex,\n            id = match[1],\n            idIsIndex = match[2] === ']',\n            subscript = match[3];\n        if (idIsIndex) id = id | 0; // convert to integer\n\n        if (subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength) {\n          // bare name or \"pure\" bottom-level array \"[0]\" suffix\n          addUniform(container, subscript === undefined ? new SingleUniform(id, activeInfo, addr) : new PureArrayUniform(id, activeInfo, addr));\n          break;\n        } else {\n          // step into inner node / create it in case it doesn't exist\n          var map = container.map,\n              next = map[id];\n\n          if (next === undefined) {\n            next = new StructuredUniform(id);\n            addUniform(container, next);\n          }\n\n          container = next;\n        }\n      }\n    },\n        // Root Container\n    WebGLUniforms = function WebGLUniforms(gl, program, renderer) {\n      UniformContainer.call(this);\n      this.renderer = renderer;\n      var n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n      for (var i = 0; i !== n; ++i) {\n        var info = gl.getActiveUniform(program, i),\n            path = info.name,\n            addr = gl.getUniformLocation(program, path);\n        parseUniform(info, addr, this);\n      }\n    };\n\n    WebGLUniforms.prototype.setValue = function (gl, name, value) {\n      var u = this.map[name];\n      if (u !== undefined) u.setValue(gl, value, this.renderer);\n    };\n\n    WebGLUniforms.prototype.set = function (gl, object, name) {\n      var u = this.map[name];\n      if (u !== undefined) u.setValue(gl, object[name], this.renderer);\n    };\n\n    WebGLUniforms.prototype.setOptional = function (gl, object, name) {\n      var v = object[name];\n      if (v !== undefined) this.setValue(gl, name, v);\n    }; // Static interface\n\n\n    WebGLUniforms.upload = function (gl, seq, values, renderer) {\n      for (var i = 0, n = seq.length; i !== n; ++i) {\n        var u = seq[i],\n            v = values[u.id];\n\n        if (v.needsUpdate !== false) {\n          // note: always updating when .needsUpdate is undefined\n          u.setValue(gl, v.value, renderer);\n        }\n      }\n    };\n\n    WebGLUniforms.seqWithValue = function (seq, values) {\n      var r = [];\n\n      for (var i = 0, n = seq.length; i !== n; ++i) {\n        var u = seq[i];\n        if (u.id in values) r.push(u);\n      }\n\n      return r;\n    };\n\n    WebGLUniforms.splitDynamic = function (seq, values) {\n      var r = null,\n          n = seq.length,\n          w = 0;\n\n      for (var i = 0; i !== n; ++i) {\n        var u = seq[i],\n            v = values[u.id];\n\n        if (v && v.dynamic === true) {\n          if (r === null) r = [];\n          r.push(u);\n        } else {\n          // in-place compact 'seq', removing the matches\n          if (w < i) seq[w] = u;\n          ++w;\n        }\n      }\n\n      if (w < n) seq.length = w;\n      return r;\n    };\n\n    WebGLUniforms.evalDynamic = function (seq, values, object, camera) {\n      for (var i = 0, n = seq.length; i !== n; ++i) {\n        var v = values[seq[i].id],\n            f = v.onUpdateCallback;\n        if (f !== undefined) f.call(v, object, camera);\n      }\n    };\n\n    return WebGLUniforms;\n  }(); // File:src/renderers/webgl/plugins/LensFlarePlugin.js\n\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n\n  THREE.LensFlarePlugin = function (renderer, flares) {\n    var gl = renderer.context;\n    var state = renderer.state;\n    var vertexBuffer, elementBuffer;\n    var shader, program, attributes, uniforms;\n    var tempTexture, occlusionTexture;\n\n    function init() {\n      var vertices = new Float32Array([-1, -1, 0, 0, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0, 1]);\n      var faces = new Uint16Array([0, 1, 2, 0, 2, 3]); // buffers\n\n      vertexBuffer = gl.createBuffer();\n      elementBuffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW); // textures\n\n      tempTexture = gl.createTexture();\n      occlusionTexture = gl.createTexture();\n      state.bindTexture(gl.TEXTURE_2D, tempTexture);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      state.bindTexture(gl.TEXTURE_2D, occlusionTexture);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      shader = {\n        vertexShader: [\"uniform lowp int renderType;\", \"uniform vec3 screenPosition;\", \"uniform vec2 scale;\", \"uniform float rotation;\", \"uniform sampler2D occlusionMap;\", \"attribute vec2 position;\", \"attribute vec2 uv;\", \"varying vec2 vUV;\", \"varying float vVisibility;\", \"void main() {\", \"vUV = uv;\", \"vec2 pos = position;\", \"if ( renderType == 2 ) {\", \"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\", \"vVisibility =        visibility.r / 9.0;\", \"vVisibility *= 1.0 - visibility.g / 9.0;\", \"vVisibility *=       visibility.b / 9.0;\", \"vVisibility *= 1.0 - visibility.a / 9.0;\", \"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\", \"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\", \"}\", \"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform lowp int renderType;\", \"uniform sampler2D map;\", \"uniform float opacity;\", \"uniform vec3 color;\", \"varying vec2 vUV;\", \"varying float vVisibility;\", \"void main() {\", // pink square\n        \"if ( renderType == 0 ) {\", \"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\", // restore\n        \"} else if ( renderType == 1 ) {\", \"gl_FragColor = texture2D( map, vUV );\", // flare\n        \"} else {\", \"vec4 texture = texture2D( map, vUV );\", \"texture.a *= opacity * vVisibility;\", \"gl_FragColor = texture;\", \"gl_FragColor.rgb *= color;\", \"}\", \"}\"].join(\"\\n\")\n      };\n      program = createProgram(shader);\n      attributes = {\n        vertex: gl.getAttribLocation(program, \"position\"),\n        uv: gl.getAttribLocation(program, \"uv\")\n      };\n      uniforms = {\n        renderType: gl.getUniformLocation(program, \"renderType\"),\n        map: gl.getUniformLocation(program, \"map\"),\n        occlusionMap: gl.getUniformLocation(program, \"occlusionMap\"),\n        opacity: gl.getUniformLocation(program, \"opacity\"),\n        color: gl.getUniformLocation(program, \"color\"),\n        scale: gl.getUniformLocation(program, \"scale\"),\n        rotation: gl.getUniformLocation(program, \"rotation\"),\n        screenPosition: gl.getUniformLocation(program, \"screenPosition\")\n      };\n    }\n    /*\n     * Render lens flares\n     * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\n     *         reads these back and calculates occlusion.\n     */\n\n\n    this.render = function (scene, camera, viewport) {\n      if (flares.length === 0) return;\n      var tempPosition = new THREE.Vector3();\n      var invAspect = viewport.w / viewport.z,\n          halfViewportWidth = viewport.z * 0.5,\n          halfViewportHeight = viewport.w * 0.5;\n      var size = 16 / viewport.w,\n          scale = new THREE.Vector2(size * invAspect, size);\n      var screenPosition = new THREE.Vector3(1, 1, 0),\n          screenPositionPixels = new THREE.Vector2(1, 1);\n      var validArea = new THREE.Box2();\n      validArea.min.set(0, 0);\n      validArea.max.set(viewport.z - 16, viewport.w - 16);\n\n      if (program === undefined) {\n        init();\n      }\n\n      gl.useProgram(program);\n      state.initAttributes();\n      state.enableAttribute(attributes.vertex);\n      state.enableAttribute(attributes.uv);\n      state.disableUnusedAttributes(); // loop through all lens flares to update their occlusion and positions\n      // setup gl and common used attribs/uniforms\n\n      gl.uniform1i(uniforms.occlusionMap, 0);\n      gl.uniform1i(uniforms.map, 1);\n      gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n      gl.vertexAttribPointer(attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0);\n      gl.vertexAttribPointer(attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8);\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n      state.disable(gl.CULL_FACE);\n      state.setDepthWrite(false);\n\n      for (var i = 0, l = flares.length; i < l; i++) {\n        size = 16 / viewport.w;\n        scale.set(size * invAspect, size); // calc object screen position\n\n        var flare = flares[i];\n        tempPosition.set(flare.matrixWorld.elements[12], flare.matrixWorld.elements[13], flare.matrixWorld.elements[14]);\n        tempPosition.applyMatrix4(camera.matrixWorldInverse);\n        tempPosition.applyProjection(camera.projectionMatrix); // setup arrays for gl programs\n\n        screenPosition.copy(tempPosition); // horizontal and vertical coordinate of the lower left corner of the pixels to copy\n\n        screenPositionPixels.x = viewport.x + screenPosition.x * halfViewportWidth + halfViewportWidth - 8;\n        screenPositionPixels.y = viewport.y + screenPosition.y * halfViewportHeight + halfViewportHeight - 8; // screen cull\n\n        if (validArea.containsPoint(screenPositionPixels) === true) {\n          // save current RGB to temp texture\n          state.activeTexture(gl.TEXTURE0);\n          state.bindTexture(gl.TEXTURE_2D, null);\n          state.activeTexture(gl.TEXTURE1);\n          state.bindTexture(gl.TEXTURE_2D, tempTexture);\n          gl.copyTexImage2D(gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0); // render pink quad\n\n          gl.uniform1i(uniforms.renderType, 0);\n          gl.uniform2f(uniforms.scale, scale.x, scale.y);\n          gl.uniform3f(uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z);\n          state.disable(gl.BLEND);\n          state.enable(gl.DEPTH_TEST);\n          gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0); // copy result to occlusionMap\n\n          state.activeTexture(gl.TEXTURE0);\n          state.bindTexture(gl.TEXTURE_2D, occlusionTexture);\n          gl.copyTexImage2D(gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0); // restore graphics\n\n          gl.uniform1i(uniforms.renderType, 1);\n          state.disable(gl.DEPTH_TEST);\n          state.activeTexture(gl.TEXTURE1);\n          state.bindTexture(gl.TEXTURE_2D, tempTexture);\n          gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0); // update object positions\n\n          flare.positionScreen.copy(screenPosition);\n\n          if (flare.customUpdateCallback) {\n            flare.customUpdateCallback(flare);\n          } else {\n            flare.updateLensFlares();\n          } // render flares\n\n\n          gl.uniform1i(uniforms.renderType, 2);\n          state.enable(gl.BLEND);\n\n          for (var j = 0, jl = flare.lensFlares.length; j < jl; j++) {\n            var sprite = flare.lensFlares[j];\n\n            if (sprite.opacity > 0.001 && sprite.scale > 0.001) {\n              screenPosition.x = sprite.x;\n              screenPosition.y = sprite.y;\n              screenPosition.z = sprite.z;\n              size = sprite.size * sprite.scale / viewport.w;\n              scale.x = size * invAspect;\n              scale.y = size;\n              gl.uniform3f(uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z);\n              gl.uniform2f(uniforms.scale, scale.x, scale.y);\n              gl.uniform1f(uniforms.rotation, sprite.rotation);\n              gl.uniform1f(uniforms.opacity, sprite.opacity);\n              gl.uniform3f(uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b);\n              state.setBlending(sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst);\n              renderer.setTexture2D(sprite.texture, 1);\n              gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n            }\n          }\n        }\n      } // restore gl\n\n\n      state.enable(gl.CULL_FACE);\n      state.enable(gl.DEPTH_TEST);\n      state.setDepthWrite(true);\n      renderer.resetGLState();\n    };\n\n    function createProgram(shader) {\n      var program = gl.createProgram();\n      var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n      var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n      var prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\n      gl.shaderSource(fragmentShader, prefix + shader.fragmentShader);\n      gl.shaderSource(vertexShader, prefix + shader.vertexShader);\n      gl.compileShader(fragmentShader);\n      gl.compileShader(vertexShader);\n      gl.attachShader(program, fragmentShader);\n      gl.attachShader(program, vertexShader);\n      gl.linkProgram(program);\n      return program;\n    }\n  }; // File:src/renderers/webgl/plugins/SpritePlugin.js\n\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n\n  THREE.SpritePlugin = function (renderer, sprites) {\n    var gl = renderer.context;\n    var state = renderer.state;\n    var vertexBuffer, elementBuffer;\n    var program, attributes, uniforms;\n    var texture; // decompose matrixWorld\n\n    var spritePosition = new THREE.Vector3();\n    var spriteRotation = new THREE.Quaternion();\n    var spriteScale = new THREE.Vector3();\n\n    function init() {\n      var vertices = new Float32Array([-0.5, -0.5, 0, 0, 0.5, -0.5, 1, 0, 0.5, 0.5, 1, 1, -0.5, 0.5, 0, 1]);\n      var faces = new Uint16Array([0, 1, 2, 0, 2, 3]);\n      vertexBuffer = gl.createBuffer();\n      elementBuffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW);\n      program = createProgram();\n      attributes = {\n        position: gl.getAttribLocation(program, 'position'),\n        uv: gl.getAttribLocation(program, 'uv')\n      };\n      uniforms = {\n        uvOffset: gl.getUniformLocation(program, 'uvOffset'),\n        uvScale: gl.getUniformLocation(program, 'uvScale'),\n        rotation: gl.getUniformLocation(program, 'rotation'),\n        scale: gl.getUniformLocation(program, 'scale'),\n        color: gl.getUniformLocation(program, 'color'),\n        map: gl.getUniformLocation(program, 'map'),\n        opacity: gl.getUniformLocation(program, 'opacity'),\n        modelViewMatrix: gl.getUniformLocation(program, 'modelViewMatrix'),\n        projectionMatrix: gl.getUniformLocation(program, 'projectionMatrix'),\n        fogType: gl.getUniformLocation(program, 'fogType'),\n        fogDensity: gl.getUniformLocation(program, 'fogDensity'),\n        fogNear: gl.getUniformLocation(program, 'fogNear'),\n        fogFar: gl.getUniformLocation(program, 'fogFar'),\n        fogColor: gl.getUniformLocation(program, 'fogColor'),\n        alphaTest: gl.getUniformLocation(program, 'alphaTest')\n      };\n      var canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n      canvas.width = 8;\n      canvas.height = 8;\n      var context = canvas.getContext('2d');\n      context.fillStyle = 'white';\n      context.fillRect(0, 0, 8, 8);\n      texture = new THREE.Texture(canvas);\n      texture.needsUpdate = true;\n    }\n\n    this.render = function (scene, camera) {\n      if (sprites.length === 0) return; // setup gl\n\n      if (program === undefined) {\n        init();\n      }\n\n      gl.useProgram(program);\n      state.initAttributes();\n      state.enableAttribute(attributes.position);\n      state.enableAttribute(attributes.uv);\n      state.disableUnusedAttributes();\n      state.disable(gl.CULL_FACE);\n      state.enable(gl.BLEND);\n      gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n      gl.vertexAttribPointer(attributes.position, 2, gl.FLOAT, false, 2 * 8, 0);\n      gl.vertexAttribPointer(attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8);\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n      gl.uniformMatrix4fv(uniforms.projectionMatrix, false, camera.projectionMatrix.elements);\n      state.activeTexture(gl.TEXTURE0);\n      gl.uniform1i(uniforms.map, 0);\n      var oldFogType = 0;\n      var sceneFogType = 0;\n      var fog = scene.fog;\n\n      if (fog) {\n        gl.uniform3f(uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b);\n\n        if (fog instanceof THREE.Fog) {\n          gl.uniform1f(uniforms.fogNear, fog.near);\n          gl.uniform1f(uniforms.fogFar, fog.far);\n          gl.uniform1i(uniforms.fogType, 1);\n          oldFogType = 1;\n          sceneFogType = 1;\n        } else if (fog instanceof THREE.FogExp2) {\n          gl.uniform1f(uniforms.fogDensity, fog.density);\n          gl.uniform1i(uniforms.fogType, 2);\n          oldFogType = 2;\n          sceneFogType = 2;\n        }\n      } else {\n        gl.uniform1i(uniforms.fogType, 0);\n        oldFogType = 0;\n        sceneFogType = 0;\n      } // update positions and sort\n\n\n      for (var i = 0, l = sprites.length; i < l; i++) {\n        var sprite = sprites[i];\n        sprite.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, sprite.matrixWorld);\n        sprite.z = -sprite.modelViewMatrix.elements[14];\n      }\n\n      sprites.sort(painterSortStable); // render all sprites\n\n      var scale = [];\n\n      for (var i = 0, l = sprites.length; i < l; i++) {\n        var sprite = sprites[i];\n        var material = sprite.material;\n        if (material.visible === false) continue;\n        gl.uniform1f(uniforms.alphaTest, material.alphaTest);\n        gl.uniformMatrix4fv(uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements);\n        sprite.matrixWorld.decompose(spritePosition, spriteRotation, spriteScale);\n        scale[0] = spriteScale.x;\n        scale[1] = spriteScale.y;\n        var fogType = 0;\n\n        if (scene.fog && material.fog) {\n          fogType = sceneFogType;\n        }\n\n        if (oldFogType !== fogType) {\n          gl.uniform1i(uniforms.fogType, fogType);\n          oldFogType = fogType;\n        }\n\n        if (material.map !== null) {\n          gl.uniform2f(uniforms.uvOffset, material.map.offset.x, material.map.offset.y);\n          gl.uniform2f(uniforms.uvScale, material.map.repeat.x, material.map.repeat.y);\n        } else {\n          gl.uniform2f(uniforms.uvOffset, 0, 0);\n          gl.uniform2f(uniforms.uvScale, 1, 1);\n        }\n\n        gl.uniform1f(uniforms.opacity, material.opacity);\n        gl.uniform3f(uniforms.color, material.color.r, material.color.g, material.color.b);\n        gl.uniform1f(uniforms.rotation, material.rotation);\n        gl.uniform2fv(uniforms.scale, scale);\n        state.setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst);\n        state.setDepthTest(material.depthTest);\n        state.setDepthWrite(material.depthWrite);\n\n        if (material.map) {\n          renderer.setTexture2D(material.map, 0);\n        } else {\n          renderer.setTexture2D(texture, 0);\n        }\n\n        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n      } // restore gl\n\n\n      state.enable(gl.CULL_FACE);\n      renderer.resetGLState();\n    };\n\n    function createProgram() {\n      var program = gl.createProgram();\n      var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n      var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n      gl.shaderSource(vertexShader, ['precision ' + renderer.getPrecision() + ' float;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform float rotation;', 'uniform vec2 scale;', 'uniform vec2 uvOffset;', 'uniform vec2 uvScale;', 'attribute vec2 position;', 'attribute vec2 uv;', 'varying vec2 vUV;', 'void main() {', 'vUV = uvOffset + uv * uvScale;', 'vec2 alignedPosition = position * scale;', 'vec2 rotatedPosition;', 'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;', 'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;', 'vec4 finalPosition;', 'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );', 'finalPosition.xy += rotatedPosition;', 'finalPosition = projectionMatrix * finalPosition;', 'gl_Position = finalPosition;', '}'].join('\\n'));\n      gl.shaderSource(fragmentShader, ['precision ' + renderer.getPrecision() + ' float;', 'uniform vec3 color;', 'uniform sampler2D map;', 'uniform float opacity;', 'uniform int fogType;', 'uniform vec3 fogColor;', 'uniform float fogDensity;', 'uniform float fogNear;', 'uniform float fogFar;', 'uniform float alphaTest;', 'varying vec2 vUV;', 'void main() {', 'vec4 texture = texture2D( map, vUV );', 'if ( texture.a < alphaTest ) discard;', 'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );', 'if ( fogType > 0 ) {', 'float depth = gl_FragCoord.z / gl_FragCoord.w;', 'float fogFactor = 0.0;', 'if ( fogType == 1 ) {', 'fogFactor = smoothstep( fogNear, fogFar, depth );', '} else {', 'const float LOG2 = 1.442695;', 'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );', 'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );', '}', 'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );', '}', '}'].join('\\n'));\n      gl.compileShader(vertexShader);\n      gl.compileShader(fragmentShader);\n      gl.attachShader(program, vertexShader);\n      gl.attachShader(program, fragmentShader);\n      gl.linkProgram(program);\n      return program;\n    }\n\n    function painterSortStable(a, b) {\n      if (a.renderOrder !== b.renderOrder) {\n        return a.renderOrder - b.renderOrder;\n      } else if (a.z !== b.z) {\n        return b.z - a.z;\n      } else {\n        return b.id - a.id;\n      }\n    }\n  }; // File:src/Three.Legacy.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  Object.assign(THREE, {\n    Face4: function (a, b, c, d, normal, color, materialIndex) {\n      console.warn('THREE.Face4 has been removed. A THREE.Face3 will be created instead.');\n      return new THREE.Face3(a, b, c, normal, color, materialIndex);\n    },\n    LineStrip: 0,\n    LinePieces: 1,\n    MeshFaceMaterial: THREE.MultiMaterial,\n    PointCloud: function (geometry, material) {\n      console.warn('THREE.PointCloud has been renamed to THREE.Points.');\n      return new THREE.Points(geometry, material);\n    },\n    Particle: THREE.Sprite,\n    ParticleSystem: function (geometry, material) {\n      console.warn('THREE.ParticleSystem has been renamed to THREE.Points.');\n      return new THREE.Points(geometry, material);\n    },\n    PointCloudMaterial: function (parameters) {\n      console.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');\n      return new THREE.PointsMaterial(parameters);\n    },\n    ParticleBasicMaterial: function (parameters) {\n      console.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');\n      return new THREE.PointsMaterial(parameters);\n    },\n    ParticleSystemMaterial: function (parameters) {\n      console.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');\n      return new THREE.PointsMaterial(parameters);\n    },\n    Vertex: function (x, y, z) {\n      console.warn('THREE.Vertex has been removed. Use THREE.Vector3 instead.');\n      return new THREE.Vector3(x, y, z);\n    }\n  }); //\n\n  Object.assign(THREE.Box2.prototype, {\n    empty: function () {\n      console.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');\n      return this.isEmpty();\n    },\n    isIntersectionBox: function (box) {\n      console.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');\n      return this.intersectsBox(box);\n    }\n  });\n  Object.assign(THREE.Box3.prototype, {\n    empty: function () {\n      console.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');\n      return this.isEmpty();\n    },\n    isIntersectionBox: function (box) {\n      console.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');\n      return this.intersectsBox(box);\n    },\n    isIntersectionSphere: function (sphere) {\n      console.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n      return this.intersectsSphere(sphere);\n    }\n  });\n  Object.assign(THREE.Matrix3.prototype, {\n    multiplyVector3: function (vector) {\n      console.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');\n      return vector.applyMatrix3(this);\n    },\n    multiplyVector3Array: function (a) {\n      console.warn('THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.');\n      return this.applyToVector3Array(a);\n    }\n  });\n  Object.assign(THREE.Matrix4.prototype, {\n    extractPosition: function (m) {\n      console.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');\n      return this.copyPosition(m);\n    },\n    setRotationFromQuaternion: function (q) {\n      console.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');\n      return this.makeRotationFromQuaternion(q);\n    },\n    multiplyVector3: function (vector) {\n      console.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.');\n      return vector.applyProjection(this);\n    },\n    multiplyVector4: function (vector) {\n      console.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n      return vector.applyMatrix4(this);\n    },\n    multiplyVector3Array: function (a) {\n      console.warn('THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.');\n      return this.applyToVector3Array(a);\n    },\n    rotateAxis: function (v) {\n      console.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');\n      v.transformDirection(this);\n    },\n    crossVector: function (vector) {\n      console.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n      return vector.applyMatrix4(this);\n    },\n    translate: function (v) {\n      console.error('THREE.Matrix4: .translate() has been removed.');\n    },\n    rotateX: function (angle) {\n      console.error('THREE.Matrix4: .rotateX() has been removed.');\n    },\n    rotateY: function (angle) {\n      console.error('THREE.Matrix4: .rotateY() has been removed.');\n    },\n    rotateZ: function (angle) {\n      console.error('THREE.Matrix4: .rotateZ() has been removed.');\n    },\n    rotateByAxis: function (axis, angle) {\n      console.error('THREE.Matrix4: .rotateByAxis() has been removed.');\n    }\n  });\n  Object.assign(THREE.Plane.prototype, {\n    isIntersectionLine: function (line) {\n      console.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');\n      return this.intersectsLine(line);\n    }\n  });\n  Object.assign(THREE.Quaternion.prototype, {\n    multiplyVector3: function (vector) {\n      console.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');\n      return vector.applyQuaternion(this);\n    }\n  });\n  Object.assign(THREE.Ray.prototype, {\n    isIntersectionBox: function (box) {\n      console.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');\n      return this.intersectsBox(box);\n    },\n    isIntersectionPlane: function (plane) {\n      console.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');\n      return this.intersectsPlane(plane);\n    },\n    isIntersectionSphere: function (sphere) {\n      console.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n      return this.intersectsSphere(sphere);\n    }\n  });\n  Object.assign(THREE.Vector3.prototype, {\n    setEulerFromRotationMatrix: function () {\n      console.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');\n    },\n    setEulerFromQuaternion: function () {\n      console.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');\n    },\n    getPositionFromMatrix: function (m) {\n      console.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');\n      return this.setFromMatrixPosition(m);\n    },\n    getScaleFromMatrix: function (m) {\n      console.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');\n      return this.setFromMatrixScale(m);\n    },\n    getColumnFromMatrix: function (index, matrix) {\n      console.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');\n      return this.setFromMatrixColumn(matrix, index);\n    }\n  }); //\n\n  Object.assign(THREE.Object3D.prototype, {\n    getChildByName: function (name) {\n      console.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');\n      return this.getObjectByName(name);\n    },\n    renderDepth: function (value) {\n      console.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');\n    },\n    translate: function (distance, axis) {\n      console.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');\n      return this.translateOnAxis(axis, distance);\n    }\n  });\n  Object.defineProperties(THREE.Object3D.prototype, {\n    eulerOrder: {\n      get: function () {\n        console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n        return this.rotation.order;\n      },\n      set: function (value) {\n        console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n        this.rotation.order = value;\n      }\n    },\n    useQuaternion: {\n      get: function () {\n        console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n      },\n      set: function (value) {\n        console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n      }\n    }\n  });\n  Object.defineProperties(THREE.LOD.prototype, {\n    objects: {\n      get: function () {\n        console.warn('THREE.LOD: .objects has been renamed to .levels.');\n        return this.levels;\n      }\n    }\n  }); //\n\n  THREE.PerspectiveCamera.prototype.setLens = function (focalLength, filmGauge) {\n    console.warn(\"THREE.PerspectiveCamera.setLens is deprecated. \" + \"Use .setFocalLength and .filmGauge for a photographic setup.\");\n    if (filmGauge !== undefined) this.filmGauge = filmGauge;\n    this.setFocalLength(focalLength);\n  }; //\n\n\n  Object.defineProperties(THREE.Light.prototype, {\n    onlyShadow: {\n      set: function (value) {\n        console.warn('THREE.Light: .onlyShadow has been removed.');\n      }\n    },\n    shadowCameraFov: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');\n        this.shadow.camera.fov = value;\n      }\n    },\n    shadowCameraLeft: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');\n        this.shadow.camera.left = value;\n      }\n    },\n    shadowCameraRight: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');\n        this.shadow.camera.right = value;\n      }\n    },\n    shadowCameraTop: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');\n        this.shadow.camera.top = value;\n      }\n    },\n    shadowCameraBottom: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');\n        this.shadow.camera.bottom = value;\n      }\n    },\n    shadowCameraNear: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');\n        this.shadow.camera.near = value;\n      }\n    },\n    shadowCameraFar: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');\n        this.shadow.camera.far = value;\n      }\n    },\n    shadowCameraVisible: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.');\n      }\n    },\n    shadowBias: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowBias is now .shadow.bias.');\n        this.shadow.bias = value;\n      }\n    },\n    shadowDarkness: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowDarkness has been removed.');\n      }\n    },\n    shadowMapWidth: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');\n        this.shadow.mapSize.width = value;\n      }\n    },\n    shadowMapHeight: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');\n        this.shadow.mapSize.height = value;\n      }\n    }\n  }); //\n\n  Object.defineProperties(THREE.BufferAttribute.prototype, {\n    length: {\n      get: function () {\n        console.warn('THREE.BufferAttribute: .length has been deprecated. Please use .count.');\n        return this.array.length;\n      }\n    }\n  });\n  Object.assign(THREE.BufferGeometry.prototype, {\n    addIndex: function (index) {\n      console.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');\n      this.setIndex(index);\n    },\n    addDrawCall: function (start, count, indexOffset) {\n      if (indexOffset !== undefined) {\n        console.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');\n      }\n\n      console.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');\n      this.addGroup(start, count);\n    },\n    clearDrawCalls: function () {\n      console.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');\n      this.clearGroups();\n    },\n    computeTangents: function () {\n      console.warn('THREE.BufferGeometry: .computeTangents() has been removed.');\n    },\n    computeOffsets: function () {\n      console.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');\n    }\n  });\n  Object.defineProperties(THREE.BufferGeometry.prototype, {\n    drawcalls: {\n      get: function () {\n        console.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');\n        return this.groups;\n      }\n    },\n    offsets: {\n      get: function () {\n        console.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');\n        return this.groups;\n      }\n    }\n  }); //\n\n  Object.defineProperties(THREE.Material.prototype, {\n    wrapAround: {\n      get: function () {\n        console.warn('THREE.' + this.type + ': .wrapAround has been removed.');\n      },\n      set: function (value) {\n        console.warn('THREE.' + this.type + ': .wrapAround has been removed.');\n      }\n    },\n    wrapRGB: {\n      get: function () {\n        console.warn('THREE.' + this.type + ': .wrapRGB has been removed.');\n        return new THREE.Color();\n      }\n    }\n  });\n  Object.defineProperties(THREE.MeshPhongMaterial.prototype, {\n    metal: {\n      get: function () {\n        console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.');\n        return false;\n      },\n      set: function (value) {\n        console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead');\n      }\n    }\n  });\n  Object.defineProperties(THREE.ShaderMaterial.prototype, {\n    derivatives: {\n      get: function () {\n        console.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n        return this.extensions.derivatives;\n      },\n      set: function (value) {\n        console.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n        this.extensions.derivatives = value;\n      }\n    }\n  }); //\n\n  THREE.EventDispatcher.prototype = Object.assign(Object.create({\n    // Note: Extra base ensures these properties are not 'assign'ed.\n    constructor: THREE.EventDispatcher,\n    apply: function (target) {\n      console.warn(\"THREE.EventDispatcher: .apply is deprecated, \" + \"just inherit or Object.assign the prototype to mix-in.\");\n      Object.assign(target, this);\n    }\n  }), THREE.EventDispatcher.prototype); //\n\n  Object.assign(THREE.WebGLRenderer.prototype, {\n    supportsFloatTextures: function () {\n      console.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).');\n      return this.extensions.get('OES_texture_float');\n    },\n    supportsHalfFloatTextures: function () {\n      console.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).');\n      return this.extensions.get('OES_texture_half_float');\n    },\n    supportsStandardDerivatives: function () {\n      console.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).');\n      return this.extensions.get('OES_standard_derivatives');\n    },\n    supportsCompressedTextureS3TC: function () {\n      console.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).');\n      return this.extensions.get('WEBGL_compressed_texture_s3tc');\n    },\n    supportsCompressedTexturePVRTC: function () {\n      console.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).');\n      return this.extensions.get('WEBGL_compressed_texture_pvrtc');\n    },\n    supportsBlendMinMax: function () {\n      console.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).');\n      return this.extensions.get('EXT_blend_minmax');\n    },\n    supportsVertexTextures: function () {\n      return this.capabilities.vertexTextures;\n    },\n    supportsInstancedArrays: function () {\n      console.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).');\n      return this.extensions.get('ANGLE_instanced_arrays');\n    },\n    enableScissorTest: function (boolean) {\n      console.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');\n      this.setScissorTest(boolean);\n    },\n    initMaterial: function () {\n      console.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');\n    },\n    addPrePlugin: function () {\n      console.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');\n    },\n    addPostPlugin: function () {\n      console.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');\n    },\n    updateShadowMap: function () {\n      console.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');\n    }\n  });\n  Object.defineProperties(THREE.WebGLRenderer.prototype, {\n    shadowMapEnabled: {\n      get: function () {\n        return this.shadowMap.enabled;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');\n        this.shadowMap.enabled = value;\n      }\n    },\n    shadowMapType: {\n      get: function () {\n        return this.shadowMap.type;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');\n        this.shadowMap.type = value;\n      }\n    },\n    shadowMapCullFace: {\n      get: function () {\n        return this.shadowMap.cullFace;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.');\n        this.shadowMap.cullFace = value;\n      }\n    }\n  });\n  Object.defineProperties(THREE.WebGLShadowMap.prototype, {\n    cullFace: {\n      get: function () {\n        return this.renderReverseSided ? THREE.CullFaceFront : THREE.CullFaceBack;\n      },\n      set: function (cullFace) {\n        var value = cullFace !== THREE.CullFaceBack;\n        console.warn(\"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \" + value + \".\");\n        this.renderReverseSided = value;\n      }\n    }\n  }); //\n\n  Object.defineProperties(THREE.WebGLRenderTarget.prototype, {\n    wrapS: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n        return this.texture.wrapS;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n        this.texture.wrapS = value;\n      }\n    },\n    wrapT: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n        return this.texture.wrapT;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n        this.texture.wrapT = value;\n      }\n    },\n    magFilter: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n        return this.texture.magFilter;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n        this.texture.magFilter = value;\n      }\n    },\n    minFilter: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n        return this.texture.minFilter;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n        this.texture.minFilter = value;\n      }\n    },\n    anisotropy: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n        return this.texture.anisotropy;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n        this.texture.anisotropy = value;\n      }\n    },\n    offset: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n        return this.texture.offset;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n        this.texture.offset = value;\n      }\n    },\n    repeat: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n        return this.texture.repeat;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n        this.texture.repeat = value;\n      }\n    },\n    format: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n        return this.texture.format;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n        this.texture.format = value;\n      }\n    },\n    type: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n        return this.texture.type;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n        this.texture.type = value;\n      }\n    },\n    generateMipmaps: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n        return this.texture.generateMipmaps;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n        this.texture.generateMipmaps = value;\n      }\n    }\n  }); //\n\n  Object.assign(THREE.Audio.prototype, {\n    load: function (file) {\n      console.warn('THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.');\n      var scope = this;\n      var audioLoader = new THREE.AudioLoader();\n      audioLoader.load(file, function (buffer) {\n        scope.setBuffer(buffer);\n      });\n      return this;\n    }\n  });\n  Object.assign(THREE.AudioAnalyser.prototype, {\n    getData: function (file) {\n      console.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');\n      return this.getFrequencyData();\n    }\n  }); //\n\n  THREE.GeometryUtils = {\n    merge: function (geometry1, geometry2, materialIndexOffset) {\n      console.warn('THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.');\n      var matrix;\n\n      if (geometry2 instanceof THREE.Mesh) {\n        geometry2.matrixAutoUpdate && geometry2.updateMatrix();\n        matrix = geometry2.matrix;\n        geometry2 = geometry2.geometry;\n      }\n\n      geometry1.merge(geometry2, matrix, materialIndexOffset);\n    },\n    center: function (geometry) {\n      console.warn('THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.');\n      return geometry.center();\n    }\n  };\n  THREE.ImageUtils = {\n    crossOrigin: undefined,\n    loadTexture: function (url, mapping, onLoad, onError) {\n      console.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');\n      var loader = new THREE.TextureLoader();\n      loader.setCrossOrigin(this.crossOrigin);\n      var texture = loader.load(url, onLoad, undefined, onError);\n      if (mapping) texture.mapping = mapping;\n      return texture;\n    },\n    loadTextureCube: function (urls, mapping, onLoad, onError) {\n      console.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');\n      var loader = new THREE.CubeTextureLoader();\n      loader.setCrossOrigin(this.crossOrigin);\n      var texture = loader.load(urls, onLoad, undefined, onError);\n      if (mapping) texture.mapping = mapping;\n      return texture;\n    },\n    loadCompressedTexture: function () {\n      console.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');\n    },\n    loadCompressedTextureCube: function () {\n      console.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');\n    }\n  }; //\n\n  THREE.Projector = function () {\n    console.error('THREE.Projector has been moved to /examples/js/renderers/Projector.js.');\n\n    this.projectVector = function (vector, camera) {\n      console.warn('THREE.Projector: .projectVector() is now vector.project().');\n      vector.project(camera);\n    };\n\n    this.unprojectVector = function (vector, camera) {\n      console.warn('THREE.Projector: .unprojectVector() is now vector.unproject().');\n      vector.unproject(camera);\n    };\n\n    this.pickingRay = function (vector, camera) {\n      console.error('THREE.Projector: .pickingRay() is now raycaster.setFromCamera().');\n    };\n  }; //\n\n\n  THREE.CanvasRenderer = function () {\n    console.error('THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js');\n    this.domElement = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n\n    this.clear = function () {};\n\n    this.render = function () {};\n\n    this.setClearColor = function () {};\n\n    this.setSize = function () {};\n  }; // File:src/extras/CurveUtils.js\n\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   */\n\n\n  THREE.CurveUtils = {\n    tangentQuadraticBezier: function (t, p0, p1, p2) {\n      return 2 * (1 - t) * (p1 - p0) + 2 * t * (p2 - p1);\n    },\n    // Puay Bing, thanks for helping with this derivative!\n    tangentCubicBezier: function (t, p0, p1, p2, p3) {\n      return -3 * p0 * (1 - t) * (1 - t) + 3 * p1 * (1 - t) * (1 - t) - 6 * t * p1 * (1 - t) + 6 * t * p2 * (1 - t) - 3 * t * t * p2 + 3 * t * t * p3;\n    },\n    tangentSpline: function (t, p0, p1, p2, p3) {\n      // To check if my formulas are correct\n      var h00 = 6 * t * t - 6 * t; // derived from 2t^3 − 3t^2 + 1\n\n      var h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\n\n      var h01 = -6 * t * t + 6 * t; // − 2t3 + 3t2\n\n      var h11 = 3 * t * t - 2 * t; // t3 − t2\n\n      return h00 + h10 + h01 + h11;\n    },\n    // Catmull-Rom\n    interpolate: function (p0, p1, p2, p3, t) {\n      var v0 = (p2 - p0) * 0.5;\n      var v1 = (p3 - p1) * 0.5;\n      var t2 = t * t;\n      var t3 = t * t2;\n      return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n    }\n  }; // File:src/extras/SceneUtils.js\n\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  THREE.SceneUtils = {\n    createMultiMaterialObject: function (geometry, materials) {\n      var group = new THREE.Group();\n\n      for (var i = 0, l = materials.length; i < l; i++) {\n        group.add(new THREE.Mesh(geometry, materials[i]));\n      }\n\n      return group;\n    },\n    detach: function (child, parent, scene) {\n      child.applyMatrix(parent.matrixWorld);\n      parent.remove(child);\n      scene.add(child);\n    },\n    attach: function (child, scene, parent) {\n      var matrixWorldInverse = new THREE.Matrix4();\n      matrixWorldInverse.getInverse(parent.matrixWorld);\n      child.applyMatrix(matrixWorldInverse);\n      scene.remove(child);\n      parent.add(child);\n    }\n  }; // File:src/extras/ShapeUtils.js\n\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   */\n\n  THREE.ShapeUtils = {\n    // calculate area of the contour polygon\n    area: function (contour) {\n      var n = contour.length;\n      var a = 0.0;\n\n      for (var p = n - 1, q = 0; q < n; p = q++) {\n        a += contour[p].x * contour[q].y - contour[q].x * contour[p].y;\n      }\n\n      return a * 0.5;\n    },\n    triangulate: function () {\n      /**\n       * This code is a quick port of code written in C++ which was submitted to\n       * flipcode.com by John W. Ratcliff  // July 22, 2000\n       * See original code and more information here:\n       * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\n       *\n       * ported to actionscript by Zevan Rosser\n       * www.actionsnippet.com\n       *\n       * ported to javascript by Joshua Koo\n       * http://www.lab4games.net/zz85/blog\n       *\n       */\n      function snip(contour, u, v, w, n, verts) {\n        var p;\n        var ax, ay, bx, by;\n        var cx, cy, px, py;\n        ax = contour[verts[u]].x;\n        ay = contour[verts[u]].y;\n        bx = contour[verts[v]].x;\n        by = contour[verts[v]].y;\n        cx = contour[verts[w]].x;\n        cy = contour[verts[w]].y;\n        if (Number.EPSILON > (bx - ax) * (cy - ay) - (by - ay) * (cx - ax)) return false;\n        var aX, aY, bX, bY, cX, cY;\n        var apx, apy, bpx, bpy, cpx, cpy;\n        var cCROSSap, bCROSScp, aCROSSbp;\n        aX = cx - bx;\n        aY = cy - by;\n        bX = ax - cx;\n        bY = ay - cy;\n        cX = bx - ax;\n        cY = by - ay;\n\n        for (p = 0; p < n; p++) {\n          px = contour[verts[p]].x;\n          py = contour[verts[p]].y;\n          if (px === ax && py === ay || px === bx && py === by || px === cx && py === cy) continue;\n          apx = px - ax;\n          apy = py - ay;\n          bpx = px - bx;\n          bpy = py - by;\n          cpx = px - cx;\n          cpy = py - cy; // see if p is inside triangle abc\n\n          aCROSSbp = aX * bpy - aY * bpx;\n          cCROSSap = cX * apy - cY * apx;\n          bCROSScp = bX * cpy - bY * cpx;\n          if (aCROSSbp >= -Number.EPSILON && bCROSScp >= -Number.EPSILON && cCROSSap >= -Number.EPSILON) return false;\n        }\n\n        return true;\n      } // takes in an contour array and returns\n\n\n      return function triangulate(contour, indices) {\n        var n = contour.length;\n        if (n < 3) return null;\n        var result = [],\n            verts = [],\n            vertIndices = [];\n        /* we want a counter-clockwise polygon in verts */\n\n        var u, v, w;\n\n        if (THREE.ShapeUtils.area(contour) > 0.0) {\n          for (v = 0; v < n; v++) verts[v] = v;\n        } else {\n          for (v = 0; v < n; v++) verts[v] = n - 1 - v;\n        }\n\n        var nv = n;\n        /*  remove nv - 2 vertices, creating 1 triangle every time */\n\n        var count = 2 * nv;\n        /* error detection */\n\n        for (v = nv - 1; nv > 2;) {\n          /* if we loop, it is probably a non-simple polygon */\n          if (count-- <= 0) {\n            //** Triangulate: ERROR - probable bad polygon!\n            //throw ( \"Warning, unable to triangulate polygon!\" );\n            //return null;\n            // Sometimes warning is fine, especially polygons are triangulated in reverse.\n            console.warn('THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()');\n            if (indices) return vertIndices;\n            return result;\n          }\n          /* three consecutive vertices in current polygon, <u,v,w> */\n\n\n          u = v;\n          if (nv <= u) u = 0;\n          /* previous */\n\n          v = u + 1;\n          if (nv <= v) v = 0;\n          /* new v    */\n\n          w = v + 1;\n          if (nv <= w) w = 0;\n          /* next     */\n\n          if (snip(contour, u, v, w, nv, verts)) {\n            var a, b, c, s, t;\n            /* true names of the vertices */\n\n            a = verts[u];\n            b = verts[v];\n            c = verts[w];\n            /* output Triangle */\n\n            result.push([contour[a], contour[b], contour[c]]);\n            vertIndices.push([verts[u], verts[v], verts[w]]);\n            /* remove v from the remaining polygon */\n\n            for (s = v, t = v + 1; t < nv; s++, t++) {\n              verts[s] = verts[t];\n            }\n\n            nv--;\n            /* reset error detection counter */\n\n            count = 2 * nv;\n          }\n        }\n\n        if (indices) return vertIndices;\n        return result;\n      };\n    }(),\n    triangulateShape: function (contour, holes) {\n      function removeDupEndPts(points) {\n        var l = points.length;\n\n        if (l > 2 && points[l - 1].equals(points[0])) {\n          points.pop();\n        }\n      }\n\n      removeDupEndPts(contour);\n      holes.forEach(removeDupEndPts);\n\n      function point_in_segment_2D_colin(inSegPt1, inSegPt2, inOtherPt) {\n        // inOtherPt needs to be collinear to the inSegment\n        if (inSegPt1.x !== inSegPt2.x) {\n          if (inSegPt1.x < inSegPt2.x) {\n            return inSegPt1.x <= inOtherPt.x && inOtherPt.x <= inSegPt2.x;\n          } else {\n            return inSegPt2.x <= inOtherPt.x && inOtherPt.x <= inSegPt1.x;\n          }\n        } else {\n          if (inSegPt1.y < inSegPt2.y) {\n            return inSegPt1.y <= inOtherPt.y && inOtherPt.y <= inSegPt2.y;\n          } else {\n            return inSegPt2.y <= inOtherPt.y && inOtherPt.y <= inSegPt1.y;\n          }\n        }\n      }\n\n      function intersect_segments_2D(inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs) {\n        var seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,\n            seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\n        var seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,\n            seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\n        var seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\n        var seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\n        var limit = seg1dy * seg2dx - seg1dx * seg2dy;\n        var perpSeg1 = seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\n\n        if (Math.abs(limit) > Number.EPSILON) {\n          // not parallel\n          var perpSeg2;\n\n          if (limit > 0) {\n            if (perpSeg1 < 0 || perpSeg1 > limit) return [];\n            perpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n            if (perpSeg2 < 0 || perpSeg2 > limit) return [];\n          } else {\n            if (perpSeg1 > 0 || perpSeg1 < limit) return [];\n            perpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n            if (perpSeg2 > 0 || perpSeg2 < limit) return [];\n          } // i.e. to reduce rounding errors\n          // intersection at endpoint of segment#1?\n\n\n          if (perpSeg2 === 0) {\n            if (inExcludeAdjacentSegs && (perpSeg1 === 0 || perpSeg1 === limit)) return [];\n            return [inSeg1Pt1];\n          }\n\n          if (perpSeg2 === limit) {\n            if (inExcludeAdjacentSegs && (perpSeg1 === 0 || perpSeg1 === limit)) return [];\n            return [inSeg1Pt2];\n          } // intersection at endpoint of segment#2?\n\n\n          if (perpSeg1 === 0) return [inSeg2Pt1];\n          if (perpSeg1 === limit) return [inSeg2Pt2]; // return real intersection point\n\n          var factorSeg1 = perpSeg2 / limit;\n          return [{\n            x: inSeg1Pt1.x + factorSeg1 * seg1dx,\n            y: inSeg1Pt1.y + factorSeg1 * seg1dy\n          }];\n        } else {\n          // parallel or collinear\n          if (perpSeg1 !== 0 || seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy) return []; // they are collinear or degenerate\n\n          var seg1Pt = seg1dx === 0 && seg1dy === 0; // segment1 is just a point?\n\n          var seg2Pt = seg2dx === 0 && seg2dy === 0; // segment2 is just a point?\n          // both segments are points\n\n          if (seg1Pt && seg2Pt) {\n            if (inSeg1Pt1.x !== inSeg2Pt1.x || inSeg1Pt1.y !== inSeg2Pt1.y) return []; // they are distinct  points\n\n            return [inSeg1Pt1]; // they are the same point\n          } // segment#1  is a single point\n\n\n          if (seg1Pt) {\n            if (!point_in_segment_2D_colin(inSeg2Pt1, inSeg2Pt2, inSeg1Pt1)) return []; // but not in segment#2\n\n            return [inSeg1Pt1];\n          } // segment#2  is a single point\n\n\n          if (seg2Pt) {\n            if (!point_in_segment_2D_colin(inSeg1Pt1, inSeg1Pt2, inSeg2Pt1)) return []; // but not in segment#1\n\n            return [inSeg2Pt1];\n          } // they are collinear segments, which might overlap\n\n\n          var seg1min, seg1max, seg1minVal, seg1maxVal;\n          var seg2min, seg2max, seg2minVal, seg2maxVal;\n\n          if (seg1dx !== 0) {\n            // the segments are NOT on a vertical line\n            if (inSeg1Pt1.x < inSeg1Pt2.x) {\n              seg1min = inSeg1Pt1;\n              seg1minVal = inSeg1Pt1.x;\n              seg1max = inSeg1Pt2;\n              seg1maxVal = inSeg1Pt2.x;\n            } else {\n              seg1min = inSeg1Pt2;\n              seg1minVal = inSeg1Pt2.x;\n              seg1max = inSeg1Pt1;\n              seg1maxVal = inSeg1Pt1.x;\n            }\n\n            if (inSeg2Pt1.x < inSeg2Pt2.x) {\n              seg2min = inSeg2Pt1;\n              seg2minVal = inSeg2Pt1.x;\n              seg2max = inSeg2Pt2;\n              seg2maxVal = inSeg2Pt2.x;\n            } else {\n              seg2min = inSeg2Pt2;\n              seg2minVal = inSeg2Pt2.x;\n              seg2max = inSeg2Pt1;\n              seg2maxVal = inSeg2Pt1.x;\n            }\n          } else {\n            // the segments are on a vertical line\n            if (inSeg1Pt1.y < inSeg1Pt2.y) {\n              seg1min = inSeg1Pt1;\n              seg1minVal = inSeg1Pt1.y;\n              seg1max = inSeg1Pt2;\n              seg1maxVal = inSeg1Pt2.y;\n            } else {\n              seg1min = inSeg1Pt2;\n              seg1minVal = inSeg1Pt2.y;\n              seg1max = inSeg1Pt1;\n              seg1maxVal = inSeg1Pt1.y;\n            }\n\n            if (inSeg2Pt1.y < inSeg2Pt2.y) {\n              seg2min = inSeg2Pt1;\n              seg2minVal = inSeg2Pt1.y;\n              seg2max = inSeg2Pt2;\n              seg2maxVal = inSeg2Pt2.y;\n            } else {\n              seg2min = inSeg2Pt2;\n              seg2minVal = inSeg2Pt2.y;\n              seg2max = inSeg2Pt1;\n              seg2maxVal = inSeg2Pt1.y;\n            }\n          }\n\n          if (seg1minVal <= seg2minVal) {\n            if (seg1maxVal < seg2minVal) return [];\n\n            if (seg1maxVal === seg2minVal) {\n              if (inExcludeAdjacentSegs) return [];\n              return [seg2min];\n            }\n\n            if (seg1maxVal <= seg2maxVal) return [seg2min, seg1max];\n            return [seg2min, seg2max];\n          } else {\n            if (seg1minVal > seg2maxVal) return [];\n\n            if (seg1minVal === seg2maxVal) {\n              if (inExcludeAdjacentSegs) return [];\n              return [seg1min];\n            }\n\n            if (seg1maxVal <= seg2maxVal) return [seg1min, seg1max];\n            return [seg1min, seg2max];\n          }\n        }\n      }\n\n      function isPointInsideAngle(inVertex, inLegFromPt, inLegToPt, inOtherPt) {\n        // The order of legs is important\n        // translation of all points, so that Vertex is at (0,0)\n        var legFromPtX = inLegFromPt.x - inVertex.x,\n            legFromPtY = inLegFromPt.y - inVertex.y;\n        var legToPtX = inLegToPt.x - inVertex.x,\n            legToPtY = inLegToPt.y - inVertex.y;\n        var otherPtX = inOtherPt.x - inVertex.x,\n            otherPtY = inOtherPt.y - inVertex.y; // main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\n\n        var from2toAngle = legFromPtX * legToPtY - legFromPtY * legToPtX;\n        var from2otherAngle = legFromPtX * otherPtY - legFromPtY * otherPtX;\n\n        if (Math.abs(from2toAngle) > Number.EPSILON) {\n          // angle != 180 deg.\n          var other2toAngle = otherPtX * legToPtY - otherPtY * legToPtX; // console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\n\n          if (from2toAngle > 0) {\n            // main angle < 180 deg.\n            return from2otherAngle >= 0 && other2toAngle >= 0;\n          } else {\n            // main angle > 180 deg.\n            return from2otherAngle >= 0 || other2toAngle >= 0;\n          }\n        } else {\n          // angle == 180 deg.\n          // console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\n          return from2otherAngle > 0;\n        }\n      }\n\n      function removeHoles(contour, holes) {\n        var shape = contour.concat(); // work on this shape\n\n        var hole;\n\n        function isCutLineInsideAngles(inShapeIdx, inHoleIdx) {\n          // Check if hole point lies within angle around shape point\n          var lastShapeIdx = shape.length - 1;\n          var prevShapeIdx = inShapeIdx - 1;\n          if (prevShapeIdx < 0) prevShapeIdx = lastShapeIdx;\n          var nextShapeIdx = inShapeIdx + 1;\n          if (nextShapeIdx > lastShapeIdx) nextShapeIdx = 0;\n          var insideAngle = isPointInsideAngle(shape[inShapeIdx], shape[prevShapeIdx], shape[nextShapeIdx], hole[inHoleIdx]);\n\n          if (!insideAngle) {\n            // console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\n            return false;\n          } // Check if shape point lies within angle around hole point\n\n\n          var lastHoleIdx = hole.length - 1;\n          var prevHoleIdx = inHoleIdx - 1;\n          if (prevHoleIdx < 0) prevHoleIdx = lastHoleIdx;\n          var nextHoleIdx = inHoleIdx + 1;\n          if (nextHoleIdx > lastHoleIdx) nextHoleIdx = 0;\n          insideAngle = isPointInsideAngle(hole[inHoleIdx], hole[prevHoleIdx], hole[nextHoleIdx], shape[inShapeIdx]);\n\n          if (!insideAngle) {\n            // console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\n            return false;\n          }\n\n          return true;\n        }\n\n        function intersectsShapeEdge(inShapePt, inHolePt) {\n          // checks for intersections with shape edges\n          var sIdx, nextIdx, intersection;\n\n          for (sIdx = 0; sIdx < shape.length; sIdx++) {\n            nextIdx = sIdx + 1;\n            nextIdx %= shape.length;\n            intersection = intersect_segments_2D(inShapePt, inHolePt, shape[sIdx], shape[nextIdx], true);\n            if (intersection.length > 0) return true;\n          }\n\n          return false;\n        }\n\n        var indepHoles = [];\n\n        function intersectsHoleEdge(inShapePt, inHolePt) {\n          // checks for intersections with hole edges\n          var ihIdx, chkHole, hIdx, nextIdx, intersection;\n\n          for (ihIdx = 0; ihIdx < indepHoles.length; ihIdx++) {\n            chkHole = holes[indepHoles[ihIdx]];\n\n            for (hIdx = 0; hIdx < chkHole.length; hIdx++) {\n              nextIdx = hIdx + 1;\n              nextIdx %= chkHole.length;\n              intersection = intersect_segments_2D(inShapePt, inHolePt, chkHole[hIdx], chkHole[nextIdx], true);\n              if (intersection.length > 0) return true;\n            }\n          }\n\n          return false;\n        }\n\n        var holeIndex,\n            shapeIndex,\n            shapePt,\n            holePt,\n            holeIdx,\n            cutKey,\n            failedCuts = [],\n            tmpShape1,\n            tmpShape2,\n            tmpHole1,\n            tmpHole2;\n\n        for (var h = 0, hl = holes.length; h < hl; h++) {\n          indepHoles.push(h);\n        }\n\n        var minShapeIndex = 0;\n        var counter = indepHoles.length * 2;\n\n        while (indepHoles.length > 0) {\n          counter--;\n\n          if (counter < 0) {\n            console.log(\"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\");\n            break;\n          } // search for shape-vertex and hole-vertex,\n          // which can be connected without intersections\n\n\n          for (shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex++) {\n            shapePt = shape[shapeIndex];\n            holeIndex = -1; // search for hole which can be reached without intersections\n\n            for (var h = 0; h < indepHoles.length; h++) {\n              holeIdx = indepHoles[h]; // prevent multiple checks\n\n              cutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\n              if (failedCuts[cutKey] !== undefined) continue;\n              hole = holes[holeIdx];\n\n              for (var h2 = 0; h2 < hole.length; h2++) {\n                holePt = hole[h2];\n                if (!isCutLineInsideAngles(shapeIndex, h2)) continue;\n                if (intersectsShapeEdge(shapePt, holePt)) continue;\n                if (intersectsHoleEdge(shapePt, holePt)) continue;\n                holeIndex = h2;\n                indepHoles.splice(h, 1);\n                tmpShape1 = shape.slice(0, shapeIndex + 1);\n                tmpShape2 = shape.slice(shapeIndex);\n                tmpHole1 = hole.slice(holeIndex);\n                tmpHole2 = hole.slice(0, holeIndex + 1);\n                shape = tmpShape1.concat(tmpHole1).concat(tmpHole2).concat(tmpShape2);\n                minShapeIndex = shapeIndex; // Debug only, to show the selected cuts\n                // glob_CutLines.push( [ shapePt, holePt ] );\n\n                break;\n              }\n\n              if (holeIndex >= 0) break; // hole-vertex found\n\n              failedCuts[cutKey] = true; // remember failure\n            }\n\n            if (holeIndex >= 0) break; // hole-vertex found\n          }\n        }\n\n        return shape;\n        /* shape with no holes */\n      }\n\n      var i,\n          il,\n          f,\n          face,\n          key,\n          index,\n          allPointsMap = {}; // To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\n\n      var allpoints = contour.concat();\n\n      for (var h = 0, hl = holes.length; h < hl; h++) {\n        Array.prototype.push.apply(allpoints, holes[h]);\n      } //console.log( \"allpoints\",allpoints, allpoints.length );\n      // prepare all points map\n\n\n      for (i = 0, il = allpoints.length; i < il; i++) {\n        key = allpoints[i].x + \":\" + allpoints[i].y;\n\n        if (allPointsMap[key] !== undefined) {\n          console.warn(\"THREE.ShapeUtils: Duplicate point\", key, i);\n        }\n\n        allPointsMap[key] = i;\n      } // remove holes by cutting paths to holes and adding them to the shape\n\n\n      var shapeWithoutHoles = removeHoles(contour, holes);\n      var triangles = THREE.ShapeUtils.triangulate(shapeWithoutHoles, false); // True returns indices for points of spooled shape\n      //console.log( \"triangles\",triangles, triangles.length );\n      // check all face vertices against all points map\n\n      for (i = 0, il = triangles.length; i < il; i++) {\n        face = triangles[i];\n\n        for (f = 0; f < 3; f++) {\n          key = face[f].x + \":\" + face[f].y;\n          index = allPointsMap[key];\n\n          if (index !== undefined) {\n            face[f] = index;\n          }\n        }\n      }\n\n      return triangles.concat();\n    },\n    isClockWise: function (pts) {\n      return THREE.ShapeUtils.area(pts) < 0;\n    },\n    // Bezier Curves formulas obtained from\n    // http://en.wikipedia.org/wiki/B%C3%A9zier_curve\n    // Quad Bezier Functions\n    b2: function () {\n      function b2p0(t, p) {\n        var k = 1 - t;\n        return k * k * p;\n      }\n\n      function b2p1(t, p) {\n        return 2 * (1 - t) * t * p;\n      }\n\n      function b2p2(t, p) {\n        return t * t * p;\n      }\n\n      return function b2(t, p0, p1, p2) {\n        return b2p0(t, p0) + b2p1(t, p1) + b2p2(t, p2);\n      };\n    }(),\n    // Cubic Bezier Functions\n    b3: function () {\n      function b3p0(t, p) {\n        var k = 1 - t;\n        return k * k * k * p;\n      }\n\n      function b3p1(t, p) {\n        var k = 1 - t;\n        return 3 * k * k * t * p;\n      }\n\n      function b3p2(t, p) {\n        var k = 1 - t;\n        return 3 * k * t * t * p;\n      }\n\n      function b3p3(t, p) {\n        return t * t * t * p;\n      }\n\n      return function b3(t, p0, p1, p2, p3) {\n        return b3p0(t, p0) + b3p1(t, p1) + b3p2(t, p2) + b3p3(t, p3);\n      };\n    }()\n  }; // File:src/extras/core/Curve.js\n\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * Extensible curve object\n   *\n   * Some common of Curve methods\n   * .getPoint(t), getTangent(t)\n   * .getPointAt(u), getTagentAt(u)\n   * .getPoints(), .getSpacedPoints()\n   * .getLength()\n   * .updateArcLengths()\n   *\n   * This following classes subclasses THREE.Curve:\n   *\n   * -- 2d classes --\n   * THREE.LineCurve\n   * THREE.QuadraticBezierCurve\n   * THREE.CubicBezierCurve\n   * THREE.SplineCurve\n   * THREE.ArcCurve\n   * THREE.EllipseCurve\n   *\n   * -- 3d classes --\n   * THREE.LineCurve3\n   * THREE.QuadraticBezierCurve3\n   * THREE.CubicBezierCurve3\n   * THREE.SplineCurve3\n   *\n   * A series of curves can be represented as a THREE.CurvePath\n   *\n   **/\n\n  /**************************************************************\n   *\tAbstract Curve base class\n   **************************************************************/\n\n  THREE.Curve = function () {};\n\n  THREE.Curve.prototype = {\n    constructor: THREE.Curve,\n    // Virtual base class method to overwrite and implement in subclasses\n    //\t- t [0 .. 1]\n    getPoint: function (t) {\n      console.warn(\"THREE.Curve: Warning, getPoint() not implemented!\");\n      return null;\n    },\n    // Get point at relative position in curve according to arc length\n    // - u [0 .. 1]\n    getPointAt: function (u) {\n      var t = this.getUtoTmapping(u);\n      return this.getPoint(t);\n    },\n    // Get sequence of points using getPoint( t )\n    getPoints: function (divisions) {\n      if (!divisions) divisions = 5;\n      var points = [];\n\n      for (var d = 0; d <= divisions; d++) {\n        points.push(this.getPoint(d / divisions));\n      }\n\n      return points;\n    },\n    // Get sequence of points using getPointAt( u )\n    getSpacedPoints: function (divisions) {\n      if (!divisions) divisions = 5;\n      var points = [];\n\n      for (var d = 0; d <= divisions; d++) {\n        points.push(this.getPointAt(d / divisions));\n      }\n\n      return points;\n    },\n    // Get total curve arc length\n    getLength: function () {\n      var lengths = this.getLengths();\n      return lengths[lengths.length - 1];\n    },\n    // Get list of cumulative segment lengths\n    getLengths: function (divisions) {\n      if (!divisions) divisions = this.__arcLengthDivisions ? this.__arcLengthDivisions : 200;\n\n      if (this.cacheArcLengths && this.cacheArcLengths.length === divisions + 1 && !this.needsUpdate) {\n        //console.log( \"cached\", this.cacheArcLengths );\n        return this.cacheArcLengths;\n      }\n\n      this.needsUpdate = false;\n      var cache = [];\n      var current,\n          last = this.getPoint(0);\n      var p,\n          sum = 0;\n      cache.push(0);\n\n      for (p = 1; p <= divisions; p++) {\n        current = this.getPoint(p / divisions);\n        sum += current.distanceTo(last);\n        cache.push(sum);\n        last = current;\n      }\n\n      this.cacheArcLengths = cache;\n      return cache; // { sums: cache, sum:sum }; Sum is in the last element.\n    },\n    updateArcLengths: function () {\n      this.needsUpdate = true;\n      this.getLengths();\n    },\n    // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n    getUtoTmapping: function (u, distance) {\n      var arcLengths = this.getLengths();\n      var i = 0,\n          il = arcLengths.length;\n      var targetArcLength; // The targeted u distance value to get\n\n      if (distance) {\n        targetArcLength = distance;\n      } else {\n        targetArcLength = u * arcLengths[il - 1];\n      } //var time = Date.now();\n      // binary search for the index with largest value smaller than target u distance\n\n\n      var low = 0,\n          high = il - 1,\n          comparison;\n\n      while (low <= high) {\n        i = Math.floor(low + (high - low) / 2); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n        comparison = arcLengths[i] - targetArcLength;\n\n        if (comparison < 0) {\n          low = i + 1;\n        } else if (comparison > 0) {\n          high = i - 1;\n        } else {\n          high = i;\n          break; // DONE\n        }\n      }\n\n      i = high; //console.log('b' , i, low, high, Date.now()- time);\n\n      if (arcLengths[i] === targetArcLength) {\n        var t = i / (il - 1);\n        return t;\n      } // we could get finer grain at lengths, or use simple interpolation between two points\n\n\n      var lengthBefore = arcLengths[i];\n      var lengthAfter = arcLengths[i + 1];\n      var segmentLength = lengthAfter - lengthBefore; // determine where we are between the 'before' and 'after' points\n\n      var segmentFraction = (targetArcLength - lengthBefore) / segmentLength; // add that fractional amount to t\n\n      var t = (i + segmentFraction) / (il - 1);\n      return t;\n    },\n    // Returns a unit vector tangent at t\n    // In case any sub curve does not implement its tangent derivation,\n    // 2 points a small delta apart will be used to find its gradient\n    // which seems to give a reasonable approximation\n    getTangent: function (t) {\n      var delta = 0.0001;\n      var t1 = t - delta;\n      var t2 = t + delta; // Capping in case of danger\n\n      if (t1 < 0) t1 = 0;\n      if (t2 > 1) t2 = 1;\n      var pt1 = this.getPoint(t1);\n      var pt2 = this.getPoint(t2);\n      var vec = pt2.clone().sub(pt1);\n      return vec.normalize();\n    },\n    getTangentAt: function (u) {\n      var t = this.getUtoTmapping(u);\n      return this.getTangent(t);\n    }\n  }; // TODO: Transformation for Curves?\n\n  /**************************************************************\n   *\t3D Curves\n   **************************************************************/\n  // A Factory method for creating new curve subclasses\n\n  THREE.Curve.create = function (constructor, getPointFunc) {\n    constructor.prototype = Object.create(THREE.Curve.prototype);\n    constructor.prototype.constructor = constructor;\n    constructor.prototype.getPoint = getPointFunc;\n    return constructor;\n  }; // File:src/extras/core/CurvePath.js\n\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   *\n   **/\n\n  /**************************************************************\n   *\tCurved Path - a curve path is simply a array of connected\n   *  curves, but retains the api of a curve\n   **************************************************************/\n\n\n  THREE.CurvePath = function () {\n    this.curves = [];\n    this.autoClose = false; // Automatically closes the path\n  };\n\n  THREE.CurvePath.prototype = Object.assign(Object.create(THREE.Curve.prototype), {\n    constructor: THREE.CurvePath,\n    add: function (curve) {\n      this.curves.push(curve);\n    },\n    closePath: function () {\n      // Add a line curve if start and end of lines are not connected\n      var startPoint = this.curves[0].getPoint(0);\n      var endPoint = this.curves[this.curves.length - 1].getPoint(1);\n\n      if (!startPoint.equals(endPoint)) {\n        this.curves.push(new THREE.LineCurve(endPoint, startPoint));\n      }\n    },\n    // To get accurate point with reference to\n    // entire path distance at time t,\n    // following has to be done:\n    // 1. Length of each sub path have to be known\n    // 2. Locate and identify type of curve\n    // 3. Get t for the curve\n    // 4. Return curve.getPointAt(t')\n    getPoint: function (t) {\n      var d = t * this.getLength();\n      var curveLengths = this.getCurveLengths();\n      var i = 0; // To think about boundaries points.\n\n      while (i < curveLengths.length) {\n        if (curveLengths[i] >= d) {\n          var diff = curveLengths[i] - d;\n          var curve = this.curves[i];\n          var segmentLength = curve.getLength();\n          var u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n          return curve.getPointAt(u);\n        }\n\n        i++;\n      }\n\n      return null; // loop where sum != 0, sum > d , sum+1 <d\n    },\n    // We cannot use the default THREE.Curve getPoint() with getLength() because in\n    // THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n    // getPoint() depends on getLength\n    getLength: function () {\n      var lens = this.getCurveLengths();\n      return lens[lens.length - 1];\n    },\n    // cacheLengths must be recalculated.\n    updateArcLengths: function () {\n      this.needsUpdate = true;\n      this.cacheLengths = null;\n      this.getLengths();\n    },\n    // Compute lengths and cache them\n    // We cannot overwrite getLengths() because UtoT mapping uses it.\n    getCurveLengths: function () {\n      // We use cache values if curves and cache array are same length\n      if (this.cacheLengths && this.cacheLengths.length === this.curves.length) {\n        return this.cacheLengths;\n      } // Get length of sub-curve\n      // Push sums into cached array\n\n\n      var lengths = [],\n          sums = 0;\n\n      for (var i = 0, l = this.curves.length; i < l; i++) {\n        sums += this.curves[i].getLength();\n        lengths.push(sums);\n      }\n\n      this.cacheLengths = lengths;\n      return lengths;\n    },\n    getSpacedPoints: function (divisions) {\n      if (!divisions) divisions = 40;\n      var points = [];\n\n      for (var i = 0; i <= divisions; i++) {\n        points.push(this.getPoint(i / divisions));\n      }\n\n      if (this.autoClose) {\n        points.push(points[0]);\n      }\n\n      return points;\n    },\n    getPoints: function (divisions) {\n      divisions = divisions || 12;\n      var points = [],\n          last;\n\n      for (var i = 0, curves = this.curves; i < curves.length; i++) {\n        var curve = curves[i];\n        var resolution = curve instanceof THREE.EllipseCurve ? divisions * 2 : curve instanceof THREE.LineCurve ? 1 : curve instanceof THREE.SplineCurve ? divisions * curve.points.length : divisions;\n        var pts = curve.getPoints(resolution);\n\n        for (var j = 0; j < pts.length; j++) {\n          var point = pts[j];\n          if (last && last.equals(point)) continue; // ensures no consecutive points are duplicates\n\n          points.push(point);\n          last = point;\n        }\n      }\n\n      if (this.autoClose && points.length > 1 && !points[points.length - 1].equals(points[0])) {\n        points.push(points[0]);\n      }\n\n      return points;\n    },\n\n    /**************************************************************\n     *\tCreate Geometries Helpers\n     **************************************************************/\n    /// Generate geometry from path points (for Line or Points objects)\n    createPointsGeometry: function (divisions) {\n      var pts = this.getPoints(divisions);\n      return this.createGeometry(pts);\n    },\n    // Generate geometry from equidistant sampling along the path\n    createSpacedPointsGeometry: function (divisions) {\n      var pts = this.getSpacedPoints(divisions);\n      return this.createGeometry(pts);\n    },\n    createGeometry: function (points) {\n      var geometry = new THREE.Geometry();\n\n      for (var i = 0, l = points.length; i < l; i++) {\n        var point = points[i];\n        geometry.vertices.push(new THREE.Vector3(point.x, point.y, point.z || 0));\n      }\n\n      return geometry;\n    }\n  }); // File:src/extras/core/Font.js\n\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.Font = function (data) {\n    this.data = data;\n  };\n\n  Object.assign(THREE.Font.prototype, {\n    generateShapes: function (text, size, divisions) {\n      function createPaths(text) {\n        var chars = String(text).split('');\n        var scale = size / data.resolution;\n        var offset = 0;\n        var paths = [];\n\n        for (var i = 0; i < chars.length; i++) {\n          var ret = createPath(chars[i], scale, offset);\n          offset += ret.offset;\n          paths.push(ret.path);\n        }\n\n        return paths;\n      }\n\n      function createPath(c, scale, offset) {\n        var glyph = data.glyphs[c] || data.glyphs['?'];\n        if (!glyph) return;\n        var path = new THREE.ShapePath();\n        var pts = [],\n            b2 = THREE.ShapeUtils.b2,\n            b3 = THREE.ShapeUtils.b3;\n        var x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\n\n        if (glyph.o) {\n          var outline = glyph._cachedOutline || (glyph._cachedOutline = glyph.o.split(' '));\n\n          for (var i = 0, l = outline.length; i < l;) {\n            var action = outline[i++];\n\n            switch (action) {\n              case 'm':\n                // moveTo\n                x = outline[i++] * scale + offset;\n                y = outline[i++] * scale;\n                path.moveTo(x, y);\n                break;\n\n              case 'l':\n                // lineTo\n                x = outline[i++] * scale + offset;\n                y = outline[i++] * scale;\n                path.lineTo(x, y);\n                break;\n\n              case 'q':\n                // quadraticCurveTo\n                cpx = outline[i++] * scale + offset;\n                cpy = outline[i++] * scale;\n                cpx1 = outline[i++] * scale + offset;\n                cpy1 = outline[i++] * scale;\n                path.quadraticCurveTo(cpx1, cpy1, cpx, cpy);\n                laste = pts[pts.length - 1];\n\n                if (laste) {\n                  cpx0 = laste.x;\n                  cpy0 = laste.y;\n\n                  for (var i2 = 1; i2 <= divisions; i2++) {\n                    var t = i2 / divisions;\n                    b2(t, cpx0, cpx1, cpx);\n                    b2(t, cpy0, cpy1, cpy);\n                  }\n                }\n\n                break;\n\n              case 'b':\n                // bezierCurveTo\n                cpx = outline[i++] * scale + offset;\n                cpy = outline[i++] * scale;\n                cpx1 = outline[i++] * scale + offset;\n                cpy1 = outline[i++] * scale;\n                cpx2 = outline[i++] * scale + offset;\n                cpy2 = outline[i++] * scale;\n                path.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, cpx, cpy);\n                laste = pts[pts.length - 1];\n\n                if (laste) {\n                  cpx0 = laste.x;\n                  cpy0 = laste.y;\n\n                  for (var i2 = 1; i2 <= divisions; i2++) {\n                    var t = i2 / divisions;\n                    b3(t, cpx0, cpx1, cpx2, cpx);\n                    b3(t, cpy0, cpy1, cpy2, cpy);\n                  }\n                }\n\n                break;\n            }\n          }\n        }\n\n        return {\n          offset: glyph.ha * scale,\n          path: path\n        };\n      } //\n\n\n      if (size === undefined) size = 100;\n      if (divisions === undefined) divisions = 4;\n      var data = this.data;\n      var paths = createPaths(text);\n      var shapes = [];\n\n      for (var p = 0, pl = paths.length; p < pl; p++) {\n        Array.prototype.push.apply(shapes, paths[p].toShapes());\n      }\n\n      return shapes;\n    }\n  }); // File:src/extras/core/Path.js\n\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * Creates free form 2d path using series of points, lines or curves.\n   *\n   **/\n\n  THREE.Path = function (points) {\n    THREE.CurvePath.call(this);\n    this.currentPoint = new THREE.Vector2();\n\n    if (points) {\n      this.fromPoints(points);\n    }\n  };\n\n  THREE.Path.prototype = Object.assign(Object.create(THREE.CurvePath.prototype), {\n    constructor: THREE.Path,\n    // Create path using straight lines to connect all points\n    // - vectors: array of Vector2\n    fromPoints: function (vectors) {\n      this.moveTo(vectors[0].x, vectors[0].y);\n\n      for (var i = 1, l = vectors.length; i < l; i++) {\n        this.lineTo(vectors[i].x, vectors[i].y);\n      }\n    },\n    moveTo: function (x, y) {\n      this.currentPoint.set(x, y); // TODO consider referencing vectors instead of copying?\n    },\n    lineTo: function (x, y) {\n      var curve = new THREE.LineCurve(this.currentPoint.clone(), new THREE.Vector2(x, y));\n      this.curves.push(curve);\n      this.currentPoint.set(x, y);\n    },\n    quadraticCurveTo: function (aCPx, aCPy, aX, aY) {\n      var curve = new THREE.QuadraticBezierCurve(this.currentPoint.clone(), new THREE.Vector2(aCPx, aCPy), new THREE.Vector2(aX, aY));\n      this.curves.push(curve);\n      this.currentPoint.set(aX, aY);\n    },\n    bezierCurveTo: function (aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n      var curve = new THREE.CubicBezierCurve(this.currentPoint.clone(), new THREE.Vector2(aCP1x, aCP1y), new THREE.Vector2(aCP2x, aCP2y), new THREE.Vector2(aX, aY));\n      this.curves.push(curve);\n      this.currentPoint.set(aX, aY);\n    },\n    splineThru: function (pts\n    /*Array of Vector*/\n    ) {\n      var npts = [this.currentPoint.clone()].concat(pts);\n      var curve = new THREE.SplineCurve(npts);\n      this.curves.push(curve);\n      this.currentPoint.copy(pts[pts.length - 1]);\n    },\n    arc: function (aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n      var x0 = this.currentPoint.x;\n      var y0 = this.currentPoint.y;\n      this.absarc(aX + x0, aY + y0, aRadius, aStartAngle, aEndAngle, aClockwise);\n    },\n    absarc: function (aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n      this.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n    },\n    ellipse: function (aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n      var x0 = this.currentPoint.x;\n      var y0 = this.currentPoint.y;\n      this.absellipse(aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n    },\n    absellipse: function (aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n      var curve = new THREE.EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n\n      if (this.curves.length > 0) {\n        // if a previous curve is present, attempt to join\n        var firstPoint = curve.getPoint(0);\n\n        if (!firstPoint.equals(this.currentPoint)) {\n          this.lineTo(firstPoint.x, firstPoint.y);\n        }\n      }\n\n      this.curves.push(curve);\n      var lastPoint = curve.getPoint(1);\n      this.currentPoint.copy(lastPoint);\n    }\n  }); // minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n\n  THREE.ShapePath = function () {\n    this.subPaths = [];\n    this.currentPath = null;\n  };\n\n  THREE.ShapePath.prototype = {\n    moveTo: function (x, y) {\n      this.currentPath = new THREE.Path();\n      this.subPaths.push(this.currentPath);\n      this.currentPath.moveTo(x, y);\n    },\n    lineTo: function (x, y) {\n      this.currentPath.lineTo(x, y);\n    },\n    quadraticCurveTo: function (aCPx, aCPy, aX, aY) {\n      this.currentPath.quadraticCurveTo(aCPx, aCPy, aX, aY);\n    },\n    bezierCurveTo: function (aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n      this.currentPath.bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY);\n    },\n    splineThru: function (pts) {\n      this.currentPath.splineThru(pts);\n    },\n    toShapes: function (isCCW, noHoles) {\n      function toShapesNoHoles(inSubpaths) {\n        var shapes = [];\n\n        for (var i = 0, l = inSubpaths.length; i < l; i++) {\n          var tmpPath = inSubpaths[i];\n          var tmpShape = new THREE.Shape();\n          tmpShape.curves = tmpPath.curves;\n          shapes.push(tmpShape);\n        }\n\n        return shapes;\n      }\n\n      function isPointInsidePolygon(inPt, inPolygon) {\n        var polyLen = inPolygon.length; // inPt on polygon contour => immediate success    or\n        // toggling of inside/outside at every single! intersection point of an edge\n        //  with the horizontal line through inPt, left of inPt\n        //  not counting lowerY endpoints of edges and whole edges on that line\n\n        var inside = false;\n\n        for (var p = polyLen - 1, q = 0; q < polyLen; p = q++) {\n          var edgeLowPt = inPolygon[p];\n          var edgeHighPt = inPolygon[q];\n          var edgeDx = edgeHighPt.x - edgeLowPt.x;\n          var edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n          if (Math.abs(edgeDy) > Number.EPSILON) {\n            // not parallel\n            if (edgeDy < 0) {\n              edgeLowPt = inPolygon[q];\n              edgeDx = -edgeDx;\n              edgeHighPt = inPolygon[p];\n              edgeDy = -edgeDy;\n            }\n\n            if (inPt.y < edgeLowPt.y || inPt.y > edgeHighPt.y) continue;\n\n            if (inPt.y === edgeLowPt.y) {\n              if (inPt.x === edgeLowPt.x) return true; // inPt is on contour ?\n              // continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n            } else {\n              var perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\n              if (perpEdge === 0) return true; // inPt is on contour ?\n\n              if (perpEdge < 0) continue;\n              inside = !inside; // true intersection left of inPt\n            }\n          } else {\n            // parallel or collinear\n            if (inPt.y !== edgeLowPt.y) continue; // parallel\n            // edge lies on the same horizontal line as inPt\n\n            if (edgeHighPt.x <= inPt.x && inPt.x <= edgeLowPt.x || edgeLowPt.x <= inPt.x && inPt.x <= edgeHighPt.x) return true; // inPt: Point on contour !\n            // continue;\n          }\n        }\n\n        return inside;\n      }\n\n      var isClockWise = THREE.ShapeUtils.isClockWise;\n      var subPaths = this.subPaths;\n      if (subPaths.length === 0) return [];\n      if (noHoles === true) return toShapesNoHoles(subPaths);\n      var solid,\n          tmpPath,\n          tmpShape,\n          shapes = [];\n\n      if (subPaths.length === 1) {\n        tmpPath = subPaths[0];\n        tmpShape = new THREE.Shape();\n        tmpShape.curves = tmpPath.curves;\n        shapes.push(tmpShape);\n        return shapes;\n      }\n\n      var holesFirst = !isClockWise(subPaths[0].getPoints());\n      holesFirst = isCCW ? !holesFirst : holesFirst; // console.log(\"Holes first\", holesFirst);\n\n      var betterShapeHoles = [];\n      var newShapes = [];\n      var newShapeHoles = [];\n      var mainIdx = 0;\n      var tmpPoints;\n      newShapes[mainIdx] = undefined;\n      newShapeHoles[mainIdx] = [];\n\n      for (var i = 0, l = subPaths.length; i < l; i++) {\n        tmpPath = subPaths[i];\n        tmpPoints = tmpPath.getPoints();\n        solid = isClockWise(tmpPoints);\n        solid = isCCW ? !solid : solid;\n\n        if (solid) {\n          if (!holesFirst && newShapes[mainIdx]) mainIdx++;\n          newShapes[mainIdx] = {\n            s: new THREE.Shape(),\n            p: tmpPoints\n          };\n          newShapes[mainIdx].s.curves = tmpPath.curves;\n          if (holesFirst) mainIdx++;\n          newShapeHoles[mainIdx] = []; //console.log('cw', i);\n        } else {\n          newShapeHoles[mainIdx].push({\n            h: tmpPath,\n            p: tmpPoints[0]\n          }); //console.log('ccw', i);\n        }\n      } // only Holes? -> probably all Shapes with wrong orientation\n\n\n      if (!newShapes[0]) return toShapesNoHoles(subPaths);\n\n      if (newShapes.length > 1) {\n        var ambiguous = false;\n        var toChange = [];\n\n        for (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n          betterShapeHoles[sIdx] = [];\n        }\n\n        for (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n          var sho = newShapeHoles[sIdx];\n\n          for (var hIdx = 0; hIdx < sho.length; hIdx++) {\n            var ho = sho[hIdx];\n            var hole_unassigned = true;\n\n            for (var s2Idx = 0; s2Idx < newShapes.length; s2Idx++) {\n              if (isPointInsidePolygon(ho.p, newShapes[s2Idx].p)) {\n                if (sIdx !== s2Idx) toChange.push({\n                  froms: sIdx,\n                  tos: s2Idx,\n                  hole: hIdx\n                });\n\n                if (hole_unassigned) {\n                  hole_unassigned = false;\n                  betterShapeHoles[s2Idx].push(ho);\n                } else {\n                  ambiguous = true;\n                }\n              }\n            }\n\n            if (hole_unassigned) {\n              betterShapeHoles[sIdx].push(ho);\n            }\n          }\n        } // console.log(\"ambiguous: \", ambiguous);\n\n\n        if (toChange.length > 0) {\n          // console.log(\"to change: \", toChange);\n          if (!ambiguous) newShapeHoles = betterShapeHoles;\n        }\n      }\n\n      var tmpHoles;\n\n      for (var i = 0, il = newShapes.length; i < il; i++) {\n        tmpShape = newShapes[i].s;\n        shapes.push(tmpShape);\n        tmpHoles = newShapeHoles[i];\n\n        for (var j = 0, jl = tmpHoles.length; j < jl; j++) {\n          tmpShape.holes.push(tmpHoles[j].h);\n        }\n      } //console.log(\"shape\", shapes);\n\n\n      return shapes;\n    }\n  }; // File:src/extras/core/Shape.js\n\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * Defines a 2d shape plane using paths.\n   **/\n  // STEP 1 Create a path.\n  // STEP 2 Turn path into shape.\n  // STEP 3 ExtrudeGeometry takes in Shape/Shapes\n  // STEP 3a - Extract points from each shape, turn to vertices\n  // STEP 3b - Triangulate each shape, add faces.\n\n  THREE.Shape = function () {\n    THREE.Path.apply(this, arguments);\n    this.holes = [];\n  };\n\n  THREE.Shape.prototype = Object.assign(Object.create(THREE.Path.prototype), {\n    constructor: THREE.Shape,\n    // Convenience method to return ExtrudeGeometry\n    extrude: function (options) {\n      return new THREE.ExtrudeGeometry(this, options);\n    },\n    // Convenience method to return ShapeGeometry\n    makeGeometry: function (options) {\n      return new THREE.ShapeGeometry(this, options);\n    },\n    getPointsHoles: function (divisions) {\n      var holesPts = [];\n\n      for (var i = 0, l = this.holes.length; i < l; i++) {\n        holesPts[i] = this.holes[i].getPoints(divisions);\n      }\n\n      return holesPts;\n    },\n    // Get points of shape and holes (keypoints based on segments parameter)\n    extractAllPoints: function (divisions) {\n      return {\n        shape: this.getPoints(divisions),\n        holes: this.getPointsHoles(divisions)\n      };\n    },\n    extractPoints: function (divisions) {\n      return this.extractAllPoints(divisions);\n    }\n  }); // File:src/extras/curves/LineCurve.js\n\n  /**************************************************************\n   *\tLine\n   **************************************************************/\n\n  THREE.LineCurve = function (v1, v2) {\n    this.v1 = v1;\n    this.v2 = v2;\n  };\n\n  THREE.LineCurve.prototype = Object.create(THREE.Curve.prototype);\n  THREE.LineCurve.prototype.constructor = THREE.LineCurve;\n\n  THREE.LineCurve.prototype.getPoint = function (t) {\n    if (t === 1) {\n      return this.v2.clone();\n    }\n\n    var point = this.v2.clone().sub(this.v1);\n    point.multiplyScalar(t).add(this.v1);\n    return point;\n  }; // Line curve is linear, so we can overwrite default getPointAt\n\n\n  THREE.LineCurve.prototype.getPointAt = function (u) {\n    return this.getPoint(u);\n  };\n\n  THREE.LineCurve.prototype.getTangent = function (t) {\n    var tangent = this.v2.clone().sub(this.v1);\n    return tangent.normalize();\n  }; // File:src/extras/curves/QuadraticBezierCurve.js\n\n  /**************************************************************\n   *\tQuadratic Bezier curve\n   **************************************************************/\n\n\n  THREE.QuadraticBezierCurve = function (v0, v1, v2) {\n    this.v0 = v0;\n    this.v1 = v1;\n    this.v2 = v2;\n  };\n\n  THREE.QuadraticBezierCurve.prototype = Object.create(THREE.Curve.prototype);\n  THREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\n\n  THREE.QuadraticBezierCurve.prototype.getPoint = function (t) {\n    var b2 = THREE.ShapeUtils.b2;\n    return new THREE.Vector2(b2(t, this.v0.x, this.v1.x, this.v2.x), b2(t, this.v0.y, this.v1.y, this.v2.y));\n  };\n\n  THREE.QuadraticBezierCurve.prototype.getTangent = function (t) {\n    var tangentQuadraticBezier = THREE.CurveUtils.tangentQuadraticBezier;\n    return new THREE.Vector2(tangentQuadraticBezier(t, this.v0.x, this.v1.x, this.v2.x), tangentQuadraticBezier(t, this.v0.y, this.v1.y, this.v2.y)).normalize();\n  }; // File:src/extras/curves/CubicBezierCurve.js\n\n  /**************************************************************\n   *\tCubic Bezier curve\n   **************************************************************/\n\n\n  THREE.CubicBezierCurve = function (v0, v1, v2, v3) {\n    this.v0 = v0;\n    this.v1 = v1;\n    this.v2 = v2;\n    this.v3 = v3;\n  };\n\n  THREE.CubicBezierCurve.prototype = Object.create(THREE.Curve.prototype);\n  THREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\n\n  THREE.CubicBezierCurve.prototype.getPoint = function (t) {\n    var b3 = THREE.ShapeUtils.b3;\n    return new THREE.Vector2(b3(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x), b3(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y));\n  };\n\n  THREE.CubicBezierCurve.prototype.getTangent = function (t) {\n    var tangentCubicBezier = THREE.CurveUtils.tangentCubicBezier;\n    return new THREE.Vector2(tangentCubicBezier(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x), tangentCubicBezier(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y)).normalize();\n  }; // File:src/extras/curves/SplineCurve.js\n\n  /**************************************************************\n   *\tSpline curve\n   **************************************************************/\n\n\n  THREE.SplineCurve = function (points\n  /* array of Vector2 */\n  ) {\n    this.points = points == undefined ? [] : points;\n  };\n\n  THREE.SplineCurve.prototype = Object.create(THREE.Curve.prototype);\n  THREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\n\n  THREE.SplineCurve.prototype.getPoint = function (t) {\n    var points = this.points;\n    var point = (points.length - 1) * t;\n    var intPoint = Math.floor(point);\n    var weight = point - intPoint;\n    var point0 = points[intPoint === 0 ? intPoint : intPoint - 1];\n    var point1 = points[intPoint];\n    var point2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n    var point3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n    var interpolate = THREE.CurveUtils.interpolate;\n    return new THREE.Vector2(interpolate(point0.x, point1.x, point2.x, point3.x, weight), interpolate(point0.y, point1.y, point2.y, point3.y, weight));\n  }; // File:src/extras/curves/EllipseCurve.js\n\n  /**************************************************************\n   *\tEllipse curve\n   **************************************************************/\n\n\n  THREE.EllipseCurve = function (aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n    this.aX = aX;\n    this.aY = aY;\n    this.xRadius = xRadius;\n    this.yRadius = yRadius;\n    this.aStartAngle = aStartAngle;\n    this.aEndAngle = aEndAngle;\n    this.aClockwise = aClockwise;\n    this.aRotation = aRotation || 0;\n  };\n\n  THREE.EllipseCurve.prototype = Object.create(THREE.Curve.prototype);\n  THREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\n\n  THREE.EllipseCurve.prototype.getPoint = function (t) {\n    var twoPi = Math.PI * 2;\n    var deltaAngle = this.aEndAngle - this.aStartAngle;\n    var samePoints = Math.abs(deltaAngle) < Number.EPSILON; // ensures that deltaAngle is 0 .. 2 PI\n\n    while (deltaAngle < 0) deltaAngle += twoPi;\n\n    while (deltaAngle > twoPi) deltaAngle -= twoPi;\n\n    if (deltaAngle < Number.EPSILON) {\n      if (samePoints) {\n        deltaAngle = 0;\n      } else {\n        deltaAngle = twoPi;\n      }\n    }\n\n    if (this.aClockwise === true && !samePoints) {\n      if (deltaAngle === twoPi) {\n        deltaAngle = -twoPi;\n      } else {\n        deltaAngle = deltaAngle - twoPi;\n      }\n    }\n\n    var angle = this.aStartAngle + t * deltaAngle;\n    var x = this.aX + this.xRadius * Math.cos(angle);\n    var y = this.aY + this.yRadius * Math.sin(angle);\n\n    if (this.aRotation !== 0) {\n      var cos = Math.cos(this.aRotation);\n      var sin = Math.sin(this.aRotation);\n      var tx = x - this.aX;\n      var ty = y - this.aY; // Rotate the point about the center of the ellipse.\n\n      x = tx * cos - ty * sin + this.aX;\n      y = tx * sin + ty * cos + this.aY;\n    }\n\n    return new THREE.Vector2(x, y);\n  }; // File:src/extras/curves/ArcCurve.js\n\n  /**************************************************************\n   *\tArc curve\n   **************************************************************/\n\n\n  THREE.ArcCurve = function (aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n    THREE.EllipseCurve.call(this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n  };\n\n  THREE.ArcCurve.prototype = Object.create(THREE.EllipseCurve.prototype);\n  THREE.ArcCurve.prototype.constructor = THREE.ArcCurve; // File:src/extras/curves/LineCurve3.js\n\n  /**************************************************************\n   *\tLine3D\n   **************************************************************/\n\n  THREE.LineCurve3 = THREE.Curve.create(function (v1, v2) {\n    this.v1 = v1;\n    this.v2 = v2;\n  }, function (t) {\n    if (t === 1) {\n      return this.v2.clone();\n    }\n\n    var vector = new THREE.Vector3();\n    vector.subVectors(this.v2, this.v1); // diff\n\n    vector.multiplyScalar(t);\n    vector.add(this.v1);\n    return vector;\n  }); // File:src/extras/curves/QuadraticBezierCurve3.js\n\n  /**************************************************************\n   *\tQuadratic Bezier 3D curve\n   **************************************************************/\n\n  THREE.QuadraticBezierCurve3 = THREE.Curve.create(function (v0, v1, v2) {\n    this.v0 = v0;\n    this.v1 = v1;\n    this.v2 = v2;\n  }, function (t) {\n    var b2 = THREE.ShapeUtils.b2;\n    return new THREE.Vector3(b2(t, this.v0.x, this.v1.x, this.v2.x), b2(t, this.v0.y, this.v1.y, this.v2.y), b2(t, this.v0.z, this.v1.z, this.v2.z));\n  }); // File:src/extras/curves/CubicBezierCurve3.js\n\n  /**************************************************************\n   *\tCubic Bezier 3D curve\n   **************************************************************/\n\n  THREE.CubicBezierCurve3 = THREE.Curve.create(function (v0, v1, v2, v3) {\n    this.v0 = v0;\n    this.v1 = v1;\n    this.v2 = v2;\n    this.v3 = v3;\n  }, function (t) {\n    var b3 = THREE.ShapeUtils.b3;\n    return new THREE.Vector3(b3(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x), b3(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y), b3(t, this.v0.z, this.v1.z, this.v2.z, this.v3.z));\n  }); // File:src/extras/curves/SplineCurve3.js\n\n  /**************************************************************\n   *\tSpline 3D curve\n   **************************************************************/\n\n  THREE.SplineCurve3 = THREE.Curve.create(function (points\n  /* array of Vector3 */\n  ) {\n    console.warn('THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3');\n    this.points = points == undefined ? [] : points;\n  }, function (t) {\n    var points = this.points;\n    var point = (points.length - 1) * t;\n    var intPoint = Math.floor(point);\n    var weight = point - intPoint;\n    var point0 = points[intPoint == 0 ? intPoint : intPoint - 1];\n    var point1 = points[intPoint];\n    var point2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n    var point3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n    var interpolate = THREE.CurveUtils.interpolate;\n    return new THREE.Vector3(interpolate(point0.x, point1.x, point2.x, point3.x, weight), interpolate(point0.y, point1.y, point2.y, point3.y, weight), interpolate(point0.z, point1.z, point2.z, point3.z, weight));\n  }); // File:src/extras/curves/CatmullRomCurve3.js\n\n  /**\n   * @author zz85 https://github.com/zz85\n   *\n   * Centripetal CatmullRom Curve - which is useful for avoiding\n   * cusps and self-intersections in non-uniform catmull rom curves.\n   * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n   *\n   * curve.type accepts centripetal(default), chordal and catmullrom\n   * curve.tension is used for catmullrom which defaults to 0.5\n   */\n\n  THREE.CatmullRomCurve3 = function () {\n    var tmp = new THREE.Vector3(),\n        px = new CubicPoly(),\n        py = new CubicPoly(),\n        pz = new CubicPoly();\n    /*\n    Based on an optimized c++ solution in\n     - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n     - http://ideone.com/NoEbVM\n    \tThis CubicPoly class could be used for reusing some variables and calculations,\n    but for three.js curve use, it could be possible inlined and flatten into a single function call\n    which can be placed in CurveUtils.\n    */\n\n    function CubicPoly() {}\n    /*\n     * Compute coefficients for a cubic polynomial\n     *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n     * such that\n     *   p(0) = x0, p(1) = x1\n     *  and\n     *   p'(0) = t0, p'(1) = t1.\n     */\n\n\n    CubicPoly.prototype.init = function (x0, x1, t0, t1) {\n      this.c0 = x0;\n      this.c1 = t0;\n      this.c2 = -3 * x0 + 3 * x1 - 2 * t0 - t1;\n      this.c3 = 2 * x0 - 2 * x1 + t0 + t1;\n    };\n\n    CubicPoly.prototype.initNonuniformCatmullRom = function (x0, x1, x2, x3, dt0, dt1, dt2) {\n      // compute tangents when parameterized in [t1,t2]\n      var t1 = (x1 - x0) / dt0 - (x2 - x0) / (dt0 + dt1) + (x2 - x1) / dt1;\n      var t2 = (x2 - x1) / dt1 - (x3 - x1) / (dt1 + dt2) + (x3 - x2) / dt2; // rescale tangents for parametrization in [0,1]\n\n      t1 *= dt1;\n      t2 *= dt1; // initCubicPoly\n\n      this.init(x1, x2, t1, t2);\n    }; // standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\n\n\n    CubicPoly.prototype.initCatmullRom = function (x0, x1, x2, x3, tension) {\n      this.init(x1, x2, tension * (x2 - x0), tension * (x3 - x1));\n    };\n\n    CubicPoly.prototype.calc = function (t) {\n      var t2 = t * t;\n      var t3 = t2 * t;\n      return this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\n    }; // Subclass Three.js curve\n\n\n    return THREE.Curve.create(function (p\n    /* array of Vector3 */\n    ) {\n      this.points = p || [];\n      this.closed = false;\n    }, function (t) {\n      var points = this.points,\n          point,\n          intPoint,\n          weight,\n          l;\n      l = points.length;\n      if (l < 2) console.log('duh, you need at least 2 points');\n      point = (l - (this.closed ? 0 : 1)) * t;\n      intPoint = Math.floor(point);\n      weight = point - intPoint;\n\n      if (this.closed) {\n        intPoint += intPoint > 0 ? 0 : (Math.floor(Math.abs(intPoint) / points.length) + 1) * points.length;\n      } else if (weight === 0 && intPoint === l - 1) {\n        intPoint = l - 2;\n        weight = 1;\n      }\n\n      var p0, p1, p2, p3; // 4 points\n\n      if (this.closed || intPoint > 0) {\n        p0 = points[(intPoint - 1) % l];\n      } else {\n        // extrapolate first point\n        tmp.subVectors(points[0], points[1]).add(points[0]);\n        p0 = tmp;\n      }\n\n      p1 = points[intPoint % l];\n      p2 = points[(intPoint + 1) % l];\n\n      if (this.closed || intPoint + 2 < l) {\n        p3 = points[(intPoint + 2) % l];\n      } else {\n        // extrapolate last point\n        tmp.subVectors(points[l - 1], points[l - 2]).add(points[l - 1]);\n        p3 = tmp;\n      }\n\n      if (this.type === undefined || this.type === 'centripetal' || this.type === 'chordal') {\n        // init Centripetal / Chordal Catmull-Rom\n        var pow = this.type === 'chordal' ? 0.5 : 0.25;\n        var dt0 = Math.pow(p0.distanceToSquared(p1), pow);\n        var dt1 = Math.pow(p1.distanceToSquared(p2), pow);\n        var dt2 = Math.pow(p2.distanceToSquared(p3), pow); // safety check for repeated points\n\n        if (dt1 < 1e-4) dt1 = 1.0;\n        if (dt0 < 1e-4) dt0 = dt1;\n        if (dt2 < 1e-4) dt2 = dt1;\n        px.initNonuniformCatmullRom(p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2);\n        py.initNonuniformCatmullRom(p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2);\n        pz.initNonuniformCatmullRom(p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2);\n      } else if (this.type === 'catmullrom') {\n        var tension = this.tension !== undefined ? this.tension : 0.5;\n        px.initCatmullRom(p0.x, p1.x, p2.x, p3.x, tension);\n        py.initCatmullRom(p0.y, p1.y, p2.y, p3.y, tension);\n        pz.initCatmullRom(p0.z, p1.z, p2.z, p3.z, tension);\n      }\n\n      var v = new THREE.Vector3(px.calc(weight), py.calc(weight), pz.calc(weight));\n      return v;\n    });\n  }(); // File:src/extras/curves/ClosedSplineCurve3.js\n\n  /**************************************************************\n   *\tClosed Spline 3D curve\n   **************************************************************/\n\n\n  THREE.ClosedSplineCurve3 = function (points) {\n    console.warn('THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3.');\n    THREE.CatmullRomCurve3.call(this, points);\n    this.type = 'catmullrom';\n    this.closed = true;\n  };\n\n  THREE.ClosedSplineCurve3.prototype = Object.create(THREE.CatmullRomCurve3.prototype); // File:src/extras/geometries/BoxGeometry.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\n   */\n\n  THREE.BoxGeometry = function (width, height, depth, widthSegments, heightSegments, depthSegments) {\n    THREE.Geometry.call(this);\n    this.type = 'BoxGeometry';\n    this.parameters = {\n      width: width,\n      height: height,\n      depth: depth,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      depthSegments: depthSegments\n    };\n    this.fromBufferGeometry(new THREE.BoxBufferGeometry(width, height, depth, widthSegments, heightSegments, depthSegments));\n    this.mergeVertices();\n  };\n\n  THREE.BoxGeometry.prototype = Object.create(THREE.Geometry.prototype);\n  THREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\n  THREE.CubeGeometry = THREE.BoxGeometry; // File:src/extras/geometries/BoxBufferGeometry.js\n\n  /**\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n\n  THREE.BoxBufferGeometry = function (width, height, depth, widthSegments, heightSegments, depthSegments) {\n    THREE.BufferGeometry.call(this);\n    this.type = 'BoxBufferGeometry';\n    this.parameters = {\n      width: width,\n      height: height,\n      depth: depth,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      depthSegments: depthSegments\n    };\n    var scope = this; // segments\n\n    widthSegments = Math.floor(widthSegments) || 1;\n    heightSegments = Math.floor(heightSegments) || 1;\n    depthSegments = Math.floor(depthSegments) || 1; // these are used to calculate buffer length\n\n    var vertexCount = calculateVertexCount(widthSegments, heightSegments, depthSegments);\n    var indexCount = calculateIndexCount(widthSegments, heightSegments, depthSegments); // buffers\n\n    var indices = new (indexCount > 65535 ? Uint32Array : Uint16Array)(indexCount);\n    var vertices = new Float32Array(vertexCount * 3);\n    var normals = new Float32Array(vertexCount * 3);\n    var uvs = new Float32Array(vertexCount * 2); // offset variables\n\n    var vertexBufferOffset = 0;\n    var uvBufferOffset = 0;\n    var indexBufferOffset = 0;\n    var numberOfVertices = 0; // group variables\n\n    var groupStart = 0; // build each side of the box geometry\n\n    buildPlane('z', 'y', 'x', -1, -1, depth, height, width, depthSegments, heightSegments, 0); // px\n\n    buildPlane('z', 'y', 'x', 1, -1, depth, height, -width, depthSegments, heightSegments, 1); // nx\n\n    buildPlane('x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2); // py\n\n    buildPlane('x', 'z', 'y', 1, -1, width, depth, -height, widthSegments, depthSegments, 3); // ny\n\n    buildPlane('x', 'y', 'z', 1, -1, width, height, depth, widthSegments, heightSegments, 4); // pz\n\n    buildPlane('x', 'y', 'z', -1, -1, width, height, -depth, widthSegments, heightSegments, 5); // nz\n    // build geometry\n\n    this.setIndex(new THREE.BufferAttribute(indices, 1));\n    this.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new THREE.BufferAttribute(normals, 3));\n    this.addAttribute('uv', new THREE.BufferAttribute(uvs, 2)); // helper functions\n\n    function calculateVertexCount(w, h, d) {\n      var vertices = 0; // calculate the amount of vertices for each side (plane)\n\n      vertices += (w + 1) * (h + 1) * 2; // xy\n\n      vertices += (w + 1) * (d + 1) * 2; // xz\n\n      vertices += (d + 1) * (h + 1) * 2; // zy\n\n      return vertices;\n    }\n\n    function calculateIndexCount(w, h, d) {\n      var index = 0; // calculate the amount of squares for each side\n\n      index += w * h * 2; // xy\n\n      index += w * d * 2; // xz\n\n      index += d * h * 2; // zy\n\n      return index * 6; // two triangles per square => six vertices per square\n    }\n\n    function buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {\n      var segmentWidth = width / gridX;\n      var segmentHeight = height / gridY;\n      var widthHalf = width / 2;\n      var heightHalf = height / 2;\n      var depthHalf = depth / 2;\n      var gridX1 = gridX + 1;\n      var gridY1 = gridY + 1;\n      var vertexCounter = 0;\n      var groupCount = 0;\n      var vector = new THREE.Vector3(); // generate vertices, normals and uvs\n\n      for (var iy = 0; iy < gridY1; iy++) {\n        var y = iy * segmentHeight - heightHalf;\n\n        for (var ix = 0; ix < gridX1; ix++) {\n          var x = ix * segmentWidth - widthHalf; // set values to correct vector component\n\n          vector[u] = x * udir;\n          vector[v] = y * vdir;\n          vector[w] = depthHalf; // now apply vector to vertex buffer\n\n          vertices[vertexBufferOffset] = vector.x;\n          vertices[vertexBufferOffset + 1] = vector.y;\n          vertices[vertexBufferOffset + 2] = vector.z; // set values to correct vector component\n\n          vector[u] = 0;\n          vector[v] = 0;\n          vector[w] = depth > 0 ? 1 : -1; // now apply vector to normal buffer\n\n          normals[vertexBufferOffset] = vector.x;\n          normals[vertexBufferOffset + 1] = vector.y;\n          normals[vertexBufferOffset + 2] = vector.z; // uvs\n\n          uvs[uvBufferOffset] = ix / gridX;\n          uvs[uvBufferOffset + 1] = 1 - iy / gridY; // update offsets and counters\n\n          vertexBufferOffset += 3;\n          uvBufferOffset += 2;\n          vertexCounter += 1;\n        }\n      } // 1. you need three indices to draw a single face\n      // 2. a single segment consists of two faces\n      // 3. so we need to generate six (2*3) indices per segment\n\n\n      for (iy = 0; iy < gridY; iy++) {\n        for (ix = 0; ix < gridX; ix++) {\n          // indices\n          var a = numberOfVertices + ix + gridX1 * iy;\n          var b = numberOfVertices + ix + gridX1 * (iy + 1);\n          var c = numberOfVertices + (ix + 1) + gridX1 * (iy + 1);\n          var d = numberOfVertices + (ix + 1) + gridX1 * iy; // face one\n\n          indices[indexBufferOffset] = a;\n          indices[indexBufferOffset + 1] = b;\n          indices[indexBufferOffset + 2] = d; // face two\n\n          indices[indexBufferOffset + 3] = b;\n          indices[indexBufferOffset + 4] = c;\n          indices[indexBufferOffset + 5] = d; // update offsets and counters\n\n          indexBufferOffset += 6;\n          groupCount += 6;\n        }\n      } // add a group to the geometry. this will ensure multi material support\n\n\n      scope.addGroup(groupStart, groupCount, materialIndex); // calculate new start value for groups\n\n      groupStart += groupCount; // update total number of vertices\n\n      numberOfVertices += vertexCounter;\n    }\n  };\n\n  THREE.BoxBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\n  THREE.BoxBufferGeometry.prototype.constructor = THREE.BoxBufferGeometry; // File:src/extras/geometries/CircleGeometry.js\n\n  /**\n   * @author hughes\n   */\n\n  THREE.CircleGeometry = function (radius, segments, thetaStart, thetaLength) {\n    THREE.Geometry.call(this);\n    this.type = 'CircleGeometry';\n    this.parameters = {\n      radius: radius,\n      segments: segments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    this.fromBufferGeometry(new THREE.CircleBufferGeometry(radius, segments, thetaStart, thetaLength));\n  };\n\n  THREE.CircleGeometry.prototype = Object.create(THREE.Geometry.prototype);\n  THREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry; // File:src/extras/geometries/CircleBufferGeometry.js\n\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   */\n\n  THREE.CircleBufferGeometry = function (radius, segments, thetaStart, thetaLength) {\n    THREE.BufferGeometry.call(this);\n    this.type = 'CircleBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      segments: segments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    radius = radius || 50;\n    segments = segments !== undefined ? Math.max(3, segments) : 8;\n    thetaStart = thetaStart !== undefined ? thetaStart : 0;\n    thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n    var vertices = segments + 2;\n    var positions = new Float32Array(vertices * 3);\n    var normals = new Float32Array(vertices * 3);\n    var uvs = new Float32Array(vertices * 2); // center data is already zero, but need to set a few extras\n\n    normals[2] = 1.0;\n    uvs[0] = 0.5;\n    uvs[1] = 0.5;\n\n    for (var s = 0, i = 3, ii = 2; s <= segments; s++, i += 3, ii += 2) {\n      var segment = thetaStart + s / segments * thetaLength;\n      positions[i] = radius * Math.cos(segment);\n      positions[i + 1] = radius * Math.sin(segment);\n      normals[i + 2] = 1; // normal z\n\n      uvs[ii] = (positions[i] / radius + 1) / 2;\n      uvs[ii + 1] = (positions[i + 1] / radius + 1) / 2;\n    }\n\n    var indices = [];\n\n    for (var i = 1; i <= segments; i++) {\n      indices.push(i, i + 1, 0);\n    }\n\n    this.setIndex(new THREE.BufferAttribute(new Uint16Array(indices), 1));\n    this.addAttribute('position', new THREE.BufferAttribute(positions, 3));\n    this.addAttribute('normal', new THREE.BufferAttribute(normals, 3));\n    this.addAttribute('uv', new THREE.BufferAttribute(uvs, 2));\n    this.boundingSphere = new THREE.Sphere(new THREE.Vector3(), radius);\n  };\n\n  THREE.CircleBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\n  THREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry; // File:src/extras/geometries/CylinderBufferGeometry.js\n\n  /**\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n\n  THREE.CylinderBufferGeometry = function (radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n    THREE.BufferGeometry.call(this);\n    this.type = 'CylinderBufferGeometry';\n    this.parameters = {\n      radiusTop: radiusTop,\n      radiusBottom: radiusBottom,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    var scope = this;\n    radiusTop = radiusTop !== undefined ? radiusTop : 20;\n    radiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\n    height = height !== undefined ? height : 100;\n    radialSegments = Math.floor(radialSegments) || 8;\n    heightSegments = Math.floor(heightSegments) || 1;\n    openEnded = openEnded !== undefined ? openEnded : false;\n    thetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n    thetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI; // used to calculate buffer length\n\n    var nbCap = 0;\n\n    if (openEnded === false) {\n      if (radiusTop > 0) nbCap++;\n      if (radiusBottom > 0) nbCap++;\n    }\n\n    var vertexCount = calculateVertexCount();\n    var indexCount = calculateIndexCount(); // buffers\n\n    var indices = new THREE.BufferAttribute(new (indexCount > 65535 ? Uint32Array : Uint16Array)(indexCount), 1);\n    var vertices = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n    var normals = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n    var uvs = new THREE.BufferAttribute(new Float32Array(vertexCount * 2), 2); // helper variables\n\n    var index = 0,\n        indexOffset = 0,\n        indexArray = [],\n        halfHeight = height / 2; // group variables\n\n    var groupStart = 0; // generate geometry\n\n    generateTorso();\n\n    if (openEnded === false) {\n      if (radiusTop > 0) generateCap(true);\n      if (radiusBottom > 0) generateCap(false);\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', vertices);\n    this.addAttribute('normal', normals);\n    this.addAttribute('uv', uvs); // helper functions\n\n    function calculateVertexCount() {\n      var count = (radialSegments + 1) * (heightSegments + 1);\n\n      if (openEnded === false) {\n        count += (radialSegments + 1) * nbCap + radialSegments * nbCap;\n      }\n\n      return count;\n    }\n\n    function calculateIndexCount() {\n      var count = radialSegments * heightSegments * 2 * 3;\n\n      if (openEnded === false) {\n        count += radialSegments * nbCap * 3;\n      }\n\n      return count;\n    }\n\n    function generateTorso() {\n      var x, y;\n      var normal = new THREE.Vector3();\n      var vertex = new THREE.Vector3();\n      var groupCount = 0; // this will be used to calculate the normal\n\n      var tanTheta = (radiusBottom - radiusTop) / height; // generate vertices, normals and uvs\n\n      for (y = 0; y <= heightSegments; y++) {\n        var indexRow = [];\n        var v = y / heightSegments; // calculate the radius of the current row\n\n        var radius = v * (radiusBottom - radiusTop) + radiusTop;\n\n        for (x = 0; x <= radialSegments; x++) {\n          var u = x / radialSegments; // vertex\n\n          vertex.x = radius * Math.sin(u * thetaLength + thetaStart);\n          vertex.y = -v * height + halfHeight;\n          vertex.z = radius * Math.cos(u * thetaLength + thetaStart);\n          vertices.setXYZ(index, vertex.x, vertex.y, vertex.z); // normal\n\n          normal.copy(vertex); // handle special case if radiusTop/radiusBottom is zero\n\n          if (radiusTop === 0 && y === 0 || radiusBottom === 0 && y === heightSegments) {\n            normal.x = Math.sin(u * thetaLength + thetaStart);\n            normal.z = Math.cos(u * thetaLength + thetaStart);\n          }\n\n          normal.setY(Math.sqrt(normal.x * normal.x + normal.z * normal.z) * tanTheta).normalize();\n          normals.setXYZ(index, normal.x, normal.y, normal.z); // uv\n\n          uvs.setXY(index, u, 1 - v); // save index of vertex in respective row\n\n          indexRow.push(index); // increase index\n\n          index++;\n        } // now save vertices of the row in our index array\n\n\n        indexArray.push(indexRow);\n      } // generate indices\n\n\n      for (x = 0; x < radialSegments; x++) {\n        for (y = 0; y < heightSegments; y++) {\n          // we use the index array to access the correct indices\n          var i1 = indexArray[y][x];\n          var i2 = indexArray[y + 1][x];\n          var i3 = indexArray[y + 1][x + 1];\n          var i4 = indexArray[y][x + 1]; // face one\n\n          indices.setX(indexOffset, i1);\n          indexOffset++;\n          indices.setX(indexOffset, i2);\n          indexOffset++;\n          indices.setX(indexOffset, i4);\n          indexOffset++; // face two\n\n          indices.setX(indexOffset, i2);\n          indexOffset++;\n          indices.setX(indexOffset, i3);\n          indexOffset++;\n          indices.setX(indexOffset, i4);\n          indexOffset++; // update counters\n\n          groupCount += 6;\n        }\n      } // add a group to the geometry. this will ensure multi material support\n\n\n      scope.addGroup(groupStart, groupCount, 0); // calculate new start value for groups\n\n      groupStart += groupCount;\n    }\n\n    function generateCap(top) {\n      var x, centerIndexStart, centerIndexEnd;\n      var uv = new THREE.Vector2();\n      var vertex = new THREE.Vector3();\n      var groupCount = 0;\n      var radius = top === true ? radiusTop : radiusBottom;\n      var sign = top === true ? 1 : -1; // save the index of the first center vertex\n\n      centerIndexStart = index; // first we generate the center vertex data of the cap.\n      // because the geometry needs one set of uvs per face,\n      // we must generate a center vertex per face/segment\n\n      for (x = 1; x <= radialSegments; x++) {\n        // vertex\n        vertices.setXYZ(index, 0, halfHeight * sign, 0); // normal\n\n        normals.setXYZ(index, 0, sign, 0); // uv\n\n        uv.x = 0.5;\n        uv.y = 0.5;\n        uvs.setXY(index, uv.x, uv.y); // increase index\n\n        index++;\n      } // save the index of the last center vertex\n\n\n      centerIndexEnd = index; // now we generate the surrounding vertices, normals and uvs\n\n      for (x = 0; x <= radialSegments; x++) {\n        var u = x / radialSegments;\n        var theta = u * thetaLength + thetaStart;\n        var cosTheta = Math.cos(theta);\n        var sinTheta = Math.sin(theta); // vertex\n\n        vertex.x = radius * sinTheta;\n        vertex.y = halfHeight * sign;\n        vertex.z = radius * cosTheta;\n        vertices.setXYZ(index, vertex.x, vertex.y, vertex.z); // normal\n\n        normals.setXYZ(index, 0, sign, 0); // uv\n\n        uv.x = cosTheta * 0.5 + 0.5;\n        uv.y = sinTheta * 0.5 * sign + 0.5;\n        uvs.setXY(index, uv.x, uv.y); // increase index\n\n        index++;\n      } // generate indices\n\n\n      for (x = 0; x < radialSegments; x++) {\n        var c = centerIndexStart + x;\n        var i = centerIndexEnd + x;\n\n        if (top === true) {\n          // face top\n          indices.setX(indexOffset, i);\n          indexOffset++;\n          indices.setX(indexOffset, i + 1);\n          indexOffset++;\n          indices.setX(indexOffset, c);\n          indexOffset++;\n        } else {\n          // face bottom\n          indices.setX(indexOffset, i + 1);\n          indexOffset++;\n          indices.setX(indexOffset, i);\n          indexOffset++;\n          indices.setX(indexOffset, c);\n          indexOffset++;\n        } // update counters\n\n\n        groupCount += 3;\n      } // add a group to the geometry. this will ensure multi material support\n\n\n      scope.addGroup(groupStart, groupCount, top === true ? 1 : 2); // calculate new start value for groups\n\n      groupStart += groupCount;\n    }\n  };\n\n  THREE.CylinderBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\n  THREE.CylinderBufferGeometry.prototype.constructor = THREE.CylinderBufferGeometry; // File:src/extras/geometries/CylinderGeometry.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.CylinderGeometry = function (radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n    THREE.Geometry.call(this);\n    this.type = 'CylinderGeometry';\n    this.parameters = {\n      radiusTop: radiusTop,\n      radiusBottom: radiusBottom,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    this.fromBufferGeometry(new THREE.CylinderBufferGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength));\n    this.mergeVertices();\n  };\n\n  THREE.CylinderGeometry.prototype = Object.create(THREE.Geometry.prototype);\n  THREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry; // File:src/extras/geometries/ConeBufferGeometry.js\n\n  /*\n   * @author: abelnation / http://github.com/abelnation\n   */\n\n  THREE.ConeBufferGeometry = function (radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n    THREE.CylinderBufferGeometry.call(this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n    this.type = 'ConeBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n  };\n\n  THREE.ConeBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\n  THREE.ConeBufferGeometry.prototype.constructor = THREE.ConeBufferGeometry; // File:src/extras/geometries/ConeGeometry.js\n\n  /**\n   * @author abelnation / http://github.com/abelnation\n   */\n\n  THREE.ConeGeometry = function (radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n    THREE.CylinderGeometry.call(this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n    this.type = 'ConeGeometry';\n    this.parameters = {\n      radius: radius,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n  };\n\n  THREE.ConeGeometry.prototype = Object.create(THREE.CylinderGeometry.prototype);\n  THREE.ConeGeometry.prototype.constructor = THREE.ConeGeometry; // File:src/extras/geometries/EdgesGeometry.js\n\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n  THREE.EdgesGeometry = function (geometry, thresholdAngle) {\n    THREE.BufferGeometry.call(this);\n    thresholdAngle = thresholdAngle !== undefined ? thresholdAngle : 1;\n    var thresholdDot = Math.cos(THREE.Math.DEG2RAD * thresholdAngle);\n    var edge = [0, 0],\n        hash = {};\n\n    function sortFunction(a, b) {\n      return a - b;\n    }\n\n    var keys = ['a', 'b', 'c'];\n    var geometry2;\n\n    if (geometry instanceof THREE.BufferGeometry) {\n      geometry2 = new THREE.Geometry();\n      geometry2.fromBufferGeometry(geometry);\n    } else {\n      geometry2 = geometry.clone();\n    }\n\n    geometry2.mergeVertices();\n    geometry2.computeFaceNormals();\n    var vertices = geometry2.vertices;\n    var faces = geometry2.faces;\n\n    for (var i = 0, l = faces.length; i < l; i++) {\n      var face = faces[i];\n\n      for (var j = 0; j < 3; j++) {\n        edge[0] = face[keys[j]];\n        edge[1] = face[keys[(j + 1) % 3]];\n        edge.sort(sortFunction);\n        var key = edge.toString();\n\n        if (hash[key] === undefined) {\n          hash[key] = {\n            vert1: edge[0],\n            vert2: edge[1],\n            face1: i,\n            face2: undefined\n          };\n        } else {\n          hash[key].face2 = i;\n        }\n      }\n    }\n\n    var coords = [];\n\n    for (var key in hash) {\n      var h = hash[key];\n\n      if (h.face2 === undefined || faces[h.face1].normal.dot(faces[h.face2].normal) <= thresholdDot) {\n        var vertex = vertices[h.vert1];\n        coords.push(vertex.x);\n        coords.push(vertex.y);\n        coords.push(vertex.z);\n        vertex = vertices[h.vert2];\n        coords.push(vertex.x);\n        coords.push(vertex.y);\n        coords.push(vertex.z);\n      }\n    }\n\n    this.addAttribute('position', new THREE.BufferAttribute(new Float32Array(coords), 3));\n  };\n\n  THREE.EdgesGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\n  THREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry; // File:src/extras/geometries/ExtrudeGeometry.js\n\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   *\n   * Creates extruded geometry from a path shape.\n   *\n   * parameters = {\n   *\n   *  curveSegments: <int>, // number of points on the curves\n   *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n   *  amount: <int>, // Depth to extrude the shape\n   *\n   *  bevelEnabled: <bool>, // turn on bevel\n   *  bevelThickness: <float>, // how deep into the original shape bevel goes\n   *  bevelSize: <float>, // how far from shape outline is bevel\n   *  bevelSegments: <int>, // number of bevel layers\n   *\n   *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\n   *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\n   *\n   *  uvGenerator: <Object> // object that provides UV generator functions\n   *\n   * }\n   **/\n\n  THREE.ExtrudeGeometry = function (shapes, options) {\n    if (typeof shapes === \"undefined\") {\n      shapes = [];\n      return;\n    }\n\n    THREE.Geometry.call(this);\n    this.type = 'ExtrudeGeometry';\n    shapes = Array.isArray(shapes) ? shapes : [shapes];\n    this.addShapeList(shapes, options);\n    this.computeFaceNormals(); // can't really use automatic vertex normals\n    // as then front and back sides get smoothed too\n    // should do separate smoothing just for sides\n    //this.computeVertexNormals();\n    //console.log( \"took\", ( Date.now() - startTime ) );\n  };\n\n  THREE.ExtrudeGeometry.prototype = Object.create(THREE.Geometry.prototype);\n  THREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\n\n  THREE.ExtrudeGeometry.prototype.addShapeList = function (shapes, options) {\n    var sl = shapes.length;\n\n    for (var s = 0; s < sl; s++) {\n      var shape = shapes[s];\n      this.addShape(shape, options);\n    }\n  };\n\n  THREE.ExtrudeGeometry.prototype.addShape = function (shape, options) {\n    var amount = options.amount !== undefined ? options.amount : 100;\n    var bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\n\n    var bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\n\n    var bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n    var bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\n\n    var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n    var steps = options.steps !== undefined ? options.steps : 1;\n    var extrudePath = options.extrudePath;\n    var extrudePts,\n        extrudeByPath = false; // Use default WorldUVGenerator if no UV generators are specified.\n\n    var uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\n    var splineTube, binormal, normal, position2;\n\n    if (extrudePath) {\n      extrudePts = extrudePath.getSpacedPoints(steps);\n      extrudeByPath = true;\n      bevelEnabled = false; // bevels not supported for path extrusion\n      // SETUP TNB variables\n      // Reuse TNB from TubeGeomtry for now.\n      // TODO1 - have a .isClosed in spline?\n\n      splineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames(extrudePath, steps, false); // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n      binormal = new THREE.Vector3();\n      normal = new THREE.Vector3();\n      position2 = new THREE.Vector3();\n    } // Safeguards if bevels are not enabled\n\n\n    if (!bevelEnabled) {\n      bevelSegments = 0;\n      bevelThickness = 0;\n      bevelSize = 0;\n    } // Variables initialization\n\n\n    var ahole, h, hl; // looping of holes\n\n    var scope = this;\n    var shapesOffset = this.vertices.length;\n    var shapePoints = shape.extractPoints(curveSegments);\n    var vertices = shapePoints.shape;\n    var holes = shapePoints.holes;\n    var reverse = !THREE.ShapeUtils.isClockWise(vertices);\n\n    if (reverse) {\n      vertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n      for (h = 0, hl = holes.length; h < hl; h++) {\n        ahole = holes[h];\n\n        if (THREE.ShapeUtils.isClockWise(ahole)) {\n          holes[h] = ahole.reverse();\n        }\n      }\n\n      reverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\n    }\n\n    var faces = THREE.ShapeUtils.triangulateShape(vertices, holes);\n    /* Vertices */\n\n    var contour = vertices; // vertices has all points but contour has only points of circumference\n\n    for (h = 0, hl = holes.length; h < hl; h++) {\n      ahole = holes[h];\n      vertices = vertices.concat(ahole);\n    }\n\n    function scalePt2(pt, vec, size) {\n      if (!vec) console.error(\"THREE.ExtrudeGeometry: vec does not exist\");\n      return vec.clone().multiplyScalar(size).add(pt);\n    }\n\n    var b,\n        bs,\n        t,\n        z,\n        vert,\n        vlen = vertices.length,\n        face,\n        flen = faces.length; // Find directions for point movement\n\n    function getBevelVec(inPt, inPrev, inNext) {\n      // computes for inPt the corresponding point inPt' on a new contour\n      //   shifted by 1 unit (length of normalized vector) to the left\n      // if we walk along contour clockwise, this new contour is outside the old one\n      //\n      // inPt' is the intersection of the two lines parallel to the two\n      //  adjacent edges of inPt at a distance of 1 unit on the left side.\n      var v_trans_x,\n          v_trans_y,\n          shrink_by = 1; // resulting translation vector for inPt\n      // good reading for geometry algorithms (here: line-line intersection)\n      // http://geomalgorithms.com/a05-_intersect-1.html\n\n      var v_prev_x = inPt.x - inPrev.x,\n          v_prev_y = inPt.y - inPrev.y;\n      var v_next_x = inNext.x - inPt.x,\n          v_next_y = inNext.y - inPt.y;\n      var v_prev_lensq = v_prev_x * v_prev_x + v_prev_y * v_prev_y; // check for collinear edges\n\n      var collinear0 = v_prev_x * v_next_y - v_prev_y * v_next_x;\n\n      if (Math.abs(collinear0) > Number.EPSILON) {\n        // not collinear\n        // length of vectors for normalizing\n        var v_prev_len = Math.sqrt(v_prev_lensq);\n        var v_next_len = Math.sqrt(v_next_x * v_next_x + v_next_y * v_next_y); // shift adjacent points by unit vectors to the left\n\n        var ptPrevShift_x = inPrev.x - v_prev_y / v_prev_len;\n        var ptPrevShift_y = inPrev.y + v_prev_x / v_prev_len;\n        var ptNextShift_x = inNext.x - v_next_y / v_next_len;\n        var ptNextShift_y = inNext.y + v_next_x / v_next_len; // scaling factor for v_prev to intersection point\n\n        var sf = ((ptNextShift_x - ptPrevShift_x) * v_next_y - (ptNextShift_y - ptPrevShift_y) * v_next_x) / (v_prev_x * v_next_y - v_prev_y * v_next_x); // vector from inPt to intersection point\n\n        v_trans_x = ptPrevShift_x + v_prev_x * sf - inPt.x;\n        v_trans_y = ptPrevShift_y + v_prev_y * sf - inPt.y; // Don't normalize!, otherwise sharp corners become ugly\n        //  but prevent crazy spikes\n\n        var v_trans_lensq = v_trans_x * v_trans_x + v_trans_y * v_trans_y;\n\n        if (v_trans_lensq <= 2) {\n          return new THREE.Vector2(v_trans_x, v_trans_y);\n        } else {\n          shrink_by = Math.sqrt(v_trans_lensq / 2);\n        }\n      } else {\n        // handle special case of collinear edges\n        var direction_eq = false; // assumes: opposite\n\n        if (v_prev_x > Number.EPSILON) {\n          if (v_next_x > Number.EPSILON) {\n            direction_eq = true;\n          }\n        } else {\n          if (v_prev_x < -Number.EPSILON) {\n            if (v_next_x < -Number.EPSILON) {\n              direction_eq = true;\n            }\n          } else {\n            if (Math.sign(v_prev_y) === Math.sign(v_next_y)) {\n              direction_eq = true;\n            }\n          }\n        }\n\n        if (direction_eq) {\n          // console.log(\"Warning: lines are a straight sequence\");\n          v_trans_x = -v_prev_y;\n          v_trans_y = v_prev_x;\n          shrink_by = Math.sqrt(v_prev_lensq);\n        } else {\n          // console.log(\"Warning: lines are a straight spike\");\n          v_trans_x = v_prev_x;\n          v_trans_y = v_prev_y;\n          shrink_by = Math.sqrt(v_prev_lensq / 2);\n        }\n      }\n\n      return new THREE.Vector2(v_trans_x / shrink_by, v_trans_y / shrink_by);\n    }\n\n    var contourMovements = [];\n\n    for (var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n      if (j === il) j = 0;\n      if (k === il) k = 0; //  (j)---(i)---(k)\n      // console.log('i,j,k', i, j , k)\n\n      contourMovements[i] = getBevelVec(contour[i], contour[j], contour[k]);\n    }\n\n    var holesMovements = [],\n        oneHoleMovements,\n        verticesMovements = contourMovements.concat();\n\n    for (h = 0, hl = holes.length; h < hl; h++) {\n      ahole = holes[h];\n      oneHoleMovements = [];\n\n      for (i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n        if (j === il) j = 0;\n        if (k === il) k = 0; //  (j)---(i)---(k)\n\n        oneHoleMovements[i] = getBevelVec(ahole[i], ahole[j], ahole[k]);\n      }\n\n      holesMovements.push(oneHoleMovements);\n      verticesMovements = verticesMovements.concat(oneHoleMovements);\n    } // Loop bevelSegments, 1 for the front, 1 for the back\n\n\n    for (b = 0; b < bevelSegments; b++) {\n      //for ( b = bevelSegments; b > 0; b -- ) {\n      t = b / bevelSegments;\n      z = bevelThickness * (1 - t); //z = bevelThickness * t;\n\n      bs = bevelSize * Math.sin(t * Math.PI / 2); // curved\n      //bs = bevelSize * t; // linear\n      // contract shape\n\n      for (i = 0, il = contour.length; i < il; i++) {\n        vert = scalePt2(contour[i], contourMovements[i], bs);\n        v(vert.x, vert.y, -z);\n      } // expand holes\n\n\n      for (h = 0, hl = holes.length; h < hl; h++) {\n        ahole = holes[h];\n        oneHoleMovements = holesMovements[h];\n\n        for (i = 0, il = ahole.length; i < il; i++) {\n          vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n          v(vert.x, vert.y, -z);\n        }\n      }\n    }\n\n    bs = bevelSize; // Back facing vertices\n\n    for (i = 0; i < vlen; i++) {\n      vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n      if (!extrudeByPath) {\n        v(vert.x, vert.y, 0);\n      } else {\n        // v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n        normal.copy(splineTube.normals[0]).multiplyScalar(vert.x);\n        binormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);\n        position2.copy(extrudePts[0]).add(normal).add(binormal);\n        v(position2.x, position2.y, position2.z);\n      }\n    } // Add stepped vertices...\n    // Including front facing vertices\n\n\n    var s;\n\n    for (s = 1; s <= steps; s++) {\n      for (i = 0; i < vlen; i++) {\n        vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n        if (!extrudeByPath) {\n          v(vert.x, vert.y, amount / steps * s);\n        } else {\n          // v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n          normal.copy(splineTube.normals[s]).multiplyScalar(vert.x);\n          binormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);\n          position2.copy(extrudePts[s]).add(normal).add(binormal);\n          v(position2.x, position2.y, position2.z);\n        }\n      }\n    } // Add bevel segments planes\n    //for ( b = 1; b <= bevelSegments; b ++ ) {\n\n\n    for (b = bevelSegments - 1; b >= 0; b--) {\n      t = b / bevelSegments;\n      z = bevelThickness * (1 - t); //bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\n\n      bs = bevelSize * Math.sin(t * Math.PI / 2); // contract shape\n\n      for (i = 0, il = contour.length; i < il; i++) {\n        vert = scalePt2(contour[i], contourMovements[i], bs);\n        v(vert.x, vert.y, amount + z);\n      } // expand holes\n\n\n      for (h = 0, hl = holes.length; h < hl; h++) {\n        ahole = holes[h];\n        oneHoleMovements = holesMovements[h];\n\n        for (i = 0, il = ahole.length; i < il; i++) {\n          vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n\n          if (!extrudeByPath) {\n            v(vert.x, vert.y, amount + z);\n          } else {\n            v(vert.x, vert.y + extrudePts[steps - 1].y, extrudePts[steps - 1].x + z);\n          }\n        }\n      }\n    }\n    /* Faces */\n    // Top and bottom faces\n\n\n    buildLidFaces(); // Sides faces\n\n    buildSideFaces(); /////  Internal functions\n\n    function buildLidFaces() {\n      if (bevelEnabled) {\n        var layer = 0; // steps + 1\n\n        var offset = vlen * layer; // Bottom faces\n\n        for (i = 0; i < flen; i++) {\n          face = faces[i];\n          f3(face[2] + offset, face[1] + offset, face[0] + offset);\n        }\n\n        layer = steps + bevelSegments * 2;\n        offset = vlen * layer; // Top faces\n\n        for (i = 0; i < flen; i++) {\n          face = faces[i];\n          f3(face[0] + offset, face[1] + offset, face[2] + offset);\n        }\n      } else {\n        // Bottom faces\n        for (i = 0; i < flen; i++) {\n          face = faces[i];\n          f3(face[2], face[1], face[0]);\n        } // Top faces\n\n\n        for (i = 0; i < flen; i++) {\n          face = faces[i];\n          f3(face[0] + vlen * steps, face[1] + vlen * steps, face[2] + vlen * steps);\n        }\n      }\n    } // Create faces for the z-sides of the shape\n\n\n    function buildSideFaces() {\n      var layeroffset = 0;\n      sidewalls(contour, layeroffset);\n      layeroffset += contour.length;\n\n      for (h = 0, hl = holes.length; h < hl; h++) {\n        ahole = holes[h];\n        sidewalls(ahole, layeroffset); //, true\n\n        layeroffset += ahole.length;\n      }\n    }\n\n    function sidewalls(contour, layeroffset) {\n      var j, k;\n      i = contour.length;\n\n      while (--i >= 0) {\n        j = i;\n        k = i - 1;\n        if (k < 0) k = contour.length - 1; //console.log('b', i,j, i-1, k,vertices.length);\n\n        var s = 0,\n            sl = steps + bevelSegments * 2;\n\n        for (s = 0; s < sl; s++) {\n          var slen1 = vlen * s;\n          var slen2 = vlen * (s + 1);\n          var a = layeroffset + j + slen1,\n              b = layeroffset + k + slen1,\n              c = layeroffset + k + slen2,\n              d = layeroffset + j + slen2;\n          f4(a, b, c, d, contour, s, sl, j, k);\n        }\n      }\n    }\n\n    function v(x, y, z) {\n      scope.vertices.push(new THREE.Vector3(x, y, z));\n    }\n\n    function f3(a, b, c) {\n      a += shapesOffset;\n      b += shapesOffset;\n      c += shapesOffset;\n      scope.faces.push(new THREE.Face3(a, b, c, null, null, 0));\n      var uvs = uvgen.generateTopUV(scope, a, b, c);\n      scope.faceVertexUvs[0].push(uvs);\n    }\n\n    function f4(a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2) {\n      a += shapesOffset;\n      b += shapesOffset;\n      c += shapesOffset;\n      d += shapesOffset;\n      scope.faces.push(new THREE.Face3(a, b, d, null, null, 1));\n      scope.faces.push(new THREE.Face3(b, c, d, null, null, 1));\n      var uvs = uvgen.generateSideWallUV(scope, a, b, c, d);\n      scope.faceVertexUvs[0].push([uvs[0], uvs[1], uvs[3]]);\n      scope.faceVertexUvs[0].push([uvs[1], uvs[2], uvs[3]]);\n    }\n  };\n\n  THREE.ExtrudeGeometry.WorldUVGenerator = {\n    generateTopUV: function (geometry, indexA, indexB, indexC) {\n      var vertices = geometry.vertices;\n      var a = vertices[indexA];\n      var b = vertices[indexB];\n      var c = vertices[indexC];\n      return [new THREE.Vector2(a.x, a.y), new THREE.Vector2(b.x, b.y), new THREE.Vector2(c.x, c.y)];\n    },\n    generateSideWallUV: function (geometry, indexA, indexB, indexC, indexD) {\n      var vertices = geometry.vertices;\n      var a = vertices[indexA];\n      var b = vertices[indexB];\n      var c = vertices[indexC];\n      var d = vertices[indexD];\n\n      if (Math.abs(a.y - b.y) < 0.01) {\n        return [new THREE.Vector2(a.x, 1 - a.z), new THREE.Vector2(b.x, 1 - b.z), new THREE.Vector2(c.x, 1 - c.z), new THREE.Vector2(d.x, 1 - d.z)];\n      } else {\n        return [new THREE.Vector2(a.y, 1 - a.z), new THREE.Vector2(b.y, 1 - b.z), new THREE.Vector2(c.y, 1 - c.z), new THREE.Vector2(d.y, 1 - d.z)];\n      }\n    }\n  }; // File:src/extras/geometries/ShapeGeometry.js\n\n  /**\n   * @author jonobr1 / http://jonobr1.com\n   *\n   * Creates a one-sided polygonal geometry from a path shape. Similar to\n   * ExtrudeGeometry.\n   *\n   * parameters = {\n   *\n   *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\n   *\n   *\tmaterial: <int> // material index for front and back faces\n   *\tuvGenerator: <Object> // object that provides UV generator functions\n   *\n   * }\n   **/\n\n  THREE.ShapeGeometry = function (shapes, options) {\n    THREE.Geometry.call(this);\n    this.type = 'ShapeGeometry';\n    if (Array.isArray(shapes) === false) shapes = [shapes];\n    this.addShapeList(shapes, options);\n    this.computeFaceNormals();\n  };\n\n  THREE.ShapeGeometry.prototype = Object.create(THREE.Geometry.prototype);\n  THREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\n  /**\n   * Add an array of shapes to THREE.ShapeGeometry.\n   */\n\n  THREE.ShapeGeometry.prototype.addShapeList = function (shapes, options) {\n    for (var i = 0, l = shapes.length; i < l; i++) {\n      this.addShape(shapes[i], options);\n    }\n\n    return this;\n  };\n  /**\n   * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\n   */\n\n\n  THREE.ShapeGeometry.prototype.addShape = function (shape, options) {\n    if (options === undefined) options = {};\n    var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n    var material = options.material;\n    var uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator; //\n\n    var i, l, hole;\n    var shapesOffset = this.vertices.length;\n    var shapePoints = shape.extractPoints(curveSegments);\n    var vertices = shapePoints.shape;\n    var holes = shapePoints.holes;\n    var reverse = !THREE.ShapeUtils.isClockWise(vertices);\n\n    if (reverse) {\n      vertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe...\n\n      for (i = 0, l = holes.length; i < l; i++) {\n        hole = holes[i];\n\n        if (THREE.ShapeUtils.isClockWise(hole)) {\n          holes[i] = hole.reverse();\n        }\n      }\n\n      reverse = false;\n    }\n\n    var faces = THREE.ShapeUtils.triangulateShape(vertices, holes); // Vertices\n\n    for (i = 0, l = holes.length; i < l; i++) {\n      hole = holes[i];\n      vertices = vertices.concat(hole);\n    } //\n\n\n    var vert,\n        vlen = vertices.length;\n    var face,\n        flen = faces.length;\n\n    for (i = 0; i < vlen; i++) {\n      vert = vertices[i];\n      this.vertices.push(new THREE.Vector3(vert.x, vert.y, 0));\n    }\n\n    for (i = 0; i < flen; i++) {\n      face = faces[i];\n      var a = face[0] + shapesOffset;\n      var b = face[1] + shapesOffset;\n      var c = face[2] + shapesOffset;\n      this.faces.push(new THREE.Face3(a, b, c, null, null, material));\n      this.faceVertexUvs[0].push(uvgen.generateTopUV(this, a, b, c));\n    }\n  }; // File:src/extras/geometries/LatheBufferGeometry.js\n\n  /**\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // points - to create a closed torus, one must use a set of points\n  //    like so: [ a, b, c, d, a ], see first is the same as last.\n  // segments - the number of circumference segments to create\n  // phiStart - the starting radian\n  // phiLength - the radian (0 to 2PI) range of the lathed section\n  //    2PI is a closed lathe, less than 2PI is a portion.\n\n\n  THREE.LatheBufferGeometry = function (points, segments, phiStart, phiLength) {\n    THREE.BufferGeometry.call(this);\n    this.type = 'LatheBufferGeometry';\n    this.parameters = {\n      points: points,\n      segments: segments,\n      phiStart: phiStart,\n      phiLength: phiLength\n    };\n    segments = Math.floor(segments) || 12;\n    phiStart = phiStart || 0;\n    phiLength = phiLength || Math.PI * 2; // clamp phiLength so it's in range of [ 0, 2PI ]\n\n    phiLength = THREE.Math.clamp(phiLength, 0, Math.PI * 2); // these are used to calculate buffer length\n\n    var vertexCount = (segments + 1) * points.length;\n    var indexCount = segments * points.length * 2 * 3; // buffers\n\n    var indices = new THREE.BufferAttribute(new (indexCount > 65535 ? Uint32Array : Uint16Array)(indexCount), 1);\n    var vertices = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n    var uvs = new THREE.BufferAttribute(new Float32Array(vertexCount * 2), 2); // helper variables\n\n    var index = 0,\n        indexOffset = 0,\n        base;\n    var inversePointLength = 1.0 / (points.length - 1);\n    var inverseSegments = 1.0 / segments;\n    var vertex = new THREE.Vector3();\n    var uv = new THREE.Vector2();\n    var i, j; // generate vertices and uvs\n\n    for (i = 0; i <= segments; i++) {\n      var phi = phiStart + i * inverseSegments * phiLength;\n      var sin = Math.sin(phi);\n      var cos = Math.cos(phi);\n\n      for (j = 0; j <= points.length - 1; j++) {\n        // vertex\n        vertex.x = points[j].x * sin;\n        vertex.y = points[j].y;\n        vertex.z = points[j].x * cos;\n        vertices.setXYZ(index, vertex.x, vertex.y, vertex.z); // uv\n\n        uv.x = i / segments;\n        uv.y = j / (points.length - 1);\n        uvs.setXY(index, uv.x, uv.y); // increase index\n\n        index++;\n      }\n    } // generate indices\n\n\n    for (i = 0; i < segments; i++) {\n      for (j = 0; j < points.length - 1; j++) {\n        base = j + i * points.length; // indices\n\n        var a = base;\n        var b = base + points.length;\n        var c = base + points.length + 1;\n        var d = base + 1; // face one\n\n        indices.setX(indexOffset, a);\n        indexOffset++;\n        indices.setX(indexOffset, b);\n        indexOffset++;\n        indices.setX(indexOffset, d);\n        indexOffset++; // face two\n\n        indices.setX(indexOffset, b);\n        indexOffset++;\n        indices.setX(indexOffset, c);\n        indexOffset++;\n        indices.setX(indexOffset, d);\n        indexOffset++;\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', vertices);\n    this.addAttribute('uv', uvs); // generate normals\n\n    this.computeVertexNormals(); // if the geometry is closed, we need to average the normals along the seam.\n    // because the corresponding vertices are identical (but still have different UVs).\n\n    if (phiLength === Math.PI * 2) {\n      var normals = this.attributes.normal.array;\n      var n1 = new THREE.Vector3();\n      var n2 = new THREE.Vector3();\n      var n = new THREE.Vector3(); // this is the buffer offset for the last line of vertices\n\n      base = segments * points.length * 3;\n\n      for (i = 0, j = 0; i < points.length; i++, j += 3) {\n        // select the normal of the vertex in the first line\n        n1.x = normals[j + 0];\n        n1.y = normals[j + 1];\n        n1.z = normals[j + 2]; // select the normal of the vertex in the last line\n\n        n2.x = normals[base + j + 0];\n        n2.y = normals[base + j + 1];\n        n2.z = normals[base + j + 2]; // average normals\n\n        n.addVectors(n1, n2).normalize(); // assign the new values to both normals\n\n        normals[j + 0] = normals[base + j + 0] = n.x;\n        normals[j + 1] = normals[base + j + 1] = n.y;\n        normals[j + 2] = normals[base + j + 2] = n.z;\n      } // next row\n\n    }\n  };\n\n  THREE.LatheBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\n  THREE.LatheBufferGeometry.prototype.constructor = THREE.LatheBufferGeometry; // File:src/extras/geometries/LatheGeometry.js\n\n  /**\n   * @author astrodud / http://astrodud.isgreat.org/\n   * @author zz85 / https://github.com/zz85\n   * @author bhouston / http://clara.io\n   */\n  // points - to create a closed torus, one must use a set of points\n  //    like so: [ a, b, c, d, a ], see first is the same as last.\n  // segments - the number of circumference segments to create\n  // phiStart - the starting radian\n  // phiLength - the radian (0 to 2PI) range of the lathed section\n  //    2PI is a closed lathe, less than 2PI is a portion.\n\n  THREE.LatheGeometry = function (points, segments, phiStart, phiLength) {\n    THREE.Geometry.call(this);\n    this.type = 'LatheGeometry';\n    this.parameters = {\n      points: points,\n      segments: segments,\n      phiStart: phiStart,\n      phiLength: phiLength\n    };\n    this.fromBufferGeometry(new THREE.LatheBufferGeometry(points, segments, phiStart, phiLength));\n    this.mergeVertices();\n  };\n\n  THREE.LatheGeometry.prototype = Object.create(THREE.Geometry.prototype);\n  THREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry; // File:src/extras/geometries/PlaneGeometry.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\n   */\n\n  THREE.PlaneGeometry = function (width, height, widthSegments, heightSegments) {\n    THREE.Geometry.call(this);\n    this.type = 'PlaneGeometry';\n    this.parameters = {\n      width: width,\n      height: height,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments\n    };\n    this.fromBufferGeometry(new THREE.PlaneBufferGeometry(width, height, widthSegments, heightSegments));\n  };\n\n  THREE.PlaneGeometry.prototype = Object.create(THREE.Geometry.prototype);\n  THREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry; // File:src/extras/geometries/PlaneBufferGeometry.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\n   */\n\n  THREE.PlaneBufferGeometry = function (width, height, widthSegments, heightSegments) {\n    THREE.BufferGeometry.call(this);\n    this.type = 'PlaneBufferGeometry';\n    this.parameters = {\n      width: width,\n      height: height,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments\n    };\n    var width_half = width / 2;\n    var height_half = height / 2;\n    var gridX = Math.floor(widthSegments) || 1;\n    var gridY = Math.floor(heightSegments) || 1;\n    var gridX1 = gridX + 1;\n    var gridY1 = gridY + 1;\n    var segment_width = width / gridX;\n    var segment_height = height / gridY;\n    var vertices = new Float32Array(gridX1 * gridY1 * 3);\n    var normals = new Float32Array(gridX1 * gridY1 * 3);\n    var uvs = new Float32Array(gridX1 * gridY1 * 2);\n    var offset = 0;\n    var offset2 = 0;\n\n    for (var iy = 0; iy < gridY1; iy++) {\n      var y = iy * segment_height - height_half;\n\n      for (var ix = 0; ix < gridX1; ix++) {\n        var x = ix * segment_width - width_half;\n        vertices[offset] = x;\n        vertices[offset + 1] = -y;\n        normals[offset + 2] = 1;\n        uvs[offset2] = ix / gridX;\n        uvs[offset2 + 1] = 1 - iy / gridY;\n        offset += 3;\n        offset2 += 2;\n      }\n    }\n\n    offset = 0;\n    var indices = new (vertices.length / 3 > 65535 ? Uint32Array : Uint16Array)(gridX * gridY * 6);\n\n    for (var iy = 0; iy < gridY; iy++) {\n      for (var ix = 0; ix < gridX; ix++) {\n        var a = ix + gridX1 * iy;\n        var b = ix + gridX1 * (iy + 1);\n        var c = ix + 1 + gridX1 * (iy + 1);\n        var d = ix + 1 + gridX1 * iy;\n        indices[offset] = a;\n        indices[offset + 1] = b;\n        indices[offset + 2] = d;\n        indices[offset + 3] = b;\n        indices[offset + 4] = c;\n        indices[offset + 5] = d;\n        offset += 6;\n      }\n    }\n\n    this.setIndex(new THREE.BufferAttribute(indices, 1));\n    this.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new THREE.BufferAttribute(normals, 3));\n    this.addAttribute('uv', new THREE.BufferAttribute(uvs, 2));\n  };\n\n  THREE.PlaneBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\n  THREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry; // File:src/extras/geometries/RingBufferGeometry.js\n\n  /**\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n\n  THREE.RingBufferGeometry = function (innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength) {\n    THREE.BufferGeometry.call(this);\n    this.type = 'RingBufferGeometry';\n    this.parameters = {\n      innerRadius: innerRadius,\n      outerRadius: outerRadius,\n      thetaSegments: thetaSegments,\n      phiSegments: phiSegments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    innerRadius = innerRadius || 20;\n    outerRadius = outerRadius || 50;\n    thetaStart = thetaStart !== undefined ? thetaStart : 0;\n    thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n    thetaSegments = thetaSegments !== undefined ? Math.max(3, thetaSegments) : 8;\n    phiSegments = phiSegments !== undefined ? Math.max(1, phiSegments) : 1; // these are used to calculate buffer length\n\n    var vertexCount = (thetaSegments + 1) * (phiSegments + 1);\n    var indexCount = thetaSegments * phiSegments * 2 * 3; // buffers\n\n    var indices = new THREE.BufferAttribute(new (indexCount > 65535 ? Uint32Array : Uint16Array)(indexCount), 1);\n    var vertices = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n    var normals = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n    var uvs = new THREE.BufferAttribute(new Float32Array(vertexCount * 2), 2); // some helper variables\n\n    var index = 0,\n        indexOffset = 0,\n        segment;\n    var radius = innerRadius;\n    var radiusStep = (outerRadius - innerRadius) / phiSegments;\n    var vertex = new THREE.Vector3();\n    var uv = new THREE.Vector2();\n    var j, i; // generate vertices, normals and uvs\n    // values are generate from the inside of the ring to the outside\n\n    for (j = 0; j <= phiSegments; j++) {\n      for (i = 0; i <= thetaSegments; i++) {\n        segment = thetaStart + i / thetaSegments * thetaLength; // vertex\n\n        vertex.x = radius * Math.cos(segment);\n        vertex.y = radius * Math.sin(segment);\n        vertices.setXYZ(index, vertex.x, vertex.y, vertex.z); // normal\n\n        normals.setXYZ(index, 0, 0, 1); // uv\n\n        uv.x = (vertex.x / outerRadius + 1) / 2;\n        uv.y = (vertex.y / outerRadius + 1) / 2;\n        uvs.setXY(index, uv.x, uv.y); // increase index\n\n        index++;\n      } // increase the radius for next row of vertices\n\n\n      radius += radiusStep;\n    } // generate indices\n\n\n    for (j = 0; j < phiSegments; j++) {\n      var thetaSegmentLevel = j * (thetaSegments + 1);\n\n      for (i = 0; i < thetaSegments; i++) {\n        segment = i + thetaSegmentLevel; // indices\n\n        var a = segment;\n        var b = segment + thetaSegments + 1;\n        var c = segment + thetaSegments + 2;\n        var d = segment + 1; // face one\n\n        indices.setX(indexOffset, a);\n        indexOffset++;\n        indices.setX(indexOffset, b);\n        indexOffset++;\n        indices.setX(indexOffset, c);\n        indexOffset++; // face two\n\n        indices.setX(indexOffset, a);\n        indexOffset++;\n        indices.setX(indexOffset, c);\n        indexOffset++;\n        indices.setX(indexOffset, d);\n        indexOffset++;\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', vertices);\n    this.addAttribute('normal', normals);\n    this.addAttribute('uv', uvs);\n  };\n\n  THREE.RingBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\n  THREE.RingBufferGeometry.prototype.constructor = THREE.RingBufferGeometry; // File:src/extras/geometries/RingGeometry.js\n\n  /**\n   * @author Kaleb Murphy\n   */\n\n  THREE.RingGeometry = function (innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength) {\n    THREE.Geometry.call(this);\n    this.type = 'RingGeometry';\n    this.parameters = {\n      innerRadius: innerRadius,\n      outerRadius: outerRadius,\n      thetaSegments: thetaSegments,\n      phiSegments: phiSegments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    this.fromBufferGeometry(new THREE.RingBufferGeometry(innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength));\n  };\n\n  THREE.RingGeometry.prototype = Object.create(THREE.Geometry.prototype);\n  THREE.RingGeometry.prototype.constructor = THREE.RingGeometry; // File:src/extras/geometries/SphereGeometry.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.SphereGeometry = function (radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n    THREE.Geometry.call(this);\n    this.type = 'SphereGeometry';\n    this.parameters = {\n      radius: radius,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      phiStart: phiStart,\n      phiLength: phiLength,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    this.fromBufferGeometry(new THREE.SphereBufferGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength));\n  };\n\n  THREE.SphereGeometry.prototype = Object.create(THREE.Geometry.prototype);\n  THREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry; // File:src/extras/geometries/SphereBufferGeometry.js\n\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   * based on THREE.SphereGeometry\n   */\n\n  THREE.SphereBufferGeometry = function (radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n    THREE.BufferGeometry.call(this);\n    this.type = 'SphereBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      phiStart: phiStart,\n      phiLength: phiLength,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    radius = radius || 50;\n    widthSegments = Math.max(3, Math.floor(widthSegments) || 8);\n    heightSegments = Math.max(2, Math.floor(heightSegments) || 6);\n    phiStart = phiStart !== undefined ? phiStart : 0;\n    phiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n    thetaStart = thetaStart !== undefined ? thetaStart : 0;\n    thetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n    var thetaEnd = thetaStart + thetaLength;\n    var vertexCount = (widthSegments + 1) * (heightSegments + 1);\n    var positions = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n    var normals = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n    var uvs = new THREE.BufferAttribute(new Float32Array(vertexCount * 2), 2);\n    var index = 0,\n        vertices = [],\n        normal = new THREE.Vector3();\n\n    for (var y = 0; y <= heightSegments; y++) {\n      var verticesRow = [];\n      var v = y / heightSegments;\n\n      for (var x = 0; x <= widthSegments; x++) {\n        var u = x / widthSegments;\n        var px = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n        var py = radius * Math.cos(thetaStart + v * thetaLength);\n        var pz = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n        normal.set(px, py, pz).normalize();\n        positions.setXYZ(index, px, py, pz);\n        normals.setXYZ(index, normal.x, normal.y, normal.z);\n        uvs.setXY(index, u, 1 - v);\n        verticesRow.push(index);\n        index++;\n      }\n\n      vertices.push(verticesRow);\n    }\n\n    var indices = [];\n\n    for (var y = 0; y < heightSegments; y++) {\n      for (var x = 0; x < widthSegments; x++) {\n        var v1 = vertices[y][x + 1];\n        var v2 = vertices[y][x];\n        var v3 = vertices[y + 1][x];\n        var v4 = vertices[y + 1][x + 1];\n        if (y !== 0 || thetaStart > 0) indices.push(v1, v2, v4);\n        if (y !== heightSegments - 1 || thetaEnd < Math.PI) indices.push(v2, v3, v4);\n      }\n    }\n\n    this.setIndex(new (positions.count > 65535 ? THREE.Uint32Attribute : THREE.Uint16Attribute)(indices, 1));\n    this.addAttribute('position', positions);\n    this.addAttribute('normal', normals);\n    this.addAttribute('uv', uvs);\n    this.boundingSphere = new THREE.Sphere(new THREE.Vector3(), radius);\n  };\n\n  THREE.SphereBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\n  THREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry; // File:src/extras/geometries/TextGeometry.js\n\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * Text = 3D Text\n   *\n   * parameters = {\n   *  font: <THREE.Font>, // font\n   *\n   *  size: <float>, // size of the text\n   *  height: <float>, // thickness to extrude text\n   *  curveSegments: <int>, // number of points on the curves\n   *\n   *  bevelEnabled: <bool>, // turn on bevel\n   *  bevelThickness: <float>, // how deep into text bevel goes\n   *  bevelSize: <float> // how far from text outline is bevel\n   * }\n   */\n\n  THREE.TextGeometry = function (text, parameters) {\n    parameters = parameters || {};\n    var font = parameters.font;\n\n    if (font instanceof THREE.Font === false) {\n      console.error('THREE.TextGeometry: font parameter is not an instance of THREE.Font.');\n      return new THREE.Geometry();\n    }\n\n    var shapes = font.generateShapes(text, parameters.size, parameters.curveSegments); // translate parameters to ExtrudeGeometry API\n\n    parameters.amount = parameters.height !== undefined ? parameters.height : 50; // defaults\n\n    if (parameters.bevelThickness === undefined) parameters.bevelThickness = 10;\n    if (parameters.bevelSize === undefined) parameters.bevelSize = 8;\n    if (parameters.bevelEnabled === undefined) parameters.bevelEnabled = false;\n    THREE.ExtrudeGeometry.call(this, shapes, parameters);\n    this.type = 'TextGeometry';\n  };\n\n  THREE.TextGeometry.prototype = Object.create(THREE.ExtrudeGeometry.prototype);\n  THREE.TextGeometry.prototype.constructor = THREE.TextGeometry; // File:src/extras/geometries/TorusBufferGeometry.js\n\n  /**\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n\n  THREE.TorusBufferGeometry = function (radius, tube, radialSegments, tubularSegments, arc) {\n    THREE.BufferGeometry.call(this);\n    this.type = 'TorusBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      tube: tube,\n      radialSegments: radialSegments,\n      tubularSegments: tubularSegments,\n      arc: arc\n    };\n    radius = radius || 100;\n    tube = tube || 40;\n    radialSegments = Math.floor(radialSegments) || 8;\n    tubularSegments = Math.floor(tubularSegments) || 6;\n    arc = arc || Math.PI * 2; // used to calculate buffer length\n\n    var vertexCount = (radialSegments + 1) * (tubularSegments + 1);\n    var indexCount = radialSegments * tubularSegments * 2 * 3; // buffers\n\n    var indices = new (indexCount > 65535 ? Uint32Array : Uint16Array)(indexCount);\n    var vertices = new Float32Array(vertexCount * 3);\n    var normals = new Float32Array(vertexCount * 3);\n    var uvs = new Float32Array(vertexCount * 2); // offset variables\n\n    var vertexBufferOffset = 0;\n    var uvBufferOffset = 0;\n    var indexBufferOffset = 0; // helper variables\n\n    var center = new THREE.Vector3();\n    var vertex = new THREE.Vector3();\n    var normal = new THREE.Vector3();\n    var j, i; // generate vertices, normals and uvs\n\n    for (j = 0; j <= radialSegments; j++) {\n      for (i = 0; i <= tubularSegments; i++) {\n        var u = i / tubularSegments * arc;\n        var v = j / radialSegments * Math.PI * 2; // vertex\n\n        vertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n        vertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n        vertex.z = tube * Math.sin(v);\n        vertices[vertexBufferOffset] = vertex.x;\n        vertices[vertexBufferOffset + 1] = vertex.y;\n        vertices[vertexBufferOffset + 2] = vertex.z; // this vector is used to calculate the normal\n\n        center.x = radius * Math.cos(u);\n        center.y = radius * Math.sin(u); // normal\n\n        normal.subVectors(vertex, center).normalize();\n        normals[vertexBufferOffset] = normal.x;\n        normals[vertexBufferOffset + 1] = normal.y;\n        normals[vertexBufferOffset + 2] = normal.z; // uv\n\n        uvs[uvBufferOffset] = i / tubularSegments;\n        uvs[uvBufferOffset + 1] = j / radialSegments; // update offsets\n\n        vertexBufferOffset += 3;\n        uvBufferOffset += 2;\n      }\n    } // generate indices\n\n\n    for (j = 1; j <= radialSegments; j++) {\n      for (i = 1; i <= tubularSegments; i++) {\n        // indices\n        var a = (tubularSegments + 1) * j + i - 1;\n        var b = (tubularSegments + 1) * (j - 1) + i - 1;\n        var c = (tubularSegments + 1) * (j - 1) + i;\n        var d = (tubularSegments + 1) * j + i; // face one\n\n        indices[indexBufferOffset] = a;\n        indices[indexBufferOffset + 1] = b;\n        indices[indexBufferOffset + 2] = d; // face two\n\n        indices[indexBufferOffset + 3] = b;\n        indices[indexBufferOffset + 4] = c;\n        indices[indexBufferOffset + 5] = d; // update offset\n\n        indexBufferOffset += 6;\n      }\n    } // build geometry\n\n\n    this.setIndex(new THREE.BufferAttribute(indices, 1));\n    this.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new THREE.BufferAttribute(normals, 3));\n    this.addAttribute('uv', new THREE.BufferAttribute(uvs, 2));\n  };\n\n  THREE.TorusBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\n  THREE.TorusBufferGeometry.prototype.constructor = THREE.TorusBufferGeometry; // File:src/extras/geometries/TorusGeometry.js\n\n  /**\n   * @author oosmoxiecode\n   * @author mrdoob / http://mrdoob.com/\n   * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\n   */\n\n  THREE.TorusGeometry = function (radius, tube, radialSegments, tubularSegments, arc) {\n    THREE.Geometry.call(this);\n    this.type = 'TorusGeometry';\n    this.parameters = {\n      radius: radius,\n      tube: tube,\n      radialSegments: radialSegments,\n      tubularSegments: tubularSegments,\n      arc: arc\n    };\n    this.fromBufferGeometry(new THREE.TorusBufferGeometry(radius, tube, radialSegments, tubularSegments, arc));\n  };\n\n  THREE.TorusGeometry.prototype = Object.create(THREE.Geometry.prototype);\n  THREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry; // File:src/extras/geometries/TorusKnotBufferGeometry.js\n\n  /**\n   * @author Mugen87 / https://github.com/Mugen87\n   *\n   * see: http://www.blackpawn.com/texts/pqtorus/\n   */\n\n  THREE.TorusKnotBufferGeometry = function (radius, tube, tubularSegments, radialSegments, p, q) {\n    THREE.BufferGeometry.call(this);\n    this.type = 'TorusKnotBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      tube: tube,\n      tubularSegments: tubularSegments,\n      radialSegments: radialSegments,\n      p: p,\n      q: q\n    };\n    radius = radius || 100;\n    tube = tube || 40;\n    tubularSegments = Math.floor(tubularSegments) || 64;\n    radialSegments = Math.floor(radialSegments) || 8;\n    p = p || 2;\n    q = q || 3; // used to calculate buffer length\n\n    var vertexCount = (radialSegments + 1) * (tubularSegments + 1);\n    var indexCount = radialSegments * tubularSegments * 2 * 3; // buffers\n\n    var indices = new THREE.BufferAttribute(new (indexCount > 65535 ? Uint32Array : Uint16Array)(indexCount), 1);\n    var vertices = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n    var normals = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n    var uvs = new THREE.BufferAttribute(new Float32Array(vertexCount * 2), 2); // helper variables\n\n    var i,\n        j,\n        index = 0,\n        indexOffset = 0;\n    var vertex = new THREE.Vector3();\n    var normal = new THREE.Vector3();\n    var uv = new THREE.Vector2();\n    var P1 = new THREE.Vector3();\n    var P2 = new THREE.Vector3();\n    var B = new THREE.Vector3();\n    var T = new THREE.Vector3();\n    var N = new THREE.Vector3(); // generate vertices, normals and uvs\n\n    for (i = 0; i <= tubularSegments; ++i) {\n      // the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n      var u = i / tubularSegments * p * Math.PI * 2; // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n      // these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n      calculatePositionOnCurve(u, p, q, radius, P1);\n      calculatePositionOnCurve(u + 0.01, p, q, radius, P2); // calculate orthonormal basis\n\n      T.subVectors(P2, P1);\n      N.addVectors(P2, P1);\n      B.crossVectors(T, N);\n      N.crossVectors(B, T); // normalize B, N. T can be ignored, we don't use it\n\n      B.normalize();\n      N.normalize();\n\n      for (j = 0; j <= radialSegments; ++j) {\n        // now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n        // because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n        var v = j / radialSegments * Math.PI * 2;\n        var cx = -tube * Math.cos(v);\n        var cy = tube * Math.sin(v); // now calculate the final vertex position.\n        // first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n        vertex.x = P1.x + (cx * N.x + cy * B.x);\n        vertex.y = P1.y + (cx * N.y + cy * B.y);\n        vertex.z = P1.z + (cx * N.z + cy * B.z); // vertex\n\n        vertices.setXYZ(index, vertex.x, vertex.y, vertex.z); // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n        normal.subVectors(vertex, P1).normalize();\n        normals.setXYZ(index, normal.x, normal.y, normal.z); // uv\n\n        uv.x = i / tubularSegments;\n        uv.y = j / radialSegments;\n        uvs.setXY(index, uv.x, uv.y); // increase index\n\n        index++;\n      }\n    } // generate indices\n\n\n    for (j = 1; j <= tubularSegments; j++) {\n      for (i = 1; i <= radialSegments; i++) {\n        // indices\n        var a = (radialSegments + 1) * (j - 1) + (i - 1);\n        var b = (radialSegments + 1) * j + (i - 1);\n        var c = (radialSegments + 1) * j + i;\n        var d = (radialSegments + 1) * (j - 1) + i; // face one\n\n        indices.setX(indexOffset, a);\n        indexOffset++;\n        indices.setX(indexOffset, b);\n        indexOffset++;\n        indices.setX(indexOffset, d);\n        indexOffset++; // face two\n\n        indices.setX(indexOffset, b);\n        indexOffset++;\n        indices.setX(indexOffset, c);\n        indexOffset++;\n        indices.setX(indexOffset, d);\n        indexOffset++;\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', vertices);\n    this.addAttribute('normal', normals);\n    this.addAttribute('uv', uvs); // this function calculates the current position on the torus curve\n\n    function calculatePositionOnCurve(u, p, q, radius, position) {\n      var cu = Math.cos(u);\n      var su = Math.sin(u);\n      var quOverP = q / p * u;\n      var cs = Math.cos(quOverP);\n      position.x = radius * (2 + cs) * 0.5 * cu;\n      position.y = radius * (2 + cs) * su * 0.5;\n      position.z = radius * Math.sin(quOverP) * 0.5;\n    }\n  };\n\n  THREE.TorusKnotBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\n  THREE.TorusKnotBufferGeometry.prototype.constructor = THREE.TorusKnotBufferGeometry; // File:src/extras/geometries/TorusKnotGeometry.js\n\n  /**\n   * @author oosmoxiecode\n   */\n\n  THREE.TorusKnotGeometry = function (radius, tube, tubularSegments, radialSegments, p, q, heightScale) {\n    THREE.Geometry.call(this);\n    this.type = 'TorusKnotGeometry';\n    this.parameters = {\n      radius: radius,\n      tube: tube,\n      tubularSegments: tubularSegments,\n      radialSegments: radialSegments,\n      p: p,\n      q: q\n    };\n    if (heightScale !== undefined) console.warn('THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.');\n    this.fromBufferGeometry(new THREE.TorusKnotBufferGeometry(radius, tube, tubularSegments, radialSegments, p, q));\n    this.mergeVertices();\n  };\n\n  THREE.TorusKnotGeometry.prototype = Object.create(THREE.Geometry.prototype);\n  THREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry; // File:src/extras/geometries/TubeGeometry.js\n\n  /**\n   * @author WestLangley / https://github.com/WestLangley\n   * @author zz85 / https://github.com/zz85\n   * @author miningold / https://github.com/miningold\n   * @author jonobr1 / https://github.com/jonobr1\n   *\n   * Modified from the TorusKnotGeometry by @oosmoxiecode\n   *\n   * Creates a tube which extrudes along a 3d spline\n   *\n   * Uses parallel transport frames as described in\n   * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n   */\n\n  THREE.TubeGeometry = function (path, segments, radius, radialSegments, closed, taper) {\n    THREE.Geometry.call(this);\n    this.type = 'TubeGeometry';\n    this.parameters = {\n      path: path,\n      segments: segments,\n      radius: radius,\n      radialSegments: radialSegments,\n      closed: closed,\n      taper: taper\n    };\n    segments = segments || 64;\n    radius = radius || 1;\n    radialSegments = radialSegments || 8;\n    closed = closed || false;\n    taper = taper || THREE.TubeGeometry.NoTaper;\n    var grid = [];\n    var scope = this,\n        tangent,\n        normal,\n        binormal,\n        numpoints = segments + 1,\n        u,\n        v,\n        r,\n        cx,\n        cy,\n        pos,\n        pos2 = new THREE.Vector3(),\n        i,\n        j,\n        ip,\n        jp,\n        a,\n        b,\n        c,\n        d,\n        uva,\n        uvb,\n        uvc,\n        uvd;\n    var frames = new THREE.TubeGeometry.FrenetFrames(path, segments, closed),\n        tangents = frames.tangents,\n        normals = frames.normals,\n        binormals = frames.binormals; // proxy internals\n\n    this.tangents = tangents;\n    this.normals = normals;\n    this.binormals = binormals;\n\n    function vert(x, y, z) {\n      return scope.vertices.push(new THREE.Vector3(x, y, z)) - 1;\n    } // construct the grid\n\n\n    for (i = 0; i < numpoints; i++) {\n      grid[i] = [];\n      u = i / (numpoints - 1);\n      pos = path.getPointAt(u);\n      tangent = tangents[i];\n      normal = normals[i];\n      binormal = binormals[i];\n      r = radius * taper(u);\n\n      for (j = 0; j < radialSegments; j++) {\n        v = j / radialSegments * 2 * Math.PI;\n        cx = -r * Math.cos(v); // TODO: Hack: Negating it so it faces outside.\n\n        cy = r * Math.sin(v);\n        pos2.copy(pos);\n        pos2.x += cx * normal.x + cy * binormal.x;\n        pos2.y += cx * normal.y + cy * binormal.y;\n        pos2.z += cx * normal.z + cy * binormal.z;\n        grid[i][j] = vert(pos2.x, pos2.y, pos2.z);\n      }\n    } // construct the mesh\n\n\n    for (i = 0; i < segments; i++) {\n      for (j = 0; j < radialSegments; j++) {\n        ip = closed ? (i + 1) % segments : i + 1;\n        jp = (j + 1) % radialSegments;\n        a = grid[i][j]; // *** NOT NECESSARILY PLANAR ! ***\n\n        b = grid[ip][j];\n        c = grid[ip][jp];\n        d = grid[i][jp];\n        uva = new THREE.Vector2(i / segments, j / radialSegments);\n        uvb = new THREE.Vector2((i + 1) / segments, j / radialSegments);\n        uvc = new THREE.Vector2((i + 1) / segments, (j + 1) / radialSegments);\n        uvd = new THREE.Vector2(i / segments, (j + 1) / radialSegments);\n        this.faces.push(new THREE.Face3(a, b, d));\n        this.faceVertexUvs[0].push([uva, uvb, uvd]);\n        this.faces.push(new THREE.Face3(b, c, d));\n        this.faceVertexUvs[0].push([uvb.clone(), uvc, uvd.clone()]);\n      }\n    }\n\n    this.computeFaceNormals();\n    this.computeVertexNormals();\n  };\n\n  THREE.TubeGeometry.prototype = Object.create(THREE.Geometry.prototype);\n  THREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\n\n  THREE.TubeGeometry.NoTaper = function (u) {\n    return 1;\n  };\n\n  THREE.TubeGeometry.SinusoidalTaper = function (u) {\n    return Math.sin(Math.PI * u);\n  }; // For computing of Frenet frames, exposing the tangents, normals and binormals the spline\n\n\n  THREE.TubeGeometry.FrenetFrames = function (path, segments, closed) {\n    var normal = new THREE.Vector3(),\n        tangents = [],\n        normals = [],\n        binormals = [],\n        vec = new THREE.Vector3(),\n        mat = new THREE.Matrix4(),\n        numpoints = segments + 1,\n        theta,\n        smallest,\n        tx,\n        ty,\n        tz,\n        i,\n        u; // expose internals\n\n    this.tangents = tangents;\n    this.normals = normals;\n    this.binormals = binormals; // compute the tangent vectors for each segment on the path\n\n    for (i = 0; i < numpoints; i++) {\n      u = i / (numpoints - 1);\n      tangents[i] = path.getTangentAt(u);\n      tangents[i].normalize();\n    }\n\n    initialNormal3();\n    /*\n    function initialNormal1(lastBinormal) {\n    \t// fixed start binormal. Has dangers of 0 vectors\n    \tnormals[ 0 ] = new THREE.Vector3();\n    \tbinormals[ 0 ] = new THREE.Vector3();\n    \tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\n    \tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\n    \tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\n    }\n    \tfunction initialNormal2() {\n    \t\t// This uses the Frenet-Serret formula for deriving binormal\n    \tvar t2 = path.getTangentAt( epsilon );\n    \t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\n    \tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\n    \t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\n    \tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\n    \t}\n    */\n\n    function initialNormal3() {\n      // select an initial normal vector perpendicular to the first tangent vector,\n      // and in the direction of the smallest tangent xyz component\n      normals[0] = new THREE.Vector3();\n      binormals[0] = new THREE.Vector3();\n      smallest = Number.MAX_VALUE;\n      tx = Math.abs(tangents[0].x);\n      ty = Math.abs(tangents[0].y);\n      tz = Math.abs(tangents[0].z);\n\n      if (tx <= smallest) {\n        smallest = tx;\n        normal.set(1, 0, 0);\n      }\n\n      if (ty <= smallest) {\n        smallest = ty;\n        normal.set(0, 1, 0);\n      }\n\n      if (tz <= smallest) {\n        normal.set(0, 0, 1);\n      }\n\n      vec.crossVectors(tangents[0], normal).normalize();\n      normals[0].crossVectors(tangents[0], vec);\n      binormals[0].crossVectors(tangents[0], normals[0]);\n    } // compute the slowly-varying normal and binormal vectors for each segment on the path\n\n\n    for (i = 1; i < numpoints; i++) {\n      normals[i] = normals[i - 1].clone();\n      binormals[i] = binormals[i - 1].clone();\n      vec.crossVectors(tangents[i - 1], tangents[i]);\n\n      if (vec.length() > Number.EPSILON) {\n        vec.normalize();\n        theta = Math.acos(THREE.Math.clamp(tangents[i - 1].dot(tangents[i]), -1, 1)); // clamp for floating pt errors\n\n        normals[i].applyMatrix4(mat.makeRotationAxis(vec, theta));\n      }\n\n      binormals[i].crossVectors(tangents[i], normals[i]);\n    } // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\n    if (closed) {\n      theta = Math.acos(THREE.Math.clamp(normals[0].dot(normals[numpoints - 1]), -1, 1));\n      theta /= numpoints - 1;\n\n      if (tangents[0].dot(vec.crossVectors(normals[0], normals[numpoints - 1])) > 0) {\n        theta = -theta;\n      }\n\n      for (i = 1; i < numpoints; i++) {\n        // twist a little...\n        normals[i].applyMatrix4(mat.makeRotationAxis(tangents[i], theta * i));\n        binormals[i].crossVectors(tangents[i], normals[i]);\n      }\n    }\n  }; // File:src/extras/geometries/PolyhedronGeometry.js\n\n  /**\n   * @author clockworkgeek / https://github.com/clockworkgeek\n   * @author timothypratley / https://github.com/timothypratley\n   * @author WestLangley / http://github.com/WestLangley\n  */\n\n\n  THREE.PolyhedronGeometry = function (vertices, indices, radius, detail) {\n    THREE.Geometry.call(this);\n    this.type = 'PolyhedronGeometry';\n    this.parameters = {\n      vertices: vertices,\n      indices: indices,\n      radius: radius,\n      detail: detail\n    };\n    radius = radius || 1;\n    detail = detail || 0;\n    var that = this;\n\n    for (var i = 0, l = vertices.length; i < l; i += 3) {\n      prepare(new THREE.Vector3(vertices[i], vertices[i + 1], vertices[i + 2]));\n    }\n\n    var p = this.vertices;\n    var faces = [];\n\n    for (var i = 0, j = 0, l = indices.length; i < l; i += 3, j++) {\n      var v1 = p[indices[i]];\n      var v2 = p[indices[i + 1]];\n      var v3 = p[indices[i + 2]];\n      faces[j] = new THREE.Face3(v1.index, v2.index, v3.index, [v1.clone(), v2.clone(), v3.clone()]);\n    }\n\n    var centroid = new THREE.Vector3();\n\n    for (var i = 0, l = faces.length; i < l; i++) {\n      subdivide(faces[i], detail);\n    } // Handle case when face straddles the seam\n\n\n    for (var i = 0, l = this.faceVertexUvs[0].length; i < l; i++) {\n      var uvs = this.faceVertexUvs[0][i];\n      var x0 = uvs[0].x;\n      var x1 = uvs[1].x;\n      var x2 = uvs[2].x;\n      var max = Math.max(x0, x1, x2);\n      var min = Math.min(x0, x1, x2);\n\n      if (max > 0.9 && min < 0.1) {\n        // 0.9 is somewhat arbitrary\n        if (x0 < 0.2) uvs[0].x += 1;\n        if (x1 < 0.2) uvs[1].x += 1;\n        if (x2 < 0.2) uvs[2].x += 1;\n      }\n    } // Apply radius\n\n\n    for (var i = 0, l = this.vertices.length; i < l; i++) {\n      this.vertices[i].multiplyScalar(radius);\n    } // Merge vertices\n\n\n    this.mergeVertices();\n    this.computeFaceNormals();\n    this.boundingSphere = new THREE.Sphere(new THREE.Vector3(), radius); // Project vector onto sphere's surface\n\n    function prepare(vector) {\n      var vertex = vector.normalize().clone();\n      vertex.index = that.vertices.push(vertex) - 1; // Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\n\n      var u = azimuth(vector) / 2 / Math.PI + 0.5;\n      var v = inclination(vector) / Math.PI + 0.5;\n      vertex.uv = new THREE.Vector2(u, 1 - v);\n      return vertex;\n    } // Approximate a curved face with recursively sub-divided triangles.\n\n\n    function make(v1, v2, v3) {\n      var face = new THREE.Face3(v1.index, v2.index, v3.index, [v1.clone(), v2.clone(), v3.clone()]);\n      that.faces.push(face);\n      centroid.copy(v1).add(v2).add(v3).divideScalar(3);\n      var azi = azimuth(centroid);\n      that.faceVertexUvs[0].push([correctUV(v1.uv, v1, azi), correctUV(v2.uv, v2, azi), correctUV(v3.uv, v3, azi)]);\n    } // Analytically subdivide a face to the required detail level.\n\n\n    function subdivide(face, detail) {\n      var cols = Math.pow(2, detail);\n      var a = prepare(that.vertices[face.a]);\n      var b = prepare(that.vertices[face.b]);\n      var c = prepare(that.vertices[face.c]);\n      var v = []; // Construct all of the vertices for this subdivision.\n\n      for (var i = 0; i <= cols; i++) {\n        v[i] = [];\n        var aj = prepare(a.clone().lerp(c, i / cols));\n        var bj = prepare(b.clone().lerp(c, i / cols));\n        var rows = cols - i;\n\n        for (var j = 0; j <= rows; j++) {\n          if (j === 0 && i === cols) {\n            v[i][j] = aj;\n          } else {\n            v[i][j] = prepare(aj.clone().lerp(bj, j / rows));\n          }\n        }\n      } // Construct all of the faces.\n\n\n      for (var i = 0; i < cols; i++) {\n        for (var j = 0; j < 2 * (cols - i) - 1; j++) {\n          var k = Math.floor(j / 2);\n\n          if (j % 2 === 0) {\n            make(v[i][k + 1], v[i + 1][k], v[i][k]);\n          } else {\n            make(v[i][k + 1], v[i + 1][k + 1], v[i + 1][k]);\n          }\n        }\n      }\n    } // Angle around the Y axis, counter-clockwise when looking from above.\n\n\n    function azimuth(vector) {\n      return Math.atan2(vector.z, -vector.x);\n    } // Angle above the XZ plane.\n\n\n    function inclination(vector) {\n      return Math.atan2(-vector.y, Math.sqrt(vector.x * vector.x + vector.z * vector.z));\n    } // Texture fixing helper. Spheres have some odd behaviours.\n\n\n    function correctUV(uv, vector, azimuth) {\n      if (azimuth < 0 && uv.x === 1) uv = new THREE.Vector2(uv.x - 1, uv.y);\n      if (vector.x === 0 && vector.z === 0) uv = new THREE.Vector2(azimuth / 2 / Math.PI + 0.5, uv.y);\n      return uv.clone();\n    }\n  };\n\n  THREE.PolyhedronGeometry.prototype = Object.create(THREE.Geometry.prototype);\n  THREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry; // File:src/extras/geometries/DodecahedronGeometry.js\n\n  /**\n   * @author Abe Pazos / https://hamoid.com\n   */\n\n  THREE.DodecahedronGeometry = function (radius, detail) {\n    var t = (1 + Math.sqrt(5)) / 2;\n    var r = 1 / t;\n    var vertices = [// (±1, ±1, ±1)\n    -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, // (0, ±1/φ, ±φ)\n    0, -r, -t, 0, -r, t, 0, r, -t, 0, r, t, // (±1/φ, ±φ, 0)\n    -r, -t, 0, -r, t, 0, r, -t, 0, r, t, 0, // (±φ, 0, ±1/φ)\n    -t, 0, -r, t, 0, -r, -t, 0, r, t, 0, r];\n    var indices = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];\n    THREE.PolyhedronGeometry.call(this, vertices, indices, radius, detail);\n    this.type = 'DodecahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  };\n\n  THREE.DodecahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype);\n  THREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry; // File:src/extras/geometries/IcosahedronGeometry.js\n\n  /**\n   * @author timothypratley / https://github.com/timothypratley\n   */\n\n  THREE.IcosahedronGeometry = function (radius, detail) {\n    var t = (1 + Math.sqrt(5)) / 2;\n    var vertices = [-1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, 0, 0, -1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, t, 0, -1, t, 0, 1, -t, 0, -1, -t, 0, 1];\n    var indices = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];\n    THREE.PolyhedronGeometry.call(this, vertices, indices, radius, detail);\n    this.type = 'IcosahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  };\n\n  THREE.IcosahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype);\n  THREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry; // File:src/extras/geometries/OctahedronGeometry.js\n\n  /**\n   * @author timothypratley / https://github.com/timothypratley\n   */\n\n  THREE.OctahedronGeometry = function (radius, detail) {\n    var vertices = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1];\n    var indices = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];\n    THREE.PolyhedronGeometry.call(this, vertices, indices, radius, detail);\n    this.type = 'OctahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  };\n\n  THREE.OctahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype);\n  THREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry; // File:src/extras/geometries/TetrahedronGeometry.js\n\n  /**\n   * @author timothypratley / https://github.com/timothypratley\n   */\n\n  THREE.TetrahedronGeometry = function (radius, detail) {\n    var vertices = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1];\n    var indices = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];\n    THREE.PolyhedronGeometry.call(this, vertices, indices, radius, detail);\n    this.type = 'TetrahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  };\n\n  THREE.TetrahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype);\n  THREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry; // File:src/extras/geometries/ParametricGeometry.js\n\n  /**\n   * @author zz85 / https://github.com/zz85\n   * Parametric Surfaces Geometry\n   * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n   *\n   * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\n   *\n   */\n\n  THREE.ParametricGeometry = function (func, slices, stacks) {\n    THREE.Geometry.call(this);\n    this.type = 'ParametricGeometry';\n    this.parameters = {\n      func: func,\n      slices: slices,\n      stacks: stacks\n    };\n    var verts = this.vertices;\n    var faces = this.faces;\n    var uvs = this.faceVertexUvs[0];\n    var i, j, p;\n    var u, v;\n    var sliceCount = slices + 1;\n\n    for (i = 0; i <= stacks; i++) {\n      v = i / stacks;\n\n      for (j = 0; j <= slices; j++) {\n        u = j / slices;\n        p = func(u, v);\n        verts.push(p);\n      }\n    }\n\n    var a, b, c, d;\n    var uva, uvb, uvc, uvd;\n\n    for (i = 0; i < stacks; i++) {\n      for (j = 0; j < slices; j++) {\n        a = i * sliceCount + j;\n        b = i * sliceCount + j + 1;\n        c = (i + 1) * sliceCount + j + 1;\n        d = (i + 1) * sliceCount + j;\n        uva = new THREE.Vector2(j / slices, i / stacks);\n        uvb = new THREE.Vector2((j + 1) / slices, i / stacks);\n        uvc = new THREE.Vector2((j + 1) / slices, (i + 1) / stacks);\n        uvd = new THREE.Vector2(j / slices, (i + 1) / stacks);\n        faces.push(new THREE.Face3(a, b, d));\n        uvs.push([uva, uvb, uvd]);\n        faces.push(new THREE.Face3(b, c, d));\n        uvs.push([uvb.clone(), uvc, uvd.clone()]);\n      }\n    } // console.log(this);\n    // magic bullet\n    // var diff = this.mergeVertices();\n    // console.log('removed ', diff, ' vertices by merging');\n\n\n    this.computeFaceNormals();\n    this.computeVertexNormals();\n  };\n\n  THREE.ParametricGeometry.prototype = Object.create(THREE.Geometry.prototype);\n  THREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry; // File:src/extras/geometries/WireframeGeometry.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.WireframeGeometry = function (geometry) {\n    THREE.BufferGeometry.call(this);\n    var edge = [0, 0],\n        hash = {};\n\n    function sortFunction(a, b) {\n      return a - b;\n    }\n\n    var keys = ['a', 'b', 'c'];\n\n    if (geometry instanceof THREE.Geometry) {\n      var vertices = geometry.vertices;\n      var faces = geometry.faces;\n      var numEdges = 0; // allocate maximal size\n\n      var edges = new Uint32Array(6 * faces.length);\n\n      for (var i = 0, l = faces.length; i < l; i++) {\n        var face = faces[i];\n\n        for (var j = 0; j < 3; j++) {\n          edge[0] = face[keys[j]];\n          edge[1] = face[keys[(j + 1) % 3]];\n          edge.sort(sortFunction);\n          var key = edge.toString();\n\n          if (hash[key] === undefined) {\n            edges[2 * numEdges] = edge[0];\n            edges[2 * numEdges + 1] = edge[1];\n            hash[key] = true;\n            numEdges++;\n          }\n        }\n      }\n\n      var coords = new Float32Array(numEdges * 2 * 3);\n\n      for (var i = 0, l = numEdges; i < l; i++) {\n        for (var j = 0; j < 2; j++) {\n          var vertex = vertices[edges[2 * i + j]];\n          var index = 6 * i + 3 * j;\n          coords[index + 0] = vertex.x;\n          coords[index + 1] = vertex.y;\n          coords[index + 2] = vertex.z;\n        }\n      }\n\n      this.addAttribute('position', new THREE.BufferAttribute(coords, 3));\n    } else if (geometry instanceof THREE.BufferGeometry) {\n      if (geometry.index !== null) {\n        // Indexed BufferGeometry\n        var indices = geometry.index.array;\n        var vertices = geometry.attributes.position;\n        var groups = geometry.groups;\n        var numEdges = 0;\n\n        if (groups.length === 0) {\n          geometry.addGroup(0, indices.length);\n        } // allocate maximal size\n\n\n        var edges = new Uint32Array(2 * indices.length);\n\n        for (var o = 0, ol = groups.length; o < ol; ++o) {\n          var group = groups[o];\n          var start = group.start;\n          var count = group.count;\n\n          for (var i = start, il = start + count; i < il; i += 3) {\n            for (var j = 0; j < 3; j++) {\n              edge[0] = indices[i + j];\n              edge[1] = indices[i + (j + 1) % 3];\n              edge.sort(sortFunction);\n              var key = edge.toString();\n\n              if (hash[key] === undefined) {\n                edges[2 * numEdges] = edge[0];\n                edges[2 * numEdges + 1] = edge[1];\n                hash[key] = true;\n                numEdges++;\n              }\n            }\n          }\n        }\n\n        var coords = new Float32Array(numEdges * 2 * 3);\n\n        for (var i = 0, l = numEdges; i < l; i++) {\n          for (var j = 0; j < 2; j++) {\n            var index = 6 * i + 3 * j;\n            var index2 = edges[2 * i + j];\n            coords[index + 0] = vertices.getX(index2);\n            coords[index + 1] = vertices.getY(index2);\n            coords[index + 2] = vertices.getZ(index2);\n          }\n        }\n\n        this.addAttribute('position', new THREE.BufferAttribute(coords, 3));\n      } else {\n        // non-indexed BufferGeometry\n        var vertices = geometry.attributes.position.array;\n        var numEdges = vertices.length / 3;\n        var numTris = numEdges / 3;\n        var coords = new Float32Array(numEdges * 2 * 3);\n\n        for (var i = 0, l = numTris; i < l; i++) {\n          for (var j = 0; j < 3; j++) {\n            var index = 18 * i + 6 * j;\n            var index1 = 9 * i + 3 * j;\n            coords[index + 0] = vertices[index1];\n            coords[index + 1] = vertices[index1 + 1];\n            coords[index + 2] = vertices[index1 + 2];\n            var index2 = 9 * i + 3 * ((j + 1) % 3);\n            coords[index + 3] = vertices[index2];\n            coords[index + 4] = vertices[index2 + 1];\n            coords[index + 5] = vertices[index2 + 2];\n          }\n        }\n\n        this.addAttribute('position', new THREE.BufferAttribute(coords, 3));\n      }\n    }\n  };\n\n  THREE.WireframeGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\n  THREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry; // File:src/extras/helpers/AxisHelper.js\n\n  /**\n   * @author sroucheray / http://sroucheray.org/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  THREE.AxisHelper = function (size) {\n    size = size || 1;\n    var vertices = new Float32Array([0, 0, 0, size, 0, 0, 0, 0, 0, 0, size, 0, 0, 0, 0, 0, 0, size]);\n    var colors = new Float32Array([1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1]);\n    var geometry = new THREE.BufferGeometry();\n    geometry.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n    geometry.addAttribute('color', new THREE.BufferAttribute(colors, 3));\n    var material = new THREE.LineBasicMaterial({\n      vertexColors: THREE.VertexColors\n    });\n    THREE.LineSegments.call(this, geometry, material);\n  };\n\n  THREE.AxisHelper.prototype = Object.create(THREE.LineSegments.prototype);\n  THREE.AxisHelper.prototype.constructor = THREE.AxisHelper; // File:src/extras/helpers/ArrowHelper.js\n\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   * @author zz85 / http://github.com/zz85\n   * @author bhouston / http://clara.io\n   *\n   * Creates an arrow for visualizing directions\n   *\n   * Parameters:\n   *  dir - Vector3\n   *  origin - Vector3\n   *  length - Number\n   *  color - color in hex value\n   *  headLength - Number\n   *  headWidth - Number\n   */\n\n  THREE.ArrowHelper = function () {\n    var lineGeometry = new THREE.BufferGeometry();\n    lineGeometry.addAttribute('position', new THREE.Float32Attribute([0, 0, 0, 0, 1, 0], 3));\n    var coneGeometry = new THREE.CylinderBufferGeometry(0, 0.5, 1, 5, 1);\n    coneGeometry.translate(0, -0.5, 0);\n    return function ArrowHelper(dir, origin, length, color, headLength, headWidth) {\n      // dir is assumed to be normalized\n      THREE.Object3D.call(this);\n      if (color === undefined) color = 0xffff00;\n      if (length === undefined) length = 1;\n      if (headLength === undefined) headLength = 0.2 * length;\n      if (headWidth === undefined) headWidth = 0.2 * headLength;\n      this.position.copy(origin);\n      this.line = new THREE.Line(lineGeometry, new THREE.LineBasicMaterial({\n        color: color\n      }));\n      this.line.matrixAutoUpdate = false;\n      this.add(this.line);\n      this.cone = new THREE.Mesh(coneGeometry, new THREE.MeshBasicMaterial({\n        color: color\n      }));\n      this.cone.matrixAutoUpdate = false;\n      this.add(this.cone);\n      this.setDirection(dir);\n      this.setLength(length, headLength, headWidth);\n    };\n  }();\n\n  THREE.ArrowHelper.prototype = Object.create(THREE.Object3D.prototype);\n  THREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\n\n  THREE.ArrowHelper.prototype.setDirection = function () {\n    var axis = new THREE.Vector3();\n    var radians;\n    return function setDirection(dir) {\n      // dir is assumed to be normalized\n      if (dir.y > 0.99999) {\n        this.quaternion.set(0, 0, 0, 1);\n      } else if (dir.y < -0.99999) {\n        this.quaternion.set(1, 0, 0, 0);\n      } else {\n        axis.set(dir.z, 0, -dir.x).normalize();\n        radians = Math.acos(dir.y);\n        this.quaternion.setFromAxisAngle(axis, radians);\n      }\n    };\n  }();\n\n  THREE.ArrowHelper.prototype.setLength = function (length, headLength, headWidth) {\n    if (headLength === undefined) headLength = 0.2 * length;\n    if (headWidth === undefined) headWidth = 0.2 * headLength;\n    this.line.scale.set(1, Math.max(0, length - headLength), 1);\n    this.line.updateMatrix();\n    this.cone.scale.set(headWidth, headLength, headWidth);\n    this.cone.position.y = length;\n    this.cone.updateMatrix();\n  };\n\n  THREE.ArrowHelper.prototype.setColor = function (color) {\n    this.line.material.color.copy(color);\n    this.cone.material.color.copy(color);\n  }; // File:src/extras/helpers/BoxHelper.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  THREE.BoxHelper = function (object, color) {\n    if (color === undefined) color = 0xffff00;\n    var indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n    var positions = new Float32Array(8 * 3);\n    var geometry = new THREE.BufferGeometry();\n    geometry.setIndex(new THREE.BufferAttribute(indices, 1));\n    geometry.addAttribute('position', new THREE.BufferAttribute(positions, 3));\n    THREE.LineSegments.call(this, geometry, new THREE.LineBasicMaterial({\n      color: color\n    }));\n\n    if (object !== undefined) {\n      this.update(object);\n    }\n  };\n\n  THREE.BoxHelper.prototype = Object.create(THREE.LineSegments.prototype);\n  THREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\n\n  THREE.BoxHelper.prototype.update = function () {\n    var box = new THREE.Box3();\n    return function update(object) {\n      if (object instanceof THREE.Box3) {\n        box.copy(object);\n      } else {\n        box.setFromObject(object);\n      }\n\n      if (box.isEmpty()) return;\n      var min = box.min;\n      var max = box.max;\n      /*\n        5____4\n      1/___0/|\n      | 6__|_7\n      2/___3/\n      \t0: max.x, max.y, max.z\n      1: min.x, max.y, max.z\n      2: min.x, min.y, max.z\n      3: max.x, min.y, max.z\n      4: max.x, max.y, min.z\n      5: min.x, max.y, min.z\n      6: min.x, min.y, min.z\n      7: max.x, min.y, min.z\n      */\n\n      var position = this.geometry.attributes.position;\n      var array = position.array;\n      array[0] = max.x;\n      array[1] = max.y;\n      array[2] = max.z;\n      array[3] = min.x;\n      array[4] = max.y;\n      array[5] = max.z;\n      array[6] = min.x;\n      array[7] = min.y;\n      array[8] = max.z;\n      array[9] = max.x;\n      array[10] = min.y;\n      array[11] = max.z;\n      array[12] = max.x;\n      array[13] = max.y;\n      array[14] = min.z;\n      array[15] = min.x;\n      array[16] = max.y;\n      array[17] = min.z;\n      array[18] = min.x;\n      array[19] = min.y;\n      array[20] = min.z;\n      array[21] = max.x;\n      array[22] = min.y;\n      array[23] = min.z;\n      position.needsUpdate = true;\n      this.geometry.computeBoundingSphere();\n    };\n  }(); // File:src/extras/helpers/BoundingBoxHelper.js\n\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   */\n  // a helper to show the world-axis-aligned bounding box for an object\n\n\n  THREE.BoundingBoxHelper = function (object, hex) {\n    var color = hex !== undefined ? hex : 0x888888;\n    this.object = object;\n    this.box = new THREE.Box3();\n    THREE.Mesh.call(this, new THREE.BoxGeometry(1, 1, 1), new THREE.MeshBasicMaterial({\n      color: color,\n      wireframe: true\n    }));\n  };\n\n  THREE.BoundingBoxHelper.prototype = Object.create(THREE.Mesh.prototype);\n  THREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\n\n  THREE.BoundingBoxHelper.prototype.update = function () {\n    this.box.setFromObject(this.object);\n    this.box.size(this.scale);\n    this.box.center(this.position);\n  }; // File:src/extras/helpers/CameraHelper.js\n\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   *\n   *\t- shows frustum, line of sight and up of the camera\n   *\t- suitable for fast updates\n   * \t- based on frustum visualization in lightgl.js shadowmap example\n   *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n   */\n\n\n  THREE.CameraHelper = function (camera) {\n    var geometry = new THREE.Geometry();\n    var material = new THREE.LineBasicMaterial({\n      color: 0xffffff,\n      vertexColors: THREE.FaceColors\n    });\n    var pointMap = {}; // colors\n\n    var hexFrustum = 0xffaa00;\n    var hexCone = 0xff0000;\n    var hexUp = 0x00aaff;\n    var hexTarget = 0xffffff;\n    var hexCross = 0x333333; // near\n\n    addLine(\"n1\", \"n2\", hexFrustum);\n    addLine(\"n2\", \"n4\", hexFrustum);\n    addLine(\"n4\", \"n3\", hexFrustum);\n    addLine(\"n3\", \"n1\", hexFrustum); // far\n\n    addLine(\"f1\", \"f2\", hexFrustum);\n    addLine(\"f2\", \"f4\", hexFrustum);\n    addLine(\"f4\", \"f3\", hexFrustum);\n    addLine(\"f3\", \"f1\", hexFrustum); // sides\n\n    addLine(\"n1\", \"f1\", hexFrustum);\n    addLine(\"n2\", \"f2\", hexFrustum);\n    addLine(\"n3\", \"f3\", hexFrustum);\n    addLine(\"n4\", \"f4\", hexFrustum); // cone\n\n    addLine(\"p\", \"n1\", hexCone);\n    addLine(\"p\", \"n2\", hexCone);\n    addLine(\"p\", \"n3\", hexCone);\n    addLine(\"p\", \"n4\", hexCone); // up\n\n    addLine(\"u1\", \"u2\", hexUp);\n    addLine(\"u2\", \"u3\", hexUp);\n    addLine(\"u3\", \"u1\", hexUp); // target\n\n    addLine(\"c\", \"t\", hexTarget);\n    addLine(\"p\", \"c\", hexCross); // cross\n\n    addLine(\"cn1\", \"cn2\", hexCross);\n    addLine(\"cn3\", \"cn4\", hexCross);\n    addLine(\"cf1\", \"cf2\", hexCross);\n    addLine(\"cf3\", \"cf4\", hexCross);\n\n    function addLine(a, b, hex) {\n      addPoint(a, hex);\n      addPoint(b, hex);\n    }\n\n    function addPoint(id, hex) {\n      geometry.vertices.push(new THREE.Vector3());\n      geometry.colors.push(new THREE.Color(hex));\n\n      if (pointMap[id] === undefined) {\n        pointMap[id] = [];\n      }\n\n      pointMap[id].push(geometry.vertices.length - 1);\n    }\n\n    THREE.LineSegments.call(this, geometry, material);\n    this.camera = camera;\n    if (this.camera.updateProjectionMatrix) this.camera.updateProjectionMatrix();\n    this.matrix = camera.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.pointMap = pointMap;\n    this.update();\n  };\n\n  THREE.CameraHelper.prototype = Object.create(THREE.LineSegments.prototype);\n  THREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\n\n  THREE.CameraHelper.prototype.update = function () {\n    var geometry, pointMap;\n    var vector = new THREE.Vector3();\n    var camera = new THREE.Camera();\n\n    function setPoint(point, x, y, z) {\n      vector.set(x, y, z).unproject(camera);\n      var points = pointMap[point];\n\n      if (points !== undefined) {\n        for (var i = 0, il = points.length; i < il; i++) {\n          geometry.vertices[points[i]].copy(vector);\n        }\n      }\n    }\n\n    return function update() {\n      geometry = this.geometry;\n      pointMap = this.pointMap;\n      var w = 1,\n          h = 1; // we need just camera projection matrix\n      // world matrix must be identity\n\n      camera.projectionMatrix.copy(this.camera.projectionMatrix); // center / target\n\n      setPoint(\"c\", 0, 0, -1);\n      setPoint(\"t\", 0, 0, 1); // near\n\n      setPoint(\"n1\", -w, -h, -1);\n      setPoint(\"n2\", w, -h, -1);\n      setPoint(\"n3\", -w, h, -1);\n      setPoint(\"n4\", w, h, -1); // far\n\n      setPoint(\"f1\", -w, -h, 1);\n      setPoint(\"f2\", w, -h, 1);\n      setPoint(\"f3\", -w, h, 1);\n      setPoint(\"f4\", w, h, 1); // up\n\n      setPoint(\"u1\", w * 0.7, h * 1.1, -1);\n      setPoint(\"u2\", -w * 0.7, h * 1.1, -1);\n      setPoint(\"u3\", 0, h * 2, -1); // cross\n\n      setPoint(\"cf1\", -w, 0, 1);\n      setPoint(\"cf2\", w, 0, 1);\n      setPoint(\"cf3\", 0, -h, 1);\n      setPoint(\"cf4\", 0, h, 1);\n      setPoint(\"cn1\", -w, 0, -1);\n      setPoint(\"cn2\", w, 0, -1);\n      setPoint(\"cn3\", 0, -h, -1);\n      setPoint(\"cn4\", 0, h, -1);\n      geometry.verticesNeedUpdate = true;\n    };\n  }(); // File:src/extras/helpers/DirectionalLightHelper.js\n\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n\n  THREE.DirectionalLightHelper = function (light, size) {\n    THREE.Object3D.call(this);\n    this.light = light;\n    this.light.updateMatrixWorld();\n    this.matrix = light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    if (size === undefined) size = 1;\n    var geometry = new THREE.BufferGeometry();\n    geometry.addAttribute('position', new THREE.Float32Attribute([-size, size, 0, size, size, 0, size, -size, 0, -size, -size, 0, -size, size, 0], 3));\n    var material = new THREE.LineBasicMaterial({\n      fog: false\n    });\n    this.add(new THREE.Line(geometry, material));\n    geometry = new THREE.BufferGeometry();\n    geometry.addAttribute('position', new THREE.Float32Attribute([0, 0, 0, 0, 0, 1], 3));\n    this.add(new THREE.Line(geometry, material));\n    this.update();\n  };\n\n  THREE.DirectionalLightHelper.prototype = Object.create(THREE.Object3D.prototype);\n  THREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\n\n  THREE.DirectionalLightHelper.prototype.dispose = function () {\n    var lightPlane = this.children[0];\n    var targetLine = this.children[1];\n    lightPlane.geometry.dispose();\n    lightPlane.material.dispose();\n    targetLine.geometry.dispose();\n    targetLine.material.dispose();\n  };\n\n  THREE.DirectionalLightHelper.prototype.update = function () {\n    var v1 = new THREE.Vector3();\n    var v2 = new THREE.Vector3();\n    var v3 = new THREE.Vector3();\n    return function update() {\n      v1.setFromMatrixPosition(this.light.matrixWorld);\n      v2.setFromMatrixPosition(this.light.target.matrixWorld);\n      v3.subVectors(v2, v1);\n      var lightPlane = this.children[0];\n      var targetLine = this.children[1];\n      lightPlane.lookAt(v3);\n      lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n      targetLine.lookAt(v3);\n      targetLine.scale.z = v3.length();\n    };\n  }(); // File:src/extras/helpers/EdgesHelper.js\n\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   * @param object THREE.Mesh whose geometry will be used\n   * @param hex line color\n   * @param thresholdAngle the minimum angle (in degrees),\n   * between the face normals of adjacent faces,\n   * that is required to render an edge. A value of 10 means\n   * an edge is only rendered if the angle is at least 10 degrees.\n   */\n\n\n  THREE.EdgesHelper = function (object, hex, thresholdAngle) {\n    var color = hex !== undefined ? hex : 0xffffff;\n    THREE.LineSegments.call(this, new THREE.EdgesGeometry(object.geometry, thresholdAngle), new THREE.LineBasicMaterial({\n      color: color\n    }));\n    this.matrix = object.matrixWorld;\n    this.matrixAutoUpdate = false;\n  };\n\n  THREE.EdgesHelper.prototype = Object.create(THREE.LineSegments.prototype);\n  THREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper; // File:src/extras/helpers/FaceNormalsHelper.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n  */\n\n  THREE.FaceNormalsHelper = function (object, size, hex, linewidth) {\n    // FaceNormalsHelper only supports THREE.Geometry\n    this.object = object;\n    this.size = size !== undefined ? size : 1;\n    var color = hex !== undefined ? hex : 0xffff00;\n    var width = linewidth !== undefined ? linewidth : 1; //\n\n    var nNormals = 0;\n    var objGeometry = this.object.geometry;\n\n    if (objGeometry instanceof THREE.Geometry) {\n      nNormals = objGeometry.faces.length;\n    } else {\n      console.warn('THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.');\n    } //\n\n\n    var geometry = new THREE.BufferGeometry();\n    var positions = new THREE.Float32Attribute(nNormals * 2 * 3, 3);\n    geometry.addAttribute('position', positions);\n    THREE.LineSegments.call(this, geometry, new THREE.LineBasicMaterial({\n      color: color,\n      linewidth: width\n    })); //\n\n    this.matrixAutoUpdate = false;\n    this.update();\n  };\n\n  THREE.FaceNormalsHelper.prototype = Object.create(THREE.LineSegments.prototype);\n  THREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\n\n  THREE.FaceNormalsHelper.prototype.update = function () {\n    var v1 = new THREE.Vector3();\n    var v2 = new THREE.Vector3();\n    var normalMatrix = new THREE.Matrix3();\n    return function update() {\n      this.object.updateMatrixWorld(true);\n      normalMatrix.getNormalMatrix(this.object.matrixWorld);\n      var matrixWorld = this.object.matrixWorld;\n      var position = this.geometry.attributes.position; //\n\n      var objGeometry = this.object.geometry;\n      var vertices = objGeometry.vertices;\n      var faces = objGeometry.faces;\n      var idx = 0;\n\n      for (var i = 0, l = faces.length; i < l; i++) {\n        var face = faces[i];\n        var normal = face.normal;\n        v1.copy(vertices[face.a]).add(vertices[face.b]).add(vertices[face.c]).divideScalar(3).applyMatrix4(matrixWorld);\n        v2.copy(normal).applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n        position.setXYZ(idx, v1.x, v1.y, v1.z);\n        idx = idx + 1;\n        position.setXYZ(idx, v2.x, v2.y, v2.z);\n        idx = idx + 1;\n      }\n\n      position.needsUpdate = true;\n      return this;\n    };\n  }(); // File:src/extras/helpers/GridHelper.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  THREE.GridHelper = function (size, divisions, color1, color2) {\n    divisions = divisions || 1;\n    color1 = new THREE.Color(color1 !== undefined ? color1 : 0x444444);\n    color2 = new THREE.Color(color2 !== undefined ? color2 : 0x888888);\n    var center = divisions / 2;\n    var step = size * 2 / divisions;\n    var vertices = [],\n        colors = [];\n\n    for (var i = 0, j = 0, k = -size; i <= divisions; i++, k += step) {\n      vertices.push(-size, 0, k, size, 0, k);\n      vertices.push(k, 0, -size, k, 0, size);\n      var color = i === center ? color1 : color2;\n      color.toArray(colors, j);\n      j += 3;\n      color.toArray(colors, j);\n      j += 3;\n      color.toArray(colors, j);\n      j += 3;\n      color.toArray(colors, j);\n      j += 3;\n    }\n\n    var geometry = new THREE.BufferGeometry();\n    geometry.addAttribute('position', new THREE.Float32Attribute(vertices, 3));\n    geometry.addAttribute('color', new THREE.Float32Attribute(colors, 3));\n    var material = new THREE.LineBasicMaterial({\n      vertexColors: THREE.VertexColors\n    });\n    THREE.LineSegments.call(this, geometry, material);\n  };\n\n  THREE.GridHelper.prototype = Object.create(THREE.LineSegments.prototype);\n  THREE.GridHelper.prototype.constructor = THREE.GridHelper;\n\n  THREE.GridHelper.prototype.setColors = function () {\n    console.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');\n  }; // File:src/extras/helpers/HemisphereLightHelper.js\n\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  THREE.HemisphereLightHelper = function (light, sphereSize) {\n    THREE.Object3D.call(this);\n    this.light = light;\n    this.light.updateMatrixWorld();\n    this.matrix = light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.colors = [new THREE.Color(), new THREE.Color()];\n    var geometry = new THREE.SphereGeometry(sphereSize, 4, 2);\n    geometry.rotateX(-Math.PI / 2);\n\n    for (var i = 0, il = 8; i < il; i++) {\n      geometry.faces[i].color = this.colors[i < 4 ? 0 : 1];\n    }\n\n    var material = new THREE.MeshBasicMaterial({\n      vertexColors: THREE.FaceColors,\n      wireframe: true\n    });\n    this.lightSphere = new THREE.Mesh(geometry, material);\n    this.add(this.lightSphere);\n    this.update();\n  };\n\n  THREE.HemisphereLightHelper.prototype = Object.create(THREE.Object3D.prototype);\n  THREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\n\n  THREE.HemisphereLightHelper.prototype.dispose = function () {\n    this.lightSphere.geometry.dispose();\n    this.lightSphere.material.dispose();\n  };\n\n  THREE.HemisphereLightHelper.prototype.update = function () {\n    var vector = new THREE.Vector3();\n    return function update() {\n      this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);\n      this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);\n      this.lightSphere.lookAt(vector.setFromMatrixPosition(this.light.matrixWorld).negate());\n      this.lightSphere.geometry.colorsNeedUpdate = true;\n    };\n  }(); // File:src/extras/helpers/PointLightHelper.js\n\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  THREE.PointLightHelper = function (light, sphereSize) {\n    this.light = light;\n    this.light.updateMatrixWorld();\n    var geometry = new THREE.SphereBufferGeometry(sphereSize, 4, 2);\n    var material = new THREE.MeshBasicMaterial({\n      wireframe: true,\n      fog: false\n    });\n    material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n    THREE.Mesh.call(this, geometry, material);\n    this.matrix = this.light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    /*\n    var distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n    var distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n    \tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n    this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n    \tvar d = light.distance;\n    \tif ( d === 0.0 ) {\n    \t\tthis.lightDistance.visible = false;\n    \t} else {\n    \t\tthis.lightDistance.scale.set( d, d, d );\n    \t}\n    \tthis.add( this.lightDistance );\n    */\n  };\n\n  THREE.PointLightHelper.prototype = Object.create(THREE.Mesh.prototype);\n  THREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\n\n  THREE.PointLightHelper.prototype.dispose = function () {\n    this.geometry.dispose();\n    this.material.dispose();\n  };\n\n  THREE.PointLightHelper.prototype.update = function () {\n    this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n    /*\n    var d = this.light.distance;\n    \tif ( d === 0.0 ) {\n    \t\tthis.lightDistance.visible = false;\n    \t} else {\n    \t\tthis.lightDistance.visible = true;\n    \tthis.lightDistance.scale.set( d, d, d );\n    \t}\n    */\n  }; // File:src/extras/helpers/SkeletonHelper.js\n\n  /**\n   * @author Sean Griffin / http://twitter.com/sgrif\n   * @author Michael Guerrero / http://realitymeltdown.com\n   * @author mrdoob / http://mrdoob.com/\n   * @author ikerr / http://verold.com\n   */\n\n\n  THREE.SkeletonHelper = function (object) {\n    this.bones = this.getBoneList(object);\n    var geometry = new THREE.Geometry();\n\n    for (var i = 0; i < this.bones.length; i++) {\n      var bone = this.bones[i];\n\n      if (bone.parent instanceof THREE.Bone) {\n        geometry.vertices.push(new THREE.Vector3());\n        geometry.vertices.push(new THREE.Vector3());\n        geometry.colors.push(new THREE.Color(0, 0, 1));\n        geometry.colors.push(new THREE.Color(0, 1, 0));\n      }\n    }\n\n    geometry.dynamic = true;\n    var material = new THREE.LineBasicMaterial({\n      vertexColors: THREE.VertexColors,\n      depthTest: false,\n      depthWrite: false,\n      transparent: true\n    });\n    THREE.LineSegments.call(this, geometry, material);\n    this.root = object;\n    this.matrix = object.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.update();\n  };\n\n  THREE.SkeletonHelper.prototype = Object.create(THREE.LineSegments.prototype);\n  THREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\n\n  THREE.SkeletonHelper.prototype.getBoneList = function (object) {\n    var boneList = [];\n\n    if (object instanceof THREE.Bone) {\n      boneList.push(object);\n    }\n\n    for (var i = 0; i < object.children.length; i++) {\n      boneList.push.apply(boneList, this.getBoneList(object.children[i]));\n    }\n\n    return boneList;\n  };\n\n  THREE.SkeletonHelper.prototype.update = function () {\n    var geometry = this.geometry;\n    var matrixWorldInv = new THREE.Matrix4().getInverse(this.root.matrixWorld);\n    var boneMatrix = new THREE.Matrix4();\n    var j = 0;\n\n    for (var i = 0; i < this.bones.length; i++) {\n      var bone = this.bones[i];\n\n      if (bone.parent instanceof THREE.Bone) {\n        boneMatrix.multiplyMatrices(matrixWorldInv, bone.matrixWorld);\n        geometry.vertices[j].setFromMatrixPosition(boneMatrix);\n        boneMatrix.multiplyMatrices(matrixWorldInv, bone.parent.matrixWorld);\n        geometry.vertices[j + 1].setFromMatrixPosition(boneMatrix);\n        j += 2;\n      }\n    }\n\n    geometry.verticesNeedUpdate = true;\n    geometry.computeBoundingSphere();\n  }; // File:src/extras/helpers/SpotLightHelper.js\n\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n  */\n\n\n  THREE.SpotLightHelper = function (light) {\n    THREE.Object3D.call(this);\n    this.light = light;\n    this.light.updateMatrixWorld();\n    this.matrix = light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    var geometry = new THREE.BufferGeometry();\n    var positions = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1];\n\n    for (var i = 0, j = 1, l = 32; i < l; i++, j++) {\n      var p1 = i / l * Math.PI * 2;\n      var p2 = j / l * Math.PI * 2;\n      positions.push(Math.cos(p1), Math.sin(p1), 1, Math.cos(p2), Math.sin(p2), 1);\n    }\n\n    geometry.addAttribute('position', new THREE.Float32Attribute(positions, 3));\n    var material = new THREE.LineBasicMaterial({\n      fog: false\n    });\n    this.cone = new THREE.LineSegments(geometry, material);\n    this.add(this.cone);\n    this.update();\n  };\n\n  THREE.SpotLightHelper.prototype = Object.create(THREE.Object3D.prototype);\n  THREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\n\n  THREE.SpotLightHelper.prototype.dispose = function () {\n    this.cone.geometry.dispose();\n    this.cone.material.dispose();\n  };\n\n  THREE.SpotLightHelper.prototype.update = function () {\n    var vector = new THREE.Vector3();\n    var vector2 = new THREE.Vector3();\n    return function update() {\n      var coneLength = this.light.distance ? this.light.distance : 1000;\n      var coneWidth = coneLength * Math.tan(this.light.angle);\n      this.cone.scale.set(coneWidth, coneWidth, coneLength);\n      vector.setFromMatrixPosition(this.light.matrixWorld);\n      vector2.setFromMatrixPosition(this.light.target.matrixWorld);\n      this.cone.lookAt(vector2.sub(vector));\n      this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n    };\n  }(); // File:src/extras/helpers/VertexNormalsHelper.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n  */\n\n\n  THREE.VertexNormalsHelper = function (object, size, hex, linewidth) {\n    this.object = object;\n    this.size = size !== undefined ? size : 1;\n    var color = hex !== undefined ? hex : 0xff0000;\n    var width = linewidth !== undefined ? linewidth : 1; //\n\n    var nNormals = 0;\n    var objGeometry = this.object.geometry;\n\n    if (objGeometry instanceof THREE.Geometry) {\n      nNormals = objGeometry.faces.length * 3;\n    } else if (objGeometry instanceof THREE.BufferGeometry) {\n      nNormals = objGeometry.attributes.normal.count;\n    } //\n\n\n    var geometry = new THREE.BufferGeometry();\n    var positions = new THREE.Float32Attribute(nNormals * 2 * 3, 3);\n    geometry.addAttribute('position', positions);\n    THREE.LineSegments.call(this, geometry, new THREE.LineBasicMaterial({\n      color: color,\n      linewidth: width\n    })); //\n\n    this.matrixAutoUpdate = false;\n    this.update();\n  };\n\n  THREE.VertexNormalsHelper.prototype = Object.create(THREE.LineSegments.prototype);\n  THREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\n\n  THREE.VertexNormalsHelper.prototype.update = function () {\n    var v1 = new THREE.Vector3();\n    var v2 = new THREE.Vector3();\n    var normalMatrix = new THREE.Matrix3();\n    return function update() {\n      var keys = ['a', 'b', 'c'];\n      this.object.updateMatrixWorld(true);\n      normalMatrix.getNormalMatrix(this.object.matrixWorld);\n      var matrixWorld = this.object.matrixWorld;\n      var position = this.geometry.attributes.position; //\n\n      var objGeometry = this.object.geometry;\n\n      if (objGeometry instanceof THREE.Geometry) {\n        var vertices = objGeometry.vertices;\n        var faces = objGeometry.faces;\n        var idx = 0;\n\n        for (var i = 0, l = faces.length; i < l; i++) {\n          var face = faces[i];\n\n          for (var j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n            var vertex = vertices[face[keys[j]]];\n            var normal = face.vertexNormals[j];\n            v1.copy(vertex).applyMatrix4(matrixWorld);\n            v2.copy(normal).applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n            position.setXYZ(idx, v1.x, v1.y, v1.z);\n            idx = idx + 1;\n            position.setXYZ(idx, v2.x, v2.y, v2.z);\n            idx = idx + 1;\n          }\n        }\n      } else if (objGeometry instanceof THREE.BufferGeometry) {\n        var objPos = objGeometry.attributes.position;\n        var objNorm = objGeometry.attributes.normal;\n        var idx = 0; // for simplicity, ignore index and drawcalls, and render every normal\n\n        for (var j = 0, jl = objPos.count; j < jl; j++) {\n          v1.set(objPos.getX(j), objPos.getY(j), objPos.getZ(j)).applyMatrix4(matrixWorld);\n          v2.set(objNorm.getX(j), objNorm.getY(j), objNorm.getZ(j));\n          v2.applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n          position.setXYZ(idx, v1.x, v1.y, v1.z);\n          idx = idx + 1;\n          position.setXYZ(idx, v2.x, v2.y, v2.z);\n          idx = idx + 1;\n        }\n      }\n\n      position.needsUpdate = true;\n      return this;\n    };\n  }(); // File:src/extras/helpers/WireframeHelper.js\n\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  THREE.WireframeHelper = function (object, hex) {\n    var color = hex !== undefined ? hex : 0xffffff;\n    THREE.LineSegments.call(this, new THREE.WireframeGeometry(object.geometry), new THREE.LineBasicMaterial({\n      color: color\n    }));\n    this.matrix = object.matrixWorld;\n    this.matrixAutoUpdate = false;\n  };\n\n  THREE.WireframeHelper.prototype = Object.create(THREE.LineSegments.prototype);\n  THREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper; // File:src/extras/objects/ImmediateRenderObject.js\n\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  THREE.ImmediateRenderObject = function (material) {\n    THREE.Object3D.call(this);\n    this.material = material;\n\n    this.render = function (renderCallback) {};\n  };\n\n  THREE.ImmediateRenderObject.prototype = Object.create(THREE.Object3D.prototype);\n  THREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject; // File:src/extras/objects/MorphBlendMesh.js\n\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  THREE.MorphBlendMesh = function (geometry, material) {\n    THREE.Mesh.call(this, geometry, material);\n    this.animationsMap = {};\n    this.animationsList = []; // prepare default animation\n    // (all frames played together in 1 second)\n\n    var numFrames = this.geometry.morphTargets.length;\n    var name = \"__default\";\n    var startFrame = 0;\n    var endFrame = numFrames - 1;\n    var fps = numFrames / 1;\n    this.createAnimation(name, startFrame, endFrame, fps);\n    this.setAnimationWeight(name, 1);\n  };\n\n  THREE.MorphBlendMesh.prototype = Object.create(THREE.Mesh.prototype);\n  THREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\n\n  THREE.MorphBlendMesh.prototype.createAnimation = function (name, start, end, fps) {\n    var animation = {\n      start: start,\n      end: end,\n      length: end - start + 1,\n      fps: fps,\n      duration: (end - start) / fps,\n      lastFrame: 0,\n      currentFrame: 0,\n      active: false,\n      time: 0,\n      direction: 1,\n      weight: 1,\n      directionBackwards: false,\n      mirroredLoop: false\n    };\n    this.animationsMap[name] = animation;\n    this.animationsList.push(animation);\n  };\n\n  THREE.MorphBlendMesh.prototype.autoCreateAnimations = function (fps) {\n    var pattern = /([a-z]+)_?(\\d+)/i;\n    var firstAnimation,\n        frameRanges = {};\n    var geometry = this.geometry;\n\n    for (var i = 0, il = geometry.morphTargets.length; i < il; i++) {\n      var morph = geometry.morphTargets[i];\n      var chunks = morph.name.match(pattern);\n\n      if (chunks && chunks.length > 1) {\n        var name = chunks[1];\n        if (!frameRanges[name]) frameRanges[name] = {\n          start: Infinity,\n          end: -Infinity\n        };\n        var range = frameRanges[name];\n        if (i < range.start) range.start = i;\n        if (i > range.end) range.end = i;\n        if (!firstAnimation) firstAnimation = name;\n      }\n    }\n\n    for (var name in frameRanges) {\n      var range = frameRanges[name];\n      this.createAnimation(name, range.start, range.end, fps);\n    }\n\n    this.firstAnimation = firstAnimation;\n  };\n\n  THREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function (name) {\n    var animation = this.animationsMap[name];\n\n    if (animation) {\n      animation.direction = 1;\n      animation.directionBackwards = false;\n    }\n  };\n\n  THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function (name) {\n    var animation = this.animationsMap[name];\n\n    if (animation) {\n      animation.direction = -1;\n      animation.directionBackwards = true;\n    }\n  };\n\n  THREE.MorphBlendMesh.prototype.setAnimationFPS = function (name, fps) {\n    var animation = this.animationsMap[name];\n\n    if (animation) {\n      animation.fps = fps;\n      animation.duration = (animation.end - animation.start) / animation.fps;\n    }\n  };\n\n  THREE.MorphBlendMesh.prototype.setAnimationDuration = function (name, duration) {\n    var animation = this.animationsMap[name];\n\n    if (animation) {\n      animation.duration = duration;\n      animation.fps = (animation.end - animation.start) / animation.duration;\n    }\n  };\n\n  THREE.MorphBlendMesh.prototype.setAnimationWeight = function (name, weight) {\n    var animation = this.animationsMap[name];\n\n    if (animation) {\n      animation.weight = weight;\n    }\n  };\n\n  THREE.MorphBlendMesh.prototype.setAnimationTime = function (name, time) {\n    var animation = this.animationsMap[name];\n\n    if (animation) {\n      animation.time = time;\n    }\n  };\n\n  THREE.MorphBlendMesh.prototype.getAnimationTime = function (name) {\n    var time = 0;\n    var animation = this.animationsMap[name];\n\n    if (animation) {\n      time = animation.time;\n    }\n\n    return time;\n  };\n\n  THREE.MorphBlendMesh.prototype.getAnimationDuration = function (name) {\n    var duration = -1;\n    var animation = this.animationsMap[name];\n\n    if (animation) {\n      duration = animation.duration;\n    }\n\n    return duration;\n  };\n\n  THREE.MorphBlendMesh.prototype.playAnimation = function (name) {\n    var animation = this.animationsMap[name];\n\n    if (animation) {\n      animation.time = 0;\n      animation.active = true;\n    } else {\n      console.warn(\"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\");\n    }\n  };\n\n  THREE.MorphBlendMesh.prototype.stopAnimation = function (name) {\n    var animation = this.animationsMap[name];\n\n    if (animation) {\n      animation.active = false;\n    }\n  };\n\n  THREE.MorphBlendMesh.prototype.update = function (delta) {\n    for (var i = 0, il = this.animationsList.length; i < il; i++) {\n      var animation = this.animationsList[i];\n      if (!animation.active) continue;\n      var frameTime = animation.duration / animation.length;\n      animation.time += animation.direction * delta;\n\n      if (animation.mirroredLoop) {\n        if (animation.time > animation.duration || animation.time < 0) {\n          animation.direction *= -1;\n\n          if (animation.time > animation.duration) {\n            animation.time = animation.duration;\n            animation.directionBackwards = true;\n          }\n\n          if (animation.time < 0) {\n            animation.time = 0;\n            animation.directionBackwards = false;\n          }\n        }\n      } else {\n        animation.time = animation.time % animation.duration;\n        if (animation.time < 0) animation.time += animation.duration;\n      }\n\n      var keyframe = animation.start + THREE.Math.clamp(Math.floor(animation.time / frameTime), 0, animation.length - 1);\n      var weight = animation.weight;\n\n      if (keyframe !== animation.currentFrame) {\n        this.morphTargetInfluences[animation.lastFrame] = 0;\n        this.morphTargetInfluences[animation.currentFrame] = 1 * weight;\n        this.morphTargetInfluences[keyframe] = 0;\n        animation.lastFrame = animation.currentFrame;\n        animation.currentFrame = keyframe;\n      }\n\n      var mix = animation.time % frameTime / frameTime;\n      if (animation.directionBackwards) mix = 1 - mix;\n\n      if (animation.currentFrame !== animation.lastFrame) {\n        this.morphTargetInfluences[animation.currentFrame] = mix * weight;\n        this.morphTargetInfluences[animation.lastFrame] = (1 - mix) * weight;\n      } else {\n        this.morphTargetInfluences[animation.currentFrame] = weight;\n      }\n    }\n  };\n\n  if (typeof define !== \"undefined\" && define instanceof Function && define.amd != undefined) {\n    define(function () {\n      return THREE;\n    });\n  } else if (typeof module !== \"undefined\" && module.exports) {\n    module.exports = THREE;\n  } else if (this != undefined) {\n    this.THREE = THREE;\n  }\n\n  ;\n})(this || {});","map":{"version":3,"sources":["E:/baking/hongpeibang/node_modules/three-js/three.js"],"names":["self","THREE","REVISION","Number","EPSILON","undefined","Math","pow","sign","x","Function","prototype","name","Object","defineProperty","get","toString","match","assign","target","TypeError","output","index","arguments","length","source","nextKey","hasOwnProperty","call","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","Color","r","g","b","set","setRGB","constructor","value","copy","setHex","setStyle","setScalar","scalar","hex","floor","setHSL","hue2rgb","p","q","t","h","s","l","euclideanModulo","clamp","style","handleAlpha","string","parseFloat","console","warn","m","exec","color","components","min","parseInt","size","charAt","ColorKeywords","clone","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","sqrt","getHex","getHexString","slice","getHSL","optionalTarget","hsl","max","hue","saturation","lightness","delta","getStyle","offsetHSL","add","addColors","color1","color2","addScalar","sub","multiply","multiplyScalar","lerp","alpha","equals","c","fromArray","array","offset","toArray","Quaternion","y","z","w","_x","_y","_z","_w","onChangeCallback","quaternion","setFromEuler","euler","update","Euler","Error","c1","cos","c2","c3","s1","sin","s2","s3","order","setFromAxisAngle","axis","angle","halfAngle","setFromRotationMatrix","te","elements","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","v1","EPS","vFrom","vTo","Vector3","dot","abs","crossVectors","normalize","inverse","conjugate","v","lengthSq","multiplyQuaternions","premultiply","a","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","slerp","qb","cosHalfTheta","sinHalfTheta","halfTheta","atan2","ratioA","ratioB","onChange","callback","qa","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","f","Vector2","width","height","setX","setY","setComponent","getComponent","addVectors","addScaledVector","subVectors","subScalar","isFinite","divide","divideScalar","clampScalar","minVal","maxVal","clampLength","ceil","round","roundToZero","negate","lengthManhattan","PI","distanceTo","distanceToSquared","dx","dy","distanceToManhattan","setLength","lerpVectors","v2","fromAttribute","attribute","itemSize","rotateAround","center","setZ","multiplyVectors","applyEuler","error","applyQuaternion","applyAxisAngle","applyMatrix3","e","applyMatrix4","applyProjection","d","qx","qy","qz","qw","ix","iy","iz","iw","project","matrix","camera","Matrix4","multiplyMatrices","projectionMatrix","getInverse","matrixWorld","unproject","transformDirection","cross","ax","ay","az","bx","by","bz","projectOnVector","vector","projectOnPlane","planeNormal","reflect","normal","angleTo","theta","acos","dz","setFromSpherical","sinPhiRadius","phi","radius","setFromMatrixPosition","setFromMatrixColumn","setFromMatrixScale","sx","sy","sz","temp","Vector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","xx","yy","zz","xy","xz","yz","_order","DefaultOrder","RotationOrders","asin","setFromQuaternion","makeRotationFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","Line3","start","end","line","result","distanceSq","distance","at","closestPointToPointParameter","startP","startEnd","point","clampToLine","startEnd2","startEnd_startP","closestPointToPoint","Box2","Infinity","setFromPoints","points","makeEmpty","i","il","expandByPoint","setFromCenterAndSize","halfSize","box","isEmpty","expandByVector","expandByScalar","containsPoint","containsBox","getParameter","intersectsBox","clampPoint","distanceToPoint","clampedPoint","intersect","union","translate","Box3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromObject","object","scope","updateMatrixWorld","traverse","node","geometry","Geometry","vertices","BufferGeometry","attributes","position","stride","InterleavedBufferAttribute","data","intersectsSphere","closestPoint","sphere","intersectsPlane","plane","constant","getBoundingSphere","Sphere","Matrix3","Float32Array","n11","n12","n13","n21","n22","n23","n31","n32","n33","identity","me","setFromMatrix4","applyToVector3Array","j","applyToBuffer","buffer","getX","getY","getZ","setXYZ","determinant","throwOnDegenerate","t11","t12","t13","det","msg","detInv","transpose","tmp","flattenToArrayOffset","getNormalMatrix","matrix4","transposeIntoArray","n14","n24","n34","n41","n42","n43","n44","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","x2","y2","z2","wx","wy","wz","lookAt","eye","up","n","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyToArray","getPosition","setPosition","t14","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","compose","decompose","invSX","invSY","invSZ","makeFrustum","left","right","bottom","top","near","far","makePerspective","fov","aspect","ymax","tan","DEG2RAD","ymin","xmin","xmax","makeOrthographic","Ray","origin","direction","ray","recast","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","diff","v0","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","b1","s0","sqrDist","extDet","invDet","intersectSphere","tca","d2","radius2","thc","t0","t1","distanceToPlane","denominator","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","Frustum","p0","p1","p2","p3","p4","p5","planes","Plane","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","intersectsObject","boundingSphere","computeBoundingSphere","intersectsSprite","sprite","negRadius","d1","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","orthoPoint","perpendicularMagnitude","intersectLine","intersectsLine","startSign","endSign","coplanarPoint","m1","optionalNormalMatrix","referencePoint","normalMatrix","Spherical","other","makeSafe","vec3","RAD2DEG","generateUUID","chars","split","uuid","Array","rnd","random","join","mapLinear","a1","a2","b2","smoothstep","smootherstep","random16","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","nearestPowerOfTwo","log","LN2","nextPowerOfTwo","Spline","v3","intPoint","weight","w2","w3","pa","pb","pc","pd","initFromArray","getPoint","k","interpolate","getControlPointsArray","coords","getLength","nSubDivisions","nSamples","oldIntPoint","oldPosition","tmpVec","chunkLengths","totalLength","chunks","total","reparametrizeByArcLength","samplingCoef","indexCurrent","indexNext","realDistance","sampling","newpoints","sl","push","t2","t3","Triangle","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","u","setFromPointsAndIndices","i0","i1","i2","triangle","area","midpoint","edgeList","projectedPoint","minDistance","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","values","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","create","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","DiscreteInterpolant","LinearInterpolant","offset1","offset0","weight1","weight0","QuaternionLinearInterpolant","Clock","autoStart","startTime","oldTime","elapsedTime","running","performance","Date","now","stop","getElapsedTime","getDelta","newTime","EventDispatcher","addEventListener","type","listener","_listeners","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","splice","dispatchEvent","event","Layers","mask","channel","enable","toggle","disable","test","layers","Raycaster","params","Mesh","Line","LOD","Points","threshold","Sprite","defineProperties","PointCloud","ascSort","intersectObject","raycaster","intersects","recursive","visible","raycast","children","linePrecision","setFromCamera","PerspectiveCamera","OrthographicCamera","sort","intersectObjects","objects","isArray","Object3D","Object3DIdCount","parent","DefaultUp","rotation","onRotationChange","onQuaternionChange","enumerable","modelViewMatrix","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","castShadow","receiveShadow","frustumCulled","renderOrder","userData","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","q1","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","remove","getObjectById","id","getObjectByProperty","getObjectByName","child","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","traverseVisible","traverseAncestors","updateMatrix","force","toJSON","meta","isRootObject","geometries","materials","textures","images","metadata","version","generator","JSON","stringify","material","extractFromCache","cache","key","parse","Face3","materialIndex","vertexNormals","vertexColors","BufferAttribute","normalized","dynamic","updateRange","count","needsUpdate","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","colors","copyIndicesArray","indices","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","getW","setXY","setXYZW","Int8Attribute","Int8Array","Uint8Attribute","Uint8Array","Uint8ClampedAttribute","Uint8ClampedArray","Int16Attribute","Int16Array","Uint16Attribute","Uint16Array","Int32Attribute","Int32Array","Uint32Attribute","Uint32Array","Float32Attribute","Float64Attribute","Float64Array","DynamicBufferAttribute","InstancedBufferAttribute","meshPerAttribute","InterleavedBuffer","InstancedInterleavedBuffer","interleavedBuffer","GeometryIdCount","faces","faceVertexUvs","morphTargets","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","vertex","face","jl","computeBoundingBox","obj","fromBufferGeometry","positions","normals","uvs","uv","uvs2","uv2","tempNormals","tempUVs","tempUVs2","addFace","groups","group","computeFaceNormals","cb","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","computeTangents","computeLineDistances","merge","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","mergeVertices","verticesMap","unique","changes","precisionPoints","precision","faceIndicesToRemove","dupIndex","idx","sortFacesByMaterialIndex","_id","materialIndexSort","newUvs1","newUvs2","parameters","normalsHash","colorsHash","uvsHash","hasMaterial","hasFaceUv","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","enabled","hash","uvsCopy","kl","dispose","DirectGeometry","computeGroups","fromGeometry","hasFaceVertexUv2","morphTargetsLength","morphTargetsPosition","morphNormalsLength","morphTargetsNormal","hasSkinIndices","hasSkinWeights","vertexUvs","morphTarget","morphNormal","morphAttributes","drawRange","getIndex","setIndex","addAttribute","getAttribute","removeAttribute","addGroup","clearGroups","setDrawRange","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","TypeArray","isNaN","pA","pB","pC","normalizeNormals","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","toNonIndexed","geometry2","array2","MaxIndex","InstancedBufferGeometry","maxInstancedCount","instances","Uniform","onUpdate","onUpdateCallback","AnimationAction","_new","mixer","clip","localRoot","_mixer","_clip","_localRoot","tracks","nTracks","interpolants","interpolantSettings","interpolant","createInterpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","loop","_loopCount","_startTime","time","timeScale","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","play","_activateAction","_deactivateAction","reset","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setLoop","mode","setEffectiveWeight","getEffectiveWeight","fadeIn","duration","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","times","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","accuIndex","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","accumulate","interpolantValue","loopCount","_setEndings","handle_stop","pingPong","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationClip","resetDuration","trim","optimize","track","json","jsonTracks","frameTime","fps","KeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","AnimationUtils","getKeyframeOrder","sortedArray","NumberKeyframeTrack","findByName","objectOrClipArray","clipArray","o","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","animation","bones","nodeName","addNonemptyTrack","trackType","trackName","animationKeys","propertyName","destTracks","flattenJSON","clipName","hierarchyTracks","hierarchy","keys","morphTargetNames","morphTargetName","animationKey","boneName","VectorKeyframeTrack","QuaternionKeyframeTrack","AnimationMixer","root","_initMemoryManager","_accuIndex","clipAction","optionalRoot","rootUuid","clipObject","clipUuid","actionsForClip","_actionsByClip","prototypeAction","existingAction","actionByRoot","knownActions","newAction","_Action","_bindAction","_addInactiveAction","stopAllAction","actions","_actions","nActions","_nActiveActions","bindings","_bindings","nBindings","_nActiveBindings","useCount","apply","uncacheClip","actionsByClip","actionsToRemove","cacheIndex","lastInactiveAction","pop","_removeInactiveBindingsForAction","uncacheRoot","_removeInactiveAction","bindingsByRoot","_bindingsByRootAndName","bindingByName","binding","restoreOriginalState","_removeInactiveBinding","uncacheAction","bindingsByName","referenceCount","_addInactiveBinding","path","parsedPath","PropertyMixer","PropertyBinding","ValueTypeName","getValueSize","_lendBinding","saveOriginalState","_lendAction","_takeBackBinding","_takeBackAction","_controlInterpolants","_nActiveControlInterpolants","stats","inUse","controlInterpolants","knownActionsForClip","lastKnownAction","byClipCacheIndex","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","propBinding","rootNode","lastInactiveBinding","remove_empty_map","_","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","AnimationObjectGroup","var_args","_objects","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","bindingsPerObject","nObjects","nCachedObjects","indicesByUUID","paths","parsedPaths","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastIndex","lastObject","last","subscribe_","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","arraySlice","from","to","isTypedArray","subarray","convertArray","forceClone","BYTES_PER_ELEMENT","ArrayBuffer","isView","DataView","compareTime","nValues","srcOffset","jsonKeys","valuePropertyName","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","validate","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","message","getInterpolation","shift","timeOffset","endTime","nKeys","valid","prevTime","currTime","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","_getTrackTypeForValueTypeName","typeName","toLowerCase","ColorKeyframeTrack","BooleanKeyframeTrack","StringKeyframeTrack","parseTrackName","findNode","getValue","getValue_unbound","targetArray","bind","setValue","sourceArray","targetObject","objectName","propertyIndex","_getValue_unavailable","_setValue_unavailable","objectIndex","skeleton","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","resolvedProperty","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","unbind","_getValue_unbound","_setValue_unbound","getValue_direct","getValue_array","getValue_arrayElement","getValue_toArray","setValue_direct","setValue_direct_setNeedsUpdate","setValue_direct_setMatrixWorldNeedsUpdate","setValue_array","dest","setValue_array_setNeedsUpdate","setValue_array_setMatrixWorldNeedsUpdate","setValue_arrayElement","setValue_arrayElement_setNeedsUpdate","setValue_arrayElement_setMatrixWorldNeedsUpdate","setValue_fromArray","setValue_fromArray_setNeedsUpdate","setValue_fromArray_setMatrixWorldNeedsUpdate","Composite","targetGroup","optionalParsedPath","_targetGroup","firstValidIndex","re","matches","results","searchSkeleton","bone","searchNodeSubtree","childNode","subTreeNode","bufferType","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","currentWeight","mix","originalValueOffset","Audio","context","createBufferSource","onended","onEnded","gain","createGain","connect","getInput","autoplay","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","getOutput","setNodeSource","audioNode","setBuffer","audioBuffer","pause","currentTime","disconnect","getFilters","setFilters","getFilter","setFilter","filter","setPlaybackRate","getPlaybackRate","getLoop","getVolume","setVolume","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","window","AudioContext","webkitAudioContext","PositionalAudio","panner","createPanner","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","AudioListener","destination","removeFilter","getMasterVolume","setMasterVolume","orientation","setOrientation","Camera","matrixWorldInverse","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","options","format","magFilter","minFilter","renderTarget","WebGLRenderTargetCube","updateCubeMap","renderer","scene","generateMipmaps","texture","activeCubeFace","render","setRenderTarget","zoom","view","updateProjectionMatrix","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","cx","cy","zoomW","zoomH","scaleW","scaleH","focus","filmGauge","filmOffset","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","skew","StereoCamera","cameraL","cameraR","eyeRight","eyeLeft","eyeSep","eyeSepOnProjection","Light","intensity","groundColor","decay","penumbra","LightShadow","bias","mapSize","map","AmbientLight","DirectionalLight","shadow","DirectionalLightShadow","light","HemisphereLight","skyColor","PointLight","power","SpotLight","SpotLightShadow","AudioLoader","manager","DefaultLoadingManager","load","url","onLoad","onProgress","onError","loader","XHRLoader","setResponseType","decodeAudioData","Cache","files","file","clear","Loader","onLoadStart","onLoadProgress","onLoadComplete","crossOrigin","extractUrlBase","initMaterials","texturePath","createMaterial","textureLoader","materialLoader","TextureLoader","MaterialLoader","loadTexture","repeat","wrap","anisotropy","fullPath","Handlers","setCrossOrigin","wrapS","wrapT","blending","specular","emissive","shininess","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","emissiveMap","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","lightMap","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","aoMap","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","bumpMap","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","bumpScale","normalMap","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","normalScale","specularMap","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","metalnessMap","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","roughnessMap","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","alphaMap","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","side","opacity","transparent","setTextures","handlers","regex","cached","itemStart","setTimeout","itemEnd","request","XMLHttpRequest","overrideMimeType","open","response","status","itemError","responseType","withCredentials","send","setPath","setWithCredentials","FontLoader","text","substring","font","Font","ImageLoader","image","document","createElementNS","onload","URL","revokeObjectURL","src","blob","createObjectURL","JSONLoader","setTexturePath","parseModel","parseSkin","parseMorphing","parseAnimations","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","faceA","faceB","uvLayer","nUvLayers","influencesPerVertex","dstVertices","srcVertices","morphColors","outputAnimations","concat","morphAnimationClips","LoadingManager","isLoading","itemsLoaded","itemsTotal","onStart","BufferGeometryLoader","TYPED_ARRAYS","typedArray","drawcalls","offsets","getTexture","roughness","metalness","uniforms","vertexShader","fragmentShader","shading","alphaTest","depthTest","depthWrite","colorWrite","wireframe","wireframeLinewidth","sizeAttenuation","displacementMap","displacementScale","displacementBias","emissiveIntensity","envMap","combine","reflectivity","lightMapIntensity","aoMapIntensity","ObjectLoader","lastIndexOf","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","widthSegments","heightSegments","depth","depthSegments","segments","thetaStart","thetaLength","radiusTop","radiusBottom","radialSegments","openEnded","phiStart","phiLength","detail","innerRadius","outerRadius","thetaSegments","phiSegments","tube","tubularSegments","arc","loadImage","parseConstant","Texture","mapping","flipY","getGeometry","getMaterial","Scene","SkinnedMesh","Group","levels","level","addLevel","isJPEG","search","CubeTextureLoader","urls","CubeTexture","loaded","DataTextureLoader","BinaryTextureLoader","_parser","DataTexture","texData","mipmaps","mipmapCount","CompressedTextureLoader","CompressedTexture","texDatas","isCubemap","Material","MaterialIdCount","fog","lights","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","clippingPlanes","clipShadows","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","premultipliedAlpha","overdraw","_needsUpdate","setValues","newValue","currentValue","isRoot","srcPlanes","dstPlanes","LineBasicMaterial","linewidth","linecap","linejoin","LineDashedMaterial","dashSize","gapSize","MeshBasicMaterial","refractionRatio","wireframeLinecap","wireframeLinejoin","skinning","MeshDepthMaterial","depthPacking","MeshLambertMaterial","MeshNormalMaterial","MeshPhongMaterial","MeshStandardMaterial","defines","envMapIntensity","MeshPhysicalMaterial","clearCoat","clearCoatRoughness","MultiMaterial","PointsMaterial","ShaderMaterial","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","UniformsUtils","RawShaderMaterial","SpriteMaterial","ShadowMaterial","UniformsLib","ShaderChunk","encoding","TextureIdCount","sourceFile","DEFAULT_IMAGE","DEFAULT_MAPPING","premultiplyAlpha","unpackAlignment","getDataURL","canvas","toDataURL","getContext","drawImage","transformUv","DepthTexture","CanvasTexture","VideoTexture","video","requestAnimationFrame","readyState","HAVE_CURRENT_DATA","inverseMatrix","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","LineSegments","precisionSq","vStart","vEnd","interSegment","interRay","step","distSq","faceIndex","nbVertices","drawMode","updateMorphTargets","setDrawMode","morphTargetBase","morphTargetInfluences","morphTargetDictionary","ml","getMorphTargetIndexByName","tempA","tempB","tempC","uvA","uvB","uvC","barycoord","intersectionPoint","intersectionPointWorld","uvIntersection","uv1","uv3","checkIntersection","checkBufferGeometryIntersection","intersection","fvA","fvB","fvC","isFaceMaterial","faceMaterial","morphInfluences","tl","influence","targets","uvs_f","Bone","skin","Skeleton","boneInverses","useVertexTexture","identityMatrix","boneTextureWidth","boneTextureHeight","boneMatrices","boneTexture","calculateInverses","bl","pose","offsetMatrix","bindMode","bindMatrix","bindMatrixInverse","gbone","pos","rotq","scl","normalizeSkinWeights","sw","vec","skinWeight","getObjectForDistance","matrixPosition","guessSizeSq","LensFlare","lensFlares","positionScreen","customUpdateCallback","updateLensFlares","flare","vecX","vecY","wantedRotation","background","overrideMaterial","autoUpdate","Fog","FogExp2","density","merged","uniforms_src","uniforms_dst","parameter_src","common","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","properties","ShaderLib","WebGLRenderer","_canvas","_context","_alpha","_depth","_stencil","stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","opaqueObjects","opaqueObjectsLastIndex","transparentObjects","transparentObjectsLastIndex","sprites","domElement","autoClear","autoClearColor","autoClearDepth","autoClearStencil","sortObjects","localClippingEnabled","gammaInput","gammaOutput","physicallyCorrectLights","toneMapping","toneMappingExposure","toneMappingWhitePoint","maxMorphTargets","maxMorphNormals","_this","_currentProgram","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentScissor","_currentScissorTest","_currentViewport","_usedTextureUnits","_clearColor","_clearAlpha","_width","_height","_pixelRatio","_scissor","_scissorTest","_viewport","_frustum","_clipping","WebGLClipping","_clippingEnabled","_localClippingEnabled","_sphere","_projScreenMatrix","_vector3","_lights","ambient","directional","directionalShadowMap","directionalShadowMatrix","spot","spotShadowMap","spotShadowMatrix","pointShadowMap","pointShadowMatrix","hemi","shadows","_infoRender","calls","info","memory","programs","_gl","getShaderPrecisionFormat","onContextLost","WebGLExtensions","capabilities","WebGLCapabilities","state","WebGLState","paramThreeToGL","WebGLProperties","WebGLTextures","WebGLObjects","programCache","WebGLPrograms","lightCache","WebGLLights","bufferRenderer","WebGLBufferRenderer","indexedBufferRenderer","WebGLIndexedBufferRenderer","backgroundCamera","backgroundCamera2","backgroundPlaneMesh","PlaneBufferGeometry","backgroundBoxShader","backgroundBoxMesh","BoxBufferGeometry","getTargetPixelRatio","glClearColor","clearColor","setDefaultGLState","init","scissor","viewport","resetGLState","shadowMap","WebGLShadowMap","spritePlugin","SpritePlugin","lensFlarePlugin","LensFlarePlugin","getContextAttributes","forceContextLoss","loseContext","getMaxAnisotropy","getPrecision","getPixelRatio","setPixelRatio","setSize","getSize","updateStyle","setViewport","setScissor","setScissorTest","boolean","getClearColor","setClearColor","getClearAlpha","setClearAlpha","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearDepth","clearStencil","clearTarget","preventDefault","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReference","delete","programInfo","program","releaseProgram","renderBufferImmediate","initAttributes","buffers","hasPositions","createBuffer","hasNormals","hasUvs","hasColors","getAttributes","bindBuffer","ARRAY_BUFFER","bufferData","positionArray","DYNAMIC_DRAW","enableAttribute","vertexAttribPointer","FLOAT","normalArray","nx","ny","nz","uvArray","colorArray","disableUnusedAttributes","drawArrays","TRIANGLES","renderBufferDirect","setMaterial","setProgram","updateBuffers","geometryProgram","activeInfluences","absNumericalSort","getUniforms","getWireframeAttribute","setupVertexAttributes","ELEMENT_ARRAY_BUFFER","getAttributeBuffer","dataStart","dataCount","rangeStart","rangeCount","groupStart","groupCount","drawStart","drawEnd","drawCount","setLineWidth","setMode","LINES","TRIANGLE_STRIP","TRIANGLE_FAN","lineWidth","LINE_STRIP","POINTS","renderInstances","startIndex","extension","geometryAttributes","programAttributes","materialDefaultAttributeValues","programAttribute","geometryAttribute","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","enableAttributeAndDivisor","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","painterSortStable","reversePainterSortStable","forceClear","projectObject","beginShadows","setupShadows","setupLights","endShadows","renderObjects","setBlending","updateRenderTargetMipmap","setDepthTest","setDepthWrite","setColorWrite","pushRenderItem","renderItem","isObjectViewable","isSphereViewable","isSpriteViewable","numPlanes","negRad","ImmediateRenderObject","groupMaterial","renderList","initMaterial","materialProperties","getParameters","code","getProgramCode","programChange","shaderID","shader","__webglShader","acquireProgram","numSupportedMorphTargets","numSupportedMorphNormals","numClippingPlanes","uniform","lightsHash","ambientLightColor","directionalLights","spotLights","pointLights","hemisphereLights","progUniforms","uniformsList","WebGLUniforms","seqWithValue","seq","dynamicUniforms","splitDynamic","CULL_FACE","setFlipSided","setDepthFunc","setPolygonOffset","useCache","setState","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","useProgram","logarithmicDepthBuffer","uCamPos","cameraPosition","setOptional","floatVertexTextures","markUniformsLightsNeedsUpdate","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLine","refreshUniformsDash","refreshUniformsPoints","refreshUniformsLambert","refreshUniformsPhong","refreshUniformsPhysical","refreshUniformsStandard","upload","dynUniforms","evalDynamic","diffuse","uvScaleMap","WebGLRenderTarget","offsetRepeat","flipEnvMap","totalSize","clientHeight","fogColor","fogNear","fogFar","fogDensity","lightShadowsLength","ll","viewMatrix","directionalLength","pointLength","spotLength","hemiLength","shadowBias","shadowRadius","shadowMapSize","coneCos","penumbraCos","setFaceCulling","cullFace","frontFaceDirection","setCullFace","allocTextureUnit","textureUnit","maxTextures","setTexture2D","warned","slot","setTexture","setTextureCube","setTextureCubeDynamic","getCurrentRenderTarget","__webglFramebuffer","setupRenderTarget","isCube","framebuffer","renderTargetProperties","scissorTest","bindFramebuffer","FRAMEBUFFER","textureProperties","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE_CUBE_MAP_POSITIVE_X","__webglTexture","activeMipMapLevel","readRenderTargetPixels","restore","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","NEAREST","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","DEPTH_COMPONENT","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","depthBuffer","stencilBuffer","depthTexture","drawArraysInstancedANGLE","globalState","numGlobalPlanes","renderingShadows","viewNormalMatrix","enableLocalClipping","projectPlanes","resetGlobalState","fromCache","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","i4","drawElements","drawElementsInstancedANGLE","gl","getExtension","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","_maxPrecision","WebGLGeometries","onGeometryDispose","buffergeometry","_bufferGeometry","deleteAttribute","deleteAttributes","property","bufferproperty","__webglBuffer","deleteBuffer","removeAttributeBuffer","updateAttribute","attributeProperties","updateBuffer","usage","STATIC_DRAW","bufferSubData","edges","checkEdge","list","WebGLProgram","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMappingName","generateExtensions","rendererExtensions","envMapCubeUV","flatShading","filterEmptyLine","generateDefines","fetchAttributeLocations","identifiers","getProgramParameter","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","replaceLightNums","replace","numDirLights","numSpotLights","numPointLights","numHemiLights","parseIncludes","include","unrollLoops","snippet","unroll","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","gammaFactorDefine","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","supportsVertexTextures","maxBones","doubleSided","flipSided","shadowMapEnabled","useFog","fogExp","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","vertexGlsl","fragmentGlsl","glVertexShader","WebGLShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","programLog","getProgramInfoLog","vertexLog","getShaderInfoLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","cachedAttributes","destroy","deleteProgram","usedTimes","shaderIDs","parameterNames","allocateBones","nVertexUniforms","nVertexMatrices","getTextureEncodingFromMap","gammaOverrideLinear","nClipPlanes","currentRenderTarget","envMapMode","pl","addLineNumbers","lines","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","_renderer","_state","_lightShadows","_shadowMapSize","_maxShadowMapSize","_lookTarget","_lightPositionWorld","_renderList","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","cubeDirections","cubeUps","cube2DViewPorts","depthMaterialTemplate","distanceShader","distanceUniforms","useMorphing","useSkinning","depthMaterial","distanceMaterial","renderReverseSided","renderSingleSided","BLEND","faceCount","isPointLight","shadowCamera","vpWidth","vpHeight","pars","shadowMatrix","vpDimensions","getDepthMaterial","clearAlpha","lightPositionWorld","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","variantIndex","keyA","keyB","materialsForVariant","cachedMaterial","lightPos","WebGLColorBuffer","WebGLDepthBuffer","WebGLStencilBuffer","maxVertexAttributes","newAttributes","enabledAttributes","attributeDivisors","compressedTextureFormats","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","currentScissorTest","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","DEPTH_TEST","enableVertexAttribArray","vertexAttribDivisorANGLE","disableVertexAttribArray","getCompressedTextureFormats","formats","COMPRESSED_TEXTURE_FORMATS","blendEquationSeparate","blendFuncSeparate","blendFunc","setMask","setTest","setFunc","setStencilTest","stencilTest","setStencilWrite","stencilWrite","setStencilFunc","stencilFunc","stencilRef","stencilMask","setStencilOp","stencilFail","stencilZFail","stencilZPass","setOp","frontFace","CW","CCW","BACK","FRONT","FRONT_AND_BACK","factor","units","POLYGON_OFFSET_FILL","getScissorTest","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","compressedTexImage2D","setClear","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","STENCIL_TEST","stencilOp","_infoMemory","_isWebGL2","WebGL2RenderingContext","clampToMaxSize","maxSize","makePowerOfTwo","HTMLImageElement","HTMLCanvasElement","textureNeedsPowerOfTwo","filterFallback","onTextureDispose","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","__image__webglTextureCube","deleteTexture","__webglInit","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__version","complete","uploadTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","isCompressed","isDataTexture","cubeImage","isPowerOfTwoImage","glFormat","glType","setTextureParameters","mipmap","generateMipmap","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","internalFormat","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","setupFrameBufferTexture","attachment","textureTarget","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthTexture","webglDepthTexture","setupDepthRenderbuffer","createRenderbuffer","isTargetPowerOfTwo","createFramebuffer","emptyTexture","emptyCubeTexture","UniformContainer","arrayCacheF32","arrayCacheI32","uncacheTemporaryArrays","flatten","nBlocks","blockSize","firstElem","allocTexUnits","setValue1f","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2fv","uniform2f","setValue3fv","uniform3f","uniform3fv","setValue4fv","uniform4fv","uniform4f","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","unit","setValueT6","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","getSingularSetter","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","setValueT6a","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","RePathPart","addUniform","container","uniformObject","parseUniform","pathLength","matchEnd","idIsIndex","subscript","next","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","flares","vertexBuffer","elementBuffer","tempTexture","occlusionTexture","renderType","occlusionMap","screenPosition","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","validArea","TEXTURE1","copyTexImage2D","spritePosition","spriteRotation","spriteScale","uvOffset","uvScale","fogType","fillStyle","fillRect","oldFogType","sceneFogType","Face4","LineStrip","LinePieces","MeshFaceMaterial","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","isIntersectionBox","isIntersectionSphere","multiplyVector3","multiplyVector3Array","extractPosition","multiplyVector4","rotateAxis","crossVector","rotateByAxis","isIntersectionLine","isIntersectionPlane","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","getChildByName","renderDepth","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraNear","shadowCameraFar","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","addIndex","addDrawCall","indexOffset","clearDrawCalls","computeOffsets","wrapAround","wrapRGB","metal","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","shadowMapCullFace","audioLoader","getData","GeometryUtils","geometry1","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","Projector","projectVector","unprojectVector","pickingRay","CanvasRenderer","CurveUtils","tangentQuadraticBezier","tangentCubicBezier","tangentSpline","h00","h10","h01","h11","SceneUtils","createMultiMaterialObject","detach","attach","ShapeUtils","contour","triangulate","snip","verts","px","py","aX","aY","bX","bY","cX","cY","apx","apy","bpx","bpy","cpx","cpy","cCROSSap","bCROSScp","aCROSSbp","vertIndices","nv","triangulateShape","holes","removeDupEndPts","forEach","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","limit","perpSeg1","perpSeg2","factorSeg1","seg1Pt","seg2Pt","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","removeHoles","shape","hole","isCutLineInsideAngles","inShapeIdx","inHoleIdx","lastShapeIdx","prevShapeIdx","nextShapeIdx","insideAngle","lastHoleIdx","prevHoleIdx","nextHoleIdx","intersectsShapeEdge","inShapePt","inHolePt","sIdx","nextIdx","indepHoles","intersectsHoleEdge","ihIdx","chkHole","hIdx","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","failedCuts","tmpShape1","tmpShape2","tmpHole1","tmpHole2","hl","minShapeIndex","counter","h2","allPointsMap","allpoints","shapeWithoutHoles","triangles","isClockWise","pts","b2p0","b2p1","b2p2","b3","b3p0","b3p1","b3p2","b3p3","Curve","getPointAt","getUtoTmapping","getPoints","divisions","getSpacedPoints","lengths","getLengths","__arcLengthDivisions","cacheArcLengths","current","sum","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","pt1","pt2","getTangentAt","getPointFunc","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","LineCurve","curveLengths","getCurveLengths","lens","cacheLengths","sums","resolution","EllipseCurve","SplineCurve","createPointsGeometry","createGeometry","createSpacedPointsGeometry","generateShapes","createPaths","String","ret","createPath","glyph","glyphs","ShapePath","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","outline","_cachedOutline","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","ha","shapes","toShapes","Path","currentPoint","fromPoints","aCPx","aCPy","QuadraticBezierCurve","aCP1x","aCP1y","aCP2x","aCP2y","CubicBezierCurve","splineThru","npts","aRadius","aStartAngle","aEndAngle","aClockwise","absarc","absellipse","ellipse","xRadius","yRadius","aRotation","firstPoint","lastPoint","subPaths","currentPath","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","Shape","isPointInsidePolygon","inPt","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sLen","sho","ho","hole_unassigned","s2Idx","froms","tos","tmpHoles","extrude","ExtrudeGeometry","makeGeometry","ShapeGeometry","getPointsHoles","holesPts","extractAllPoints","extractPoints","tangent","point0","point1","point2","point3","twoPi","deltaAngle","samePoints","ArcCurve","LineCurve3","QuadraticBezierCurve3","CubicBezierCurve3","SplineCurve3","CatmullRomCurve3","CubicPoly","pz","c0","initNonuniformCatmullRom","x3","dt0","dt1","dt2","initCatmullRom","tension","calc","closed","ClosedSplineCurve3","BoxGeometry","CubeGeometry","vertexCount","calculateVertexCount","indexCount","calculateIndexCount","vertexBufferOffset","uvBufferOffset","indexBufferOffset","numberOfVertices","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","CircleGeometry","CircleBufferGeometry","ii","segment","CylinderBufferGeometry","nbCap","indexArray","halfHeight","generateTorso","generateCap","tanTheta","indexRow","i3","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","CylinderGeometry","ConeBufferGeometry","ConeGeometry","EdgesGeometry","thresholdAngle","thresholdDot","edge","sortFunction","vert1","vert2","face1","face2","addShapeList","addShape","amount","bevelThickness","bevelSize","bevelSegments","bevelEnabled","curveSegments","steps","extrudePath","extrudePts","extrudeByPath","uvgen","UVGenerator","WorldUVGenerator","splineTube","binormal","position2","frames","TubeGeometry","FrenetFrames","ahole","shapesOffset","shapePoints","reverse","scalePt2","pt","bs","vert","vlen","flen","getBevelVec","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","binormals","buildLidFaces","buildSideFaces","layer","f3","layeroffset","sidewalls","slen1","slen2","f4","generateTopUV","wallContour","stepIndex","stepsLength","contourIndex1","contourIndex2","generateSideWallUV","indexA","indexB","indexC","indexD","LatheBufferGeometry","base","inversePointLength","inverseSegments","n1","n2","LatheGeometry","PlaneGeometry","width_half","height_half","segment_width","segment_height","offset2","RingBufferGeometry","radiusStep","thetaSegmentLevel","RingGeometry","SphereGeometry","SphereBufferGeometry","thetaEnd","verticesRow","v4","TextGeometry","TorusBufferGeometry","TorusGeometry","TorusKnotBufferGeometry","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TorusKnotGeometry","heightScale","taper","NoTaper","grid","numpoints","pos2","ip","jp","uva","uvb","uvc","uvd","tangents","SinusoidalTaper","mat","smallest","tz","initialNormal3","MAX_VALUE","PolyhedronGeometry","that","prepare","centroid","subdivide","azimuth","inclination","make","azi","correctUV","cols","aj","bj","rows","DodecahedronGeometry","IcosahedronGeometry","OctahedronGeometry","TetrahedronGeometry","ParametricGeometry","func","slices","stacks","sliceCount","WireframeGeometry","numEdges","ol","numTris","AxisHelper","ArrowHelper","lineGeometry","coneGeometry","headLength","headWidth","cone","setDirection","setColor","BoxHelper","BoundingBoxHelper","CameraHelper","pointMap","hexFrustum","hexCone","hexUp","hexTarget","hexCross","addLine","addPoint","setPoint","DirectionalLightHelper","lightPlane","targetLine","EdgesHelper","FaceNormalsHelper","nNormals","objGeometry","GridHelper","setColors","HemisphereLightHelper","sphereSize","lightSphere","PointLightHelper","SkeletonHelper","getBoneList","boneList","matrixWorldInv","boneMatrix","SpotLightHelper","vector2","coneLength","coneWidth","VertexNormalsHelper","objPos","objNorm","WireframeHelper","renderCallback","MorphBlendMesh","animationsMap","animationsList","numFrames","startFrame","endFrame","createAnimation","setAnimationWeight","lastFrame","currentFrame","active","directionBackwards","mirroredLoop","autoCreateAnimations","firstAnimation","frameRanges","morph","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","playAnimation","stopAnimation","keyframe","define","amd","module","exports"],"mappings":"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","sourcesContent":["(function( self ){\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar THREE = { REVISION: '79' };\n\n\t// Polyfills\n\n\tif ( Number.EPSILON === undefined ) {\n\n\t\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n\t}\n\n\t//\n\n\tif ( Math.sign === undefined ) {\n\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\t\tMath.sign = function ( x ) {\n\n\t\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t\t};\n\n\t}\n\n\tif ( Function.prototype.name === undefined ) {\n\n\t\t// Missing in IE9-11.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\t\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tif ( Object.assign === undefined ) {\n\n\t\t// Missing in IE.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t\t( function () {\n\n\t\t\tObject.assign = function ( target ) {\n\n\t\t\t\t'use strict';\n\n\t\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t\t}\n\n\t\t\t\tvar output = Object( target );\n\n\t\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn output;\n\n\t\t\t};\n\n\t\t} )();\n\n\t}\n\n\t//\n\n\tObject.assign( THREE, {\n\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\n\n\t\tMOUSE: { LEFT: 0, MIDDLE: 1, RIGHT: 2 },\n\n\t\t// GL STATE CONSTANTS\n\n\t\tCullFaceNone: 0,\n\t\tCullFaceBack: 1,\n\t\tCullFaceFront: 2,\n\t\tCullFaceFrontBack: 3,\n\n\t\tFrontFaceDirectionCW: 0,\n\t\tFrontFaceDirectionCCW: 1,\n\n\t\t// SHADOWING TYPES\n\n\t\tBasicShadowMap: 0,\n\t\tPCFShadowMap: 1,\n\t\tPCFSoftShadowMap: 2,\n\n\t\t// MATERIAL CONSTANTS\n\n\t\t// side\n\n\t\tFrontSide: 0,\n\t\tBackSide: 1,\n\t\tDoubleSide: 2,\n\n\t\t// shading\n\n\t\tFlatShading: 1,\n\t\tSmoothShading: 2,\n\n\t\t// colors\n\n\t\tNoColors: 0,\n\t\tFaceColors: 1,\n\t\tVertexColors: 2,\n\n\t\t// blending modes\n\n\t\tNoBlending: 0,\n\t\tNormalBlending: 1,\n\t\tAdditiveBlending: 2,\n\t\tSubtractiveBlending: 3,\n\t\tMultiplyBlending: 4,\n\t\tCustomBlending: 5,\n\n\t\t// custom blending equations\n\t\t// (numbers start from 100 not to clash with other\n\t\t// mappings to OpenGL constants defined in Texture.js)\n\n\t\tAddEquation: 100,\n\t\tSubtractEquation: 101,\n\t\tReverseSubtractEquation: 102,\n\t\tMinEquation: 103,\n\t\tMaxEquation: 104,\n\n\t\t// custom blending destination factors\n\n\t\tZeroFactor: 200,\n\t\tOneFactor: 201,\n\t\tSrcColorFactor: 202,\n\t\tOneMinusSrcColorFactor: 203,\n\t\tSrcAlphaFactor: 204,\n\t\tOneMinusSrcAlphaFactor: 205,\n\t\tDstAlphaFactor: 206,\n\t\tOneMinusDstAlphaFactor: 207,\n\n\t\t// custom blending source factors\n\n\t\t//ZeroFactor: 200,\n\t\t//OneFactor: 201,\n\t\t//SrcAlphaFactor: 204,\n\t\t//OneMinusSrcAlphaFactor: 205,\n\t\t//DstAlphaFactor: 206,\n\t\t//OneMinusDstAlphaFactor: 207,\n\t\tDstColorFactor: 208,\n\t\tOneMinusDstColorFactor: 209,\n\t\tSrcAlphaSaturateFactor: 210,\n\n\t\t// depth modes\n\n\t\tNeverDepth: 0,\n\t\tAlwaysDepth: 1,\n\t\tLessDepth: 2,\n\t\tLessEqualDepth: 3,\n\t\tEqualDepth: 4,\n\t\tGreaterEqualDepth: 5,\n\t\tGreaterDepth: 6,\n\t\tNotEqualDepth: 7,\n\n\n\t\t// TEXTURE CONSTANTS\n\n\t\tMultiplyOperation: 0,\n\t\tMixOperation: 1,\n\t\tAddOperation: 2,\n\n\t\t// Tone Mapping modes\n\n\t\tNoToneMapping: 0, // do not do any tone mapping, not even exposure (required for special purpose passes.)\n\t\tLinearToneMapping: 1, // only apply exposure.\n\t\tReinhardToneMapping: 2,\n\t\tUncharted2ToneMapping: 3, // John Hable\n\t\tCineonToneMapping: 4, // optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\n\n\t\t// Mapping modes\n\n\t\tUVMapping: 300,\n\n\t\tCubeReflectionMapping: 301,\n\t\tCubeRefractionMapping: 302,\n\n\t\tEquirectangularReflectionMapping: 303,\n\t\tEquirectangularRefractionMapping: 304,\n\n\t\tSphericalReflectionMapping: 305,\n\t\tCubeUVReflectionMapping: 306,\n\t\tCubeUVRefractionMapping: 307,\n\n\t\t// Wrapping modes\n\n\t\tRepeatWrapping: 1000,\n\t\tClampToEdgeWrapping: 1001,\n\t\tMirroredRepeatWrapping: 1002,\n\n\t\t// Filters\n\n\t\tNearestFilter: 1003,\n\t\tNearestMipMapNearestFilter: 1004,\n\t\tNearestMipMapLinearFilter: 1005,\n\t\tLinearFilter: 1006,\n\t\tLinearMipMapNearestFilter: 1007,\n\t\tLinearMipMapLinearFilter: 1008,\n\n\t\t// Data types\n\n\t\tUnsignedByteType: 1009,\n\t\tByteType: 1010,\n\t\tShortType: 1011,\n\t\tUnsignedShortType: 1012,\n\t\tIntType: 1013,\n\t\tUnsignedIntType: 1014,\n\t\tFloatType: 1015,\n\t\tHalfFloatType: 1025,\n\n\t\t// Pixel types\n\n\t\t//UnsignedByteType: 1009,\n\t\tUnsignedShort4444Type: 1016,\n\t\tUnsignedShort5551Type: 1017,\n\t\tUnsignedShort565Type: 1018,\n\n\t\t// Pixel formats\n\n\t\tAlphaFormat: 1019,\n\t\tRGBFormat: 1020,\n\t\tRGBAFormat: 1021,\n\t\tLuminanceFormat: 1022,\n\t\tLuminanceAlphaFormat: 1023,\n\t\t// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\n\t\tRGBEFormat: THREE.RGBAFormat, //1024;\n\t\tDepthFormat: 1026,\n\n\t\t// DDS / ST3C Compressed texture formats\n\n\t\tRGB_S3TC_DXT1_Format: 2001,\n\t\tRGBA_S3TC_DXT1_Format: 2002,\n\t\tRGBA_S3TC_DXT3_Format: 2003,\n\t\tRGBA_S3TC_DXT5_Format: 2004,\n\n\t\t// PVRTC compressed texture formats\n\n\t\tRGB_PVRTC_4BPPV1_Format: 2100,\n\t\tRGB_PVRTC_2BPPV1_Format: 2101,\n\t\tRGBA_PVRTC_4BPPV1_Format: 2102,\n\t\tRGBA_PVRTC_2BPPV1_Format: 2103,\n\n\t\t// ETC compressed texture formats\n\n\t\tRGB_ETC1_Format: 2151,\n\n\t\t// Loop styles for AnimationAction\n\n\t\tLoopOnce: 2200,\n\t\tLoopRepeat: 2201,\n\t\tLoopPingPong: 2202,\n\n\t\t// Interpolation\n\n\t\tInterpolateDiscrete: 2300,\n\t\tInterpolateLinear: 2301,\n\t\tInterpolateSmooth: 2302,\n\n\t\t// Interpolant ending modes\n\n\t\tZeroCurvatureEnding: 2400,\n\t\tZeroSlopeEnding: 2401,\n\t\tWrapAroundEnding: 2402,\n\n\t\t// Triangle Draw modes\n\n\t\tTrianglesDrawMode: 0,\n\t\tTriangleStripDrawMode: 1,\n\t\tTriangleFanDrawMode: 2,\n\n\t\t// Texture Encodings\n\n\t\tLinearEncoding: 3000, // No encoding at all.\n\t\tsRGBEncoding: 3001,\n\t\tGammaEncoding: 3007, // uses GAMMA_FACTOR, for backwards compatibility with WebGLRenderer.gammaInput/gammaOutput\n\n\t\t// The following Texture Encodings are for RGB-only (no alpha) HDR light emission sources.\n\t\t// These encodings should not specified as output encodings except in rare situations.\n\t\tRGBEEncoding: 3002, // AKA Radiance.\n\t\tLogLuvEncoding: 3003,\n\t\tRGBM7Encoding: 3004,\n\t\tRGBM16Encoding: 3005,\n\t\tRGBDEncoding: 3006, // MaxRange is 256.\n\n\t\t// Depth packing strategies\n\n\t\tBasicDepthPacking: 3200, // for writing to float textures for high precision or for visualizing results in RGB buffers\n\t\tRGBADepthPacking: 3201 // for packing into RGBA buffers.\n\n\t} );\n\n\t// File:src/math/Color.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.Color = function ( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t};\n\n\tTHREE.Color.prototype = {\n\n\t\tconstructor: THREE.Color,\n\n\t\tr: 1, g: 1, b: 1,\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value instanceof THREE.Color ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.r = scalar;\n\t\t\tthis.g = scalar;\n\t\t\tthis.b = scalar;\n\n\t\t},\n\n\t\tsetHex: function ( hex ) {\n\n\t\t\thex = Math.floor( hex );\n\n\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRGB: function ( r, g, b ) {\n\n\t\t\tthis.r = r;\n\t\t\tthis.g = g;\n\t\t\tthis.b = b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetHSL: function () {\n\n\t\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\t\tif ( t < 0 ) t += 1;\n\t\t\t\tif ( t > 1 ) t -= 1;\n\t\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\t\treturn p;\n\n\t\t\t}\n\n\t\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\t\th = THREE.Math.euclideanModulo( h, 1 );\n\t\t\t\ts = THREE.Math.clamp( s, 0, 1 );\n\t\t\t\tl = THREE.Math.clamp( l, 0, 1 );\n\n\t\t\t\tif ( s === 0 ) {\n\n\t\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetStyle: function ( style ) {\n\n\t\t\tfunction handleAlpha( string ) {\n\n\t\t\t\tif ( string === undefined ) return;\n\n\t\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tvar m;\n\n\t\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t\t// rgb / hsl\n\n\t\t\t\tvar color;\n\t\t\t\tvar name = m[ 1 ];\n\t\t\t\tvar components = m[ 2 ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'rgb':\n\t\t\t\t\tcase 'rgba':\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'hsl':\n\t\t\t\t\tcase 'hsla':\n\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t\t// hex color\n\n\t\t\t\tvar hex = m[ 1 ];\n\t\t\t\tvar size = hex.length;\n\n\t\t\t\tif ( size === 3 ) {\n\n\t\t\t\t\t// #ff0\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t\t// #ff0000\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( style && style.length > 0 ) {\n\n\t\t\t\t// color keywords\n\t\t\t\tvar hex = THREE.ColorKeywords[ style ];\n\n\t\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t\t// red\n\t\t\t\t\tthis.setHex( hex );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// unknown color\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t\t},\n\n\t\tcopy: function ( color ) {\n\n\t\t\tthis.r = color.r;\n\t\t\tthis.g = color.g;\n\t\t\tthis.b = color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertGammaToLinear: function () {\n\n\t\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\t\tthis.r = r * r;\n\t\t\tthis.g = g * g;\n\t\t\tthis.b = b * b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertLinearToGamma: function () {\n\n\t\t\tthis.r = Math.sqrt( this.r );\n\t\t\tthis.g = Math.sqrt( this.g );\n\t\t\tthis.b = Math.sqrt( this.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetHex: function () {\n\n\t\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t\t},\n\n\t\tgetHexString: function () {\n\n\t\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t\t},\n\n\t\tgetHSL: function ( optionalTarget ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\n\n\t\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\t\tvar max = Math.max( r, g, b );\n\t\t\tvar min = Math.min( r, g, b );\n\n\t\t\tvar hue, saturation;\n\t\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\t\tif ( min === max ) {\n\n\t\t\t\thue = 0;\n\t\t\t\tsaturation = 0;\n\n\t\t\t} else {\n\n\t\t\t\tvar delta = max - min;\n\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\t\tswitch ( max ) {\n\n\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t\t}\n\n\t\t\t\thue /= 6;\n\n\t\t\t}\n\n\t\t\thsl.h = hue;\n\t\t\thsl.s = saturation;\n\t\t\thsl.l = lightness;\n\n\t\t\treturn hsl;\n\n\t\t},\n\n\t\tgetStyle: function () {\n\n\t\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t\t},\n\n\t\toffsetHSL: function ( h, s, l ) {\n\n\t\t\tvar hsl = this.getHSL();\n\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( color ) {\n\n\t\t\tthis.r += color.r;\n\t\t\tthis.g += color.g;\n\t\t\tthis.b += color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddColors: function ( color1, color2 ) {\n\n\t\t\tthis.r = color1.r + color2.r;\n\t\t\tthis.g = color1.g + color2.g;\n\t\t\tthis.b = color1.b + color2.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.r += s;\n\t\t\tthis.g += s;\n\t\t\tthis.b += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function( color ) {\n\n\t\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( color ) {\n\n\t\t\tthis.r *= color.r;\n\t\t\tthis.g *= color.g;\n\t\t\tthis.b *= color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tthis.r *= s;\n\t\t\tthis.g *= s;\n\t\t\tthis.b *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerp: function ( color, alpha ) {\n\n\t\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( c ) {\n\n\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.r = array[ offset ];\n\t\t\tthis.g = array[ offset + 1 ];\n\t\t\tthis.b = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.r;\n\t\t\tarray[ offset + 1 ] = this.g;\n\t\t\tarray[ offset + 2 ] = this.b;\n\n\t\t\treturn array;\n\n\t\t}\n\n\t};\n\n\tTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\n\t// File:src/math/Quaternion.js\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tTHREE.Quaternion = function ( x, y, z, w ) {\n\n\t\tthis._x = x || 0;\n\t\tthis._y = y || 0;\n\t\tthis._z = z || 0;\n\t\tthis._w = ( w !== undefined ) ? w : 1;\n\n\t};\n\n\tTHREE.Quaternion.prototype = {\n\n\t\tconstructor: THREE.Quaternion,\n\n\t\tget x () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset x ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget y () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset y ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget z () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset z ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget w () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset w ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t\t},\n\n\t\tcopy: function ( quaternion ) {\n\n\t\t\tthis._x = quaternion.x;\n\t\t\tthis._y = quaternion.y;\n\t\t\tthis._z = quaternion.z;\n\t\t\tthis._w = quaternion.w;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromEuler: function ( euler, update ) {\n\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\n\n\t\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t\t//\tcontent/SpinCalc.m\n\n\t\t\tvar c1 = Math.cos( euler._x / 2 );\n\t\t\tvar c2 = Math.cos( euler._y / 2 );\n\t\t\tvar c3 = Math.cos( euler._z / 2 );\n\t\t\tvar s1 = Math.sin( euler._x / 2 );\n\t\t\tvar s2 = Math.sin( euler._y / 2 );\n\t\t\tvar s3 = Math.sin( euler._z / 2 );\n\n\t\t\tvar order = euler.order;\n\n\t\t\tif ( order === 'XYZ' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'YZX' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'XZY' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t}\n\n\t\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\t\tthis._x = axis.x * s;\n\t\t\tthis._y = axis.y * s;\n\t\t\tthis._z = axis.z * s;\n\t\t\tthis._w = Math.cos( halfAngle );\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\t\ttrace = m11 + m22 + m33,\n\t\t\t\ts;\n\n\t\t\tif ( trace > 0 ) {\n\n\t\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\t\tthis._w = 0.25 / s;\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\t\tthis._x = 0.25 * s;\n\t\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t\t} else if ( m22 > m33 ) {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\t\tthis._y = 0.25 * s;\n\t\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t\t} else {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\t\tthis._z = 0.25 * s;\n\n\t\t\t}\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromUnitVectors: function () {\n\n\t\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\n\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\t\tvar v1, r;\n\n\t\t\tvar EPS = 0.000001;\n\n\t\t\treturn function setFromUnitVectors( vFrom, vTo ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\n\t\t\t\tr = vFrom.dot( vTo ) + 1;\n\n\t\t\t\tif ( r < EPS ) {\n\n\t\t\t\t\tr = 0;\n\n\t\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv1.crossVectors( vFrom, vTo );\n\n\t\t\t\t}\n\n\t\t\t\tthis._x = v1.x;\n\t\t\t\tthis._y = v1.y;\n\t\t\t\tthis._z = v1.z;\n\t\t\t\tthis._w = r;\n\n\t\t\t\treturn this.normalize();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tinverse: function () {\n\n\t\t\treturn this.conjugate().normalize();\n\n\t\t},\n\n\t\tconjugate: function () {\n\n\t\t\tthis._x *= - 1;\n\t\t\tthis._y *= - 1;\n\t\t\tthis._z *= - 1;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tvar l = this.length();\n\n\t\t\tif ( l === 0 ) {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = 1;\n\n\t\t\t} else {\n\n\t\t\t\tl = 1 / l;\n\n\t\t\t\tthis._x = this._x * l;\n\t\t\t\tthis._y = this._y * l;\n\t\t\t\tthis._z = this._z * l;\n\t\t\t\tthis._w = this._w * l;\n\n\t\t\t}\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( q, p ) {\n\n\t\t\tif ( p !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyQuaternions( this, q );\n\n\t\t},\n\n\t\tpremultiply: function ( q ) {\n\n\t\t\treturn this.multiplyQuaternions( q, this );\n\n\t\t},\n\n\t\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tslerp: function ( qb, t ) {\n\n\t\t\tif ( t === 0 ) return this;\n\t\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\t\tthis._w = - qb._w;\n\t\t\t\tthis._x = - qb._x;\n\t\t\t\tthis._y = - qb._y;\n\t\t\t\tthis._z = - qb._z;\n\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t\t} else {\n\n\t\t\t\tthis.copy( qb );\n\n\t\t\t}\n\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\t\tthis._w = w;\n\t\t\t\tthis._x = x;\n\t\t\t\tthis._y = y;\n\t\t\t\tthis._z = z;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\n\n\t\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\n\n\t\t\t\tthis._w = 0.5 * ( w + this._w );\n\t\t\t\tthis._x = 0.5 * ( x + this._x );\n\t\t\t\tthis._y = 0.5 * ( y + this._y );\n\t\t\t\tthis._z = 0.5 * ( z + this._z );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( quaternion ) {\n\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis._x = array[ offset ];\n\t\t\tthis._y = array[ offset + 1 ];\n\t\t\tthis._z = array[ offset + 2 ];\n\t\t\tthis._w = array[ offset + 3 ];\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tonChange: function ( callback ) {\n\n\t\t\tthis.onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonChangeCallback: function () {}\n\n\t};\n\n\tObject.assign( THREE.Quaternion, {\n\n\t\tslerp: function( qa, qb, qm, t ) {\n\n\t\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t\t},\n\n\t\tslerpFlat: function(\n\t\t\t\tdst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\t\tvar s = 1 - t,\n\n\t\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t\t}\n\n\t\t\t\tvar tDir = t * dir;\n\n\t\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t\t// Normalize in case we just did a lerp:\n\t\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\t\tx0 *= f;\n\t\t\t\t\ty0 *= f;\n\t\t\t\t\tz0 *= f;\n\t\t\t\t\tw0 *= f;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdst[ dstOffset ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\n\t\t}\n\n\t} );\n\n\t// File:src/math/Vector2.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author egraether / http://egraether.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tTHREE.Vector2 = function ( x, y ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\n\t};\n\n\tTHREE.Vector2.prototype = {\n\n\t\tconstructor: THREE.Vector2,\n\n\t\tget width() {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset width( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t},\n\n\t\tget height() {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset height( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t},\n\n\t\t//\n\n\t\tset: function ( x, y ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v ) {\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tif ( isFinite( scalar ) ) {\n\n\t\t\t\tthis.x *= scalar;\n\t\t\t\tthis.y *= scalar;\n\n\t\t\t} else {\n\n\t\t\t\tthis.x = 0;\n\t\t\t\tthis.y = 0;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min, max;\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tif ( min === undefined ) {\n\n\t\t\t\t\tmin = new THREE.Vector2();\n\t\t\t\t\tmax = new THREE.Vector2();\n\n\t\t\t\t}\n\n\t\t\t\tmin.set( minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t\t},\n\n\t\tlengthManhattan: function() {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() );\n\n\t\t},\n\n\t\tangle: function () {\n\n\t\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\t\treturn angle;\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\t\treturn dx * dx + dy * dy;\n\n\t\t},\n\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.multiplyScalar( length / this.length() );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tindex = index * attribute.itemSize + offset;\n\n\t\t\tthis.x = attribute.array[ index ];\n\t\t\tthis.y = attribute.array[ index + 1 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateAround: function ( center, angle ) {\n\n\t\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\t\tvar x = this.x - center.x;\n\t\t\tvar y = this.y - center.y;\n\n\t\t\tthis.x = x * c - y * s + center.x;\n\t\t\tthis.y = x * s + y * c + center.y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Vector3.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author *kile / http://kile.stravaganza.org/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tTHREE.Vector3 = function ( x, y, z ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t\tthis.z = z || 0;\n\n\t};\n\n\tTHREE.Vector3.prototype = {\n\n\t\tconstructor: THREE.Vector3,\n\n\t\tset: function ( x, y, z ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tif ( isFinite( scalar ) ) {\n\n\t\t\t\tthis.x *= scalar;\n\t\t\t\tthis.y *= scalar;\n\t\t\t\tthis.z *= scalar;\n\n\t\t\t} else {\n\n\t\t\t\tthis.x = 0;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.z = 0;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x * b.x;\n\t\t\tthis.y = a.y * b.y;\n\t\t\tthis.z = a.z * b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyEuler: function () {\n\n\t\t\tvar quaternion;\n\n\t\t\treturn function applyEuler( euler ) {\n\n\t\t\t\tif ( euler instanceof THREE.Euler === false ) {\n\n\t\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\n\n\t\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyAxisAngle: function () {\n\n\t\t\tvar quaternion;\n\n\t\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\n\n\t\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyMatrix3: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\t// input: THREE.Matrix4 affine matrix\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyProjection: function ( m ) {\n\n\t\t\t// input: THREE.Matrix4 projection matrix\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\t\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\n\n\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\n\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\n\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyQuaternion: function ( q ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t\t// calculate quat * vector\n\n\t\t\tvar ix =  qw * x + qy * z - qz * y;\n\t\t\tvar iy =  qw * y + qz * x - qx * z;\n\t\t\tvar iz =  qw * z + qx * y - qy * x;\n\t\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t\t// calculate result * inverse quat\n\n\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tproject: function () {\n\n\t\t\tvar matrix;\n\n\t\t\treturn function project( camera ) {\n\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\n\n\t\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\n\t\t\t\treturn this.applyProjection( matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tunproject: function () {\n\n\t\t\tvar matrix;\n\n\t\t\treturn function unproject( camera ) {\n\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\n\n\t\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\n\t\t\t\treturn this.applyProjection( matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttransformDirection: function ( m ) {\n\n\t\t\t// input: THREE.Matrix4 affine matrix\n\t\t\t// vector interpreted as a direction\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\t\treturn this.normalize();\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\tthis.z /= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min, max;\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tif ( min === undefined ) {\n\n\t\t\t\t\tmin = new THREE.Vector3();\n\t\t\t\t\tmax = new THREE.Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t\t},\n\n\t\tlengthManhattan: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.multiplyScalar( length / this.length() );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tcross: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\t\treturn this.crossVectors( v, w );\n\n\t\t\t}\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\n\t\t\tthis.x = y * v.z - z * v.y;\n\t\t\tthis.y = z * v.x - x * v.z;\n\t\t\tthis.z = x * v.y - y * v.x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcrossVectors: function ( a, b ) {\n\n\t\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\t\tthis.x = ay * bz - az * by;\n\t\t\tthis.y = az * bx - ax * bz;\n\t\t\tthis.z = ax * by - ay * bx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tprojectOnVector: function ( vector ) {\n\n\t\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\t\t\n\t\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\t\t\n\t\t},\n\n\t\tprojectOnPlane: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\n\t\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\t\treturn this.sub( v1 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\treflect: function () {\n\n\t\t\t// reflect incident vector off plane orthogonal to normal\n\t\t\t// normal is assumed to have unit length\n\n\t\t\tvar v1;\n\n\t\t\treturn function reflect( normal ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\n\t\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tangleTo: function ( v ) {\n\n\t\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t\t// clamp, to handle numerical problems\n\n\t\t\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t\t},\n\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t\t},\n\n\t\tsetFromSpherical: function( s ) {\n\n\t\t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\n\n\t\t\tthis.x = sinPhiRadius * Math.sin( s.theta );\n\t\t\tthis.y = Math.cos( s.phi ) * s.radius;\n\t\t\tthis.z = sinPhiRadius * Math.cos( s.theta );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixPosition: function ( m ) {\n\n\t\t\treturn this.setFromMatrixColumn( m, 3 );\n\n\t\t},\n\n\t\tsetFromMatrixScale: function ( m ) {\n\n\t\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tthis.x = sx;\n\t\t\tthis.y = sy;\n\t\t\tthis.z = sz;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\t\tif ( typeof m === 'number' ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).' );\n\t\t\t\tvar temp = m\n\t\t\t\tm = index;\n\t\t\t\tindex = temp;\n\n\t\t\t}\n\n\t\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tindex = index * attribute.itemSize + offset;\n\n\t\t\tthis.x = attribute.array[ index ];\n\t\t\tthis.y = attribute.array[ index + 1 ];\n\t\t\tthis.z = attribute.array[ index + 2 ];\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Vector4.js\n\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tTHREE.Vector4 = function ( x, y, z, w ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t\tthis.z = z || 0;\n\t\tthis.w = ( w !== undefined ) ? w : 1;\n\n\t};\n\n\tTHREE.Vector4.prototype = {\n\n\t\tconstructor: THREE.Vector4,\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\tthis.w = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( w ) {\n\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tcase 3: this.w = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tcase 3: return this.w;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\tthis.w += v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\tthis.w += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\tthis.w = a.w + b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\tthis.w += v.w * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\tthis.w -= v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\tthis.w -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\tthis.w = a.w - b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tif ( isFinite( scalar ) ) {\n\n\t\t\t\tthis.x *= scalar;\n\t\t\t\tthis.y *= scalar;\n\t\t\t\tthis.z *= scalar;\n\t\t\t\tthis.w *= scalar;\n\n\t\t\t} else {\n\n\t\t\t\tthis.x = 0;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.z = 0;\n\t\t\t\tthis.w = 0;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t\t// q is assumed to be normalized\n\n\t\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\t\tif ( s < 0.0001 ) {\n\n\t\t\t\t this.x = 1;\n\t\t\t\t this.y = 0;\n\t\t\t\t this.z = 0;\n\n\t\t\t} else {\n\n\t\t\t\t this.x = q.x / s;\n\t\t\t\t this.y = q.y / s;\n\t\t\t\t this.z = q.z / s;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\t\tte = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t\t// singularity found\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t\t}\n\n\t\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\t\tangle = Math.PI;\n\n\t\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\t\ty = xy / x;\n\t\t\t\t\t\tz = xz / x;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\t\tx = xy / y;\n\t\t\t\t\t\tz = yz / y;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\t\tx = xz / z;\n\t\t\t\t\t\ty = yz / z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.set( x, y, z, angle );\n\n\t\t\t\treturn this; // return 180 deg rotation\n\n\t\t\t}\n\n\t\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\t\tthis.x = ( m32 - m23 ) / s;\n\t\t\tthis.y = ( m13 - m31 ) / s;\n\t\t\tthis.z = ( m21 - m12 ) / s;\n\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\t\t\tthis.w = Math.min( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\t\t\tthis.w = Math.max( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min, max;\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tif ( min === undefined ) {\n\n\t\t\t\t\tmin = new THREE.Vector4();\n\t\t\t\t\tmax = new THREE.Vector4();\n\n\t\t\t\t}\n\n\t\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\t\t\tthis.w = Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\t\t\tthis.w = Math.ceil( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\t\t\tthis.w = Math.round( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\t\t\tthis.w = - this.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t\t},\n\n\t\tlengthManhattan: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.multiplyScalar( length / this.length() );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\t\t\tthis.w = array[ offset + 3 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\t\t\tarray[ offset + 3 ] = this.w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tindex = index * attribute.itemSize + offset;\n\n\t\t\tthis.x = attribute.array[ index ];\n\t\t\tthis.y = attribute.array[ index + 1 ];\n\t\t\tthis.z = attribute.array[ index + 2 ];\n\t\t\tthis.w = attribute.array[ index + 3 ];\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Euler.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tTHREE.Euler = function ( x, y, z, order ) {\n\n\t\tthis._x = x || 0;\n\t\tthis._y = y || 0;\n\t\tthis._z = z || 0;\n\t\tthis._order = order || THREE.Euler.DefaultOrder;\n\n\t};\n\n\tTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\n\tTHREE.Euler.DefaultOrder = 'XYZ';\n\n\tTHREE.Euler.prototype = {\n\n\t\tconstructor: THREE.Euler,\n\n\t\tget x () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset x ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget y () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset y ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget z () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset z ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget order () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset order ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tset: function ( x, y, z, order ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order || this._order;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t\t},\n\n\t\tcopy: function ( euler ) {\n\n\t\t\tthis._x = euler._x;\n\t\t\tthis._y = euler._y;\n\t\t\tthis._z = euler._z;\n\t\t\tthis._order = euler._order;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\t\tvar clamp = THREE.Math.clamp;\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements;\n\t\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\torder = order || this._order;\n\n\t\t\tif ( order === 'XYZ' ) {\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'YZX' ) {\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'XZY' ) {\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t\t}\n\n\t\t\tthis._order = order;\n\n\t\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromQuaternion: function () {\n\n\t\t\tvar matrix;\n\n\t\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\n\n\t\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetFromVector3: function ( v, order ) {\n\n\t\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t\t},\n\n\t\treorder: function () {\n\n\t\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t\tvar q = new THREE.Quaternion();\n\n\t\t\treturn function reorder( newOrder ) {\n\n\t\t\t\tq.setFromEuler( this );\n\t\t\t\t\n\t\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tequals: function ( euler ) {\n\n\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t\t},\n\n\t\tfromArray: function ( array ) {\n\n\t\t\tthis._x = array[ 0 ];\n\t\t\tthis._y = array[ 1 ];\n\t\t\tthis._z = array[ 2 ];\n\t\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._order;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\ttoVector3: function ( optionalResult ) {\n\n\t\t\tif ( optionalResult ) {\n\n\t\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t\t} else {\n\n\t\t\t\treturn new THREE.Vector3( this._x, this._y, this._z );\n\n\t\t\t}\n\n\t\t},\n\n\t\tonChange: function ( callback ) {\n\n\t\t\tthis.onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonChangeCallback: function () {}\n\n\t};\n\n\t// File:src/math/Line3.js\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tTHREE.Line3 = function ( start, end ) {\n\n\t\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\n\t\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\n\n\t};\n\n\tTHREE.Line3.prototype = {\n\n\t\tconstructor: THREE.Line3,\n\n\t\tset: function ( start, end ) {\n\n\t\t\tthis.start.copy( start );\n\t\t\tthis.end.copy( end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( line ) {\n\n\t\t\tthis.start.copy( line.start );\n\t\t\tthis.end.copy( line.end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcenter: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tdelta: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\t\treturn result.subVectors( this.end, this.start );\n\n\t\t},\n\n\t\tdistanceSq: function () {\n\n\t\t\treturn this.start.distanceToSquared( this.end );\n\n\t\t},\n\n\t\tdistance: function () {\n\n\t\t\treturn this.start.distanceTo( this.end );\n\n\t\t},\n\n\t\tat: function ( t, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tclosestPointToPointParameter: function () {\n\n\t\t\tvar startP = new THREE.Vector3();\n\t\t\tvar startEnd = new THREE.Vector3();\n\n\t\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\t\tstartP.subVectors( point, this.start );\n\t\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\t\tif ( clampToLine ) {\n\n\t\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\n\n\t\t\t\t}\n\n\t\t\t\treturn t;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\n\n\t\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.start.applyMatrix4( matrix );\n\t\t\tthis.end.applyMatrix4( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( line ) {\n\n\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Box2.js\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tTHREE.Box2 = function ( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\n\n\t};\n\n\tTHREE.Box2.prototype = {\n\n\t\tconstructor: THREE.Box2,\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function () {\n\n\t\t\tvar v1 = new THREE.Vector2();\n\n\t\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = + Infinity;\n\t\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t\t},\n\n\t\tcenter: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\n\t\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tsize: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\n\t\t\treturn result.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\tif ( point.x < this.min.x || point.x > this.max.x ||\n\t\t\t     point.y < this.min.y || point.y > this.max.y ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\n\t\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\n\n\t\t\treturn result.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 6 splitting planes to rule out intersections.\n\n\t\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tclampPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function () {\n\n\t\t\tvar v1 = new THREE.Vector2();\n\n\t\t\treturn function distanceToPoint( point ) {\n\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Box3.js\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tTHREE.Box3 = function ( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( + Infinity, + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\n\n\t};\n\n\tTHREE.Box3.prototype = {\n\n\t\tconstructor: THREE.Box3,\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromArray: function ( array ) {\n\n\t\t\tvar minX = + Infinity;\n\t\t\tvar minY = + Infinity;\n\t\t\tvar minZ = + Infinity;\n\n\t\t\tvar maxX = - Infinity;\n\t\t\tvar maxY = - Infinity;\n\t\t\tvar maxZ = - Infinity;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar x = array[ i ];\n\t\t\t\tvar y = array[ i + 1 ];\n\t\t\t\tvar z = array[ i + 2 ];\n\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\t\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t\t}\n\n\t\t\tthis.min.set( minX, minY, minZ );\n\t\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function () {\n\n\t\t\tvar v1 = new THREE.Vector3();\n\n\t\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetFromObject: function () {\n\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t\t// accounting for both the object's, and children's, world transforms\n\n\t\t\tvar v1 = new THREE.Vector3();\n\n\t\t\treturn function setFromObject( object ) {\n\n\t\t\t\tvar scope = this;\n\n\t\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\t\tthis.makeEmpty();\n\n\t\t\t\tobject.traverse( function ( node ) {\n\n\t\t\t\t\tvar geometry = node.geometry;\n\n\t\t\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\t\t\tvar array, offset, stride;\n\n\t\t\t\t\t\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\n\n\t\t\t\t\t\t\t\t\tarray = attribute.data.array;\n\t\t\t\t\t\t\t\t\toffset = attribute.offset;\n\t\t\t\t\t\t\t\t\tstride = attribute.data.stride;\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tarray = attribute.array;\n\t\t\t\t\t\t\t\t\toffset = 0;\n\t\t\t\t\t\t\t\t\tstride = 3;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfor ( var i = offset, il = array.length; i < il; i += stride ) {\n\n\t\t\t\t\t\t\t\t\tv1.fromArray( array, i );\n\t\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t\t},\n\n\t\tcenter: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tsize: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\t\treturn result.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\tif ( point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\t\t point.y < this.min.y || point.y > this.max.y ||\n\t\t\t\t\t point.z < this.min.z || point.z > this.max.z ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\n\t\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\n\t\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\treturn result.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 6 splitting planes to rule out intersections.\n\n\t\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\t\t box.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\t\t\t box.max.z < this.min.z || box.min.z > this.max.z ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tintersectsSphere: ( function () {\n\n\t\t\tvar closestPoint;\n\n\t\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t\tif ( closestPoint === undefined ) closestPoint = new THREE.Vector3();\n\n\t\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\t\tvar min, max;\n\n\t\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t\t} else {\n\n\t\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t\t}\n\n\t\t\treturn ( min <= plane.constant && max >= plane.constant );\n\n\t\t},\n\n\t\tclampPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function () {\n\n\t\t\tvar v1 = new THREE.Vector3();\n\n\t\t\treturn function distanceToPoint( point ) {\n\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetBoundingSphere: function () {\n\n\t\t\tvar v1 = new THREE.Vector3();\n\n\t\t\treturn function getBoundingSphere( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new THREE.Sphere();\n\n\t\t\t\tresult.center = this.center();\n\t\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\t\tif( this.isEmpty() ) this.makeEmpty();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function () {\n\n\t\t\tvar points = [\n\t\t\t\tnew THREE.Vector3(),\n\t\t\t\tnew THREE.Vector3(),\n\t\t\t\tnew THREE.Vector3(),\n\t\t\t\tnew THREE.Vector3(),\n\t\t\t\tnew THREE.Vector3(),\n\t\t\t\tnew THREE.Vector3(),\n\t\t\t\tnew THREE.Vector3(),\n\t\t\t\tnew THREE.Vector3()\n\t\t\t];\n\n\t\t\treturn function applyMatrix4( matrix ) {\n\n\t\t\t\t// transform of empty box is an empty box.\n\t\t\t\tif( this.isEmpty() ) return this;\n\n\t\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );\t// 111\n\n\t\t\t\tthis.setFromPoints( points );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Matrix3.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t * @author tschw\n\t */\n\n\tTHREE.Matrix3 = function () {\n\n\t\tthis.elements = new Float32Array( [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t] );\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t};\n\n\tTHREE.Matrix3.prototype = {\n\n\t\tconstructor: THREE.Matrix3,\n\n\t\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0,\n\t\t\t\t0, 1, 0,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tvar me = m.elements;\n\n\t\t\tthis.set(\n\n\t\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\n\t\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\n\t\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrix4: function( m ) {\n\n\t\t\tvar me = m.elements;\n\n\t\t\tthis.set(\n\n\t\t\t\tme[ 0 ], me[ 4 ], me[  8 ],\n\t\t\t\tme[ 1 ], me[ 5 ], me[  9 ],\n\t\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyToVector3Array: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function applyToVector3Array( array, offset, length ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\t\t\tif ( length === undefined ) length = array.length;\n\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\n\n\t\t\t\t\tv1.fromArray( array, j );\n\t\t\t\t\tv1.applyMatrix3( this );\n\t\t\t\t\tv1.toArray( array, j );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyToBuffer: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function applyToBuffer( buffer, offset, length ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\n\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\n\n\t\t\t\t\tv1.x = buffer.getX( j );\n\t\t\t\t\tv1.y = buffer.getY( j );\n\t\t\t\t\tv1.z = buffer.getZ( j );\n\n\t\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\n\n\t\t\t\t}\n\n\t\t\t\treturn buffer;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t\t},\n\n\t\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\t\tif ( matrix instanceof THREE.Matrix4 ) {\n\n\t\t\t\tconsole.error( \"THREE.Matrix3.getInverse no longer takes a Matrix4 argument.\" );\n\n\t\t\t}\n\n\t\t\tvar me = matrix.elements,\n\t\t\t\tte = this.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\t\tif ( det === 0 ) {\n\n\t\t\t\tvar msg = \"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\";\n\n\t\t\t\tif ( throwOnDegenerate || false ) {\n\n\t\t\t\t\tthrow new Error( msg );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( msg );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.identity();\n\t\t\t}\n\t\t\t\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\t\tte[ 3 ] = t12 * detInv;\n\t\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\t\tte[ 6 ] = t13 * detInv;\n\t\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar tmp, m = this.elements;\n\n\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset is deprecated \" +\n\t\t\t\t\t\"- just use .toArray instead.\" );\n\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\n\t\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t\t},\n\n\t\ttransposeIntoArray: function ( r ) {\n\n\t\t\tvar m = this.elements;\n\n\t\t\tr[ 0 ] = m[ 0 ];\n\t\t\tr[ 1 ] = m[ 3 ];\n\t\t\tr[ 2 ] = m[ 6 ];\n\t\t\tr[ 3 ] = m[ 1 ];\n\t\t\tr[ 4 ] = m[ 4 ];\n\t\t\tr[ 5 ] = m[ 7 ];\n\t\t\tr[ 6 ] = m[ 2 ];\n\t\t\tr[ 7 ] = m[ 5 ];\n\t\t\tr[ 8 ] = m[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tfromArray: function ( array ) {\n\n\t\t\tthis.elements.set( array );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\t\tarray[ offset + 8 ]  = te[ 8 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Matrix4.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author jordi_ros / http://plattsoft.com\n\t * @author D1plo1d / http://github.com/D1plo1d\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author timknip / http://www.floorplanner.com/\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tTHREE.Matrix4 = function () {\n\n\t\tthis.elements = new Float32Array( [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t] );\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t};\n\n\tTHREE.Matrix4.prototype = {\n\n\t\tconstructor: THREE.Matrix4,\n\n\t\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new THREE.Matrix4().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tthis.elements.set( m.elements );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyPosition: function ( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tte[ 12 ] = me[ 12 ];\n\t\t\tte[ 13 ] = me[ 13 ];\n\t\t\tte[ 14 ] = me[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\tthis.set(\n\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t\t0,       0,       0,       1\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractRotation: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function extractRotation( m ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\n\t\t\t\tvar te = this.elements;\n\t\t\t\tvar me = m.elements;\n\n\t\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\n\t\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\n\t\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmakeRotationFromEuler: function ( euler ) {\n\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\n\n\t\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - c * f;\n\t\t\t\tte[ 8 ] = d;\n\n\t\t\t\tte[ 1 ] = af + be * d;\n\t\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\t\tte[ 9 ] = - b * c;\n\n\t\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\t\tte[ 6 ] = be + af * d;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce + df * b;\n\t\t\t\tte[ 4 ] = de * b - cf;\n\t\t\t\tte[ 8 ] = a * d;\n\n\t\t\t\tte[ 1 ] = a * f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b;\n\n\t\t\t\tte[ 2 ] = cf * b - de;\n\t\t\t\tte[ 6 ] = df + ce * b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce - df * b;\n\t\t\t\tte[ 4 ] = - a * f;\n\t\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\t\tte[ 1 ] = cf + de * b;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\t\tte[ 2 ] = - a * d;\n\t\t\t\tte[ 6 ] = b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = be * d - af;\n\t\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\t\tte[ 1 ] = c * f;\n\t\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\t\tte[ 2 ] = - d;\n\t\t\t\tte[ 6 ] = b * c;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\t\tte[ 1 ] = f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b * e;\n\n\t\t\t\tte[ 2 ] = - d * e;\n\t\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - f;\n\t\t\t\tte[ 8 ] = d * e;\n\n\t\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\t\tte[ 6 ] = b * e;\n\t\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t\t}\n\n\t\t\t// last column\n\t\t\tte[ 3 ] = 0;\n\t\t\tte[ 7 ] = 0;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\t// bottom row\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationFromQuaternion: function ( q ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\n\t\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\n\t\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\t\tte[ 0 ] = 1 - ( yy + zz );\n\t\t\tte[ 4 ] = xy - wz;\n\t\t\tte[ 8 ] = xz + wy;\n\n\t\t\tte[ 1 ] = xy + wz;\n\t\t\tte[ 5 ] = 1 - ( xx + zz );\n\t\t\tte[ 9 ] = yz - wx;\n\n\t\t\tte[ 2 ] = xz - wy;\n\t\t\tte[ 6 ] = yz + wx;\n\t\t\tte[ 10 ] = 1 - ( xx + yy );\n\n\t\t\t// last column\n\t\t\tte[ 3 ] = 0;\n\t\t\tte[ 7 ] = 0;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\t// bottom row\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlookAt: function () {\n\n\t\t\tvar x, y, z;\n\n\t\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\t\tif ( x === undefined ) {\n\n\t\t\t\t\tx = new THREE.Vector3();\n\t\t\t\t\ty = new THREE.Vector3();\n\t\t\t\t\tz = new THREE.Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tvar te = this.elements;\n\n\t\t\t\tz.subVectors( eye, target ).normalize();\n\n\t\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t\tz.z = 1;\n\n\t\t\t\t}\n\n\t\t\t\tx.crossVectors( up, z ).normalize();\n\n\t\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t\tz.z += 0.0001;\n\t\t\t\t\tx.crossVectors( up, z ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\ty.crossVectors( z, x );\n\n\n\t\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmultiply: function ( m, n ) {\n\n\t\t\tif ( n !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyMatrices( this, m );\n\n\t\t},\n\n\t\tpremultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( m, this );\n\n\t\t},\n\n\t\tmultiplyMatrices: function ( a, b ) {\n\n\t\t\tvar ae = a.elements;\n\t\t\tvar be = b.elements;\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyToArray: function ( a, b, r ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tthis.multiplyMatrices( a, b );\n\n\t\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\n\t\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\n\t\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\n\t\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyToVector3Array: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function applyToVector3Array( array, offset, length ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\t\t\tif ( length === undefined ) length = array.length;\n\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\n\n\t\t\t\t\tv1.fromArray( array, j );\n\t\t\t\t\tv1.applyMatrix4( this );\n\t\t\t\t\tv1.toArray( array, j );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyToBuffer: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function applyToBuffer( buffer, offset, length ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\n\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\n\n\t\t\t\t\tv1.x = buffer.getX( j );\n\t\t\t\t\tv1.y = buffer.getY( j );\n\t\t\t\t\tv1.z = buffer.getZ( j );\n\n\t\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\n\n\t\t\t\t}\n\n\t\t\t\treturn buffer;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t\t//TODO: make this more efficient\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\t\treturn (\n\t\t\t\tn41 * (\n\t\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t\t - n13 * n24 * n32\n\t\t\t\t\t - n14 * n22 * n33\n\t\t\t\t\t + n12 * n24 * n33\n\t\t\t\t\t + n13 * n22 * n34\n\t\t\t\t\t - n12 * n23 * n34\n\t\t\t\t) +\n\t\t\t\tn42 * (\n\t\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t\t - n11 * n24 * n33\n\t\t\t\t\t + n14 * n21 * n33\n\t\t\t\t\t - n13 * n21 * n34\n\t\t\t\t\t + n13 * n24 * n31\n\t\t\t\t\t - n14 * n23 * n31\n\t\t\t\t) +\n\t\t\t\tn43 * (\n\t\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t\t - n11 * n22 * n34\n\t\t\t\t\t - n14 * n21 * n32\n\t\t\t\t\t + n12 * n21 * n34\n\t\t\t\t\t + n14 * n22 * n31\n\t\t\t\t\t - n12 * n24 * n31\n\t\t\t\t) +\n\t\t\t\tn44 * (\n\t\t\t\t\t- n13 * n22 * n31\n\t\t\t\t\t - n11 * n23 * n32\n\t\t\t\t\t + n11 * n22 * n33\n\t\t\t\t\t + n13 * n21 * n32\n\t\t\t\t\t - n12 * n21 * n33\n\t\t\t\t\t + n12 * n23 * n31\n\t\t\t\t)\n\n\t\t\t);\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar tmp;\n\n\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset is deprecated \" +\n\t\t\t\t\t\"- just use .toArray instead.\" );\n\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\n\t\tgetPosition: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function getPosition() {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\n\t\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetPosition: function ( v ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 12 ] = v.x;\n\t\t\tte[ 13 ] = v.y;\n\t\t\tte[ 14 ] = v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\t\tvar te = this.elements,\n\t\t\t\tme = m.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\t\tif ( det === 0 ) {\n\n\t\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\n\n\t\t\t\tif ( throwOnDegenerate || false ) {\n\n\t\t\t\t\tthrow new Error( msg );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( msg );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.identity();\n\n\t\t\t}\n\t\t\t\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 4 ] = t12 * detInv;\n\t\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 8 ] = t13 * detInv;\n\t\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\t\tte[ 12 ] = t14 * detInv;\n\t\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tscale: function ( v ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMaxScaleOnAxis: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t\t},\n\n\t\tmakeTranslation: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationX: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0,  0, 0,\n\t\t\t\t0, c, - s, 0,\n\t\t\t\t0, s,  c, 0,\n\t\t\t\t0, 0,  0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationY: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t c, 0, s, 0,\n\t\t\t\t 0, 1, 0, 0,\n\t\t\t\t- s, 0, c, 0,\n\t\t\t\t 0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationZ: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\tc, - s, 0, 0,\n\t\t\t\ts,  c, 0, 0,\n\t\t\t\t0,  0, 1, 0,\n\t\t\t\t0,  0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\t\tvar c = Math.cos( angle );\n\t\t\tvar s = Math.sin( angle );\n\t\t\tvar t = 1 - c;\n\t\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\t\tvar tx = t * x, ty = t * y;\n\n\t\t\tthis.set(\n\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\t return this;\n\n\t\t},\n\n\t\tmakeScale: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\tx, 0, 0, 0,\n\t\t\t\t0, y, 0, 0,\n\t\t\t\t0, 0, z, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcompose: function ( position, quaternion, scale ) {\n\n\t\t\tthis.makeRotationFromQuaternion( quaternion );\n\t\t\tthis.scale( scale );\n\t\t\tthis.setPosition( position );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdecompose: function () {\n\n\t\t\tvar vector, matrix;\n\n\t\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tvector = new THREE.Vector3();\n\t\t\t\t\tmatrix = new THREE.Matrix4();\n\n\t\t\t\t}\n\n\t\t\t\tvar te = this.elements;\n\n\t\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t\t// if determine is negative, we need to invert one scale\n\t\t\t\tvar det = this.determinant();\n\t\t\t\tif ( det < 0 ) {\n\n\t\t\t\t\tsx = - sx;\n\n\t\t\t\t}\n\n\t\t\t\tposition.x = te[ 12 ];\n\t\t\t\tposition.y = te[ 13 ];\n\t\t\t\tposition.z = te[ 14 ];\n\n\t\t\t\t// scale the rotation part\n\n\t\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\n\n\t\t\t\tvar invSX = 1 / sx;\n\t\t\t\tvar invSY = 1 / sy;\n\t\t\t\tvar invSZ = 1 / sz;\n\n\t\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\t\tscale.x = sx;\n\t\t\t\tscale.y = sy;\n\t\t\t\tscale.z = sz;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = 2 * near / ( right - left );\n\t\t\tvar y = 2 * near / ( top - bottom );\n\n\t\t\tvar a = ( right + left ) / ( right - left );\n\t\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\t\tvar c = - ( far + near ) / ( far - near );\n\t\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakePerspective: function ( fov, aspect, near, far ) {\n\n\t\t\tvar ymax = near * Math.tan( THREE.Math.DEG2RAD * fov * 0.5 );\n\t\t\tvar ymin = - ymax;\n\t\t\tvar xmin = ymin * aspect;\n\t\t\tvar xmax = ymax * aspect;\n\n\t\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\n\n\t\t},\n\n\t\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar w = 1.0 / ( right - left );\n\t\t\tvar h = 1.0 / ( top - bottom );\n\t\t\tvar p = 1.0 / ( far - near );\n\n\t\t\tvar x = ( right + left ) * w;\n\t\t\tvar y = ( top + bottom ) * h;\n\t\t\tvar z = ( far + near ) * p;\n\n\t\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( matrix ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = matrix.elements;\n\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tfromArray: function ( array ) {\n\n\t\t\tthis.elements.set( array );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\t\tarray[ offset + 8 ]  = te[ 8 ];\n\t\t\tarray[ offset + 9 ]  = te[ 9 ];\n\t\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Ray.js\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tTHREE.Ray = function ( origin, direction ) {\n\n\t\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\n\t\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\n\n\t};\n\n\tTHREE.Ray.prototype = {\n\n\t\tconstructor: THREE.Ray,\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\tthis.origin.copy( origin );\n\t\t\tthis.direction.copy( direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( ray ) {\n\n\t\t\tthis.origin.copy( ray.origin );\n\t\t\tthis.direction.copy( ray.direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tat: function ( t, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t\t},\n\n\t\tlookAt: function ( v ) {\n\n\t\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trecast: function () {\n\n\t\t\tvar v1 = new THREE.Vector3();\n\n\t\t\treturn function recast( t ) {\n\n\t\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclosestPointToPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\t\tresult.subVectors( point, this.origin );\n\t\t\tvar directionDistance = result.dot( this.direction );\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn result.copy( this.origin );\n\n\t\t\t}\n\n\t\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t\t},\n\n\t\tdistanceSqToPoint: function () {\n\n\t\t\tvar v1 = new THREE.Vector3();\n\n\t\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t\t// point behind the ray\n\n\t\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t\t}\n\n\t\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\t\treturn v1.distanceToSquared( point );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tdistanceSqToSegment: function () {\n\n\t\t\tvar segCenter = new THREE.Vector3();\n\t\t\tvar segDir = new THREE.Vector3();\n\t\t\tvar diff = new THREE.Vector3();\n\n\t\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t\t// defined by v0 and v1\n\t\t\t\t// It can also set two optional targets :\n\t\t\t\t// - The closest point on the ray\n\t\t\t\t// - The closest point on the segment\n\n\t\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\t\tvar c = diff.lengthSq();\n\t\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\t\tif ( det > 0 ) {\n\n\t\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\t\textDet = segExtent * det;\n\n\t\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t\t}\n\n\t\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t\t}\n\n\t\t\t\treturn sqrDist;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectSphere: function () {\n\n\t\t\tvar v1 = new THREE.Vector3();\n\n\t\t\treturn function intersectSphere( sphere, optionalTarget ) {\n\n\t\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\t\tvar tca = v1.dot( this.direction );\n\t\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\t\tvar t0 = tca - thc;\n\n\t\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\t\tvar t1 = tca + thc;\n\n\t\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t\t// test to see if t0 is behind the ray:\n\t\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\n\n\t\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\t\treturn this.at( t0, optionalTarget );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\n\n\t\t},\n\n\t\tdistanceToPlane: function ( plane ) {\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t\t// Return if the ray never intersects the plane\n\n\t\t\treturn t >= 0 ? t :  null;\n\n\t\t},\n\n\t\tintersectPlane: function ( plane, optionalTarget ) {\n\n\t\t\tvar t = this.distanceToPlane( plane );\n\n\t\t\tif ( t === null ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\treturn this.at( t, optionalTarget );\n\n\t\t},\n\n\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// check if the ray lies on the plane first\n\n\t\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\t\tif ( distToPoint === 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tintersectBox: function ( box, optionalTarget ) {\n\n\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\t\tvar invdirx = 1 / this.direction.x,\n\t\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\t\tvar origin = this.origin;\n\n\t\t\tif ( invdirx >= 0 ) {\n\n\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t\t} else {\n\n\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t\t}\n\n\t\t\tif ( invdiry >= 0 ) {\n\n\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t\t} else {\n\n\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\t\tif ( invdirz >= 0 ) {\n\n\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t\t} else {\n\n\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t\t//return point closest to the ray (positive side)\n\n\t\t\tif ( tmax < 0 ) return null;\n\n\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\n\n\t\t},\n\n\t\tintersectsBox: ( function () {\n\n\t\t\tvar v = new THREE.Vector3();\n\n\t\t\treturn function intersectsBox( box ) {\n\n\t\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tintersectTriangle: function () {\n\n\t\t\t// Compute the offset origin, edges, and normal.\n\t\t\tvar diff = new THREE.Vector3();\n\t\t\tvar edge1 = new THREE.Vector3();\n\t\t\tvar edge2 = new THREE.Vector3();\n\t\t\tvar normal = new THREE.Vector3();\n\n\t\t\treturn function intersectTriangle( a, b, c, backfaceCulling, optionalTarget ) {\n\n\t\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\t\tedge1.subVectors( b, a );\n\t\t\t\tedge2.subVectors( c, a );\n\t\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\t\tvar sign;\n\n\t\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\t\tsign = 1;\n\n\t\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\t\tsign = - 1;\n\t\t\t\t\tDdN = - DdN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\tdiff.subVectors( this.origin, a );\n\t\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t\t// b1 < 0, no intersection\n\t\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t\t// b2 < 0, no intersection\n\t\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// b1+b2 > 1, no intersection\n\t\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// Line intersects triangle, check if ray does.\n\t\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t\t// t < 0, no intersection\n\t\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// Ray intersects triangle.\n\t\t\t\treturn this.at( QdN / DdN, optionalTarget );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyMatrix4: function ( matrix4 ) {\n\n\t\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\n\t\t\tthis.origin.applyMatrix4( matrix4 );\n\t\t\tthis.direction.sub( this.origin );\n\t\t\tthis.direction.normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( ray ) {\n\n\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Sphere.js\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.Sphere = function ( center, radius ) {\n\n\t\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\n\t\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n\t};\n\n\tTHREE.Sphere.prototype = {\n\n\t\tconstructor: THREE.Sphere,\n\n\t\tset: function ( center, radius ) {\n\n\t\t\tthis.center.copy( center );\n\t\t\tthis.radius = radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function () {\n\n\t\t\tvar box = new THREE.Box3();\n\n\t\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\t\tvar center = this.center;\n\n\t\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbox.setFromPoints( points ).center( center );\n\n\t\t\t\t}\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( sphere ) {\n\n\t\t\tthis.center.copy( sphere.center );\n\t\t\tthis.radius = sphere.radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tempty: function () {\n\n\t\t\treturn ( this.radius <= 0 );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsSphere( this );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// We use the following equation to compute the signed distance from\n\t\t\t// the center of the sphere to the plane.\n\t\t\t//\n\t\t\t// distance = q * n - d\n\t\t\t//\n\t\t\t// If this distance is greater than the radius of the sphere,\n\t\t\t// then there is no intersection.\n\n\t\t\treturn Math.abs( this.center.dot( plane.normal ) - plane.constant ) <= this.radius;\n\n\t\t},\n\n\t\tclampPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\tresult.copy( point );\n\n\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t\tresult.sub( this.center ).normalize();\n\t\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\tgetBoundingBox: function ( optionalTarget ) {\n\n\t\t\tvar box = optionalTarget || new THREE.Box3();\n\n\t\t\tbox.set( this.center, this.center );\n\t\t\tbox.expandByScalar( this.radius );\n\n\t\t\treturn box;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.center.applyMatrix4( matrix );\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.center.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( sphere ) {\n\n\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Frustum.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / http://clara.io\n\t */\n\n\tTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tthis.planes = [\n\n\t\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\n\t\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\n\t\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\n\t\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\n\t\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\n\t\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\n\n\t\t];\n\n\t};\n\n\tTHREE.Frustum.prototype = {\n\n\t\tconstructor: THREE.Frustum,\n\n\t\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tplanes[ 0 ].copy( p0 );\n\t\t\tplanes[ 1 ].copy( p1 );\n\t\t\tplanes[ 2 ].copy( p2 );\n\t\t\tplanes[ 3 ].copy( p3 );\n\t\t\tplanes[ 4 ].copy( p4 );\n\t\t\tplanes[ 5 ].copy( p5 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( frustum ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrix: function ( m ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar me = m.elements;\n\t\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tintersectsObject: function () {\n\n\t\t\tvar sphere = new THREE.Sphere();\n\n\t\t\treturn function intersectsObject( object ) {\n\n\t\t\t\tvar geometry = object.geometry;\n\n\t\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSprite: function () {\n\n\t\t\tvar sphere = new THREE.Sphere();\n\n\t\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar center = sphere.center;\n\t\t\tvar negRadius = - sphere.radius;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tintersectsBox: function () {\n\n\t\t\tvar p1 = new THREE.Vector3(),\n\t\t\t\tp2 = new THREE.Vector3();\n\n\t\t\treturn function intersectsBox( box ) {\n\n\t\t\t\tvar planes = this.planes;\n\n\t\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\n\n\t\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n\t\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n\t\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n\t\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\n\t\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\n\n\t\t\t\t\t// if both outside plane, no intersection\n\n\t\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\n\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t};\n\n\t\t}(),\n\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Plane.js\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tTHREE.Plane = function ( normal, constant ) {\n\n\t\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n\t};\n\n\tTHREE.Plane.prototype = {\n\n\t\tconstructor: THREE.Plane,\n\n\t\tset: function ( normal, constant ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponents: function ( x, y, z, w ) {\n\n\t\t\tthis.normal.set( x, y, z );\n\t\t\tthis.constant = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCoplanarPoints: function () {\n\n\t\t\tvar v1 = new THREE.Vector3();\n\t\t\tvar v2 = new THREE.Vector3();\n\n\t\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( plane ) {\n\n\t\t\tthis.normal.copy( plane.normal );\n\t\t\tthis.constant = plane.constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\t\tthis.constant *= inverseNormalLength;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.constant *= - 1;\n\t\t\tthis.normal.negate();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn this.normal.dot( point ) + this.constant;\n\n\t\t},\n\n\t\tdistanceToSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t\t},\n\n\t\tprojectPoint: function ( point, optionalTarget ) {\n\n\t\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\n\n\t\t},\n\n\t\torthoPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\n\n\t\t},\n\n\t\tintersectLine: function () {\n\n\t\t\tvar v1 = new THREE.Vector3();\n\n\t\t\treturn function intersectLine( line, optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\t\tvar direction = line.delta( v1 );\n\n\t\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t\t// line is coplanar, return origin\n\t\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\t\treturn result.copy( line.start );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t}\n\n\t\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t}\n\n\t\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsLine: function ( line ) {\n\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\t\tvar startSign = this.distanceToPoint( line.start );\n\t\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsPlane( this );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn sphere.intersectsPlane( this );\n\n\t\t},\n\n\t\tcoplanarPoint: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t\t},\n\n\t\tapplyMatrix4: function () {\n\n\t\t\tvar v1 = new THREE.Vector3();\n\t\t\tvar m1 = new THREE.Matrix3();\n\n\t\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\t\t// transform normal based on theory here:\n\t\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\n\t\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\t\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t// recalculate constant (like in setFromNormalAndCoplanarPoint)\n\t\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.constant = this.constant - offset.dot( this.normal );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( plane ) {\n\n\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Spherical.js\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n\t *\n\t * The poles (phi) are at the positive and negative y axis.\n\t * The equator starts at positive z.\n\t */\n\n\tTHREE.Spherical = function ( radius, phi, theta ) {\n\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\t\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\n\n\t\treturn this;\n\n\t};\n\n\tTHREE.Spherical.prototype = {\n\n\t\tconstructor: THREE.Spherical,\n\n\t\tset: function ( radius, phi, theta ) {\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi;\n\t\t\tthis.theta = theta;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( other ) {\n\n\t\t\tthis.radius.copy( other.radius );\n\t\t\tthis.phi.copy( other.phi );\n\t\t\tthis.theta.copy( other.theta );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\tmakeSafe: function() {\n\n\t\t\tvar EPS = 0.000001;\n\t\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromVector3: function( vec3 ) {\n\n\t\t\tthis.radius = vec3.length();\n\n\t\t\tif ( this.radius === 0 ) {\n\n\t\t\t\tthis.theta = 0;\n\t\t\t\tthis.phi = 0;\n\n\t\t\t} else {\n\n\t\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\n\t\t\t\tthis.phi = Math.acos( THREE.Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t};\n\n\t// File:src/math/Math.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.Math = {\n\n\t\tDEG2RAD: Math.PI / 180,\n\t\tRAD2DEG: 180 / Math.PI,\n\n\t\tgenerateUUID: function () {\n\n\t\t\t// http://www.broofa.com/Tools/Math.uuid.htm\n\n\t\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\n\t\t\tvar uuid = new Array( 36 );\n\t\t\tvar rnd = 0, r;\n\n\t\t\treturn function generateUUID() {\n\n\t\t\t\tfor ( var i = 0; i < 36; i ++ ) {\n\n\t\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\n\n\t\t\t\t\t\tuuid[ i ] = '-';\n\n\t\t\t\t\t} else if ( i === 14 ) {\n\n\t\t\t\t\t\tuuid[ i ] = '4';\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\n\t\t\t\t\t\tr = rnd & 0xf;\n\t\t\t\t\t\trnd = rnd >> 4;\n\t\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn uuid.join( '' );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclamp: function ( value, min, max ) {\n\n\t\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t\t},\n\n\t\t// compute euclidian modulo of m % n\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\t\teuclideanModulo: function ( n, m ) {\n\n\t\t\treturn ( ( n % m ) + m ) % m;\n\n\t\t},\n\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t\t},\n\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\t\tsmoothstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) return 0;\n\t\t\tif ( x >= max ) return 1;\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * ( 3 - 2 * x );\n\n\t\t},\n\n\t\tsmootherstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) return 0;\n\t\t\tif ( x >= max ) return 1;\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t\t},\n\n\t\trandom16: function () {\n\n\t\t\tconsole.warn( 'THREE.Math.random16() has been deprecated. Use Math.random() instead.' );\n\t\t\treturn Math.random();\n\n\t\t},\n\n\t\t// Random integer from <low, high> interval\n\n\t\trandInt: function ( low, high ) {\n\n\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t\t},\n\n\t\t// Random float from <low, high> interval\n\n\t\trandFloat: function ( low, high ) {\n\n\t\t\treturn low + Math.random() * ( high - low );\n\n\t\t},\n\n\t\t// Random float from <-range/2, range/2> interval\n\n\t\trandFloatSpread: function ( range ) {\n\n\t\t\treturn range * ( 0.5 - Math.random() );\n\n\t\t},\n\n\t\tdegToRad: function ( degrees ) {\n\n\t\t\treturn degrees * THREE.Math.DEG2RAD;\n\n\t\t},\n\n\t\tradToDeg: function ( radians ) {\n\n\t\t\treturn radians * THREE.Math.RAD2DEG;\n\n\t\t},\n\n\t\tisPowerOfTwo: function ( value ) {\n\n\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t\t},\n\n\t\tnearestPowerOfTwo: function ( value ) {\n\n\t\t\treturn Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );\n\n\t\t},\n\n\t\tnextPowerOfTwo: function ( value ) {\n\n\t\t\tvalue --;\n\t\t\tvalue |= value >> 1;\n\t\t\tvalue |= value >> 2;\n\t\t\tvalue |= value >> 4;\n\t\t\tvalue |= value >> 8;\n\t\t\tvalue |= value >> 16;\n\t\t\tvalue ++;\n\n\t\t\treturn value;\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Spline.js\n\n\t/**\n\t * Spline from Tween.js, slightly optimized (and trashed)\n\t * http://sole.github.com/tween.js/examples/05_spline.html\n\t *\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.Spline = function ( points ) {\n\n\t\tthis.points = points;\n\n\t\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\n\t\tpoint, intPoint, weight, w2, w3,\n\t\tpa, pb, pc, pd;\n\n\t\tthis.initFromArray = function ( a ) {\n\n\t\t\tthis.points = [];\n\n\t\t\tfor ( var i = 0; i < a.length; i ++ ) {\n\n\t\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getPoint = function ( k ) {\n\n\t\t\tpoint = ( this.points.length - 1 ) * k;\n\t\t\tintPoint = Math.floor( point );\n\t\t\tweight = point - intPoint;\n\n\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\n\t\t\tc[ 1 ] = intPoint;\n\t\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\n\t\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\n\n\t\t\tpa = this.points[ c[ 0 ] ];\n\t\t\tpb = this.points[ c[ 1 ] ];\n\t\t\tpc = this.points[ c[ 2 ] ];\n\t\t\tpd = this.points[ c[ 3 ] ];\n\n\t\t\tw2 = weight * weight;\n\t\t\tw3 = weight * w2;\n\n\t\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\n\t\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\n\t\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\n\n\t\t\treturn v3;\n\n\t\t};\n\n\t\tthis.getControlPointsArray = function () {\n\n\t\t\tvar i, p, l = this.points.length,\n\t\t\t\tcoords = [];\n\n\t\t\tfor ( i = 0; i < l; i ++ ) {\n\n\t\t\t\tp = this.points[ i ];\n\t\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\n\n\t\t\t}\n\n\t\t\treturn coords;\n\n\t\t};\n\n\t\t// approximate length by summing linear segments\n\n\t\tthis.getLength = function ( nSubDivisions ) {\n\n\t\t\tvar i, index, nSamples, position,\n\t\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\n\t\t\t\toldPosition = new THREE.Vector3(),\n\t\t\t\ttmpVec = new THREE.Vector3(),\n\t\t\t\tchunkLengths = [],\n\t\t\t\ttotalLength = 0;\n\n\t\t\t// first point has 0 length\n\n\t\t\tchunkLengths[ 0 ] = 0;\n\n\t\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\n\n\t\t\tnSamples = this.points.length * nSubDivisions;\n\n\t\t\toldPosition.copy( this.points[ 0 ] );\n\n\t\t\tfor ( i = 1; i < nSamples; i ++ ) {\n\n\t\t\t\tindex = i / nSamples;\n\n\t\t\t\tposition = this.getPoint( index );\n\t\t\t\ttmpVec.copy( position );\n\n\t\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\n\n\t\t\t\toldPosition.copy( position );\n\n\t\t\t\tpoint = ( this.points.length - 1 ) * index;\n\t\t\t\tintPoint = Math.floor( point );\n\n\t\t\t\tif ( intPoint !== oldIntPoint ) {\n\n\t\t\t\t\tchunkLengths[ intPoint ] = totalLength;\n\t\t\t\t\toldIntPoint = intPoint;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// last point ends with total length\n\n\t\t\tchunkLengths[ chunkLengths.length ] = totalLength;\n\n\t\t\treturn { chunks: chunkLengths, total: totalLength };\n\n\t\t};\n\n\t\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\n\n\t\t\tvar i, j,\n\t\t\t\tindex, indexCurrent, indexNext,\n\t\t\t\trealDistance,\n\t\t\t\tsampling, position,\n\t\t\t\tnewpoints = [],\n\t\t\t\ttmpVec = new THREE.Vector3(),\n\t\t\t\tsl = this.getLength();\n\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\n\n\t\t\tfor ( i = 1; i < this.points.length; i ++ ) {\n\n\t\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\n\t\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\n\n\t\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\n\n\t\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\n\n\t\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\n\t\t\t\tindexNext = i / ( this.points.length - 1 );\n\n\t\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\n\n\t\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\n\n\t\t\t\t\tposition = this.getPoint( index );\n\t\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\n\n\t\t\t\t}\n\n\t\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\n\n\t\t\t}\n\n\t\t\tthis.points = newpoints;\n\n\t\t};\n\n\t\t// Catmull-Rom\n\n\t\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\n\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\n\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\n\n\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Triangle.js\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.Triangle = function ( a, b, c ) {\n\n\t\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\n\t\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\n\t\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\n\n\t};\n\n\tTHREE.Triangle.normal = function () {\n\n\t\tvar v0 = new THREE.Vector3();\n\n\t\treturn function normal( a, b, c, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\tresult.subVectors( c, b );\n\t\t\tv0.subVectors( a, b );\n\t\t\tresult.cross( v0 );\n\n\t\t\tvar resultLengthSq = result.lengthSq();\n\t\t\tif ( resultLengthSq > 0 ) {\n\n\t\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn result.set( 0, 0, 0 );\n\n\t\t};\n\n\t}();\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tTHREE.Triangle.barycoordFromPoint = function () {\n\n\t\tvar v0 = new THREE.Vector3();\n\t\tvar v1 = new THREE.Vector3();\n\t\tvar v2 = new THREE.Vector3();\n\n\t\treturn function barycoordFromPoint( point, a, b, c, optionalTarget ) {\n\n\t\t\tv0.subVectors( c, a );\n\t\t\tv1.subVectors( b, a );\n\t\t\tv2.subVectors( point, a );\n\n\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn result.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn result.set( 1 - u - v, v, u );\n\n\t\t};\n\n\t}();\n\n\tTHREE.Triangle.containsPoint = function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\n\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\n\n\t\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\n\n\t\t};\n\n\t}();\n\n\tTHREE.Triangle.prototype = {\n\n\t\tconstructor: THREE.Triangle,\n\n\t\tset: function ( a, b, c ) {\n\n\t\t\tthis.a.copy( a );\n\t\t\tthis.b.copy( b );\n\t\t\tthis.c.copy( c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\t\tthis.a.copy( points[ i0 ] );\n\t\t\tthis.b.copy( points[ i1 ] );\n\t\t\tthis.c.copy( points[ i2 ] );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( triangle ) {\n\n\t\t\tthis.a.copy( triangle.a );\n\t\t\tthis.b.copy( triangle.b );\n\t\t\tthis.c.copy( triangle.c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tarea: function () {\n\n\t\t\tvar v0 = new THREE.Vector3();\n\t\t\tvar v1 = new THREE.Vector3();\n\n\t\t\treturn function area() {\n\n\t\t\t\tv0.subVectors( this.c, this.b );\n\t\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmidpoint: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t\t},\n\n\t\tnormal: function ( optionalTarget ) {\n\n\t\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\n\n\t\t},\n\n\t\tplane: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Plane();\n\n\t\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t\t},\n\n\t\tbarycoordFromPoint: function ( point, optionalTarget ) {\n\n\t\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t\t},\n\n\t\tclosestPointToPoint: function () {\n\n\t\t\tvar plane, edgeList, projectedPoint, closestPoint;\n\n\t\t\treturn function closestPointToPoint( point, optionalTarget ) {\n\n\t\t\t\tif ( plane === undefined ) {\n\n\t\t\t\t\tplane = new THREE.Plane();\n\t\t\t\t\tedgeList = [ new THREE.Line3(), new THREE.Line3(), new THREE.Line3() ];\n\t\t\t\t\tprojectedPoint = new THREE.Vector3();\n\t\t\t\t\tclosestPoint = new THREE.Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\t\t\tvar minDistance = Infinity;\n\n\t\t\t\t// project the point onto the plane of the triangle\n\n\t\t\t\tplane.setFromCoplanarPoints( this.a, this.b, this.c );\n\t\t\t\tplane.projectPoint( point, projectedPoint );\n\n\t\t\t\t// check if the projection lies within the triangle\n\n\t\t\t\tif( this.containsPoint( projectedPoint ) === true ) {\n\n\t\t\t\t\t// if so, this is the closest point\n\n\t\t\t\t\tresult.copy( projectedPoint );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices\n\n\t\t\t\t\tedgeList[ 0 ].set( this.a, this.b );\n\t\t\t\t\tedgeList[ 1 ].set( this.b, this.c );\n\t\t\t\t\tedgeList[ 2 ].set( this.c, this.a );\n\n\t\t\t\t\tfor( var i = 0; i < edgeList.length; i ++ ) {\n\n\t\t\t\t\t\tedgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );\n\n\t\t\t\t\t\tvar distance = projectedPoint.distanceToSquared( closestPoint );\n\n\t\t\t\t\t\tif( distance < minDistance ) {\n\n\t\t\t\t\t\t\tminDistance = distance;\n\n\t\t\t\t\t\t\tresult.copy( closestPoint );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tequals: function ( triangle ) {\n\n\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Interpolant.js\n\n\t/**\n\t * Abstract base class of interpolants over parametric samples.\n\t *\n\t * The parameter domain is one dimensional, typically the time or a path\n\t * along a curve defined by the data.\n\t *\n\t * The sample values can have any dimensionality and derived classes may\n\t * apply special interpretations to the data.\n\t *\n\t * This class provides the interval seek in a Template Method, deferring\n\t * the actual interpolation to derived classes.\n\t *\n\t * Time complexity is O(1) for linear access crossing at most two points\n\t * and O(log N) for random access, where N is the number of positions.\n\t *\n\t * References:\n\t *\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\n\t *\n\t * @author tschw\n\t */\n\n\tTHREE.Interpolant = function(\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t};\n\n\tTHREE.Interpolant.prototype = {\n\n\t\tconstructor: THREE.Interpolant,\n\n\t\tevaluate: function( t ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\ti1 = this._cachedIndex,\n\n\t\t\t\tt1 = pp[   i1   ],\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\tvalidate_interval: {\n\n\t\t\t\tseek: {\n\n\t\t\t\t\tvar right;\n\n\t\t\t\t\tlinear_scan: {\n\t//- See http://jsperf.com/comparison-to-undefined/3\n\t//- slower code:\n\t//-\n\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ;) {\n\n\t\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t//- slower code:\n\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ;) {\n\n\t\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t\t} // linear scan\n\n\t\t\t\t\t// binary search\n\n\t\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tt1 = pp[   i1   ];\n\t\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t\t// check boundary cases, again\n\n\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t\t}\n\n\t\t\t\t} // seek\n\n\t\t\t\tthis._cachedIndex = i1;\n\n\t\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t\t} // validate_interval\n\n\t\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t\t},\n\n\t\tsettings: null, // optional, subclass-specific settings structure\n\t\t// Note: The indirection allows central control of many interpolants.\n\n\t\t// --- Protected interface\n\n\t\tDefaultSettings_: {},\n\n\t\tgetSettings_: function() {\n\n\t\t\treturn this.settings || this.DefaultSettings_;\n\n\t\t},\n\n\t\tcopySampleValue_: function( index ) {\n\n\t\t\t// copies a sample value to the result buffer\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = index * stride;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// Template methods for derived classes:\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tthrow new Error( \"call to abstract method\" );\n\t\t\t// implementations shall return this.resultBuffer\n\n\t\t},\n\n\t\tintervalChanged_: function( i1, t0, t1 ) {\n\n\t\t\t// empty\n\n\t\t}\n\n\t};\n\n\tObject.assign( THREE.Interpolant.prototype, {\n\n\t\tbeforeStart_: //( 0, t, t0 ), returns this.resultBuffer\n\t\t\tTHREE.Interpolant.prototype.copySampleValue_,\n\n\t\tafterEnd_: //( N-1, tN-1, t ), returns this.resultBuffer\n\t\t\tTHREE.Interpolant.prototype.copySampleValue_\n\n\t} );\n\n\t// File:src/math/interpolants/CubicInterpolant.js\n\n\t/**\n\t * Fast and simple cubic spline interpolant.\n\t *\n\t * It was derived from a Hermitian construction setting the first derivative\n\t * at each sample position to the linear slope between neighboring positions\n\t * over their parameter interval.\n\t *\n\t * @author tschw\n\t */\n\n\tTHREE.CubicInterpolant = function(\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tTHREE.Interpolant.call(\n\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = -0;\n\t\tthis._offsetPrev = -0;\n\t\tthis._weightNext = -0;\n\t\tthis._offsetNext = -0;\n\n\t};\n\n\tTHREE.CubicInterpolant.prototype =\n\t\t\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\n\n\t\tconstructor: THREE.CubicInterpolant,\n\n\t\tDefaultSettings_: {\n\n\t\t\tendingStart: \tTHREE.ZeroCurvatureEnding,\n\t\t\tendingEnd:\t\tTHREE.ZeroCurvatureEnding\n\n\t\t},\n\n\t\tintervalChanged_: function( i1, t0, t1 ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\tiPrev = i1 - 2,\n\t\t\t\tiNext = i1 + 1,\n\n\t\t\t\ttPrev = pp[ iPrev ],\n\t\t\t\ttNext = pp[ iNext ];\n\n\t\t\tif ( tPrev === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\t\tcase THREE.ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = t1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tNext === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\t\tcase THREE.ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\t\tiNext = i1;\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiNext = 1;\n\t\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\t\ttNext = t0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\t\tstride = this.valueSize;\n\n\t\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\t\tthis._offsetPrev = iPrev * stride;\n\t\t\tthis._offsetNext = iNext * stride;\n\n\t\t},\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tpp = p * p,\n\t\t\t\tppp = pp * p;\n\n\t\t\t// evaluate polynomials\n\n\t\t\tvar sP =     - wP   * ppp   +         2 * wP    * pp    -          wP   * p;\n\t\t\tvar s0 = ( 1 + wP ) * ppp   + (-1.5 - 2 * wP )  * pp    + ( -0.5 + wP ) * p     + 1;\n\t\t\tvar s1 = (-1 - wN ) * ppp   + ( 1.5 +   wN   )  * pp    +    0.5        * p;\n\t\t\tvar sN =       wN   * ppp   -           wN      * pp;\n\n\t\t\t// combine data linearly\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t// File:src/math/interpolants/DiscreteInterpolant.js\n\n\t/**\n\t *\n\t * Interpolant that evaluates to the sample value at the position preceeding\n\t * the parameter.\n\t *\n\t * @author tschw\n\t */\n\n\tTHREE.DiscreteInterpolant = function(\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tTHREE.Interpolant.call(\n\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t};\n\n\tTHREE.DiscreteInterpolant.prototype =\n\t\t\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\n\n\t\tconstructor: THREE.DiscreteInterpolant,\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t}\n\n\t} );\n\n\t// File:src/math/interpolants/LinearInterpolant.js\n\n\t/**\n\t * @author tschw\n\t */\n\n\tTHREE.LinearInterpolant = function(\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tTHREE.Interpolant.call(\n\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t};\n\n\tTHREE.LinearInterpolant.prototype =\n\t\t\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\n\n\t\tconstructor: THREE.LinearInterpolant,\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toffset1 = i1 * stride,\n\t\t\t\toffset0 = offset1 - stride,\n\n\t\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tweight0 = 1 - weight1;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t// File:src/math/interpolants/QuaternionLinearInterpolant.js\n\n\t/**\n\t * Spherical linear unit quaternion interpolant.\n\t *\n\t * @author tschw\n\t */\n\n\tTHREE.QuaternionLinearInterpolant = function(\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tTHREE.Interpolant.call(\n\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t};\n\n\tTHREE.QuaternionLinearInterpolant.prototype =\n\t\t\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\n\n\t\tconstructor: THREE.QuaternionLinearInterpolant,\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toffset = i1 * stride,\n\n\t\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\t\tTHREE.Quaternion.slerpFlat( result, 0,\n\t\t\t\t\t\tvalues, offset - stride, values, offset, alpha );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t// File:src/core/Clock.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.Clock = function ( autoStart ) {\n\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t};\n\n\tTHREE.Clock.prototype = {\n\n\t\tconstructor: THREE.Clock,\n\n\t\tstart: function () {\n\n\t\t\tthis.startTime = ( performance || Date ).now();\n\n\t\t\tthis.oldTime = this.startTime;\n\t\t\tthis.running = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tthis.getElapsedTime();\n\t\t\tthis.running = false;\n\n\t\t},\n\n\t\tgetElapsedTime: function () {\n\n\t\t\tthis.getDelta();\n\t\t\treturn this.elapsedTime;\n\n\t\t},\n\n\t\tgetDelta: function () {\n\n\t\t\tvar diff = 0;\n\n\t\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\t\tthis.start();\n\n\t\t\t}\n\n\t\t\tif ( this.running ) {\n\n\t\t\t\tvar newTime = ( performance || Date ).now();\n\n\t\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\t\tthis.oldTime = newTime;\n\n\t\t\t\tthis.elapsedTime += diff;\n\n\t\t\t}\n\n\t\t\treturn diff;\n\n\t\t}\n\n\t};\n\n\t// File:src/core/EventDispatcher.js\n\n\t/**\n\t * https://github.com/mrdoob/eventdispatcher.js/\n\t */\n\n\tTHREE.EventDispatcher = function () {};\n\n\tObject.assign( THREE.EventDispatcher.prototype, {\n\n\t\taddEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\t\tlisteners[ type ] = [];\n\n\t\t\t}\n\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\t\tlisteners[ type ].push( listener );\n\n\t\t\t}\n\n\t\t},\n\n\t\thasEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) return false;\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tremoveEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) return;\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tdispatchEvent: function ( event ) {\n\n\t\t\tif ( this._listeners === undefined ) return;\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ event.type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tevent.target = this;\n\n\t\t\t\tvar array = [], i = 0;\n\t\t\t\tvar length = listenerArray.length;\n\n\t\t\t\tfor ( i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = listenerArray[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t// File:src/core/Layers.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.Layers = function () {\n\n\t\tthis.mask = 1;\n\n\t};\n\n\tTHREE.Layers.prototype = {\n\n\t\tconstructor: THREE.Layers,\n\n\t\tset: function ( channel ) {\n\n\t\t\tthis.mask = 1 << channel;\n\n\t\t},\n\n\t\tenable: function ( channel ) {\n\n\t\t\tthis.mask |= 1 << channel;\n\n\t\t},\n\n\t\ttoggle: function ( channel ) {\n\n\t\t\tthis.mask ^= 1 << channel;\n\n\t\t},\n\n\t\tdisable: function ( channel ) {\n\n\t\t\tthis.mask &= ~ ( 1 << channel );\n\n\t\t},\n\n\t\ttest: function ( layers ) {\n\n\t\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t\t}\n\n\t};\n\n\t// File:src/core/Raycaster.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author bhouston / http://clara.io/\n\t * @author stephomi / http://stephaneginier.com/\n\t */\n\n\t( function ( THREE ) {\n\n\t\tTHREE.Raycaster = function ( origin, direction, near, far ) {\n\n\t\t\tthis.ray = new THREE.Ray( origin, direction );\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\t\tthis.near = near || 0;\n\t\t\tthis.far = far || Infinity;\n\n\t\t\tthis.params = {\n\t\t\t\tMesh: {},\n\t\t\t\tLine: {},\n\t\t\t\tLOD: {},\n\t\t\t\tPoints: { threshold: 1 },\n\t\t\t\tSprite: {}\n\t\t\t};\n\n\t\t\tObject.defineProperties( this.params, {\n\t\t\t\tPointCloud: {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\t\t\treturn this.Points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t};\n\n\t\tfunction ascSort( a, b ) {\n\n\t\t\treturn a.distance - b.distance;\n\n\t\t}\n\n\t\tfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tobject.raycast( raycaster, intersects );\n\n\t\t\tif ( recursive === true ) {\n\n\t\t\t\tvar children = object.children;\n\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tTHREE.Raycaster.prototype = {\n\n\t\t\tconstructor: THREE.Raycaster,\n\n\t\t\tlinePrecision: 1,\n\n\t\t\tset: function ( origin, direction ) {\n\n\t\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\t\t\tthis.ray.set( origin, direction );\n\n\t\t\t},\n\n\t\t\tsetFromCamera: function ( coords, camera ) {\n\n\t\t\t\tif ( camera instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t\t\t} else if ( camera instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tintersectObject: function ( object, recursive ) {\n\n\t\t\t\tvar intersects = [];\n\n\t\t\t\tintersectObject( object, this, intersects, recursive );\n\n\t\t\t\tintersects.sort( ascSort );\n\n\t\t\t\treturn intersects;\n\n\t\t\t},\n\n\t\t\tintersectObjects: function ( objects, recursive ) {\n\n\t\t\t\tvar intersects = [];\n\n\t\t\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\t\t\treturn intersects;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t\t\t}\n\n\t\t\t\tintersects.sort( ascSort );\n\n\t\t\t\treturn intersects;\n\n\t\t\t}\n\n\t\t};\n\n\t}( THREE ) );\n\n\t// File:src/core/Object3D.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author elephantatwork / www.elephantatwork.ch\n\t */\n\n\tTHREE.Object3D = function () {\n\n\t\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\n\n\t\tthis.uuid = THREE.Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = THREE.Object3D.DefaultUp.clone();\n\n\t\tvar position = new THREE.Vector3();\n\t\tvar rotation = new THREE.Euler();\n\t\tvar quaternion = new THREE.Quaternion();\n\t\tvar scale = new THREE.Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation.onChange( onRotationChange );\n\t\tquaternion.onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new THREE.Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new THREE.Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new THREE.Matrix4();\n\t\tthis.matrixWorld = new THREE.Matrix4();\n\n\t\tthis.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new THREE.Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.userData = {};\n\n\t};\n\n\tTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\n\tTHREE.Object3D.DefaultMatrixAutoUpdate = true;\n\n\tObject.assign( THREE.Object3D.prototype, THREE.EventDispatcher.prototype, {\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t\t},\n\n\t\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t\t},\n\n\t\tsetRotationFromEuler: function ( euler ) {\n\n\t\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t\t},\n\n\t\tsetRotationFromMatrix: function ( m ) {\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t\t},\n\n\t\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t\t// assumes q is normalized\n\n\t\t\tthis.quaternion.copy( q );\n\n\t\t},\n\n\t\trotateOnAxis: function () {\n\n\t\t\t// rotate object on axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\tvar q1 = new THREE.Quaternion();\n\n\t\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateX: function () {\n\n\t\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateOnAxis: function () {\n\n\t\t\t// translate object by distance along axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\tvar v1 = new THREE.Vector3();\n\n\t\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateX: function () {\n\n\t\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\n\n\t\t\treturn function translateX( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateY: function () {\n\n\t\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\n\n\t\t\treturn function translateY( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateZ: function () {\n\n\t\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\n\n\t\t\treturn function translateZ( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlocalToWorld: function ( vector ) {\n\n\t\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t\t},\n\n\t\tworldToLocal: function () {\n\n\t\t\tvar m1 = new THREE.Matrix4();\n\n\t\t\treturn function worldToLocal( vector ) {\n\n\t\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\t// This routine does not support objects with rotated and/or translated parent(s)\n\n\t\t\tvar m1 = new THREE.Matrix4();\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tm1.lookAt( vector, this.position, this.up );\n\n\t\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tadd: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( object === this ) {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( object instanceof THREE.Object3D ) {\n\n\t\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\t\tobject.parent.remove( object );\n\n\t\t\t\t}\n\n\t\t\t\tobject.parent = this;\n\t\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\t\tthis.children.push( object );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tremove: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar index = this.children.indexOf( object );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tobject.parent = null;\n\n\t\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\t\tthis.children.splice( index, 1 );\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetObjectById: function ( id ) {\n\n\t\t\treturn this.getObjectByProperty( 'id', id );\n\n\t\t},\n\n\t\tgetObjectByName: function ( name ) {\n\n\t\t\treturn this.getObjectByProperty( 'name', name );\n\n\t\t},\n\n\t\tgetObjectByProperty: function ( name, value ) {\n\n\t\t\tif ( this[ name ] === value ) return this;\n\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = this.children[ i ];\n\t\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\t\tif ( object !== undefined ) {\n\n\t\t\t\t\treturn object;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t},\n\n\t\tgetWorldPosition: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\treturn result.setFromMatrixPosition( this.matrixWorld );\n\n\t\t},\n\n\t\tgetWorldQuaternion: function () {\n\n\t\t\tvar position = new THREE.Vector3();\n\t\t\tvar scale = new THREE.Vector3();\n\n\t\t\treturn function getWorldQuaternion( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new THREE.Quaternion();\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.matrixWorld.decompose( position, result, scale );\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldRotation: function () {\n\n\t\t\tvar quaternion = new THREE.Quaternion();\n\n\t\t\treturn function getWorldRotation( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new THREE.Euler();\n\n\t\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldScale: function () {\n\n\t\t\tvar position = new THREE.Vector3();\n\t\t\tvar quaternion = new THREE.Quaternion();\n\n\t\t\treturn function getWorldScale( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldDirection: function () {\n\n\t\t\tvar quaternion = new THREE.Quaternion();\n\n\t\t\treturn function getWorldDirection( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\traycast: function () {},\n\n\t\ttraverse: function ( callback ) {\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverse( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseVisible: function ( callback ) {\n\n\t\t\tif ( this.visible === false ) return;\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseAncestors: function ( callback ) {\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tif ( parent !== null ) {\n\n\t\t\t\tcallback( parent );\n\n\t\t\t\tparent.traverseAncestors( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrix: function () {\n\n\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\n\n\t\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\n\n\t\t\t\tif ( this.parent === null ) {\n\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\t\tforce = true;\n\n\t\t\t}\n\n\t\t\t// update children\n\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\t\tthis.children[ i ].updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\t// meta is '' when called from JSON.stringify\n\t\t\tvar isRootObject = ( meta === undefined || meta === '' );\n\n\t\t\tvar output = {};\n\n\t\t\t// meta is a hash used to collect geometries, materials.\n\t\t\t// not providing it implies that this is the root object\n\t\t\t// being serialized.\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\t// initialize meta obj\n\t\t\t\tmeta = {\n\t\t\t\t\tgeometries: {},\n\t\t\t\t\tmaterials: {},\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\n\t\t\t\toutput.metadata = {\n\t\t\t\t\tversion: 4.4,\n\t\t\t\t\ttype: 'Object',\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t// standard Object3D serialization\n\n\t\t\tvar object = {};\n\n\t\t\tobject.uuid = this.uuid;\n\t\t\tobject.type = this.type;\n\n\t\t\tif ( this.name !== '' ) object.name = this.name;\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\t\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\t\tif ( this.visible === false ) object.visible = false;\n\n\t\t\tobject.matrix = this.matrix.toArray();\n\n\t\t\t//\n\n\t\t\tif ( this.geometry !== undefined ) {\n\n\t\t\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\n\n\t\t\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\n\n\t\t\t\t}\n\n\t\t\t\tobject.geometry = this.geometry.uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.material !== undefined ) {\n\n\t\t\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\n\n\t\t\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = this.material.uuid;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( this.children.length > 0 ) {\n\n\t\t\t\tobject.children = [];\n\n\t\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\t\tif ( images.length > 0 ) output.images = images;\n\n\t\t\t}\n\n\t\t\toutput.object = object;\n\n\t\t\treturn output;\n\n\t\t\t// extract data from the cache hash\n\t\t\t// remove metadata on each item\n\t\t\t// and return as array\n\t\t\tfunction extractFromCache ( cache ) {\n\n\t\t\t\tvar values = [];\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function ( recursive ) {\n\n\t\t\treturn new this.constructor().copy( this, recursive );\n\n\t\t},\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tif ( recursive === undefined ) recursive = true;\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.up.copy( source.up );\n\n\t\t\tthis.position.copy( source.position );\n\t\t\tthis.quaternion.copy( source.quaternion );\n\t\t\tthis.scale.copy( source.scale );\n\n\t\t\tthis.matrix.copy( source.matrix );\n\t\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\t\tthis.visible = source.visible;\n\n\t\t\tthis.castShadow = source.castShadow;\n\t\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\t\tthis.frustumCulled = source.frustumCulled;\n\t\t\tthis.renderOrder = source.renderOrder;\n\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\t\tif ( recursive === true ) {\n\n\t\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\t\tvar child = source.children[ i ];\n\t\t\t\t\tthis.add( child.clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\tTHREE.Object3DIdCount = 0;\n\n\t// File:src/core/Face3.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\n\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\t\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\n\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\t\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n\t};\n\n\tTHREE.Face3.prototype = {\n\n\t\tconstructor: THREE.Face3,\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.a = source.a;\n\t\t\tthis.b = source.b;\n\t\t\tthis.c = source.c;\n\n\t\t\tthis.normal.copy( source.normal );\n\t\t\tthis.color.copy( source.color );\n\n\t\t\tthis.materialIndex = source.materialIndex;\n\n\t\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t// File:src/core/BufferAttribute.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.BufferAttribute = function ( array, itemSize, normalized ) {\n\n\t\tthis.uuid = THREE.Math.generateUUID();\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\n\t\tthis.dynamic = false;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\t\tthis.normalized = normalized === true;\n\n\t};\n\n\tTHREE.BufferAttribute.prototype = {\n\n\t\tconstructor: THREE.BufferAttribute,\n\n\t\tget count() {\n\n\t\t\treturn this.array.length / this.itemSize;\n\n\t\t},\n\n\t\tset needsUpdate( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t},\n\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tthis.dynamic = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.itemSize = source.itemSize;\n\n\t\t\tthis.dynamic = source.dynamic;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.itemSize;\n\t\t\tindex2 *= attribute.itemSize;\n\n\t\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyArray: function ( array ) {\n\n\t\t\tthis.array.set( array );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyColorsArray: function ( colors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\t\tvar color = colors[ i ];\n\n\t\t\t\tif ( color === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\t\tcolor = new THREE.Color();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = color.r;\n\t\t\t\tarray[ offset ++ ] = color.g;\n\t\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyIndicesArray: function ( indices ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tvar index = indices[ i ];\n\n\t\t\t\tarray[ offset ++ ] = index.a;\n\t\t\t\tarray[ offset ++ ] = index.b;\n\t\t\t\tarray[ offset ++ ] = index.c;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector2sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new THREE.Vector2();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector3sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new THREE.Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector4sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new THREE.Vector4();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize ];\n\n\t\t},\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\t\t\tthis.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t};\n\n\t//\n\n\tTHREE.Int8Attribute = function ( array, itemSize ) {\n\n\t\treturn new THREE.BufferAttribute( new Int8Array( array ), itemSize );\n\n\t};\n\n\tTHREE.Uint8Attribute = function ( array, itemSize ) {\n\n\t\treturn new THREE.BufferAttribute( new Uint8Array( array ), itemSize );\n\n\t};\n\n\tTHREE.Uint8ClampedAttribute = function ( array, itemSize ) {\n\n\t\treturn new THREE.BufferAttribute( new Uint8ClampedArray( array ), itemSize );\n\n\t};\n\n\tTHREE.Int16Attribute = function ( array, itemSize ) {\n\n\t\treturn new THREE.BufferAttribute( new Int16Array( array ), itemSize );\n\n\t};\n\n\tTHREE.Uint16Attribute = function ( array, itemSize ) {\n\n\t\treturn new THREE.BufferAttribute( new Uint16Array( array ), itemSize );\n\n\t};\n\n\tTHREE.Int32Attribute = function ( array, itemSize ) {\n\n\t\treturn new THREE.BufferAttribute( new Int32Array( array ), itemSize );\n\n\t};\n\n\tTHREE.Uint32Attribute = function ( array, itemSize ) {\n\n\t\treturn new THREE.BufferAttribute( new Uint32Array( array ), itemSize );\n\n\t};\n\n\tTHREE.Float32Attribute = function ( array, itemSize ) {\n\n\t\treturn new THREE.BufferAttribute( new Float32Array( array ), itemSize );\n\n\t};\n\n\tTHREE.Float64Attribute = function ( array, itemSize ) {\n\n\t\treturn new THREE.BufferAttribute( new Float64Array( array ), itemSize );\n\n\t};\n\n\n\t// Deprecated\n\n\tTHREE.DynamicBufferAttribute = function ( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\t\treturn new THREE.BufferAttribute( array, itemSize ).setDynamic( true );\n\n\t};\n\n\t// File:src/core/InstancedBufferAttribute.js\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tTHREE.InstancedBufferAttribute = function ( array, itemSize, meshPerAttribute ) {\n\n\t\tTHREE.BufferAttribute.call( this, array, itemSize );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t};\n\n\tTHREE.InstancedBufferAttribute.prototype = Object.create( THREE.BufferAttribute.prototype );\n\tTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\n\n\tTHREE.InstancedBufferAttribute.prototype.copy = function ( source ) {\n\n\t\tTHREE.BufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/core/InterleavedBuffer.js\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tTHREE.InterleavedBuffer = function ( array, stride ) {\n\n\t\tthis.uuid = THREE.Math.generateUUID();\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\n\t\tthis.dynamic = false;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t};\n\n\tTHREE.InterleavedBuffer.prototype = {\n\n\t\tconstructor: THREE.InterleavedBuffer,\n\n\t\tget length () {\n\n\t\t\treturn this.array.length;\n\n\t\t},\n\n\t\tget count () {\n\n\t\t\treturn this.array.length / this.stride;\n\n\t\t},\n\n\t\tset needsUpdate( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t},\n\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tthis.dynamic = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.stride = source.stride;\n\t\t\tthis.dynamic = source.dynamic;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.stride;\n\t\t\tindex2 *= attribute.stride;\n\n\t\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t};\n\n\t// File:src/core/InstancedInterleavedBuffer.js\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tTHREE.InstancedInterleavedBuffer = function ( array, stride, meshPerAttribute ) {\n\n\t\tTHREE.InterleavedBuffer.call( this, array, stride );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t};\n\n\tTHREE.InstancedInterleavedBuffer.prototype = Object.create( THREE.InterleavedBuffer.prototype );\n\tTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\n\n\tTHREE.InstancedInterleavedBuffer.prototype.copy = function ( source ) {\n\n\t\tTHREE.InterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/core/InterleavedBufferAttribute.js\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tTHREE.InterleavedBufferAttribute = function ( interleavedBuffer, itemSize, offset, normalized ) {\n\n\t\tthis.uuid = THREE.Math.generateUUID();\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t};\n\n\n\tTHREE.InterleavedBufferAttribute.prototype = {\n\n\t\tconstructor: THREE.InterleavedBufferAttribute,\n\n\t\tget length() {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\n\t\t\treturn this.array.length;\n\n\t\t},\n\n\t\tget count() {\n\n\t\t\treturn this.data.count;\n\n\t\t},\n\n\t\tget array() {\n\n\t\t\treturn this.data.array;\n\n\t\t},\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\t\t\tthis.data.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t// File:src/core/Geometry.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author kile / http://kile.stravaganza.org/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author bhouston / http://clara.io\n\t */\n\n\tTHREE.Geometry = function () {\n\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\n\n\t\tthis.uuid = THREE.Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Geometry';\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [ [] ];\n\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\tthis.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = false;\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.lineDistancesNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t};\n\n\tObject.assign( THREE.Geometry.prototype, THREE.EventDispatcher.prototype, {\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\n\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\t\tvar face = this.faces[ i ];\n\t\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\tthis.verticesNeedUpdate = true;\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function () {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\t\tm1.makeRotationX( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\t\tm1.makeRotationY( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\t\tm1.makeRotationZ( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function () {\n\n\t\t\t// translate geometry\n\n\t\t\tvar m1;\n\n\t\t\treturn function translate( x, y, z ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tscale: function () {\n\n\t\t\t// scale geometry\n\n\t\t\tvar m1;\n\n\t\t\treturn function scale( x, y, z ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\t\tm1.makeScale( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\tvar obj;\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\n\n\t\t\t\tobj.lookAt( vector );\n\n\t\t\t\tobj.updateMatrix();\n\n\t\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tfromBufferGeometry: function ( geometry ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\t\tvar attributes = geometry.attributes;\n\n\t\t\tvar positions = attributes.position.array;\n\t\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\t\tvar tempNormals = [];\n\t\t\tvar tempUVs = [];\n\t\t\tvar tempUVs2 = [];\n\n\t\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\t\tscope.vertices.push( new THREE.Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\n\n\t\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\t\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\t\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\t\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\t\ttempUVs2.push( new THREE.Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\n\t\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\n\n\t\t\t\tvar face = new THREE.Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\t\tscope.faces.push( face );\n\n\t\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\t\t\tvar start = group.start;\n\t\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex  );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcenter: function () {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tvar offset = this.boundingBox.center().negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn offset;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t\tvar center = this.boundingSphere.center;\n\t\t\tvar radius = this.boundingSphere.radius;\n\n\t\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\t\tvar matrix = new THREE.Matrix4();\n\t\t\tmatrix.set(\n\t\t\t\ts, 0, 0, - s * center.x,\n\t\t\t\t0, s, 0, - s * center.y,\n\t\t\t\t0, 0, s, - s * center.z,\n\t\t\t\t0, 0, 0, 1\n\t\t\t);\n\n\t\t\tthis.applyMatrix( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\n\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tvar face = this.faces[ f ];\n\n\t\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tcb.normalize();\n\n\t\t\t\tface.normal.copy( cb );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\t\tvar v, vl, f, fl, face, vertices;\n\n\t\t\tvertices = new Array( this.vertices.length );\n\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\t\tvertices[ v ] = new THREE.Vector3();\n\n\t\t\t}\n\n\t\t\tif ( areaWeighted ) {\n\n\t\t\t\t// vertex normals weighted by triangle areas\n\t\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\t\tvar vA, vB, vC;\n\t\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\t\tvertices[ v ].normalize();\n\n\t\t\t}\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.faces.length > 0 ) {\n\n\t\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeMorphNormals: function () {\n\n\t\t\tvar i, il, f, fl, face;\n\n\t\t\t// save original normals\n\t\t\t// - create temp variables on first access\n\t\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\t\tvar tmpGeo = new THREE.Geometry();\n\t\t\ttmpGeo.faces = this.faces;\n\n\t\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\t// create on first access\n\n\t\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tfaceNormal = new THREE.Vector3();\n\t\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\n\n\t\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t\t// set vertices to morph target\n\n\t\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t\t// compute morph normals\n\n\t\t\t\ttmpGeo.computeFaceNormals();\n\t\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t\t// store morph normals\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restore original normals\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeTangents: function () {\n\n\t\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t\t},\n\n\t\tcomputeLineDistances: function () {\n\n\t\t\tvar d = 0;\n\t\t\tvar vertices = this.vertices;\n\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\tif ( i > 0 ) {\n\n\t\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.lineDistances[ i ] = d;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new THREE.Box3();\n\n\t\t\t}\n\n\t\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\t\tif ( geometry instanceof THREE.Geometry === false ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ];\n\n\t\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\t\tif ( matrix !== undefined ) {\n\n\t\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\n\n\t\t\t}\n\n\t\t\t// vertices\n\n\t\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\t\tvertices1.push( vertexCopy );\n\n\t\t\t}\n\n\t\t\t// faces\n\n\t\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\t\tfaces1.push( faceCopy );\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\t\tif ( uv === undefined ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tuvs1.push( uvCopy );\n\n\t\t\t}\n\n\t\t},\n\n\t\tmergeMesh: function ( mesh ) {\n\n\t\t\tif ( mesh instanceof THREE.Mesh === false ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\n\n\t\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t\t},\n\n\t\t/*\n\t\t * Checks for duplicate vertices with hashmap.\n\t\t * Duplicated vertices are removed\n\t\t * and faces' vertices are updated.\n\t\t */\n\n\t\tmergeVertices: function () {\n\n\t\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\t\tvar unique = [], changes = [];\n\n\t\t\tvar v, key;\n\t\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\t\tvar i, il, face;\n\t\t\tvar indices, j, jl;\n\n\t\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tv = this.vertices[ i ];\n\t\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// if faces are completely degenerate after merging vertices, we\n\t\t\t// have to remove them from the geometry.\n\t\t\tvar faceIndicesToRemove = [];\n\n\t\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\t\tface = this.faces[ i ];\n\n\t\t\t\tface.a = changes[ face.a ];\n\t\t\t\tface.b = changes[ face.b ];\n\t\t\t\tface.c = changes[ face.c ];\n\n\t\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t\tvar dupIndex = - 1;\n\n\t\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t\t// we have to remove the face as nothing can be saved\n\t\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\t\tdupIndex = n;\n\t\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Use unique set of vertices\n\n\t\t\tvar diff = this.vertices.length - unique.length;\n\t\t\tthis.vertices = unique;\n\t\t\treturn diff;\n\n\t\t},\n\n\t\tsortFacesByMaterialIndex: function () {\n\n\t\t\tvar faces = this.faces;\n\t\t\tvar length = faces.length;\n\n\t\t\t// tag faces\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tfaces[ i ]._id = i;\n\n\t\t\t}\n\n\t\t\t// sort faces\n\n\t\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t\t}\n\n\t\t\tfaces.sort( materialIndexSort );\n\n\t\t\t// sort uvs\n\n\t\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\t\tvar newUvs1, newUvs2;\n\n\t\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tvar id = faces[ i ]._id;\n\n\t\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t\t}\n\n\t\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.4,\n\t\t\t\t\ttype: 'Geometry',\n\t\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Geometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tvar vertices = [];\n\n\t\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t\tvar faces = [];\n\t\t\tvar normals = [];\n\t\t\tvar normalsHash = {};\n\t\t\tvar colors = [];\n\t\t\tvar colorsHash = {};\n\t\t\tvar uvs = [];\n\t\t\tvar uvsHash = {};\n\n\t\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\t\tvar face = this.faces[ i ];\n\n\t\t\t\tvar hasMaterial = true;\n\t\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\t\tvar faceType = 0;\n\n\t\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\t\tfaces.push( faceType );\n\t\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\t\tfaces.push( face.materialIndex );\n\n\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t\t}\n\n\t\t\tfunction getNormalIndex( normal ) {\n\n\t\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getColorIndex( color ) {\n\n\t\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\t\tcolors.push( color.getHex() );\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getUvIndex( uv ) {\n\n\t\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tdata.data = {};\n\n\t\t\tdata.data.vertices = vertices;\n\t\t\tdata.data.normals = normals;\n\t\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\t\tdata.data.faces = faces;\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t// Handle primitives\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tif ( parameters !== undefined ) {\n\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tvalues.push( parameters[ key ] );\n\n\t\t\t\t}\n\n\t\t\t\tvar geometry = Object.create( this.constructor.prototype );\n\t\t\t\tthis.constructor.apply( geometry, values );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t\treturn new this.constructor().copy( this );\n\t\t\t*/\n\n\t\t\treturn new THREE.Geometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.vertices = [];\n\t\t\tthis.faces = [];\n\t\t\tthis.faceVertexUvs = [ [] ];\n\n\t\t\tvar vertices = source.vertices;\n\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tvar faces = source.faces;\n\n\t\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\tTHREE.GeometryIdCount = 0;\n\n\t// File:src/core/DirectGeometry.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.DirectGeometry = function () {\n\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\n\n\t\tthis.uuid = THREE.Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'DirectGeometry';\n\n\t\tthis.indices = [];\n\t\tthis.vertices = [];\n\t\tthis.normals = [];\n\t\tthis.colors = [];\n\t\tthis.uvs = [];\n\t\tthis.uvs2 = [];\n\n\t\tthis.groups = [];\n\n\t\tthis.morphTargets = {};\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\t// this.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t};\n\n\tObject.assign( THREE.DirectGeometry.prototype, THREE.EventDispatcher.prototype, {\n\n\t\tcomputeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\n\t\tcomputeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\n\n\t\t},\n\n\t\tcomputeVertexNormals: function () {\n\n\t\t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\n\n\t\t},\n\n\t\tcomputeGroups: function ( geometry ) {\n\n\t\t\tvar group;\n\t\t\tvar groups = [];\n\t\t\tvar materialIndex;\n\n\t\t\tvar faces = geometry.faces;\n\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t// materials\n\n\t\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgroup = {\n\t\t\t\t\t\tstart: i * 3,\n\t\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( group !== undefined ) {\n\n\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\tgroups.push( group );\n\n\t\t\t}\n\n\t\t\tthis.groups = groups;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tvar faces = geometry.faces;\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t\t// morphs\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\t\tvar morphTargetsPosition;\n\n\t\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\t\tmorphTargetsPosition = [];\n\n\t\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\t\tmorphTargetsPosition[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t\t}\n\n\t\t\tvar morphNormals = geometry.morphNormals;\n\t\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\t\tvar morphTargetsNormal;\n\n\t\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\t\tmorphTargetsNormal = [];\n\n\t\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\t\tmorphTargetsNormal[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tvar skinIndices = geometry.skinIndices;\n\t\t\tvar skinWeights = geometry.skinWeights;\n\n\t\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t\t//\n\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar normal = face.normal;\n\n\t\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t\t}\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar color = face.color;\n\n\t\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\t\tthis.uvs.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\t\tthis.uvs2.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// morphs\n\n\t\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t\t}\n\n\t\t\t\t// skins\n\n\t\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeGroups( geometry );\n\n\t\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t// File:src/core/BufferGeometry.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.BufferGeometry = function () {\n\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\n\n\t\tthis.uuid = THREE.Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t};\n\n\tObject.assign( THREE.BufferGeometry.prototype, THREE.EventDispatcher.prototype, {\n\n\t\tgetIndex: function () {\n\n\t\t\treturn this.index;\n\n\t\t},\n\n\t\tsetIndex: function ( index ) {\n\n\t\t\tthis.index = index;\n\n\t\t},\n\n\t\taddAttribute: function ( name, attribute ) {\n\n\t\t\tif ( attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\t\tthis.addAttribute( name, new THREE.BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( name === 'index' ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\t\tthis.setIndex( attribute );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.attributes[ name ] = attribute;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetAttribute: function ( name ) {\n\n\t\t\treturn this.attributes[ name ];\n\n\t\t},\n\n\t\tremoveAttribute: function ( name ) {\n\n\t\t\tdelete this.attributes[ name ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddGroup: function ( start, count, materialIndex ) {\n\n\t\t\tthis.groups.push( {\n\n\t\t\t\tstart: start,\n\t\t\t\tcount: count,\n\t\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t\t} );\n\n\t\t},\n\n\t\tclearGroups: function () {\n\n\t\t\tthis.groups = [];\n\n\t\t},\n\n\t\tsetDrawRange: function ( start, count ) {\n\n\t\t\tthis.drawRange.start = start;\n\t\t\tthis.drawRange.count = count;\n\n\t\t},\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tmatrix.applyToVector3Array( position.array );\n\t\t\t\tposition.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tvar normal = this.attributes.normal;\n\n\t\t\tif ( normal !== undefined ) {\n\n\t\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\n\n\t\t\t\tnormalMatrix.applyToVector3Array( normal.array );\n\t\t\t\tnormal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function () {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\t\tm1.makeRotationX( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\t\tm1.makeRotationY( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\t\tm1.makeRotationZ( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function () {\n\n\t\t\t// translate geometry\n\n\t\t\tvar m1;\n\n\t\t\treturn function translate( x, y, z ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tscale: function () {\n\n\t\t\t// scale geometry\n\n\t\t\tvar m1;\n\n\t\t\treturn function scale( x, y, z ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\t\tm1.makeScale( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\tvar obj;\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\n\n\t\t\t\tobj.lookAt( vector );\n\n\t\t\t\tobj.updateMatrix();\n\n\t\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcenter: function () {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tvar offset = this.boundingBox.center().negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn offset;\n\n\t\t},\n\n\t\tsetFromObject: function ( object ) {\n\n\t\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( object instanceof THREE.Points || object instanceof THREE.Line ) {\n\n\t\t\t\tvar positions = new THREE.Float32Attribute( geometry.vertices.length * 3, 3 );\n\t\t\t\tvar colors = new THREE.Float32Attribute( geometry.colors.length * 3, 3 );\n\n\t\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\t\tvar lineDistances = new THREE.Float32Attribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof THREE.Mesh ) {\n\n\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateFromObject: function ( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( object instanceof THREE.Mesh ) {\n\n\t\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\t\tif ( direct === undefined || geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate || geometry.elementsNeedUpdate;\n\t\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate || geometry.elementsNeedUpdate;\n\t\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate || geometry.elementsNeedUpdate;\n\t\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate || geometry.elementsNeedUpdate;\n\t\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate || geometry.elementsNeedUpdate;\n\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t\tgeometry = direct;\n\n\t\t\t}\n\n\t\t\tvar attribute;\n\n\t\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.position;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.normal;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.color;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\t\tattribute = this.attributes.uv;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\t\tthis.groups = geometry.groups;\n\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tgeometry.__directGeometry = new THREE.DirectGeometry().fromGeometry( geometry );\n\n\t\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t\t},\n\n\t\tfromDirectGeometry: function ( geometry ) {\n\n\t\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\t\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\t\tthis.addAttribute( 'uv2', new THREE.BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.indices.length > 0 ) {\n\n\t\t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\n\t\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\n\t\t\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\n\n\t\t\t}\n\n\t\t\t// groups\n\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\t// morphs\n\n\t\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\t\tvar array = [];\n\t\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\t\tvar attribute = new THREE.Float32Attribute( morphTarget.length * 3, 3 );\n\n\t\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t\t}\n\n\t\t\t// skinning\n\n\t\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\t\tvar skinIndices = new THREE.Float32Attribute( geometry.skinIndices.length * 4, 4 );\n\t\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\t\tvar skinWeights = new THREE.Float32Attribute( geometry.skinWeights.length * 4, 4 );\n\t\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new THREE.Box3();\n\n\t\t\t}\n\n\t\t\tvar positions = this.attributes.position.array;\n\n\t\t\tif ( positions !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromArray( positions );\n\n\t\t\t} else {\n\n\t\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t\t}\n\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tvar box = new THREE.Box3();\n\t\t\tvar vector = new THREE.Vector3();\n\n\t\t\treturn function computeBoundingSphere() {\n\n\t\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\t\tthis.boundingSphere = new THREE.Sphere();\n\n\t\t\t\t}\n\n\t\t\t\tvar positions = this.attributes.position;\n\n\t\t\t\tif ( positions ) {\n\n\t\t\t\t\tvar array = positions.array;\n\t\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\t\tbox.setFromArray( array );\n\t\t\t\t\tbox.center( center );\n\n\t\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\t\tfor ( var i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\t\t\t\tvector.fromArray( array, i );\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\t// backwards compatibility\n\n\t\t},\n\n\t\tcomputeVertexNormals: function () {\n\n\t\t\tvar index = this.index;\n\t\t\tvar attributes = this.attributes;\n\t\t\tvar groups = this.groups;\n\n\t\t\tif ( attributes.position ) {\n\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// reset existing normals to zero\n\n\t\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar normals = attributes.normal.array;\n\n\t\t\t\tvar vA, vB, vC,\n\n\t\t\t\tpA = new THREE.Vector3(),\n\t\t\t\tpB = new THREE.Vector3(),\n\t\t\t\tpC = new THREE.Vector3(),\n\n\t\t\t\tcb = new THREE.Vector3(),\n\t\t\t\tab = new THREE.Vector3();\n\n\t\t\t\t// indexed elements\n\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\t\tthis.addGroup( 0, indices.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\n\n\t\t\t\t\t\tvar group = groups[ j ];\n\n\t\t\t\t\t\tvar start = group.start;\n\t\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.normalizeNormals();\n\n\t\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmerge: function ( geometry, offset ) {\n\n\t\t\tif ( geometry instanceof THREE.BufferGeometry === false ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\t\tvar attribute1 = attributes[ key ];\n\t\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalizeNormals: function () {\n\n\t\t\tvar normals = this.attributes.normal.array;\n\n\t\t\tvar x, y, z, n;\n\n\t\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\n\n\t\t\t\tx = normals[ i ];\n\t\t\t\ty = normals[ i + 1 ];\n\t\t\t\tz = normals[ i + 2 ];\n\n\t\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\n\n\t\t\t\tnormals[ i ] *= n;\n\t\t\t\tnormals[ i + 1 ] *= n;\n\t\t\t\tnormals[ i + 2 ] *= n;\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoNonIndexed: function () {\n\n\t\t\tif ( this.index === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar geometry2 = new THREE.BufferGeometry();\n\n\t\t\tvar indices = this.index.array;\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\n\t\t\t\tvar array = attribute.array;\n\t\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\t\tvar index = 0, index2 = 0;\n\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry2.addAttribute( name, new THREE.BufferAttribute( array2, itemSize ) );\n\n\t\t\t}\n\n\t\t\treturn geometry2;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.4,\n\t\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard BufferGeometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tdata.data = { attributes: {} };\n\n\t\t\tvar index = this.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tvar array = Array.prototype.slice.call( index.array );\n\n\t\t\t\tdata.data.index = {\n\t\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\t\tarray: array\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\n\t\t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\n\t\t\t\tdata.data.attributes[ key ] = {\n\t\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\t\tarray: array,\n\t\t\t\t\tnormalized: attribute.normalized\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar groups = this.groups;\n\n\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = this.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tdata.data.boundingSphere = {\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\t\tradius: boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t// Handle primitives\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tif ( parameters !== undefined ) {\n\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tvalues.push( parameters[ key ] );\n\n\t\t\t\t}\n\n\t\t\t\tvar geometry = Object.create( this.constructor.prototype );\n\t\t\t\tthis.constructor.apply( geometry, values );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t\treturn new this.constructor().copy( this );\n\t\t\t*/\n\n\t\t\treturn new THREE.BufferGeometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tvar index = source.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tthis.setIndex( index.clone() );\n\n\t\t\t}\n\n\t\t\tvar attributes = source.attributes;\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\t\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t\t}\n\n\t\t\tvar groups = source.groups;\n\n\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\t\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\tTHREE.BufferGeometry.MaxIndex = 65535;\n\n\t// File:src/core/InstancedBufferGeometry.js\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tTHREE.InstancedBufferGeometry = function () {\n\n\t\tTHREE.BufferGeometry.call( this );\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.maxInstancedCount = undefined;\n\n\t};\n\n\tTHREE.InstancedBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\tTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\n\n\tTHREE.InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tinstances: instances\n\n\t\t} );\n\n\t};\n\n\tTHREE.InstancedBufferGeometry.prototype.copy = function ( source ) {\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.instances );\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/core/Uniform.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.Uniform = function ( value ) {\n\n\t\tif ( typeof value === 'string' ) {\n\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\tvalue = arguments[ 1 ];\n\n\t\t}\n\n\t\tthis.value = value;\n\n\t\tthis.dynamic = false;\n\n\t};\n\n\tTHREE.Uniform.prototype = {\n\n\t\tconstructor: THREE.Uniform,\n\n\t\tonUpdate: function ( callback ) {\n\n\t\t\tthis.dynamic = true;\n\t\t\tthis.onUpdateCallback = callback;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t// File:src/animation/AnimationAction.js\n\n\t/**\n\t *\n\t * Action provided by AnimationMixer for scheduling clip playback on specific\n\t * objects.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t *\n\t */\n\n\tTHREE.AnimationAction = function() {\n\n\t\tthrow new Error( \"THREE.AnimationAction: \" +\n\t\t\t\t\"Use mixer.clipAction for construction.\" );\n\n\t};\n\n\tTHREE.AnimationAction._new =\n\t\t\tfunction AnimationAction( mixer, clip, localRoot ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot || null;\n\n\t\tvar tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tvar interpolantSettings = {\n\t\t\t\tendingStart: \tTHREE.ZeroCurvatureEnding,\n\t\t\t\tendingEnd:\t\tTHREE.ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants;\t// bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null;\t\t\t// for the memory manager\n\t\tthis._byClipCacheIndex = null;\t\t// for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = THREE.LoopRepeat;\n\t\tthis._loopCount = -1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\n\n\t\tthis.paused = false;\t\t\t\t// false -> zero effective time scale\n\t\tthis.enabled = true;\t\t\t\t// true -> zero effective weight\n\n\t\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\n\n\t};\n\n\tTHREE.AnimationAction._new.prototype = {\n\n\t\tconstructor: THREE.AnimationAction._new,\n\n\t\t// State & Scheduling\n\n\t\tplay: function() {\n\n\t\t\tthis._mixer._activateAction( this );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function() {\n\n\t\t\tthis._mixer._deactivateAction( this );\n\n\t\t\treturn this.reset();\n\n\t\t},\n\n\t\treset: function() {\n\n\t\t\tthis.paused = false;\n\t\t\tthis.enabled = true;\n\n\t\t\tthis.time = 0;\t\t\t// restart clip\n\t\t\tthis._loopCount = -1;\t// forget previous loops\n\t\t\tthis._startTime = null;\t// forget scheduling\n\n\t\t\treturn this.stopFading().stopWarping();\n\n\t\t},\n\n\t\tisRunning: function() {\n\n\t\t\tvar start = this._startTime;\n\n\t\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\t// return true when play has been called\n\t\tisScheduled: function() {\n\n\t\t\treturn this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\tstartAt: function( time ) {\n\n\t\t\tthis._startTime = time;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetLoop: function( mode, repetitions ) {\n\n\t\t\tthis.loop = mode;\n\t\t\tthis.repetitions = repetitions;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Weight\n\n\t\t// set the weight stopping any scheduled fading\n\t\t// although .enabled = false yields an effective weight of zero, this\n\t\t// method does *not* change .enabled, because it would be confusing\n\t\tsetEffectiveWeight: function( weight ) {\n\n\t\t\tthis.weight = weight;\n\n\t\t\t// note: same logic as when updated at runtime\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\t\treturn this.stopFading();\n\n\t\t},\n\n\t\t// return the weight considering fading and .enabled\n\t\tgetEffectiveWeight: function() {\n\n\t\t\treturn this._effectiveWeight;\n\n\t\t},\n\n\t\tfadeIn: function( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t\t},\n\n\t\tfadeOut: function( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t\t},\n\n\t\tcrossFadeFrom: function( fadeOutAction, duration, warp ) {\n\n\t\t\tvar mixer = this._mixer;\n\n\t\t\tfadeOutAction.fadeOut( duration );\n\t\t\tthis.fadeIn( duration );\n\n\t\t\tif( warp ) {\n\n\t\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcrossFadeTo: function( fadeInAction, duration, warp ) {\n\n\t\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t\t},\n\n\t\tstopFading: function() {\n\n\t\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\t\tif ( weightInterpolant !== null ) {\n\n\t\t\t\tthis._weightInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Time Scale Control\n\n\t\t// set the weight stopping any scheduled warping\n\t\t// although .paused = true yields an effective time scale of zero, this\n\t\t// method does *not* change .paused, because it would be confusing\n\t\tsetEffectiveTimeScale: function( timeScale ) {\n\n\t\t\tthis.timeScale = timeScale;\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 :timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\t// return the time scale considering warping and .paused\n\t\tgetEffectiveTimeScale: function() {\n\n\t\t\treturn this._effectiveTimeScale;\n\n\t\t},\n\n\t\tsetDuration: function( duration ) {\n\n\t\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\tsyncWith: function( action ) {\n\n\t\t\tthis.time = action.time;\n\t\t\tthis.timeScale = action.timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\thalt: function( duration ) {\n\n\t\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t\t},\n\n\t\twarp: function( startTimeScale, endTimeScale, duration ) {\n\n\t\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant(),\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now;\n\t\t\ttimes[ 1 ] = now + duration;\n\n\t\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstopWarping: function() {\n\n\t\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\t\tthis._timeScaleInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Object Accessors\n\n\t\tgetMixer: function() {\n\n\t\t\treturn this._mixer;\n\n\t\t},\n\n\t\tgetClip: function() {\n\n\t\t\treturn this._clip;\n\n\t\t},\n\n\t\tgetRoot: function() {\n\n\t\t\treturn this._localRoot || this._mixer._root;\n\n\t\t},\n\n\t\t// Interna\n\n\t\t_update: function( time, deltaTime, timeDirection, accuIndex ) {\n\t\t\t// called by the mixer\n\n\t\t\tvar startTime = this._startTime;\n\n\t\t\tif ( startTime !== null ) {\n\n\t\t\t\t// check for scheduled start of action\n\n\t\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t\t}\n\n\t\t\t\t// start\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t\t// apply time scale and advance time\n\n\t\t\tdeltaTime *= this._updateTimeScale( time );\n\t\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t\t// note: _updateTime may disable the action resulting in\n\t\t\t// an effective weight of 0\n\n\t\t\tvar weight = this._updateWeight( time );\n\n\t\t\tif ( weight > 0 ) {\n\n\t\t\t\tvar interpolants = this._interpolants;\n\t\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_updateWeight: function( time ) {\n\n\t\t\tvar weight = 0;\n\n\t\t\tif ( this.enabled ) {\n\n\t\t\t\tweight = this.weight;\n\t\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveWeight = weight;\n\t\t\treturn weight;\n\n\t\t},\n\n\t\t_updateTimeScale: function( time ) {\n\n\t\t\tvar timeScale = 0;\n\n\t\t\tif ( ! this.paused ) {\n\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveTimeScale = timeScale;\n\t\t\treturn timeScale;\n\n\t\t},\n\n\t\t_updateTime: function( deltaTime ) {\n\n\t\t\tvar time = this.time + deltaTime;\n\n\t\t\tif ( deltaTime === 0 ) return time;\n\n\t\t\tvar duration = this._clip.duration,\n\n\t\t\t\tloop = this.loop,\n\t\t\t\tloopCount = this._loopCount;\n\n\t\t\tif ( loop === THREE.LoopOnce ) {\n\n\t\t\t\tif ( loopCount === -1 ) {\n\t\t\t\t\t// just started\n\n\t\t\t\t\tthis.loopCount = 0;\n\t\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t\t}\n\n\t\t\t\thandle_stop: {\n\n\t\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\t\ttime = duration;\n\n\t\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\t\ttime = 0;\n\n\t\t\t\t\t} else break handle_stop;\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime < 0 ? -1 : 1\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\t\tvar pingPong = ( loop === THREE.LoopPingPong );\n\n\t\t\t\tif ( loopCount === -1 ) {\n\t\t\t\t\t// just started\n\n\t\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\t\tthis._setEndings(\n\t\t\t\t\t\t\t\ttrue, this.repetitions === 0, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\t\tthis._setEndings(\n\t\t\t\t\t\t\t\tthis.repetitions === 0, true, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( time >= duration || time < 0 ) {\n\t\t\t\t\t// wrap around\n\n\t\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\t\tif ( pending < 0 ) {\n\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : -1\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// keep running\n\n\t\t\t\t\t\tif ( pending === 0 ) {\n\t\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\t\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\t\tthis.time = time;\n\t\t\t\t\treturn duration - time;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.time = time;\n\t\t\treturn time;\n\n\t\t},\n\n\t\t_setEndings: function( atStart, atEnd, pingPong ) {\n\n\t\t\tvar settings = this._interpolantSettings;\n\n\t\t\tif ( pingPong ) {\n\n\t\t\t\tsettings.endingStart \t= THREE.ZeroSlopeEnding;\n\t\t\t\tsettings.endingEnd\t\t= THREE.ZeroSlopeEnding;\n\n\t\t\t} else {\n\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\t\tif ( atStart ) {\n\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ?\n\t\t\t\t\t\t\tTHREE.ZeroSlopeEnding : THREE.ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingStart = THREE.WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t\tif ( atEnd ) {\n\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ?\n\t\t\t\t\t\t\tTHREE.ZeroSlopeEnding : THREE.ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingEnd \t = THREE.WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_scheduleFading: function( duration, weightNow, weightThen ) {\n\n\t\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\t\tinterpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant(),\n\t\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\n\t\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\n\t// File:src/animation/AnimationClip.js\n\n\t/**\n\t *\n\t * Reusable set of Tracks that represent an animation.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tTHREE.AnimationClip = function ( name, duration, tracks ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = ( duration !== undefined ) ? duration : -1;\n\n\t\tthis.uuid = THREE.Math.generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t\t// maybe only do these on demand, as doing them here could potentially slow down loading\n\t\t// but leaving these here during development as this ensures a lot of testing of these functions\n\t\tthis.trim();\n\t\tthis.optimize();\n\n\t};\n\n\tTHREE.AnimationClip.prototype = {\n\n\t\tconstructor: THREE.AnimationClip,\n\n\t\tresetDuration: function() {\n\n\t\t\tvar tracks = this.tracks,\n\t\t\t\tduration = 0;\n\n\t\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\t\tvar track = this.tracks[ i ];\n\n\t\t\t\tduration = Math.max(\n\t\t\t\t\t\tduration, track.times[ track.times.length - 1 ] );\n\n\t\t\t}\n\n\t\t\tthis.duration = duration;\n\n\t\t},\n\n\t\ttrim: function() {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\toptimize: function() {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].optimize();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t// Static methods:\n\n\tObject.assign( THREE.AnimationClip, {\n\n\t\tparse: function( json ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tjsonTracks = json.tracks,\n\t\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( THREE.KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t\t}\n\n\t\t\treturn new THREE.AnimationClip( json.name, json.duration, tracks );\n\n\t\t},\n\n\n\t\ttoJSON: function( clip ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tclipTracks = clip.tracks;\n\n\t\t\tvar json = {\n\n\t\t\t\t'name': clip.name,\n\t\t\t\t'duration': clip.duration,\n\t\t\t\t'tracks': tracks\n\n\t\t\t};\n\n\t\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( THREE.KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t\t}\n\n\t\t\treturn json;\n\n\t\t},\n\n\n\t\tCreateFromMorphTargetSequence: function( name, morphTargetSequence, fps, noLoop ) {\n\n\t\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\ttimes.push(\n\t\t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\t\tvar order = THREE.AnimationUtils.getKeyframeOrder( times );\n\t\t\t\ttimes = THREE.AnimationUtils.sortedArray( times, 1, order );\n\t\t\t\tvalues = THREE.AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t\t// last frame as well for perfect loop.\n\t\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\ttracks.push(\n\t\t\t\t\t\tnew THREE.NumberKeyframeTrack(\n\t\t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\t\t\ttimes, values\n\t\t\t\t\t\t).scale( 1.0 / fps ) );\n\t\t\t}\n\n\t\t\treturn new THREE.AnimationClip( name, -1, tracks );\n\n\t\t},\n\n\t\tfindByName: function( objectOrClipArray, name ) {\n\n\t\t\tvar clipArray = objectOrClipArray;\n\n\t\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\t\tvar o = objectOrClipArray;\n\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\t\treturn clipArray[ i ];\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\tCreateClipsFromMorphTargetSequences: function( morphTargets, fps, noLoop ) {\n\n\t\t\tvar animationToMorphTargets = {};\n\n\t\t\t// tested with https://regex101.com/ on trick sequences\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t\t// sort morph target names into animation groups based\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar clips = [];\n\n\t\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\t\tclips.push( THREE.AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t\t}\n\n\t\t\treturn clips;\n\n\t\t},\n\n\t\t// parse the animation.hierarchy format\n\t\tparseAnimation: function( animation, bones, nodeName ) {\n\n\t\t\tif ( ! animation ) {\n\n\t\t\t\tconsole.error( \"  no animation in JSONLoader data\" );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar addNonemptyTrack = function(\n\t\t\t\t\ttrackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t\t// only return track if there are actually keys.\n\t\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tTHREE.AnimationUtils.flattenJSON(\n\t\t\t\t\t\t\tanimationKeys, times, values, propertyName );\n\n\t\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar clipName = animation.name || 'default';\n\t\t\t// automatic length determination in AnimationClip.\n\t\t\tvar duration = animation.length || -1;\n\t\t\tvar fps = animation.fps || 30;\n\n\t\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t\t// skip empty tracks\n\t\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t\t// process morph targets in a way exactly compatible\n\t\t\t\t// with AnimationHandler.init( animation )\n\t\t\t\tif ( animationKeys[0].morphTargets ) {\n\n\t\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\t\tvar morphTargetNames = {};\n\t\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\t\tif ( animationKeys[k].morphTargets ) {\n\n\t\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[k].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[k].morphTargets[m] ] = -1;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t\t// the morphTarget is named.\n\t\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\t\tvar times = [];\n\t\t\t\t\t\tvar values = [];\n\n\t\t\t\t\t\tfor ( var m = 0;\n\t\t\t\t\t\t\t\tm !== animationKeys[k].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\t\tvar animationKey = animationKeys[k];\n\n\t\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttracks.push( new THREE.NumberKeyframeTrack(\n\t\t\t\t\t\t\t\t'.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t\t} else {\n\t\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\tTHREE.VectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\tTHREE.QuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\tTHREE.VectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tracks.length === 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar clip = new THREE.AnimationClip( clipName, duration, tracks );\n\n\t\t\treturn clip;\n\n\t\t}\n\n\t} );\n\n\t// File:src/animation/AnimationMixer.js\n\n\t/**\n\t *\n\t * Player for AnimationClips.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tTHREE.AnimationMixer = function( root ) {\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1.0;\n\n\t};\n\n\tObject.assign( THREE.AnimationMixer.prototype, THREE.EventDispatcher.prototype, {\n\n\t\t// return an action for a clip optionally using a custom root target\n\t\t// object (this method allocates a lot of dynamic memory in case a\n\t\t// previously unknown clip/root combination is specified)\n\t\tclipAction: function( clip, optionalRoot ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid,\n\n\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\t\tTHREE.AnimationClip.findByName( root, clip ) : clip,\n\n\t\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\t\tprototypeAction = null;\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\tvar existingAction =\n\t\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\t\treturn existingAction;\n\n\t\t\t\t}\n\n\t\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t\t// the bindings again but can just copy\n\t\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t\t// also, take the clip from the prototype action\n\t\t\t\tif ( clipObject === null )\n\t\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t\t}\n\n\t\t\t// clip must be known when specified via string\n\t\t\tif ( clipObject === null ) return null;\n\n\t\t\t// allocate all resources required to run it\n\t\t\tvar newAction = new THREE.\n\t\t\t\t\tAnimationMixer._Action( this, clipObject, optionalRoot );\n\n\t\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t\t// and make the action known to the memory manager\n\t\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\t\treturn newAction;\n\n\t\t},\n\n\t\t// get an existing action\n\t\texistingAction: function( clip, optionalRoot ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid,\n\n\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\t\tTHREE.AnimationClip.findByName( root, clip ) : clip,\n\n\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// deactivates all previously scheduled actions\n\t\tstopAllAction: function() {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tthis._nActiveActions = 0;\n\t\t\tthis._nActiveBindings = 0;\n\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\t\tactions[ i ].reset();\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\t\tbindings[ i ].useCount = 0;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// advance the time and update apply the animation\n\t\tupdate: function( deltaTime ) {\n\n\t\t\tdeltaTime *= this.timeScale;\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions,\n\n\t\t\t\ttime = this.time += deltaTime,\n\t\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t\t// run active actions\n\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\t\tvar action = actions[ i ];\n\n\t\t\t\tif ( action.enabled ) {\n\n\t\t\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// update scene graph\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// return this mixer's root target object\n\t\tgetRoot: function() {\n\n\t\t\treturn this._root;\n\n\t\t},\n\n\t\t// free all resources specific to a particular clip\n\t\tuncacheClip: function( clip ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tclipUuid = clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t\t// iteration state and also require updating the state we can\n\t\t\t\t// just throw away\n\n\t\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\t\taction._cacheIndex = null;\n\t\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\t\tactions.pop();\n\n\t\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t\t}\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t// free all resources specific to a particular root target object\n\t\tuncacheRoot: function( root ) {\n\n\t\t\tvar rootUuid = root.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip;\n\n\t\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( action !== undefined ) {\n\n\t\t\t\t\tthis._deactivateAction( action );\n\t\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingByName !== undefined ) {\n\n\t\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remove a targeted clip from the cache\n\t\tuncacheAction: function( clip, optionalRoot ) {\n\n\t\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\t\tif ( action !== null ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tTHREE.AnimationMixer._Action = THREE.AnimationAction._new;\n\n\t// Implementation details:\n\n\tObject.assign( THREE.AnimationMixer.prototype, {\n\n\t\t_bindAction: function( action, prototypeAction ) {\n\n\t\t\tvar root = action._localRoot || this._root,\n\t\t\t\ttracks = action._clip.tracks,\n\t\t\t\tnTracks = tracks.length,\n\t\t\t\tbindings = action._propertyBindings,\n\t\t\t\tinterpolants = action._interpolants,\n\t\t\t\trootUuid = root.uuid,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingsByName === undefined ) {\n\n\t\t\t\tbindingsByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\t\tvar track = tracks[ i ],\n\t\t\t\t\ttrackName = track.name,\n\t\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\t\tbinding = new THREE.PropertyMixer(\n\t\t\t\t\t\t\tTHREE.PropertyBinding.create( root, trackName, path ),\n\t\t\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t}\n\n\t\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t\t}\n\n\t\t},\n\n\t\t_activateAction: function( action ) {\n\n\t\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\t\tthis._bindAction( action,\n\t\t\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t\t}\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// increment reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._lendAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t_deactivateAction: function( action ) {\n\n\t\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// decrement reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._takeBackAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Memory manager\n\n\t\t_initMemoryManager: function() {\n\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\t\tthis._nActiveActions = 0;\n\n\t\t\tthis._actionsByClip = {};\n\t\t\t// inside:\n\t\t\t// {\n\t\t\t// \t\tknownActions: Array< _Action >\t- used as prototypes\n\t\t\t// \t\tactionByRoot: _Action\t\t\t- lookup\n\t\t\t// }\n\n\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\t\tthis._nActiveBindings = 0;\n\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\t\tthis._controlInterpolants = []; // same game as above\n\t\t\tthis._nActiveControlInterpolants = 0;\n\n\t\t\tvar scope = this;\n\n\t\t\tthis.stats = {\n\n\t\t\t\tactions: {\n\t\t\t\t\tget total() { return scope._actions.length; },\n\t\t\t\t\tget inUse() { return scope._nActiveActions; }\n\t\t\t\t},\n\t\t\t\tbindings: {\n\t\t\t\t\tget total() { return scope._bindings.length; },\n\t\t\t\t\tget inUse() { return scope._nActiveBindings; }\n\t\t\t\t},\n\t\t\t\tcontrolInterpolants: {\n\t\t\t\t\tget total() { return scope._controlInterpolants.length; },\n\t\t\t\t\tget inUse() { return scope._nActiveControlInterpolants; }\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t},\n\n\t\t// Memory management for _Action objects\n\n\t\t_isActiveAction: function( action ) {\n\n\t\t\tvar index = action._cacheIndex;\n\t\t\treturn index !== null && index < this._nActiveActions;\n\n\t\t},\n\n\t\t_addInactiveAction: function( action, clipUuid, rootUuid ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip === undefined ) {\n\n\t\t\t\tactionsForClip = {\n\n\t\t\t\t\tknownActions: [ action ],\n\t\t\t\t\tactionByRoot: {}\n\n\t\t\t\t};\n\n\t\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t\t} else {\n\n\t\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\t\tknownActions.push( action );\n\n\t\t\t}\n\n\t\t\taction._cacheIndex = actions.length;\n\t\t\tactions.push( action );\n\n\t\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t\t},\n\n\t\t_removeInactiveAction: function( action ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\t\tcacheIndex = action._cacheIndex;\n\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\tactions.pop();\n\n\t\t\taction._cacheIndex = null;\n\n\n\t\t\tvar clipUuid = action._clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\t\tlastKnownAction =\n\t\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\t\tknownActionsForClip.pop();\n\n\t\t\taction._byClipCacheIndex = null;\n\n\n\t\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\t\trootUuid = ( actions._localRoot || this._root ).uuid;\n\n\t\t\tdelete actionByRoot[ rootUuid ];\n\n\t\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t},\n\n\t\t_removeInactiveBindingsForAction: function( action ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendAction: function( action ) {\n\n\t\t\t// [ active actions |  inactive actions  ]\n\t\t\t// [  active actions >| inactive actions ]\n\t\t\t//                 s        a\n\t\t\t//                  <-swap->\n\t\t\t//                 a        s\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\t\taction._cacheIndex = lastActiveIndex;\n\t\t\tactions[ lastActiveIndex ] = action;\n\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t\t},\n\n\t\t_takeBackAction: function( action ) {\n\n\t\t\t// [  active actions  | inactive actions ]\n\t\t\t// [ active actions |< inactive actions  ]\n\t\t\t//        a        s\n\t\t\t//         <-swap->\n\t\t\t//        s        a\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\t\taction._cacheIndex = firstInactiveIndex;\n\t\t\tactions[ firstInactiveIndex ] = action;\n\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t\t},\n\n\t\t// Memory management for PropertyMixer objects\n\n\t\t_addInactiveBinding: function( binding, rootUuid, trackName ) {\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tif ( bindingByName === undefined ) {\n\n\t\t\t\tbindingByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t\t}\n\n\t\t\tbindingByName[ trackName ] = binding;\n\n\t\t\tbinding._cacheIndex = bindings.length;\n\t\t\tbindings.push( binding );\n\n\t\t},\n\n\t\t_removeInactiveBinding: function( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tpropBinding = binding.binding,\n\t\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\t\ttrackName = propBinding.path,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\t\tbindings.pop();\n\n\t\t\tdelete bindingByName[ trackName ];\n\n\t\t\tremove_empty_map: {\n\n\t\t\t\tfor ( var _ in bindingByName ) break remove_empty_map;\n\n\t\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendBinding: function( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\t\tbinding._cacheIndex = lastActiveIndex;\n\t\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t\t},\n\n\t\t_takeBackBinding: function( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t\t},\n\n\n\t\t// Memory management of Interpolants for weight and time scale\n\n\t\t_lendControlInterpolant: function() {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\t\tif ( interpolant === undefined ) {\n\n\t\t\t\tinterpolant = new THREE.LinearInterpolant(\n\t\t\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t\t}\n\n\t\t\treturn interpolant;\n\n\t\t},\n\n\t\t_takeBackControlInterpolant: function( interpolant ) {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t\t},\n\n\t\t_controlInterpolantsResultBuffer: new Float32Array( 1 )\n\n\t} );\n\n\t// File:src/animation/AnimationObjectGroup.js\n\n\t/**\n\t *\n\t * A group of objects that receives a shared animation state.\n\t *\n\t * Usage:\n\t *\n\t * \t-\tAdd objects you would otherwise pass as 'root' to the\n\t * \t\tconstructor or the .clipAction method of AnimationMixer.\n\t *\n\t * \t-\tInstead pass this object as 'root'.\n\t *\n\t * \t-\tYou can also add and remove objects later when the mixer\n\t * \t\tis running.\n\t *\n\t * Note:\n\t *\n\t *  \tObjects of this class appear as one object to the mixer,\n\t *  \tso cache control of the individual objects must be done\n\t *  \ton the group.\n\t *\n\t * Limitation:\n\t *\n\t * \t- \tThe animated properties must be compatible among the\n\t * \t\tall objects in the group.\n\t *\n\t *  -\tA single property can either be controlled through a\n\t *  \ttarget group or directly, but not both.\n\t *\n\t * @author tschw\n\t */\n\n\tTHREE.AnimationObjectGroup = function( var_args ) {\n\n\t\tthis.uuid = THREE.Math.generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0;\t\t\t// threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tvar indices = {};\n\t\tthis._indicesByUUID = indices;\t\t// for bookkeeping\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = [];\t\t\t\t\t// inside: string\n\t\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\n\t\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() { return scope._objects.length; },\n\t\t\t\tget inUse() { return this.total - scope.nCachedObjects_;  }\n\t\t\t},\n\n\t\t\tget bindingsPerObject() { return scope._bindings.length; }\n\n\t\t};\n\n\t};\n\n\tTHREE.AnimationObjectGroup.prototype = {\n\n\t\tconstructor: THREE.AnimationObjectGroup,\n\n\t\tadd: function( var_args ) {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tpaths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index === undefined ) {\n\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\t\tindex = nObjects ++;\n\t\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\t\tobjects.push( object );\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tbindings[ j ].push(\n\t\t\t\t\t\t\t\tnew THREE.PropertyBinding(\n\t\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\t\tvar knownObject = objects[ index ];\n\n\t\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\t\tbinding = new THREE.PropertyBinding(\n\t\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( objects[ index ] !== knownObject) {\n\n\t\t\t\t\tconsole.error( \"Different objects with the same UUID \" +\n\t\t\t\t\t\t\t\"detected. Clean the caches or recreate your \" +\n\t\t\t\t\t\t\t\"infrastructure when reloading scenes...\" );\n\n\t\t\t\t} // else the object is already where we want it to be\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\tremove: function( var_args ) {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// remove & forget\n\t\tuncache: function( var_args ) {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} // cached or active\n\n\t\t\t\t} // if object is known\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\t\tsubscribe_: function( path, parsedPath ) {\n\t\t\t// returns an array of bindings for the given path that is changed\n\t\t\t// according to the contained objects in the group\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ],\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tobjects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\t\tindex = bindings.length;\n\n\t\t\tindicesByPath[ path ] = index;\n\n\t\t\tpaths.push( path );\n\t\t\tparsedPaths.push( parsedPath );\n\t\t\tbindings.push( bindingsForPath );\n\n\t\t\tfor ( var i = nCachedObjects,\n\t\t\t\t\tn = objects.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = objects[ i ];\n\n\t\t\t\tbindingsForPath[ i ] =\n\t\t\t\t\t\tnew THREE.PropertyBinding( object, path, parsedPath );\n\n\t\t\t}\n\n\t\t\treturn bindingsForPath;\n\n\t\t},\n\n\t\tunsubscribe_: function( path ) {\n\t\t\t// tells the group to forget about a property path and no longer\n\t\t\t// update the array previously obtained with 'subscribe_'\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar paths = this._paths,\n\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\t\tbindings[ index ] = lastBindings;\n\t\t\t\tbindings.pop();\n\n\t\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\t\tparsedPaths.pop();\n\n\t\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\t\tpaths.pop();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\n\t// File:src/animation/AnimationUtils.js\n\n\t/**\n\t * @author tschw\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tTHREE.AnimationUtils = {\n\n\t\t// same as Array.prototype.slice, but also works on typed arrays\n\t\tarraySlice: function( array, from, to ) {\n\n\t\t\tif ( THREE.AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t\treturn new array.constructor( array.subarray( from, to ) );\n\n\t\t\t}\n\n\t\t\treturn array.slice( from, to );\n\n\t\t},\n\n\t\t// converts an array to a specific type\n\t\tconvertArray: function( array, type, forceClone ) {\n\n\t\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\t\treturn new type( array ); // create typed array\n\n\t\t\t}\n\n\t\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t\t},\n\n\t\tisTypedArray: function( object ) {\n\n\t\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t\t! ( object instanceof DataView );\n\n\t\t},\n\n\t\t// returns an array by which times and values can be sorted\n\t\tgetKeyframeOrder: function( times ) {\n\n\t\t\tfunction compareTime( i, j ) {\n\n\t\t\t\treturn times[ i ] - times[ j ];\n\n\t\t\t}\n\n\t\t\tvar n = times.length;\n\t\t\tvar result = new Array( n );\n\t\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\t\tresult.sort( compareTime );\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\t\tsortedArray: function( values, stride, order ) {\n\n\t\t\tvar nValues = values.length;\n\t\t\tvar result = new values.constructor( nValues );\n\n\t\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// function for parsing AOS keyframe formats\n\t\tflattenJSON: function( jsonKeys, times, values, valuePropertyName ) {\n\n\t\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t}\n\n\t\t\tif ( key === undefined ) return; // no data\n\n\t\t\tvar value = key[ valuePropertyName ];\n\t\t\tif ( value === undefined ) return; // no data\n\n\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else if ( value.toArray !== undefined ) {\n\t\t\t\t// ...assume THREE.Math-ish\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else {\n\t\t\t\t// otherwise push as-is\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t// File:src/animation/KeyframeTrack.js\n\n\t/**\n\t *\n\t * A timed sequence of keyframes for a specific property.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tTHREE.KeyframeTrack = function ( name, times, values, interpolation ) {\n\n\t\tif( name === undefined ) throw new Error( \"track name is undefined\" );\n\n\t\tif( times === undefined || times.length === 0 ) {\n\n\t\t\tthrow new Error( \"no keyframes in track named \" + name );\n\n\t\t}\n\n\t\tthis.name = name;\n\n\t\tthis.times = THREE.AnimationUtils.convertArray( times, this.TimeBufferType );\n\t\tthis.values = THREE.AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t\tthis.validate();\n\t\tthis.optimize();\n\n\t};\n\n\tTHREE.KeyframeTrack.prototype = {\n\n\t\tconstructor: THREE.KeyframeTrack,\n\n\t\tTimeBufferType: Float32Array,\n\t\tValueBufferType: Float32Array,\n\n\t\tDefaultInterpolation: THREE.InterpolateLinear,\n\n\t\tInterpolantFactoryMethodDiscrete: function( result ) {\n\n\t\t\treturn new THREE.DiscreteInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodLinear: function( result ) {\n\n\t\t\treturn new THREE.LinearInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: function( result ) {\n\n\t\t\treturn new THREE.CubicInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tsetInterpolation: function( interpolation ) {\n\n\t\t\tvar factoryMethod;\n\n\t\t\tswitch ( interpolation ) {\n\n\t\t\t\tcase THREE.InterpolateDiscrete:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase THREE.InterpolateLinear:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase THREE.InterpolateSmooth:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( factoryMethod === undefined ) {\n\n\t\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconsole.warn( message );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.createInterpolant = factoryMethod;\n\n\t\t},\n\n\t\tgetInterpolation: function() {\n\n\t\t\tswitch ( this.createInterpolant ) {\n\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\t\treturn THREE.InterpolateDiscrete;\n\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\t\treturn THREE.InterpolateLinear;\n\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\t\treturn THREE.InterpolateSmooth;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetValueSize: function() {\n\n\t\t\treturn this.values.length / this.times.length;\n\n\t\t},\n\n\t\t// move all keyframes either forwards or backwards in time\n\t\tshift: function( timeOffset ) {\n\n\t\t\tif( timeOffset !== 0.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\t\tscale: function( timeScale ) {\n\n\t\t\tif( timeScale !== 1.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\t\ttrim: function( startTime, endTime ) {\n\n\t\t\tvar times = this.times,\n\t\t\t\tnKeys = times.length,\n\t\t\t\tfrom = 0,\n\t\t\t\tto = nKeys - 1;\n\n\t\t\twhile ( from !== nKeys && times[ from ] < startTime ) ++ from;\n\t\t\twhile ( to !== -1 && times[ to ] > endTime ) -- to;\n\n\t\t\t++ to; // inclusive -> exclusive bound\n\n\t\t\tif( from !== 0 || to !== nKeys ) {\n\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\t\tif ( from >= to ) to = Math.max( to , 1 ), from = to - 1;\n\n\t\t\t\tvar stride = this.getValueSize();\n\t\t\t\tthis.times = THREE.AnimationUtils.arraySlice( times, from, to );\n\t\t\t\tthis.values = THREE.AnimationUtils.\n\t\t\t\t\t\tarraySlice( this.values, from * stride, to * stride );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\t\tvalidate: function() {\n\n\t\t\tvar valid = true;\n\n\t\t\tvar valueSize = this.getValueSize();\n\t\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\t\tconsole.error( \"invalid value size in track\", this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar times = this.times,\n\t\t\t\tvalues = this.values,\n\n\t\t\t\tnKeys = times.length;\n\n\t\t\tif( nKeys === 0 ) {\n\n\t\t\t\tconsole.error( \"track is empty\", this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar prevTime = null;\n\n\t\t\tfor( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\t\tvar currTime = times[ i ];\n\n\t\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\t\tconsole.error( \"time is not a valid number\", this, i, currTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\t\tconsole.error( \"out of order keys\", this, i, currTime, prevTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tprevTime = currTime;\n\n\t\t\t}\n\n\t\t\tif ( values !== undefined ) {\n\n\t\t\t\tif ( THREE.AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\t\tconsole.error( \"value is not a valid number\", this, i, value );\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn valid;\n\n\t\t},\n\n\t\t// removes equivalent sequential keys as common in morph target sequences\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\t\toptimize: function() {\n\n\t\t\tvar times = this.times,\n\t\t\t\tvalues = this.values,\n\t\t\t\tstride = this.getValueSize(),\n\n\t\t\t\twriteIndex = 1;\n\n\t\t\tfor( var i = 1, n = times.length - 1; i <= n; ++ i ) {\n\n\t\t\t\tvar keep = false;\n\n\t\t\t\tvar time = times[ i ];\n\t\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// in-place compaction\n\n\t\t\t\tif ( keep ) {\n\n\t\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t}\n\n\t\t\t\t\t++ writeIndex;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( writeIndex !== times.length ) {\n\n\t\t\t\tthis.times = THREE.AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\t\tthis.values = THREE.AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t// Static methods:\n\n\tObject.assign( THREE.KeyframeTrack, {\n\n\t\t// Serialization (in static context, because of constructor invocation\n\t\t// and automatic invocation of .toJSON):\n\n\t\tparse: function( json ) {\n\n\t\t\tif( json.type === undefined ) {\n\n\t\t\t\tthrow new Error( \"track type undefined, can not parse\" );\n\n\t\t\t}\n\n\t\t\tvar trackType = THREE.KeyframeTrack._getTrackTypeForValueTypeName( json.type );\n\n\t\t\tif ( json.times === undefined ) {\n\n\t\t\t\tvar times = [], values = [];\n\n\t\t\t\tTHREE.AnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\t\t\tjson.times = times;\n\t\t\t\tjson.values = values;\n\n\t\t\t}\n\n\t\t\t// derived classes can define a static parse method\n\t\t\tif ( trackType.parse !== undefined ) {\n\n\t\t\t\treturn trackType.parse( json );\n\n\t\t\t} else {\n\n\t\t\t\t// by default, we asssume a constructor compatible with the base\n\t\t\t\treturn new trackType(\n\t\t\t\t\t\tjson.name, json.times, json.values, json.interpolation );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function( track ) {\n\n\t\t\tvar trackType = track.constructor;\n\n\t\t\tvar json;\n\n\t\t\t// derived classes can define a static toJSON method\n\t\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\t\tjson = trackType.toJSON( track );\n\n\t\t\t} else {\n\n\t\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\t\tjson = {\n\n\t\t\t\t\t'name': track.name,\n\t\t\t\t\t'times': THREE.AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t\t'values': THREE.AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t\t};\n\n\t\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\t\treturn json;\n\n\t\t},\n\n\t\t_getTrackTypeForValueTypeName: function( typeName ) {\n\n\t\t\tswitch( typeName.toLowerCase() ) {\n\n\t\t\t\tcase \"scalar\":\n\t\t\t\tcase \"double\":\n\t\t\t\tcase \"float\":\n\t\t\t\tcase \"number\":\n\t\t\t\tcase \"integer\":\n\n\t\t\t\t\treturn THREE.NumberKeyframeTrack;\n\n\t\t\t\tcase \"vector\":\n\t\t\t\tcase \"vector2\":\n\t\t\t\tcase \"vector3\":\n\t\t\t\tcase \"vector4\":\n\n\t\t\t\t\treturn THREE.VectorKeyframeTrack;\n\n\t\t\t\tcase \"color\":\n\n\t\t\t\t\treturn THREE.ColorKeyframeTrack;\n\n\t\t\t\tcase \"quaternion\":\n\n\t\t\t\t\treturn THREE.QuaternionKeyframeTrack;\n\n\t\t\t\tcase \"bool\":\n\t\t\t\tcase \"boolean\":\n\n\t\t\t\t\treturn THREE.BooleanKeyframeTrack;\n\n\t\t\t\tcase \"string\":\n\n\t\t\t\t\treturn THREE.StringKeyframeTrack;\n\n\t\t\t}\n\n\t\t\tthrow new Error( \"Unsupported typeName: \" + typeName );\n\n\t\t}\n\n\t} );\n\n\t// File:src/animation/PropertyBinding.js\n\n\t/**\n\t *\n\t * A reference to a real property in the scene graph.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tTHREE.PropertyBinding = function ( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath ||\n\t\t\t\tTHREE.PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = THREE.PropertyBinding.findNode(\n\t\t\t\trootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t};\n\n\tTHREE.PropertyBinding.prototype = {\n\n\t\tconstructor: THREE.PropertyBinding,\n\n\t\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.getValue( targetArray, offset );\n\n\t\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t\t// prototype version of these methods with one that represents\n\t\t\t// the bound state. When the property is not found, the methods\n\t\t\t// become no-ops.\n\n\t\t},\n\n\t\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.setValue( sourceArray, offset );\n\n\t\t},\n\n\t\t// create getter / setter pair for a property in the scene graph\n\t\tbind: function() {\n\n\t\t\tvar targetObject = this.node,\n\t\t\t\tparsedPath = this.parsedPath,\n\n\t\t\t\tobjectName = parsedPath.objectName,\n\t\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\ttargetObject = THREE.PropertyBinding.findNode(\n\t\t\t\t\t\tthis.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\t\tthis.node = targetObject;\n\n\t\t\t}\n\n\t\t\t// set fail state so we can just 'return' on error\n\t\t\tthis.getValue = this._getValue_unavailable;\n\t\t\tthis.setValue = this._setValue_unavailable;\n\n\t \t\t// ensure there is a value node\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\tconsole.error( \"  trying to update node for track: \" + this.path + \" but it wasn't found.\" );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( objectName ) {\n\n\t\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\t\tswitch ( objectName ) {\n\n\t\t\t\t\tcase 'materials':\n\n\t\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\t\tconsole.error( '  can not bind to material as node does not have a material', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\t\tconsole.error( '  can not bind to material.materials as node.material does not have a materials array', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bones':\n\n\t\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\t\tconsole.error( '  can not bind to bones as node does not have a skeleton', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.error( '  can not bind to objectName of node, undefined', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t\t}\n\n\n\t\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( \"  trying to bind to objectIndex of objectName, but is undefined:\", this, targetObject );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// resolve property\n\t\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\t\tif ( nodeProperty === undefined ) {\n\n\t\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\t\tconsole.error( \"  trying to update property for track: \" + nodeName +\n\t\t\t\t\t\t'.' + propertyName + \" but it wasn't found.\", targetObject );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// determine versioning scheme\n\t\t\tvar versioning = this.Versioning.None;\n\n\t\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\t\tthis.targetObject = targetObject;\n\n\t\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\t\tthis.targetObject = targetObject;\n\n\t\t\t}\n\n\t\t\t// determine how the property gets bound\n\t\t\tvar bindingType = this.BindingType.Direct;\n\n\t\t\tif ( propertyIndex !== undefined ) {\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\t\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else if ( nodeProperty.length !== undefined ) {\n\n\t\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else {\n\n\t\t\t\tthis.propertyName = propertyName;\n\n\t\t\t}\n\n\t\t\t// select getter / setter\n\t\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t\t},\n\n\t\tunbind: function() {\n\n\t\t\tthis.node = null;\n\n\t\t\t// back to the prototype version of getValue / setValue\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\n\t\t}\n\n\t};\n\n\tObject.assign( THREE.PropertyBinding.prototype, { // prototype, continued\n\n\t\t// these are used to \"bind\" a nonexistent property\n\t\t_getValue_unavailable: function() {},\n\t\t_setValue_unavailable: function() {},\n\n\t\t// initial state of these methods that calls 'bind'\n\t\t_getValue_unbound: THREE.PropertyBinding.prototype.getValue,\n\t\t_setValue_unbound: THREE.PropertyBinding.prototype.setValue,\n\n\t\tBindingType: {\n\t\t\tDirect: 0,\n\t\t\tEntireArray: 1,\n\t\t\tArrayElement: 2,\n\t\t\tHasFromToArray: 3\n\t\t},\n\n\t\tVersioning: {\n\t\t\tNone: 0,\n\t\t\tNeedsUpdate: 1,\n\t\t\tMatrixWorldNeedsUpdate: 2\n\t\t},\n\n\t\tGetterByBindingType: [\n\n\t\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\t\tvar source = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t\t}\n\n\t\t],\n\n\t\tSetterByBindingTypeAndVersioning: [\n\n\t\t\t[\n\t\t\t\t// Direct\n\n\t\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// EntireArray\n\n\t\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// ArrayElement\n\n\t\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// HasToFromArray\n\n\t\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t]\n\n\t\t]\n\n\t} );\n\n\tTHREE.PropertyBinding.Composite =\n\t\t\tfunction( targetGroup, path, optionalParsedPath ) {\n\n\t\tvar parsedPath = optionalParsedPath ||\n\t\t\t\tTHREE.PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t};\n\n\tTHREE.PropertyBinding.Composite.prototype = {\n\n\t\tconstructor: THREE.PropertyBinding.Composite,\n\n\t\tgetValue: function( array, offset ) {\n\n\t\t\tthis.bind(); // bind all binding\n\n\t\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t\t// and only call .getValue on the first\n\t\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t\t},\n\n\t\tsetValue: function( array, offset ) {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\tn = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t\t}\n\n\t\t},\n\n\t\tbind: function() {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\tn = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].bind();\n\n\t\t\t}\n\n\t\t},\n\n\t\tunbind: function() {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\tn = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].unbind();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tTHREE.PropertyBinding.create = function( root, path, parsedPath ) {\n\n\t\tif ( ! ( root instanceof THREE.AnimationObjectGroup ) ) {\n\n\t\t\treturn new THREE.PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new THREE.PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t};\n\n\tTHREE.PropertyBinding.parseTrackName = function( trackName ) {\n\n\t\t// matches strings in the form of:\n\t\t//    nodeName.property\n\t\t//    nodeName.property[accessor]\n\t\t//    nodeName.material.property[accessor]\n\t\t//    uuid.property[accessor]\n\t\t//    uuid.objectName[objectIndex].propertyName[propertyIndex]\n\t\t//    parentName/nodeName.property\n\t\t//    parentName/parentName/nodeName.property[index]\n\t\t//\t  .bone[Armature.DEF_cog].position\n\t\t// created and tested via https://regex101.com/#javascript\n\n\t\tvar re = /^(([\\w]+\\/)*)([\\w-\\d]+)?(\\.([\\w]+)(\\[([\\w\\d\\[\\]\\_.:\\- ]+)\\])?)?(\\.([\\w.]+)(\\[([\\w\\d\\[\\]\\_. ]+)\\])?)$/;\n\t\tvar matches = re.exec( trackName );\n\n\t\tif ( ! matches ) {\n\n\t\t\tthrow new Error( \"cannot parse trackName at all: \" + trackName );\n\n\t\t}\n\n\t\tif ( matches.index === re.lastIndex ) {\n\n\t\t\tre.lastIndex++;\n\n\t\t}\n\n\t\tvar results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 3 ], \t// allowed to be null, specified root node.\n\t\t\tobjectName: matches[ 5 ],\n\t\t\tobjectIndex: matches[ 7 ],\n\t\t\tpropertyName: matches[ 9 ],\n\t\t\tpropertyIndex: matches[ 11 ]\t// allowed to be null, specifies that the whole property is set.\n\t\t};\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( \"can not parse propertyName from trackName: \" + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t};\n\n\tTHREE.PropertyBinding.findNode = function( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === -1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tvar searchSkeleton = function( skeleton ) {\n\n\t\t\t\tfor( var i = 0; i < skeleton.bones.length; i ++ ) {\n\n\t\t\t\t\tvar bone = skeleton.bones[ i ];\n\n\t\t\t\t\tif ( bone.name === nodeName ) {\n\n\t\t\t\t\t\treturn bone;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar bone = searchSkeleton( root.skeleton );\n\n\t\t\tif ( bone ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tvar searchNodeSubtree = function( children ) {\n\n\t\t\t\tfor( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t};\n\n\t// File:src/animation/PropertyMixer.js\n\n\t/**\n\t *\n\t * Buffered scene graph property that allows weighted accumulation.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tTHREE.PropertyMixer = function ( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tvar bufferType = Float64Array,\n\t\t\tmixFunction;\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\t\t\tmixFunction = this._slerp;\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\n\t\t\t\tbufferType = Array,\t\tmixFunction = this._select;\t\tbreak;\n\n\t\t\tdefault:\t\t\t\t\tmixFunction = this._lerp;\n\n\t\t}\n\n\t\tthis.buffer = new bufferType( valueSize * 4 );\n\t\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\n\t\tthis._mixBufferRegion = mixFunction;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t};\n\n\tTHREE.PropertyMixer.prototype = {\n\n\t\tconstructor: THREE.PropertyMixer,\n\n\t\t// accumulate data in the 'incoming' region into 'accu<i>'\n\t\taccumulate: function( accuIndex, weight ) {\n\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t\t// the weight and shouldn't have made the call in the first place\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\t\tif ( currentWeight === 0 ) {\n\n\t\t\t\t// accuN := incoming * weight\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcurrentWeight = weight;\n\n\t\t\t} else {\n\n\t\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\t\tcurrentWeight += weight;\n\t\t\t\tvar mix = weight / currentWeight;\n\t\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = currentWeight;\n\n\t\t},\n\n\t\t// apply the state of 'accu<i>' to the binding when accus differ\n\t\tapply: function( accuIndex ) {\n\n\t\t\tvar stride = this.valueSize,\n\t\t\t\tbuffer = this.buffer,\n\t\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\t\tweight = this.cumulativeWeight,\n\n\t\t\t\tbinding = this.binding;\n\n\t\t\tthis.cumulativeWeight = 0;\n\n\t\t\tif ( weight < 1 ) {\n\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\t\tthis._mixBufferRegion(\n\t\t\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t\t}\n\n\t\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remember the state of the bound property and copy it to both accus\n\t\tsaveOriginalState: function() {\n\n\t\t\tvar binding = this.binding;\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toriginalValueOffset = stride * 3;\n\n\t\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = 0;\n\n\t\t},\n\n\t\t// apply the state previously taken via 'saveOriginalState' to the binding\n\t\trestoreOriginalState: function() {\n\n\t\t\tvar originalValueOffset = this.valueSize * 3;\n\t\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t\t},\n\n\n\t\t// mix functions\n\n\t\t_select: function( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tif ( t >= 0.5 ) {\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_slerp: function( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tTHREE.Quaternion.slerpFlat( buffer, dstOffset,\n\t\t\t\t\tbuffer, dstOffset, buffer, srcOffset, t );\n\n\t\t},\n\n\t\t_lerp: function( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tvar s = 1 - t;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tvar j = dstOffset + i;\n\n\t\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t// File:src/animation/tracks/BooleanKeyframeTrack.js\n\n\t/**\n\t *\n\t * A Track of Boolean keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tTHREE.BooleanKeyframeTrack = function ( name, times, values ) {\n\n\t\tTHREE.KeyframeTrack.call( this, name, times, values );\n\n\t};\n\n\tTHREE.BooleanKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\n\n\t\tconstructor: THREE.BooleanKeyframeTrack,\n\n\t\tValueTypeName: 'bool',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: THREE.InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t\t// Note: Actually this track could have a optimized / compressed\n\t\t// representation of a single value and a custom interpolant that\n\t\t// computes \"firstValue ^ isOdd( index )\".\n\n\t} );\n\n\t// File:src/animation/tracks/ColorKeyframeTrack.js\n\n\t/**\n\t *\n\t * A Track of keyframe values that represent color.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tTHREE.ColorKeyframeTrack = function ( name, times, values, interpolation ) {\n\n\t\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\n\n\t};\n\n\tTHREE.ColorKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\n\n\t\tconstructor: THREE.ColorKeyframeTrack,\n\n\t\tValueTypeName: 'color'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\n\t\t// Note: Very basic implementation and nothing special yet.\n\t\t// However, this is the place for color space parameterization.\n\n\t} );\n\n\t// File:src/animation/tracks/NumberKeyframeTrack.js\n\n\t/**\n\t *\n\t * A Track of numeric keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tTHREE.NumberKeyframeTrack = function ( name, times, values, interpolation ) {\n\n\t\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\n\n\t};\n\n\tTHREE.NumberKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\n\n\t\tconstructor: THREE.NumberKeyframeTrack,\n\n\t\tValueTypeName: 'number',\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t// File:src/animation/tracks/QuaternionKeyframeTrack.js\n\n\t/**\n\t *\n\t * A Track of quaternion keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tTHREE.QuaternionKeyframeTrack = function ( name, times, values, interpolation ) {\n\n\t\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\n\n\t};\n\n\tTHREE.QuaternionKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\n\n\t\tconstructor: THREE.QuaternionKeyframeTrack,\n\n\t\tValueTypeName: 'quaternion',\n\n\t\t// ValueBufferType is inherited\n\n\t\tDefaultInterpolation: THREE.InterpolateLinear,\n\n\t\tInterpolantFactoryMethodLinear: function( result ) {\n\n\t\t\treturn new THREE.QuaternionLinearInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n\t} );\n\n\t// File:src/animation/tracks/StringKeyframeTrack.js\n\n\t/**\n\t *\n\t * A Track that interpolates Strings\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tTHREE.StringKeyframeTrack = function ( name, times, values, interpolation ) {\n\n\t\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\n\n\t};\n\n\tTHREE.StringKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\n\n\t\tconstructor: THREE.StringKeyframeTrack,\n\n\t\tValueTypeName: 'string',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: THREE.InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t} );\n\n\t// File:src/animation/tracks/VectorKeyframeTrack.js\n\n\t/**\n\t *\n\t * A Track of vectored keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tTHREE.VectorKeyframeTrack = function ( name, times, values, interpolation ) {\n\n\t\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\n\n\t};\n\n\tTHREE.VectorKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\n\n\t\tconstructor: THREE.VectorKeyframeTrack,\n\n\t\tValueTypeName: 'vector'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t// File:src/audio/Audio.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tTHREE.Audio = function ( listener ) {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.context = listener.context;\n\t\tthis.source = this.context.createBufferSource();\n\t\tthis.source.onended = this.onEnded.bind( this );\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.startTime = 0;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis.filters = [];\n\n\t};\n\n\tTHREE.Audio.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\t\tconstructor: THREE.Audio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tsetNodeSource: function ( audioNode ) {\n\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'audioNode';\n\t\t\tthis.source = audioNode;\n\t\t\tthis.connect();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetBuffer: function ( audioBuffer ) {\n\n\t\t\tthis.source.buffer = audioBuffer;\n\t\t\tthis.sourceType = 'buffer';\n\n\t\t\tif ( this.autoplay ) this.play();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tplay: function () {\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar source = this.context.createBufferSource();\n\n\t\t\tsource.buffer = this.source.buffer;\n\t\t\tsource.loop = this.source.loop;\n\t\t\tsource.onended = this.source.onended;\n\t\t\tsource.start( 0, this.startTime );\n\t\t\tsource.playbackRate.value = this.playbackRate;\n\n\t\t\tthis.isPlaying = true;\n\n\t\t\tthis.source = source;\n\n\t\t\treturn this.connect();\n\n\t\t},\n\n\t\tpause: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.startTime = this.context.currentTime;\n\t\t\tthis.isPlaying = false;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.startTime = 0;\n\t\t\tthis.isPlaying = false;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdisconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilters: function () {\n\n\t\t\treturn this.filters;\n\n\t\t},\n\n\t\tsetFilters: function ( value ) {\n\n\t\t\tif ( ! value ) value = [];\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.disconnect();\n\t\t\t\tthis.filters = value;\n\t\t\t\tthis.connect();\n\n\t\t\t} else {\n\n\t\t\t\tthis.filters = value;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.getFilters()[ 0 ];\n\n\t\t},\n\n\t\tsetFilter: function ( filter ) {\n\n\t\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t\t},\n\n\t\tsetPlaybackRate: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.playbackRate = value;\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.playbackRate.value = this.playbackRate;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetPlaybackRate: function () {\n\n\t\t\treturn this.playbackRate;\n\n\t\t},\n\n\t\tonEnded: function () {\n\n\t\t\tthis.isPlaying = false;\n\n\t\t},\n\n\t\tgetLoop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn this.source.loop;\n\n\t\t},\n\n\t\tsetLoop: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.source.loop = value;\n\n\t\t},\n\n\t\tgetVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\n\n\t\tsetVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.value = value;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t// File:src/audio/AudioAnalyser.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.AudioAnalyser = function ( audio, fftSize ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t};\n\n\tObject.assign( THREE.AudioAnalyser.prototype, {\n\n\t\tgetFrequencyData: function () {\n\n\t\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\t\treturn this.data;\n\n\t\t},\n\n\t\tgetAverageFrequency: function () {\n\n\t\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tvalue += data[ i ];\n\n\t\t\t}\n\n\t\t\treturn value / data.length;\n\n\t\t}\n\n\t} );\n\n\t// File:src/audio/AudioContext.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tObject.defineProperty( THREE, 'AudioContext', {\n\n\t\tget: ( function () {\n\n\t\t\tvar context;\n\n\t\t\treturn function get() {\n\n\t\t\t\tif ( context === undefined ) {\n\n\t\t\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t\t\t}\n\n\t\t\t\treturn context;\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t// File:src/audio/PositionalAudio.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.PositionalAudio = function ( listener ) {\n\n\t\tTHREE.Audio.call( this, listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.connect( this.gain );\n\n\t};\n\n\tTHREE.PositionalAudio.prototype = Object.assign( Object.create( THREE.Audio.prototype ), {\n\n\t\tconstructor: THREE.PositionalAudio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.panner;\n\n\t\t},\n\n\t\tgetRefDistance: function () {\n\n\t\t\treturn this.panner.refDistance;\n\n\t\t},\n\n\t\tsetRefDistance: function ( value ) {\n\n\t\t\tthis.panner.refDistance = value;\n\n\t\t},\n\n\t\tgetRolloffFactor: function () {\n\n\t\t\treturn this.panner.rolloffFactor;\n\n\t\t},\n\n\t\tsetRolloffFactor: function ( value ) {\n\n\t\t\tthis.panner.rolloffFactor = value;\n\n\t\t},\n\n\t\tgetDistanceModel: function () {\n\n\t\t\treturn this.panner.distanceModel;\n\n\t\t},\n\n\t\tsetDistanceModel: function ( value ) {\n\n\t\t\tthis.panner.distanceModel = value;\n\n\t\t},\n\n\t\tgetMaxDistance: function () {\n\n\t\t\treturn this.panner.maxDistance;\n\n\t\t},\n\n\t\tsetMaxDistance: function ( value ) {\n\n\t\t\tthis.panner.maxDistance = value;\n\n\t\t},\n\n\t\tupdateMatrixWorld: ( function () {\n\n\t\t\tvar position = new THREE.Vector3();\n\n\t\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\n\n\t\t\t};\n\n\t\t} )()\n\n\n\t} );\n\n\t// File:src/audio/AudioListener.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.AudioListener = function () {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = THREE.AudioContext;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t};\n\n\tTHREE.AudioListener.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\t\tconstructor: THREE.AudioListener,\n\n\t\tgetInput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tremoveFilter: function ( ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\t\tthis.gain.connect( this.context.destination );\n\t\t\t\tthis.filter = null;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.filter;\n\n\t\t},\n\n\t\tsetFilter: function ( value ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t\t} else {\n\n\t\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t\t}\n\n\t\t\tthis.filter = value;\n\t\t\tthis.gain.connect( this.filter );\n\t\t\tthis.filter.connect( this.context.destination );\n\n\t\t},\n\n\t\tgetMasterVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\n\t\tsetMasterVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.value = value;\n\n\t\t},\n\n\t\tupdateMatrixWorld: ( function () {\n\n\t\t\tvar position = new THREE.Vector3();\n\t\t\tvar quaternion = new THREE.Quaternion();\n\t\t\tvar scale = new THREE.Vector3();\n\n\t\t\tvar orientation = new THREE.Vector3();\n\n\t\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\t\tvar listener = this.context.listener;\n\t\t\t\tvar up = this.up;\n\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t// File:src/cameras/Camera.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tTHREE.Camera = function () {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new THREE.Matrix4();\n\t\tthis.projectionMatrix = new THREE.Matrix4();\n\n\t};\n\n\tTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\n\tTHREE.Camera.prototype.constructor = THREE.Camera;\n\n\tTHREE.Camera.prototype.getWorldDirection = function () {\n\n\t\tvar quaternion = new THREE.Quaternion();\n\n\t\treturn function getWorldDirection( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}();\n\n\tTHREE.Camera.prototype.lookAt = function () {\n\n\t\t// This routine does not support cameras with rotated and/or translated parent(s)\n\n\t\tvar m1 = new THREE.Matrix4();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tm1.lookAt( this.position, vector, this.up );\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t};\n\n\t}();\n\n\tTHREE.Camera.prototype.clone = function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t};\n\n\tTHREE.Camera.prototype.copy = function ( source ) {\n\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/cameras/CubeCamera.js\n\n\t/**\n\t * Camera for rendering cube maps\n\t *\t- renders scene into axis-aligned cube\n\t *\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.CubeCamera = function ( near, far, cubeResolution ) {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tvar fov = 90, aspect = 1;\n\n\t\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t\tvar options = { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter };\n\n\t\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\n\t\tthis.updateCubeMap = function ( renderer, scene ) {\n\n\t\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\t\tvar renderTarget = this.renderTarget;\n\t\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\t\trenderTarget.activeCubeFace = 0;\n\t\t\trenderer.render( scene, cameraPX, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 1;\n\t\t\trenderer.render( scene, cameraNX, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 2;\n\t\t\trenderer.render( scene, cameraPY, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 3;\n\t\t\trenderer.render( scene, cameraNY, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 4;\n\t\t\trenderer.render( scene, cameraPZ, renderTarget );\n\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\t\trenderTarget.activeCubeFace = 5;\n\t\t\trenderer.render( scene, cameraNZ, renderTarget );\n\n\t\t\trenderer.setRenderTarget( null );\n\n\t\t};\n\n\t};\n\n\tTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\n\tTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\n\n\t// File:src/cameras/OrthographicCamera.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author arose / http://github.com/arose\n\t */\n\n\tTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\n\n\t\tTHREE.Camera.call( this );\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = ( near !== undefined ) ? near : 0.1;\n\t\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\t\tthis.updateProjectionMatrix();\n\n\t};\n\n\tTHREE.OrthographicCamera.prototype = Object.assign( Object.create( THREE.Camera.prototype ), {\n\n\t\tconstructor: THREE.OrthographicCamera,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tTHREE.Camera.prototype.copy.call( this, source );\n\n\t\t\tthis.left = source.left;\n\t\t\tthis.right = source.right;\n\t\t\tthis.top = source.top;\n\t\t\tthis.bottom = source.bottom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetViewOffset: function( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tthis.view = {\n\t\t\t\tfullWidth: fullWidth,\n\t\t\t\tfullHeight: fullHeight,\n\t\t\t\toffsetX: x,\n\t\t\t\toffsetY: y,\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function() {\n\n\t\t\tthis.view = null;\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\t\tvar cx = ( this.right + this.left ) / 2;\n\t\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\t\tvar left = cx - dx;\n\t\t\tvar right = cx + dx;\n\t\t\tvar top = cy + dy;\n\t\t\tvar bottom = cy - dy;\n\n\t\t\tif ( this.view !== null ) {\n\n\t\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t\t}\n\n\t\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.left = this.left;\n\t\t\tdata.object.right = this.right;\n\t\t\tdata.object.top = this.top;\n\t\t\tdata.object.bottom = this.bottom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t// File:src/cameras/PerspectiveCamera.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author greggman / http://games.greggman.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author tschw\n\t */\n\n\tTHREE.PerspectiveCamera = function ( fov, aspect, near, far ) {\n\n\t\tTHREE.Camera.call( this );\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov !== undefined ? fov : 50;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near !== undefined ? near : 0.1;\n\t\tthis.far = far !== undefined ? far : 2000;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect !== undefined ? aspect : 1;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t};\n\n\tTHREE.PerspectiveCamera.prototype = Object.assign( Object.create( THREE.Camera.prototype ), {\n\n\t\tconstructor: THREE.PerspectiveCamera,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tTHREE.Camera.prototype.copy.call( this, source );\n\n\t\t\tthis.fov = source.fov;\n\t\t\tthis.zoom = source.zoom;\n\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.focus = source.focus;\n\n\t\t\tthis.aspect = source.aspect;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\tthis.filmGauge = source.filmGauge;\n\t\t\tthis.filmOffset = source.filmOffset;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t\t *\n\t\t * The default film gauge is 35, so that the focal length can be specified for\n\t\t * a 35mm (full frame) camera.\n\t\t *\n\t\t * Values for focal length and film gauge must have the same unit.\n\t\t */\n\t\tsetFocalLength: function ( focalLength ) {\n\n\t\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\t\tthis.fov = THREE.Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\t/**\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\n\t\t */\n\t\tgetFocalLength: function () {\n\n\t\t\tvar vExtentSlope = Math.tan( THREE.Math.DEG2RAD * 0.5 * this.fov );\n\n\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t\t},\n\n\t\tgetEffectiveFOV: function () {\n\n\t\t\treturn THREE.Math.RAD2DEG * 2 * Math.atan(\n\t\t\t\t\tMath.tan( THREE.Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t\t},\n\n\t\tgetFilmWidth: function () {\n\n\t\t\t// film not completely covered in portrait format (aspect < 1)\n\t\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t\t},\n\n\t\tgetFilmHeight: function () {\n\n\t\t\t// film not completely covered in landscape format (aspect > 1)\n\t\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t\t},\n\n\t\t/**\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t\t * multi-monitor/multi-machine setups.\n\t\t *\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t\t * the monitors are in grid like this\n\t\t *\n\t\t *   +---+---+---+\n\t\t *   | A | B | C |\n\t\t *   +---+---+---+\n\t\t *   | D | E | F |\n\t\t *   +---+---+---+\n\t\t *\n\t\t * then for each monitor you would call it like this\n\t\t *\n\t\t *   var w = 1920;\n\t\t *   var h = 1080;\n\t\t *   var fullWidth = w * 3;\n\t\t *   var fullHeight = h * 2;\n\t\t *\n\t\t *   --A--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t\t *   --B--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t\t *   --C--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t\t *   --D--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t\t *   --E--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t\t *   --F--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t\t *\n\t\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t\t */\n\t\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\t\tthis.view = {\n\t\t\t\tfullWidth: fullWidth,\n\t\t\t\tfullHeight: fullHeight,\n\t\t\t\toffsetX: x,\n\t\t\t\toffsetY: y,\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function() {\n\n\t\t\tthis.view = null;\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar near = this.near,\n\t\t\t\ttop = near * Math.tan(\n\t\t\t\t\t\tTHREE.Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\t\theight = 2 * top,\n\t\t\t\twidth = this.aspect * height,\n\t\t\t\tleft = - 0.5 * width,\n\t\t\t\tview = this.view;\n\n\t\t\tif ( view !== null ) {\n\n\t\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\t\twidth *= view.width / fullWidth;\n\t\t\t\theight *= view.height / fullHeight;\n\n\t\t\t}\n\n\t\t\tvar skew = this.filmOffset;\n\t\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\t\tthis.projectionMatrix.makeFrustum(\n\t\t\t\t\tleft, left + width, top - height, top, near, this.far );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.fov = this.fov;\n\t\t\tdata.object.zoom = this.zoom;\n\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tdata.object.focus = this.focus;\n\n\t\t\tdata.object.aspect = this.aspect;\n\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\t\tdata.object.filmGauge = this.filmGauge;\n\t\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t// File:src/cameras/StereoCamera.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.StereoCamera = function () {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.cameraL = new THREE.PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new THREE.PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t};\n\n\tObject.assign( THREE.StereoCamera.prototype, {\n\n\t\tupdate: ( function () {\n\n\t\t\tvar focus, fov, aspect, near, far;\n\n\t\t\tvar eyeRight = new THREE.Matrix4();\n\t\t\tvar eyeLeft = new THREE.Matrix4();\n\n\t\t\treturn function update( camera ) {\n\n\t\t\t\tvar needsUpdate = focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far;\n\n\t\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t\tfocus = camera.focus;\n\t\t\t\t\tfov = camera.fov;\n\t\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\t\tnear = camera.near;\n\t\t\t\t\tfar = camera.far;\n\n\t\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\t\tvar eyeSep = 0.064 / 2;\n\t\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\t\tvar ymax = near * Math.tan( THREE.Math.DEG2RAD * fov * 0.5 );\n\t\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t\t// translate xOffset\n\n\t\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t\t// for left eye\n\n\t\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t\t// for right eye\n\n\t\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t// File:src/lights/Light.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.Light = function ( color, intensity ) {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new THREE.Color( color );\n\t\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\t\tthis.receiveShadow = undefined;\n\n\t};\n\n\tTHREE.Light.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\t\tconstructor: THREE.Light,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tTHREE.Object3D.prototype.copy.call( this, source );\n\n\t\t\tthis.color.copy( source.color );\n\t\t\tthis.intensity = source.intensity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.color = this.color.getHex();\n\t\t\tdata.object.intensity = this.intensity;\n\n\t\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t// File:src/lights/LightShadow.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.LightShadow = function ( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.radius = 1;\n\n\t\tthis.mapSize = new THREE.Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.matrix = new THREE.Matrix4();\n\n\t};\n\n\tObject.assign( THREE.LightShadow.prototype, {\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.camera = source.camera.clone();\n\n\t\t\tthis.bias = source.bias;\n\t\t\tthis.radius = source.radius;\n\n\t\t\tthis.mapSize.copy( source.mapSize );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t} );\n\n\t// File:src/lights/AmbientLight.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.AmbientLight = function ( color, intensity ) {\n\n\t\tTHREE.Light.call( this, color, intensity );\n\n\t\tthis.type = 'AmbientLight';\n\n\t\tthis.castShadow = undefined;\n\n\t};\n\n\tTHREE.AmbientLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\n\n\t\tconstructor: THREE.AmbientLight\n\n\t} );\n\n\t// File:src/lights/DirectionalLight.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.DirectionalLight = function ( color, intensity ) {\n\n\t\tTHREE.Light.call( this, color, intensity );\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( THREE.Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new THREE.Object3D();\n\n\t\tthis.shadow = new THREE.DirectionalLightShadow();\n\n\t};\n\n\tTHREE.DirectionalLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\n\n\t\tconstructor: THREE.DirectionalLight,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tTHREE.Light.prototype.copy.call( this, source );\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t// File:src/lights/DirectionalLightShadow.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.DirectionalLightShadow = function ( light ) {\n\n\t\tTHREE.LightShadow.call( this, new THREE.OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t};\n\n\tTHREE.DirectionalLightShadow.prototype = Object.assign( Object.create( THREE.LightShadow.prototype ), {\n\n\t\tconstructor: THREE.DirectionalLightShadow\n\n\t} );\n\n\t// File:src/lights/HemisphereLight.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\n\n\t\tTHREE.Light.call( this, skyColor, intensity );\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.castShadow = undefined;\n\n\t\tthis.position.copy( THREE.Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new THREE.Color( groundColor );\n\n\t};\n\n\tTHREE.HemisphereLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\n\n\t\tconstructor: THREE.HemisphereLight,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tTHREE.Light.prototype.copy.call( this, source );\n\n\t\t\tthis.groundColor.copy( source.groundColor );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t// File:src/lights/PointLight.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tTHREE.PointLight = function ( color, intensity, distance, decay ) {\n\n\t\tTHREE.Light.call( this, color, intensity );\n\n\t\tthis.type = 'PointLight';\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t\t},\n\t\t\tset: function ( power ) {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new THREE.LightShadow( new THREE.PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t};\n\n\tTHREE.PointLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\n\n\t\tconstructor: THREE.PointLight,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tTHREE.Light.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t// File:src/lights/SpotLight.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.SpotLight = function ( color, intensity, distance, angle, penumbra, decay ) {\n\n\t\tTHREE.Light.call( this, color, intensity );\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( THREE.Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new THREE.Object3D();\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\treturn this.intensity * Math.PI;\n\t\t\t},\n\t\t\tset: function ( power ) {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\tthis.intensity = power / Math.PI;\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\t\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new THREE.SpotLightShadow();\n\n\t};\n\n\tTHREE.SpotLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\n\n\t\tconstructor: THREE.SpotLight,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tTHREE.Light.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.angle = source.angle;\n\t\t\tthis.penumbra = source.penumbra;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t// File:src/lights/SpotLightShadow.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.SpotLightShadow = function () {\n\n\t\tTHREE.LightShadow.call( this, new THREE.PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t};\n\n\tTHREE.SpotLightShadow.prototype = Object.assign( Object.create( THREE.LightShadow.prototype ), {\n\n\t\tconstructor: THREE.SpotLightShadow,\n\n\t\tupdate: function ( light ) {\n\n\t\t\tvar fov = THREE.Math.RAD2DEG * 2 * light.angle;\n\t\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\t\tvar far = light.distance || 500;\n\n\t\t\tvar camera = this.camera;\n\n\t\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\t\tcamera.fov = fov;\n\t\t\t\tcamera.aspect = aspect;\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t// File:src/loaders/AudioLoader.js\n\n\t/**\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tTHREE.AudioLoader = function ( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t};\n\n\tObject.assign( THREE.AudioLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar context = THREE.AudioContext;\n\n\t\t\t\tcontext.decodeAudioData( buffer, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t} );\n\n\t// File:src/loaders/Cache.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.Cache = {\n\n\t\tenabled: false,\n\n\t\tfiles: {},\n\n\t\tadd: function ( key, file ) {\n\n\t\t\tif ( this.enabled === false ) return;\n\n\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\t\tthis.files[ key ] = file;\n\n\t\t},\n\n\t\tget: function ( key ) {\n\n\t\t\tif ( this.enabled === false ) return;\n\n\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\t\treturn this.files[ key ];\n\n\t\t},\n\n\t\tremove: function ( key ) {\n\n\t\t\tdelete this.files[ key ];\n\n\t\t},\n\n\t\tclear: function () {\n\n\t\t\tthis.files = {};\n\n\t\t}\n\n\t};\n\n\t// File:src/loaders/Loader.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.Loader = function () {\n\n\t\tthis.onLoadStart = function () {};\n\t\tthis.onLoadProgress = function () {};\n\t\tthis.onLoadComplete = function () {};\n\n\t};\n\n\tTHREE.Loader.prototype = {\n\n\t\tconstructor: THREE.Loader,\n\n\t\tcrossOrigin: undefined,\n\n\t\textractUrlBase: function ( url ) {\n\n\t\t\tvar parts = url.split( '/' );\n\n\t\t\tif ( parts.length === 1 ) return './';\n\n\t\t\tparts.pop();\n\n\t\t\treturn parts.join( '/' ) + '/';\n\n\t\t},\n\n\t\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\t\tvar array = [];\n\n\t\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tcreateMaterial: ( function () {\n\n\t\t\tvar color, textureLoader, materialLoader;\n\n\t\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t\tif ( color === undefined ) color = new THREE.Color();\n\t\t\t\tif ( textureLoader === undefined ) textureLoader = new THREE.TextureLoader();\n\t\t\t\tif ( materialLoader === undefined ) materialLoader = new THREE.MaterialLoader();\n\n\t\t\t\t// convert from old material format\n\n\t\t\t\tvar textures = {};\n\n\t\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\t\tvar loader = THREE.Loader.Handlers.get( fullPath );\n\n\t\t\t\t\tvar texture;\n\n\t\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\n\t\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = THREE.RepeatWrapping;\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = THREE.MirroredRepeatWrapping;\n\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = THREE.RepeatWrapping;\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = THREE.MirroredRepeatWrapping;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar uuid = THREE.Math.generateUUID();\n\n\t\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\t\treturn uuid;\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tvar json = {\n\t\t\t\t\tuuid: THREE.Math.generateUUID(),\n\t\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t\t};\n\n\t\t\t\tfor ( var name in m ) {\n\n\t\t\t\t\tvar value = m[ name ];\n\n\t\t\t\t\tswitch ( name ) {\n\t\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\t\tjson.blending = THREE[ value ];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\t\tjson.normalScale = [ value, value ];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\t\tjson.side = THREE.BackSide;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\t\tjson.side = THREE.DoubleSide;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\t\tcase 'opacity':\n\t\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\t\tcase 'transparent':\n\t\t\t\t\t\tcase 'visible':\n\t\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\t\tif ( value === true ) json.vertexColors = THREE.VertexColors;\n\t\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = THREE.FaceColors;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\t\treturn materialLoader.parse( json );\n\n\t\t\t};\n\n\t\t} )()\n\n\t};\n\n\tTHREE.Loader.Handlers = {\n\n\t\thandlers: [],\n\n\t\tadd: function ( regex, loader ) {\n\n\t\t\tthis.handlers.push( regex, loader );\n\n\t\t},\n\n\t\tget: function ( file ) {\n\n\t\t\tvar handlers = this.handlers;\n\n\t\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tvar regex = handlers[ i ];\n\t\t\t\tvar loader  = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t};\n\n\t// File:src/loaders/XHRLoader.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.XHRLoader = function ( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t};\n\n\tObject.assign( THREE.XHRLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = THREE.Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\tvar request = new XMLHttpRequest();\n\t\t\trequest.overrideMimeType( 'text/plain' );\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tvar response = event.target.response;\n\n\t\t\t\tTHREE.Cache.add( url, response );\n\n\t\t\t\tif ( this.status === 200 ) {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else if ( this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tconsole.warn( 'THREE.XHRLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\tif ( onProgress !== undefined ) {\n\n\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\t\tonProgress( event );\n\n\t\t\t\t}, false );\n\n\t\t\t}\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\trequest.send( null );\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn request;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetResponseType: function ( value ) {\n\n\t\t\tthis.responseType = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetWithCredentials: function ( value ) {\n\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t// File:src/loaders/FontLoader.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.FontLoader = function ( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t};\n\n\tObject.assign( THREE.FontLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json;\n\n\t\t\t\ttry {\n\n\t\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\tvar font = scope.parse( json );\n\n\t\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\treturn new THREE.Font( json );\n\n\t\t}\n\n\t} );\n\n\t// File:src/loaders/ImageLoader.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.ImageLoader = function ( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t};\n\n\tObject.assign( THREE.ImageLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\t\t\timage.onload = function () {\n\n\t\t\t\tURL.revokeObjectURL( image.src );\n\n\t\t\t\tif ( onLoad ) onLoad( image );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t};\n\n\t\t\tif ( url.indexOf( 'data:' ) === 0 ) {\n\n\t\t\t\timage.src = url;\n\n\t\t\t} else {\n\n\t\t\t\tvar loader = new THREE.XHRLoader();\n\t\t\t\tloader.setPath( this.path );\n\t\t\t\tloader.setResponseType( 'blob' );\n\t\t\t\tloader.load( url, function ( blob ) {\n\n\t\t\t\t\timage.src = URL.createObjectURL( blob );\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn image;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t// File:src/loaders/JSONLoader.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.JSONLoader = function ( manager ) {\n\n\t\tif ( typeof manager === 'boolean' ) {\n\n\t\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\t\tmanager = undefined;\n\n\t\t}\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t\tthis.withCredentials = false;\n\n\t};\n\n\tObject.assign( THREE.JSONLoader.prototype, {\n\n\t\tload: function( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : THREE.Loader.prototype.extractUrlBase( url );\n\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\n\t\t\tloader.setWithCredentials( this.withCredentials );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json = JSON.parse( text );\n\t\t\t\tvar metadata = json.metadata;\n\n\t\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\t\tvar type = metadata.type;\n\n\t\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( type.toLowerCase() === 'scene' ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar object = scope.parse( json, texturePath );\n\t\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTexturePath: function ( value ) {\n\n\t\t\tthis.texturePath = value;\n\n\t\t},\n\n\t\tparse: function ( json, texturePath ) {\n\n\t\t\tvar geometry = new THREE.Geometry(),\n\t\t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\n\n\t\t\tparseModel( scale );\n\n\t\t\tparseSkin();\n\t\t\tparseMorphing( scale );\n\t\t\tparseAnimations();\n\n\t\t\tgeometry.computeFaceNormals();\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tfunction parseModel( scale ) {\n\n\t\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t\t}\n\n\t\t\t\tvar i, j, fi,\n\n\t\t\t\toffset, zLength,\n\n\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\t\ttype,\n\t\t\t\tisQuad,\n\t\t\t\thasMaterial,\n\t\t\t\thasFaceVertexUv,\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\t\tuvLayer, uv, u, v,\n\n\t\t\t\tfaces = json.faces,\n\t\t\t\tvertices = json.vertices,\n\t\t\t\tnormals = json.normals,\n\t\t\t\tcolors = json.colors,\n\n\t\t\t\tnUvLayers = 0;\n\n\t\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t\t// disregard empty arrays\n\n\t\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0;\n\t\t\t\tzLength = vertices.length;\n\n\t\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\t\tvertex = new THREE.Vector3();\n\n\t\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0;\n\t\t\t\tzLength = faces.length;\n\n\t\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\t\ttype = faces[ offset ++ ];\n\n\n\t\t\t\t\tisQuad              = isBitSet( type, 0 );\n\t\t\t\t\thasMaterial         = isBitSet( type, 1 );\n\t\t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\n\t\t\t\t\thasFaceNormal       = isBitSet( type, 4 );\n\t\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\n\t\t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\n\n\t\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\t\tfaceA = new THREE.Face3();\n\t\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\t\tfaceB = new THREE.Face3();\n\t\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\n\n\t\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\t\tnormal = new THREE.Vector3(\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tface = new THREE.Face3();\n\t\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\n\n\t\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\t\tnormal = new THREE.Vector3(\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseSkin() {\n\n\t\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\t\tvar x =                               json.skinWeights[ i ];\n\t\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\t\tvar a =                               json.skinIndices[ i ];\n\t\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.bones = json.bones;\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseMorphing( scale ) {\n\n\t\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\t\tvar vertex = new THREE.Vector3();\n\t\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseAnimations() {\n\n\t\t\t\tvar outputAnimations = [];\n\n\t\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\t\tvar animations = [];\n\n\t\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\t\tanimations.push( json.animation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\t\tvar clip = THREE.AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t\t}\n\n\t\t\t\t// parse implicit morph animations\n\t\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\t\tvar morphAnimationClips = THREE.AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t\t}\n\n\t\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t\t}\n\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\t\treturn { geometry: geometry };\n\n\t\t\t} else {\n\n\t\t\t\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\n\n\t\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t// File:src/loaders/LoadingManager.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t};\n\n\tTHREE.DefaultLoadingManager = new THREE.LoadingManager();\n\n\t// File:src/loaders/BufferGeometryLoader.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.BufferGeometryLoader = function ( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t};\n\n\tObject.assign( THREE.BufferGeometryLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar geometry = new THREE.BufferGeometry();\n\n\t\t\tvar index = json.data.index;\n\n\t\t\tvar TYPED_ARRAYS = {\n\t\t\t\t'Int8Array': Int8Array,\n\t\t\t\t'Uint8Array': Uint8Array,\n\t\t\t\t'Uint8ClampedArray': Uint8ClampedArray,\n\t\t\t\t'Int16Array': Int16Array,\n\t\t\t\t'Uint16Array': Uint16Array,\n\t\t\t\t'Int32Array': Int32Array,\n\t\t\t\t'Uint32Array': Uint32Array,\n\t\t\t\t'Float32Array': Float32Array,\n\t\t\t\t'Float64Array': Float64Array\n\t\t\t};\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\t\tgeometry.setIndex( new THREE.BufferAttribute( typedArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tvar attributes = json.data.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\t\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\n\t\t\t}\n\n\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\t\tif ( groups !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\t\tvar center = new THREE.Vector3();\n\n\t\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\t// File:src/loaders/MaterialLoader.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.MaterialLoader = function ( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\t\tthis.textures = {};\n\n\t};\n\n\tObject.assign( THREE.MaterialLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTextures: function ( value ) {\n\n\t\t\tthis.textures = value;\n\n\t\t},\n\n\t\tgetTexture: function ( name ) {\n\n\t\t\tvar textures = this.textures;\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar material = new THREE[ json.type ];\n\n\t\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\n\t\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\t\tif ( json.shading !== undefined ) material.shading = json.shading;\n\t\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\n\t\t\t// for PointsMaterial\n\t\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t\t// maps\n\n\t\t\tif ( json.map !== undefined ) material.map = this.getTexture( json.map );\n\n\t\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\t\tmaterial.alphaMap = this.getTexture( json.alphaMap );\n\t\t\t\tmaterial.transparent = true;\n\n\t\t\t}\n\n\t\t\tif ( json.bumpMap !== undefined ) material.bumpMap = this.getTexture( json.bumpMap );\n\t\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\t\tif ( json.normalMap !== undefined ) material.normalMap = this.getTexture( json.normalMap );\n\t\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\t\tvar normalScale = json.normalScale;\n\n\t\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.normalScale = new THREE.Vector2().fromArray( normalScale );\n\n\t\t\t}\n\n\t\t\tif ( json.displacementMap !== undefined ) material.displacementMap = this.getTexture( json.displacementMap );\n\t\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = this.getTexture( json.roughnessMap );\n\t\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = this.getTexture( json.metalnessMap );\n\n\t\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = this.getTexture( json.emissiveMap );\n\t\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\t\tif ( json.specularMap !== undefined ) material.specularMap = this.getTexture( json.specularMap );\n\n\t\t\tif ( json.envMap !== undefined ) {\n\n\t\t\t\tmaterial.envMap = this.getTexture( json.envMap );\n\t\t\t\tmaterial.combine = THREE.MultiplyOperation;\n\n\t\t\t}\n\n\t\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\t\tif ( json.lightMap !== undefined ) material.lightMap = this.getTexture( json.lightMap );\n\t\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\t\tif ( json.aoMap !== undefined ) material.aoMap = this.getTexture( json.aoMap );\n\t\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\t\t// MultiMaterial\n\n\t\t\tif ( json.materials !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\n\n\t\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn material;\n\n\t\t}\n\n\t} );\n\n\t// File:src/loaders/ObjectLoader.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.ObjectLoader = function ( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\t\tthis.texturePath = '';\n\n\t};\n\n\tObject.assign( THREE.ObjectLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( this.texturePath === '' ) {\n\n\t\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\n\n\t\t\t}\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tscope.parse( JSON.parse( text ), onLoad );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTexturePath: function ( value ) {\n\n\t\t\tthis.texturePath = value;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\n\t\t},\n\n\t\tparse: function ( json, onLoad ) {\n\n\t\t\tvar geometries = this.parseGeometries( json.geometries );\n\n\t\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t\t} );\n\n\t\t\tvar textures  = this.parseTextures( json.textures, images );\n\t\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\t\tif ( json.animations ) {\n\n\t\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t\t}\n\n\t\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t\t}\n\n\t\t\treturn object;\n\n\t\t},\n\n\t\tparseGeometries: function ( json ) {\n\n\t\t\tvar geometries = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar geometryLoader = new THREE.JSONLoader();\n\t\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar geometry;\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new THREE [ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\n\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\n\t\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometries;\n\n\t\t},\n\n\t\tparseMaterials: function ( json, textures ) {\n\n\t\t\tvar materials = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar loader = new THREE.MaterialLoader();\n\t\t\t\tloader.setTextures( textures );\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar material = loader.parse( json[ i ] );\n\t\t\t\t\tmaterials[ material.uuid ] = material;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materials;\n\n\t\t},\n\n\t\tparseAnimations: function ( json ) {\n\n\t\t\tvar animations = [];\n\n\t\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tvar clip = THREE.AnimationClip.parse( json[ i ] );\n\n\t\t\t\tanimations.push( clip );\n\n\t\t\t}\n\n\t\t\treturn animations;\n\n\t\t},\n\n\t\tparseImages: function ( json, onLoad ) {\n\n\t\t\tvar scope = this;\n\t\t\tvar images = {};\n\n\t\t\tfunction loadImage( url ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\treturn loader.load( url, function () {\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\t\tvar manager = new THREE.LoadingManager( onLoad );\n\n\t\t\t\tvar loader = new THREE.ImageLoader( manager );\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar image = json[ i ];\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\n\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn images;\n\n\t\t},\n\n\t\tparseTextures: function ( json, images ) {\n\n\t\t\tfunction parseConstant( value ) {\n\n\t\t\t\tif ( typeof( value ) === 'number' ) return value;\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\t\treturn THREE[ value ];\n\n\t\t\t}\n\n\t\t\tvar textures = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar texture = new THREE.Texture( images[ data.image ] );\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping );\n\n\t\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ] );\n\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter );\n\t\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter );\n\t\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn textures;\n\n\t\t},\n\n\t\tparseObject: function () {\n\n\t\t\tvar matrix = new THREE.Matrix4();\n\n\t\t\treturn function parseObject( data, geometries, materials ) {\n\n\t\t\t\tvar object;\n\n\t\t\t\tfunction getGeometry( name ) {\n\n\t\t\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn geometries[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tfunction getMaterial( name ) {\n\n\t\t\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn materials[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'Scene':\n\n\t\t\t\t\t\tobject = new THREE.Scene();\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'AmbientLight':\n\n\t\t\t\t\t\tobject = new THREE.AmbientLight( data.color, data.intensity );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DirectionalLight':\n\n\t\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\n\t\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\n\t\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\n\t\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Mesh':\n\n\t\t\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\t\t\tobject = new THREE.SkinnedMesh( geometry, material );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tobject = new THREE.Mesh( geometry, material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LOD':\n\n\t\t\t\t\t\tobject = new THREE.LOD();\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Line':\n\n\t\t\t\t\t\tobject = new THREE.Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointCloud':\n\t\t\t\t\tcase 'Points':\n\n\t\t\t\t\t\tobject = new THREE.Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Sprite':\n\n\t\t\t\t\t\tobject = new THREE.Sprite( getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Group':\n\n\t\t\t\t\t\tobject = new THREE.Group();\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tobject = new THREE.Object3D();\n\n\t\t\t\t}\n\n\t\t\t\tobject.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) object.name = data.name;\n\t\t\t\tif ( data.matrix !== undefined ) {\n\n\t\t\t\t\tmatrix.fromArray( data.matrix );\n\t\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\n\t\t\t\tif ( data.children !== undefined ) {\n\n\t\t\t\t\tfor ( var child in data.children ) {\n\n\t\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.type === 'LOD' ) {\n\n\t\t\t\t\tvar levels = data.levels;\n\n\t\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\t\t\tvar level = levels[ l ];\n\t\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn object;\n\n\t\t\t};\n\n\t\t}()\n\n\t} );\n\n\t// File:src/loaders/TextureLoader.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.TextureLoader = function ( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t};\n\n\tObject.assign( THREE.TextureLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar texture = new THREE.Texture();\n\n\t\t\tvar loader = new THREE.ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( image ) {\n\n\t\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\t\tvar isJPEG = url.search( /\\.(jpg|jpeg)$/ ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\t\ttexture.format = isJPEG ? THREE.RGBFormat : THREE.RGBAFormat;\n\t\t\t\ttexture.image = image;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\t\tonLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t// File:src/loaders/CubeTextureLoader.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.CubeTextureLoader = function ( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t};\n\n\tObject.assign( THREE.CubeTextureLoader.prototype, {\n\n\t\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\t\tvar texture = new THREE.CubeTexture();\n\n\t\t\tvar loader = new THREE.ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\t\tloaded ++;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, undefined, onError );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t// File:src/loaders/BinaryTextureLoader.js\n\n\t/**\n\t * @author Nikos M. / https://github.com/foo123/\n\t *\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n\t */\n\n\tTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function ( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t\t// override in sub classes\n\t\tthis._parser = null;\n\n\t};\n\n\tObject.assign( THREE.BinaryTextureLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar texture = new THREE.DataTexture();\n\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\t\tif ( ! texData ) return;\n\n\t\t\t\tif ( undefined !== texData.image ) {\n\n\t\t\t\t\ttexture.image = texData.image;\n\n\t\t\t\t} else if ( undefined !== texData.data ) {\n\n\t\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\n\t\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\n\n\t\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\n\t\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\n\n\t\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n\t\t\t\tif ( undefined !== texData.format ) {\n\n\t\t\t\t\ttexture.format = texData.format;\n\n\t\t\t\t}\n\t\t\t\tif ( undefined !== texData.type ) {\n\n\t\t\t\t\ttexture.type = texData.type;\n\n\t\t\t\t}\n\n\t\t\t\tif ( undefined !== texData.mipmaps ) {\n\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( 1 === texData.mipmapCount ) {\n\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t\t}, onProgress, onError );\n\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t// File:src/loaders/CompressedTextureLoader.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\n\t */\n\n\tTHREE.CompressedTextureLoader = function ( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t\t// override in sub classes\n\t\tthis._parser = null;\n\n\t};\n\n\tObject.assign( THREE.CompressedTextureLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar images = [];\n\n\t\t\tvar texture = new THREE.CompressedTexture();\n\t\t\ttexture.image = images;\n\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\t\timages[ i ] = {\n\t\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t\t};\n\n\t\t\t\t\tloaded += 1;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\n\n\t\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\tvar loaded = 0;\n\n\t\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\t\tloadTexture( i );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\n\n\t\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t// File:src/materials/Material.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.Material = function () {\n\n\t\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\n\n\t\tthis.uuid = THREE.Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.fog = true;\n\t\tthis.lights = true;\n\n\t\tthis.blending = THREE.NormalBlending;\n\t\tthis.side = THREE.FrontSide;\n\t\tthis.shading = THREE.SmoothShading; // THREE.FlatShading, THREE.SmoothShading\n\t\tthis.vertexColors = THREE.NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = THREE.SrcAlphaFactor;\n\t\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = THREE.AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = THREE.LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipShadows = false;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.alphaTest = 0;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n\t\tthis.visible = true;\n\n\t\tthis._needsUpdate = true;\n\n\t};\n\n\tTHREE.Material.prototype = {\n\n\t\tconstructor: THREE.Material,\n\n\t\tget needsUpdate() {\n\n\t\t\treturn this._needsUpdate;\n\n\t\t},\n\n\t\tset needsUpdate( value ) {\n\n\t\t\tif ( value === true ) this.update();\n\t\t\tthis._needsUpdate = value;\n\n\t\t},\n\n\t\tsetValues: function ( values ) {\n\n\t\t\tif ( values === undefined ) return;\n\n\t\t\tfor ( var key in values ) {\n\n\t\t\t\tvar newValue = values[ key ];\n\n\t\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar currentValue = this[ key ];\n\n\t\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tif ( currentValue instanceof THREE.Color ) {\n\n\t\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\n\n\t\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t\t} else if ( key === 'overdraw' ) {\n\n\t\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\n\t\t\t\t\tthis[ key ] = Number( newValue );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar isRoot = meta === undefined;\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tmeta = {\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.4,\n\t\t\t\t\ttype: 'Material',\n\t\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Material serialization\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.color instanceof THREE.Color ) data.color = this.color.getHex();\n\n\t\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\t\tif ( this.emissive instanceof THREE.Color ) data.emissive = this.emissive.getHex();\n\t\t\tif ( this.specular instanceof THREE.Color ) data.specular = this.specular.getHex();\n\t\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\n\t\t\tif ( this.map instanceof THREE.Texture ) data.map = this.map.toJSON( meta ).uuid;\n\t\t\tif ( this.alphaMap instanceof THREE.Texture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\t\tif ( this.lightMap instanceof THREE.Texture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tif ( this.bumpMap instanceof THREE.Texture ) {\n\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t\t}\n\t\t\tif ( this.normalMap instanceof THREE.Texture ) {\n\n\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t\t}\n\t\t\tif ( this.displacementMap instanceof THREE.Texture ) {\n\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t\t}\n\t\t\tif ( this.roughnessMap instanceof THREE.Texture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\t\tif ( this.metalnessMap instanceof THREE.Texture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.emissiveMap instanceof THREE.Texture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\t\tif ( this.specularMap instanceof THREE.Texture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.envMap instanceof THREE.Texture ) {\n\n\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t\t}\n\n\t\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\t\tif ( this.blending !== THREE.NormalBlending ) data.blending = this.blending;\n\t\t\tif ( this.shading !== THREE.SmoothShading ) data.shading = this.shading;\n\t\t\tif ( this.side !== THREE.FrontSide ) data.side = this.side;\n\t\t\tif ( this.vertexColors !== THREE.NoColors ) data.vertexColors = this.vertexColors;\n\n\t\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\t\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\t\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\n\t\t\t// TODO: Copied from Object3D.toJSON\n\n\t\t\tfunction extractFromCache ( cache ) {\n\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.fog = source.fog;\n\t\t\tthis.lights = source.lights;\n\n\t\t\tthis.blending = source.blending;\n\t\t\tthis.side = source.side;\n\t\t\tthis.shading = source.shading;\n\t\t\tthis.vertexColors = source.vertexColors;\n\n\t\t\tthis.opacity = source.opacity;\n\t\t\tthis.transparent = source.transparent;\n\n\t\t\tthis.blendSrc = source.blendSrc;\n\t\t\tthis.blendDst = source.blendDst;\n\t\t\tthis.blendEquation = source.blendEquation;\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\t\tthis.depthFunc = source.depthFunc;\n\t\t\tthis.depthTest = source.depthTest;\n\t\t\tthis.depthWrite = source.depthWrite;\n\n\t\t\tthis.colorWrite = source.colorWrite;\n\n\t\t\tthis.precision = source.precision;\n\n\t\t\tthis.polygonOffset = source.polygonOffset;\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\t\tthis.alphaTest = source.alphaTest;\n\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\t\tthis.overdraw = source.overdraw;\n\n\t\t\tthis.visible = source.visible;\n\t\t\tthis.clipShadows = source.clipShadows;\n\n\t\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\t\tdstPlanes = null;\n\n\t\t\tif ( srcPlanes !== null ) {\n\n\t\t\t\tvar n = srcPlanes.length;\n\t\t\t\tdstPlanes = new Array( n );\n\n\t\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t\tthis.clippingPlanes = dstPlanes;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'update' } );\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t};\n\n\tObject.assign( THREE.Material.prototype, THREE.EventDispatcher.prototype );\n\n\tTHREE.MaterialIdCount = 0;\n\n\t// File:src/materials/LineBasicMaterial.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *  linecap: \"round\",\n\t *  linejoin: \"round\"\n\t * }\n\t */\n\n\tTHREE.LineBasicMaterial = function ( parameters ) {\n\n\t\tTHREE.Material.call( this );\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new THREE.Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t};\n\n\tTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\n\tTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\n\n\tTHREE.LineBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tTHREE.Material.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/materials/LineDashedMaterial.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *\n\t *  scale: <float>,\n\t *  dashSize: <float>,\n\t *  gapSize: <float>\n\t * }\n\t */\n\n\tTHREE.LineDashedMaterial = function ( parameters ) {\n\n\t\tTHREE.Material.call( this );\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.color = new THREE.Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t};\n\n\tTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\n\tTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\n\n\tTHREE.LineDashedMaterial.prototype.copy = function ( source ) {\n\n\t\tTHREE.Material.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/materials/MeshBasicMaterial.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  shading: THREE.SmoothShading,\n\t *  depthTest: <bool>,\n\t *  depthWrite: <bool>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>\n\t * }\n\t */\n\n\tTHREE.MeshBasicMaterial = function ( parameters ) {\n\n\t\tTHREE.Material.call( this );\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new THREE.Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = THREE.MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t};\n\n\tTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\n\tTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\n\n\tTHREE.MeshBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tTHREE.Material.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/materials/MeshDepthMaterial.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / https://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t * }\n\t */\n\n\tTHREE.MeshDepthMaterial = function ( parameters ) {\n\n\t\tTHREE.Material.call( this );\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = THREE.BasicDepthPacking;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t};\n\n\tTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\n\tTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\n\n\tTHREE.MeshDepthMaterial.prototype.copy = function ( source ) {\n\n\t\tTHREE.Material.prototype.copy.call( this, source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/materials/MeshLambertMaterial.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tTHREE.MeshLambertMaterial = function ( parameters ) {\n\n\t\tTHREE.Material.call( this );\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new THREE.Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new THREE.Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = THREE.MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t};\n\n\tTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\n\tTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\n\n\tTHREE.MeshLambertMaterial.prototype.copy = function ( source ) {\n\n\t\tTHREE.Material.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/materials/MeshNormalMaterial.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * parameters = {\n\t *  opacity: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t * }\n\t */\n\n\tTHREE.MeshNormalMaterial = function ( parameters ) {\n\n\t\tTHREE.Material.call( this, parameters );\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t};\n\n\tTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\n\tTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\n\n\tTHREE.MeshNormalMaterial.prototype.copy = function ( source ) {\n\n\t\tTHREE.Material.prototype.copy.call( this, source );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/materials/MeshPhongMaterial.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  specular: <hex>,\n\t *  shininess: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tTHREE.MeshPhongMaterial = function ( parameters ) {\n\n\t\tTHREE.Material.call( this );\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new THREE.Color( 0xffffff ); // diffuse\n\t\tthis.specular = new THREE.Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new THREE.Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalScale = new THREE.Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = THREE.MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t};\n\n\tTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\n\tTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\n\n\tTHREE.MeshPhongMaterial.prototype.copy = function ( source ) {\n\n\t\tTHREE.Material.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/materials/MeshStandardMaterial.js\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  roughness: <float>,\n\t *  metalness: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  roughnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  metalnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  envMapIntensity: <float>\n\t *\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tTHREE.MeshStandardMaterial = function ( parameters ) {\n\n\t\tTHREE.Material.call( this );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new THREE.Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 0.5;\n\t\tthis.metalness = 0.5;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new THREE.Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalScale = new THREE.Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t};\n\n\tTHREE.MeshStandardMaterial.prototype = Object.create( THREE.Material.prototype );\n\tTHREE.MeshStandardMaterial.prototype.constructor = THREE.MeshStandardMaterial;\n\n\tTHREE.MeshStandardMaterial.prototype.copy = function ( source ) {\n\n\t\tTHREE.Material.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/materials/MeshPhysicalMaterial.js\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  reflectivity: <float>\n\t * }\n\t */\n\n\tTHREE.MeshPhysicalMaterial = function ( parameters ) {\n\n\t\tTHREE.MeshStandardMaterial.call( this );\n\n\t\tthis.defines = { 'PHYSICAL': '' };\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\t\tthis.clearCoat = 0.0;\n\t\tthis.clearCoatRoughness = 0.0;\n\n\t\tthis.setValues( parameters );\n\n\t};\n\n\tTHREE.MeshPhysicalMaterial.prototype = Object.create( THREE.MeshStandardMaterial.prototype );\n\tTHREE.MeshPhysicalMaterial.prototype.constructor = THREE.MeshPhysicalMaterial;\n\n\tTHREE.MeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\t\tTHREE.MeshStandardMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'PHYSICAL': '' };\n\n\t\tthis.reflectivity = source.reflectivity;\n\n\t\tthis.clearCoat = source.clearCoat;\n\t\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/materials/MultiMaterial.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.MultiMaterial = function ( materials ) {\n\n\t\tthis.uuid = THREE.Math.generateUUID();\n\n\t\tthis.type = 'MultiMaterial';\n\n\t\tthis.materials = materials instanceof Array ? materials : [];\n\n\t\tthis.visible = true;\n\n\t};\n\n\tTHREE.MultiMaterial.prototype = {\n\n\t\tconstructor: THREE.MultiMaterial,\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar output = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.2,\n\t\t\t\t\ttype: 'material',\n\t\t\t\t\tgenerator: 'MaterialExporter'\n\t\t\t\t},\n\t\t\t\tuuid: this.uuid,\n\t\t\t\ttype: this.type,\n\t\t\t\tmaterials: []\n\t\t\t};\n\n\t\t\tvar materials = this.materials;\n\n\t\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\n\n\t\t\t\tvar material = materials[ i ].toJSON( meta );\n\t\t\t\tdelete material.metadata;\n\n\t\t\t\toutput.materials.push( material );\n\n\t\t\t}\n\n\t\t\toutput.visible = this.visible;\n\n\t\t\treturn output;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\tvar material = new this.constructor();\n\n\t\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\n\n\t\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tmaterial.visible = this.visible;\n\n\t\t\treturn material;\n\n\t\t}\n\n\t};\n\n\t// File:src/materials/PointsMaterial.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  size: <float>,\n\t *  sizeAttenuation: <bool>\n\t * }\n\t */\n\n\tTHREE.PointsMaterial = function ( parameters ) {\n\n\t\tTHREE.Material.call( this );\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new THREE.Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t};\n\n\tTHREE.PointsMaterial.prototype = Object.create( THREE.Material.prototype );\n\tTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\n\n\tTHREE.PointsMaterial.prototype.copy = function ( source ) {\n\n\t\tTHREE.Material.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/materials/ShaderMaterial.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  defines: { \"label\" : \"value\" },\n\t *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n\t *\n\t *  fragmentShader: <string>,\n\t *  vertexShader: <string>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  lights: <bool>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tTHREE.ShaderMaterial = function ( parameters ) {\n\n\t\tTHREE.Material.call( this );\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\n\t\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\t\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.skinning = false; // set to use skinning attribute streams\n\t\tthis.morphTargets = false; // set to use morph targets\n\t\tthis.morphNormals = false; // set to use morph normals\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t};\n\n\tTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\n\tTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\n\n\tTHREE.ShaderMaterial.prototype.copy = function ( source ) {\n\n\t\tTHREE.Material.prototype.copy.call( this, source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = THREE.UniformsUtils.clone( source.uniforms );\n\n\t\tthis.defines = source.defines;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.skinning = source.skinning;\n\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.extensions = source.extensions;\n\n\t\treturn this;\n\n\t};\n\n\tTHREE.ShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\t\tvar data = THREE.Material.prototype.toJSON.call( this, meta );\n\n\t\tdata.uniforms = this.uniforms;\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\treturn data;\n\n\t};\n\n\t// File:src/materials/RawShaderMaterial.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.RawShaderMaterial = function ( parameters ) {\n\n\t\tTHREE.ShaderMaterial.call( this, parameters );\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t};\n\n\tTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\n\tTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\n\n\t// File:src/materials/SpriteMaterial.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *\tuvOffset: new THREE.Vector2(),\n\t *\tuvScale: new THREE.Vector2()\n\t * }\n\t */\n\n\tTHREE.SpriteMaterial = function ( parameters ) {\n\n\t\tTHREE.Material.call( this );\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new THREE.Color( 0xffffff );\n\t\tthis.map = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t};\n\n\tTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\n\tTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\n\n\tTHREE.SpriteMaterial.prototype.copy = function ( source ) {\n\n\t\tTHREE.Material.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.map = source.map;\n\n\t\tthis.rotation = source.rotation;\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/materials/ShadowMaterial.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.ShadowMaterial = function () {\n\n\t\tTHREE.ShaderMaterial.call( this, {\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\n\t\t\t\tTHREE.UniformsLib[ \"lights\" ],\n\t\t\t\t{\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t}\n\t\t\t] ),\n\t\t\tvertexShader: THREE.ShaderChunk[ 'shadow_vert' ],\n\t\t\tfragmentShader: THREE.ShaderChunk[ 'shadow_frag' ]\n\t\t} );\n\n\t\tthis.lights = true;\n\t\tthis.transparent = true;\n\n\t\tObject.defineProperties( this, {\n\t\t\topacity: {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function () {\n\t\t\t\t\treturn this.uniforms.opacity.value;\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\t\t\t\t\tthis.uniforms.opacity.value = value;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t};\n\n\tTHREE.ShadowMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\n\tTHREE.ShadowMaterial.prototype.constructor = THREE.ShadowMaterial;\n\n\t// File:src/textures/Texture.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t */\n\n\tTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\n\n\t\tthis.uuid = THREE.Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.sourceFile = '';\n\n\t\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\n\n\t\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\n\t\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\n\n\t\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\t\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\n\t\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\n\n\t\tthis.offset = new THREE.Vector2( 0, 0 );\n\t\tthis.repeat = new THREE.Vector2( 1, 1 );\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding !== undefined ? encoding :  THREE.LinearEncoding;\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t};\n\n\tTHREE.Texture.DEFAULT_IMAGE = undefined;\n\tTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\n\n\tTHREE.Texture.prototype = {\n\n\t\tconstructor: THREE.Texture,\n\n\t\tset needsUpdate( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.image = source.image;\n\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\t\tthis.mapping = source.mapping;\n\n\t\t\tthis.wrapS = source.wrapS;\n\t\t\tthis.wrapT = source.wrapT;\n\n\t\t\tthis.magFilter = source.magFilter;\n\t\t\tthis.minFilter = source.minFilter;\n\n\t\t\tthis.anisotropy = source.anisotropy;\n\n\t\t\tthis.format = source.format;\n\t\t\tthis.type = source.type;\n\n\t\t\tthis.offset.copy( source.offset );\n\t\t\tthis.repeat.copy( source.repeat );\n\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\t\tthis.flipY = source.flipY;\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\t\tthis.encoding = source.encoding;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t\t}\n\n\t\t\tfunction getDataURL( image ) {\n\n\t\t\t\tvar canvas;\n\n\t\t\t\tif ( image.toDataURL !== undefined ) {\n\n\t\t\t\t\tcanvas = image;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\t\tcanvas.width = image.width;\n\t\t\t\t\tcanvas.height = image.height;\n\n\t\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar output = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.4,\n\t\t\t\t\ttype: 'Texture',\n\t\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t\t},\n\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tname: this.name,\n\n\t\t\t\tmapping: this.mapping,\n\n\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\t\tminFilter: this.minFilter,\n\t\t\t\tmagFilter: this.magFilter,\n\t\t\t\tanisotropy: this.anisotropy,\n\n\t\t\t\tflipY: this.flipY\n\t\t\t};\n\n\t\t\tif ( this.image !== undefined ) {\n\n\t\t\t\t// TODO: Move to THREE.Image\n\n\t\t\t\tvar image = this.image;\n\n\t\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\t\timage.uuid = THREE.Math.generateUUID(); // UGH\n\n\t\t\t\t}\n\n\t\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\t\turl: getDataURL( image )\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\toutput.image = image.uuid;\n\n\t\t\t}\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t\treturn output;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t},\n\n\t\ttransformUv: function ( uv ) {\n\n\t\t\tif ( this.mapping !== THREE.UVMapping )  return;\n\n\t\t\tuv.multiply( this.repeat );\n\t\t\tuv.add( this.offset );\n\n\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\t\tcase THREE.RepeatWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\t\tcase THREE.RepeatWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.flipY ) {\n\n\t\t\t\tuv.y = 1 - uv.y;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tObject.assign( THREE.Texture.prototype, THREE.EventDispatcher.prototype );\n\n\tTHREE.TextureIdCount = 0;\n\n\t// File:src/textures/DepthTexture.js\n\n\t/**\n\t * @author Matt DesLauriers / @mattdesl\n\t */\n\n\tTHREE.DepthTexture = function ( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\n\n\t  THREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, THREE.DepthFormat, type, anisotropy );\n\n\t  this.image = { width: width, height: height };\n\n\t  this.type = type !== undefined ? type : THREE.UnsignedShortType;\n\n\t  this.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\n\t  this.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\n\n\t  this.flipY = false;\n\t  this.generateMipmaps  = false;\n\n\t};\n\n\tTHREE.DepthTexture.prototype = Object.create( THREE.Texture.prototype );\n\tTHREE.DepthTexture.prototype.constructor = THREE.DepthTexture;\n\n\t// File:src/textures/CanvasTexture.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.CanvasTexture = function ( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTHREE.Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.needsUpdate = true;\n\n\t};\n\n\tTHREE.CanvasTexture.prototype = Object.create( THREE.Texture.prototype );\n\tTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture;\n\n\t// File:src/textures/CubeTexture.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\n\n\t\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.flipY = false;\n\n\t};\n\n\tTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\n\tTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\n\n\tObject.defineProperty( THREE.CubeTexture.prototype, 'images', {\n\n\t\tget: function () {\n\n\t\t\treturn this.image;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.image = value;\n\n\t\t}\n\n\t} );\n\n\t// File:src/textures/CompressedTexture.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t};\n\n\tTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\n\tTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\n\n\t// File:src/textures/DataTexture.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps  = false;\n\n\t};\n\n\tTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\n\tTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\n\n\t// File:src/textures/VideoTexture.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.generateMipmaps = false;\n\n\t\tvar scope = this;\n\n\t\tfunction update() {\n\n\t\t\trequestAnimationFrame( update );\n\n\t\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\t\tscope.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tupdate();\n\n\t};\n\n\tTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\n\tTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\n\n\t// File:src/objects/Group.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.Group = function () {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.type = 'Group';\n\n\t};\n\n\tTHREE.Group.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\t\tconstructor: THREE.Group\n\n\t} );\n\n\t// File:src/objects/Points.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.Points = function ( geometry, material ) {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new THREE.PointsMaterial( { color: Math.random() * 0xffffff } );\n\n\t};\n\n\tTHREE.Points.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\t\tconstructor: THREE.Points,\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new THREE.Matrix4();\n\t\t\tvar ray = new THREE.Ray();\n\t\t\tvar sphere = new THREE.Sphere();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar object = this;\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\t\tvar position = new THREE.Vector3();\n\n\t\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\n\t\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t// File:src/objects/Line.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.Line = function ( geometry, material, mode ) {\n\n\t\tif ( mode === 1 ) {\n\n\t\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\n\t\t\treturn new THREE.LineSegments( geometry, material );\n\n\t\t}\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\t};\n\n\tTHREE.Line.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\t\tconstructor: THREE.Line,\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new THREE.Matrix4();\n\t\t\tvar ray = new THREE.Ray();\n\t\t\tvar sphere = new THREE.Sphere();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar precision = raycaster.linePrecision;\n\t\t\t\tvar precisionSq = precision * precision;\n\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\tvar vStart = new THREE.Vector3();\n\t\t\t\tvar vEnd = new THREE.Vector3();\n\t\t\t\tvar interSegment = new THREE.Vector3();\n\t\t\t\tvar interRay = new THREE.Vector3();\n\t\t\t\tvar step = this instanceof THREE.LineSegments ? 2 : 1;\n\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t// File:src/objects/LineSegments.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.LineSegments = function ( geometry, material ) {\n\n\t\tTHREE.Line.call( this, geometry, material );\n\n\t\tthis.type = 'LineSegments';\n\n\t};\n\n\tTHREE.LineSegments.prototype = Object.assign( Object.create( THREE.Line.prototype ), {\n\n\t\tconstructor: THREE.LineSegments\n\n\t} );\n\n\t// File:src/objects/Mesh.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author jonobr1 / http://jonobr1.com/\n\t */\n\n\tTHREE.Mesh = function ( geometry, material ) {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\t\tthis.drawMode = THREE.TrianglesDrawMode;\n\n\t\tthis.updateMorphTargets();\n\n\t};\n\n\tTHREE.Mesh.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\t\tconstructor: THREE.Mesh,\n\n\t\tsetDrawMode: function ( value ) {\n\n\t\t\tthis.drawMode = value;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tTHREE.Object3D.prototype.copy.call( this, source );\n\n\t\t\tthis.drawMode = source.drawMode;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateMorphTargets: function () {\n\n\t\t\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\n\n\t\t\t\tthis.morphTargetBase = - 1;\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetMorphTargetIndexByName: function ( name ) {\n\n\t\t\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\n\n\t\t\t\treturn this.morphTargetDictionary[ name ];\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\n\n\t\t\treturn 0;\n\n\t\t},\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new THREE.Matrix4();\n\t\t\tvar ray = new THREE.Ray();\n\t\t\tvar sphere = new THREE.Sphere();\n\n\t\t\tvar vA = new THREE.Vector3();\n\t\t\tvar vB = new THREE.Vector3();\n\t\t\tvar vC = new THREE.Vector3();\n\n\t\t\tvar tempA = new THREE.Vector3();\n\t\t\tvar tempB = new THREE.Vector3();\n\t\t\tvar tempC = new THREE.Vector3();\n\n\t\t\tvar uvA = new THREE.Vector2();\n\t\t\tvar uvB = new THREE.Vector2();\n\t\t\tvar uvC = new THREE.Vector2();\n\n\t\t\tvar barycoord = new THREE.Vector3();\n\n\t\t\tvar intersectionPoint = new THREE.Vector3();\n\t\t\tvar intersectionPointWorld = new THREE.Vector3();\n\n\t\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\n\n\t\t\t\tTHREE.Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\n\n\t\t\t\tuv1.multiplyScalar( barycoord.x );\n\t\t\t\tuv2.multiplyScalar( barycoord.y );\n\t\t\t\tuv3.multiplyScalar( barycoord.z );\n\n\t\t\t\tuv1.add( uv2 ).add( uv3 );\n\n\t\t\t\treturn uv1.clone();\n\n\t\t\t}\n\n\t\t\tfunction checkIntersection( object, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\t\tvar intersect;\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( material.side === THREE.BackSide ) {\n\n\t\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== THREE.DoubleSide, point );\n\n\t\t\t\t}\n\n\t\t\t\tif ( intersect === null ) return null;\n\n\t\t\t\tintersectionPointWorld.copy( point );\n\t\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\t\treturn {\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\t\tobject: object\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tfunction checkBufferGeometryIntersection( object, raycaster, ray, positions, uvs, a, b, c ) {\n\n\t\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\t\tvar intersection = checkIntersection( object, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\tif ( uvs ) {\n\n\t\t\t\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\t\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\t\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint,  vA, vB, vC,  uvA, uvB, uvC );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection.face = new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) );\n\t\t\t\t\tintersection.faceIndex = a;\n\n\t\t\t\t}\n\n\t\t\t\treturn intersection;\n\n\t\t\t}\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar material = this.material;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t\tif ( material === undefined ) return;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\t// Check boundingBox before continuing\n\n\t\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t\t}\n\n\t\t\t\tvar uvs, intersection;\n\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\tvar a, b, c;\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\n\n\t\t\t\t\t\tuvs = attributes.uv.array;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\ta = indices[ i ];\n\t\t\t\t\t\t\tb = indices[ i + 1 ];\n\t\t\t\t\t\t\tc = indices[ i + 2 ];\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\n\n\t\t\t\t\t\t\ta = i / 3;\n\t\t\t\t\t\t\tb = a + 1;\n\t\t\t\t\t\t\tc = a + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.index = a; // triangle number in positions buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\t\tvar isFaceMaterial = material instanceof THREE.MultiMaterial;\n\t\t\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\n\n\t\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\n\t\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n\t\t\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\t\t\tvC.set( 0, 0, 0 );\n\n\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n\t\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n\t\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n\t\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvA.add( fvA );\n\t\t\t\t\t\t\tvB.add( fvB );\n\t\t\t\t\t\t\tvC.add( fvC );\n\n\t\t\t\t\t\t\tfvA = vA;\n\t\t\t\t\t\t\tfvB = vB;\n\t\t\t\t\t\t\tfvC = vC;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection = checkIntersection( this, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tif ( uvs ) {\n\n\t\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t// File:src/objects/Bone.js\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tTHREE.Bone = function ( skin ) {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.type = 'Bone';\n\n\t\tthis.skin = skin;\n\n\t};\n\n\tTHREE.Bone.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\t\tconstructor: THREE.Bone,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tTHREE.Object3D.prototype.copy.call( this, source );\n\n\t\t\tthis.skin = source.skin;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t// File:src/objects/Skeleton.js\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author michael guerrero / http://realitymeltdown.com\n\t * @author ikerr / http://verold.com\n\t */\n\n\tTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\n\n\t\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\n\n\t\tthis.identityMatrix = new THREE.Matrix4();\n\n\t\t// copy the bone array\n\n\t\tbones = bones || [];\n\n\t\tthis.bones = bones.slice( 0 );\n\n\t\t// create a bone texture or an array of floats\n\n\t\tif ( this.useVertexTexture ) {\n\n\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\tsize = THREE.Math.nextPowerOfTwo( Math.ceil( size ) );\n\t\t\tsize = Math.max( size, 4 );\n\n\t\t\tthis.boneTextureWidth = size;\n\t\t\tthis.boneTextureHeight = size;\n\n\t\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\n\t\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\n\n\t\t} else {\n\n\t\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\n\n\t\t}\n\n\t\t// use the supplied bone inverses or calculate the inverses\n\n\t\tif ( boneInverses === undefined ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new THREE.Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tObject.assign( THREE.Skeleton.prototype, {\n\n\t\tcalculateInverses: function () {\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t\tvar inverse = new THREE.Matrix4();\n\n\t\t\t\tif ( this.bones[ b ] ) {\n\n\t\t\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boneInverses.push( inverse );\n\n\t\t\t}\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\tvar bone;\n\n\t\t\t// recover the bind-time world matrices\n\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t\tbone = this.bones[ b ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// compute the local matrices, positions, rotations and scales\n\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t\tbone = this.bones[ b ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tif ( bone.parent instanceof THREE.Bone ) {\n\n\t\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdate: ( function () {\n\n\t\t\tvar offsetMatrix = new THREE.Matrix4();\n\n\t\t\treturn function update() {\n\n\t\t\t\t// flatten bone matrices to array\n\n\t\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\n\n\t\t\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\n\t\t\t\t\toffsetMatrix.toArray( this.boneMatrices, b * 16 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.useVertexTexture ) {\n\n\t\t\t\t\tthis.boneTexture.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tclone: function () {\n\n\t\t\treturn new THREE.Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\n\n\t\t}\n\n\t} );\n\n\t// File:src/objects/SkinnedMesh.js\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\n\n\t\tTHREE.Mesh.call( this, geometry, material );\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = \"attached\";\n\t\tthis.bindMatrix = new THREE.Matrix4();\n\t\tthis.bindMatrixInverse = new THREE.Matrix4();\n\n\t\t// init bones\n\n\t\t// TODO: remove bone creation as there is no reason (other than\n\t\t// convenience) for THREE.SkinnedMesh to do this.\n\n\t\tvar bones = [];\n\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\n\n\t\t\tvar bone, gbone;\n\n\t\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\n\n\t\t\t\tgbone = this.geometry.bones[ b ];\n\n\t\t\t\tbone = new THREE.Bone( this );\n\t\t\t\tbones.push( bone );\n\n\t\t\t\tbone.name = gbone.name;\n\t\t\t\tbone.position.fromArray( gbone.pos );\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\n\t\t\t}\n\n\t\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\n\n\t\t\t\tgbone = this.geometry.bones[ b ];\n\n\t\t\t\tif ( gbone.parent !== - 1 && gbone.parent !== null &&\n\t\t\t\t\t\tbones[ gbone.parent ] !== undefined ) {\n\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.add( bones[ b ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.normalizeSkinWeights();\n\n\t\tthis.updateMatrixWorld( true );\n\t\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\n\n\t};\n\n\n\tTHREE.SkinnedMesh.prototype = Object.assign( Object.create( THREE.Mesh.prototype ), {\n\n\t\tconstructor: THREE.SkinnedMesh,\n\n\t\tbind: function( skeleton, bindMatrix ) {\n\n\t\t\tthis.skeleton = skeleton;\n\n\t\t\tif ( bindMatrix === undefined ) {\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t\t}\n\n\t\t\tthis.bindMatrix.copy( bindMatrix );\n\t\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\tthis.skeleton.pose();\n\n\t\t},\n\n\t\tnormalizeSkinWeights: function () {\n\n\t\t\tif ( this.geometry instanceof THREE.Geometry ) {\n\n\t\t\t\tfor ( var i = 0; i < this.geometry.skinWeights.length; i ++ ) {\n\n\t\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\n\t\t\t\t\tvar scale = 1.0 / sw.lengthManhattan();\n\n\t\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\t\tsw.multiplyScalar( scale );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( this.geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\tvar vec = new THREE.Vector4();\n\n\t\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\t\tfor ( var i = 0; i < skinWeight.count; i ++ ) {\n\n\t\t\t\t\tvec.x = skinWeight.getX( i );\n\t\t\t\t\tvec.y = skinWeight.getY( i );\n\t\t\t\t\tvec.z = skinWeight.getZ( i );\n\t\t\t\t\tvec.w = skinWeight.getW( i );\n\n\t\t\t\t\tvar scale = 1.0 / vec.lengthManhattan();\n\n\t\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\t\tvec.multiplyScalar( scale );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t\t}\n\n\t\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrixWorld: function( force ) {\n\n\t\t\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\n\n\t\t\tif ( this.bindMode === \"attached\" ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t\t} else if ( this.bindMode === \"detached\" ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function() {\n\n\t\t\treturn new this.constructor( this.geometry, this.material, this.skeleton.useVertexTexture ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t// File:src/objects/LOD.js\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.LOD = function () {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t}\n\t\t} );\n\n\t};\n\n\n\tTHREE.LOD.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\t\tconstructor: THREE.LOD,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tTHREE.Object3D.prototype.copy.call( this, source, false );\n\n\t\t\tvar levels = source.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddLevel: function ( object, distance ) {\n\n\t\t\tif ( distance === undefined ) distance = 0;\n\n\t\t\tdistance = Math.abs( distance );\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\t\tthis.add( object );\n\n\t\t},\n\n\t\tgetObjectForDistance: function ( distance ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t},\n\n\t\traycast: ( function () {\n\n\t\t\tvar matrixPosition = new THREE.Vector3();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tupdate: function () {\n\n\t\t\tvar v1 = new THREE.Vector3();\n\t\t\tvar v2 = new THREE.Vector3();\n\n\t\t\treturn function update( camera ) {\n\n\t\t\t\tvar levels = this.levels;\n\n\t\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.levels = [];\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tdata.object.levels.push( {\n\t\t\t\t\tobject: level.object.uuid,\n\t\t\t\t\tdistance: level.distance\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t// File:src/objects/Sprite.js\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.Sprite = function ( material ) {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.type = 'Sprite';\n\n\t\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\n\n\t};\n\n\tTHREE.Sprite.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\t\tconstructor: THREE.Sprite,\n\n\t\traycast: ( function () {\n\n\t\t\tvar matrixPosition = new THREE.Vector3();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\n\t\t\t\tvar guessSizeSq = this.scale.x * this.scale.y / 4;\n\n\t\t\t\tif ( distanceSq > guessSizeSq ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: Math.sqrt( distanceSq ),\n\t\t\t\t\tpoint: this.position,\n\t\t\t\t\tface: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t// File:src/objects/LensFlare.js\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.lensFlares = [];\n\n\t\tthis.positionScreen = new THREE.Vector3();\n\t\tthis.customUpdateCallback = undefined;\n\n\t\tif ( texture !== undefined ) {\n\n\t\t\tthis.add( texture, size, distance, blending, color );\n\n\t\t}\n\n\t};\n\n\tTHREE.LensFlare.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\t\tconstructor: THREE.LensFlare,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tTHREE.Object3D.prototype.copy.call( this, source );\n\n\t\t\tthis.positionScreen.copy( source.positionScreen );\n\t\t\tthis.customUpdateCallback = source.customUpdateCallback;\n\n\t\t\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\n\n\t\t\t\tthis.lensFlares.push( source.lensFlares[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( texture, size, distance, blending, color, opacity ) {\n\n\t\t\tif ( size === undefined ) size = - 1;\n\t\t\tif ( distance === undefined ) distance = 0;\n\t\t\tif ( opacity === undefined ) opacity = 1;\n\t\t\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\n\t\t\tif ( blending === undefined ) blending = THREE.NormalBlending;\n\n\t\t\tdistance = Math.min( distance, Math.max( 0, distance ) );\n\n\t\t\tthis.lensFlares.push( {\n\t\t\t\ttexture: texture,\t// THREE.Texture\n\t\t\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\n\t\t\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\n\t\t\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\n\t\t\t\tscale: 1, \t\t// scale\n\t\t\t\trotation: 0, \t\t// rotation\n\t\t\t\topacity: opacity,\t// opacity\n\t\t\t\tcolor: color,\t\t// color\n\t\t\t\tblending: blending\t// blending\n\t\t\t} );\n\n\t\t},\n\n\t\t/*\n\t\t * Update lens flares update positions on all flares based on the screen position\n\t\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\n\t\t */\n\n\t\tupdateLensFlares: function () {\n\n\t\t\tvar f, fl = this.lensFlares.length;\n\t\t\tvar flare;\n\t\t\tvar vecX = - this.positionScreen.x * 2;\n\t\t\tvar vecY = - this.positionScreen.y * 2;\n\n\t\t\tfor ( f = 0; f < fl; f ++ ) {\n\n\t\t\t\tflare = this.lensFlares[ f ];\n\n\t\t\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\n\t\t\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\n\n\t\t\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\n\t\t\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t// File:src/scenes/Scene.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.Scene = function () {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.fog = null;\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t};\n\n\tTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\n\tTHREE.Scene.prototype.constructor = THREE.Scene;\n\n\tTHREE.Scene.prototype.copy = function ( source, recursive ) {\n\n\t\tTHREE.Object3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/scenes/Fog.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.Fog = function ( color, near, far ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new THREE.Color( color );\n\n\t\tthis.near = ( near !== undefined ) ? near : 1;\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\n\n\t};\n\n\tTHREE.Fog.prototype.clone = function () {\n\n\t\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\n\n\t};\n\n\t// File:src/scenes/FogExp2.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.FogExp2 = function ( color, density ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new THREE.Color( color );\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n\t};\n\n\tTHREE.FogExp2.prototype.clone = function () {\n\n\t\treturn new THREE.FogExp2( this.color.getHex(), this.density );\n\n\t};\n\n\t// File:src/renderers/shaders/ShaderChunk.js\n\n\tTHREE.ShaderChunk = {};\n\n\t// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'alphamap_fragment' ] = \"#ifdef USE_ALPHAMAP\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'alphamap_pars_fragment' ] = \"#ifdef USE_ALPHAMAP\\n\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'alphatest_fragment' ] = \"#ifdef ALPHATEST\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'aomap_fragment' ] = \"#ifdef USE_AOMAP\\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\t#endif\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'aomap_pars_fragment' ] = \"#ifdef USE_AOMAP\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'begin_vertex' ] = \"\\nvec3 transformed = vec3( position );\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'beginnormal_vertex' ] = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/bsdfs.glsl\n\n\tTHREE.ShaderChunk[ 'bsdfs' ] = \"bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\\n\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\t\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\t\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\t\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\t\t\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\t\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\t\t}\\n\t\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\tfloat alpha = pow2( roughness );\\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\tfloat D = D_GGX( alpha, dotNH );\\n\treturn F * ( G * D );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\tvec4 r = roughness * c0 + c1;\\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\tfloat G = G_BlinnPhong_Implicit( );\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'bumpmap_pars_fragment' ] = \"#ifdef USE_BUMPMAP\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\tvec2 dHdxy_fwd() {\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\t\treturn vec2( dBx, dBy );\\n\t}\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\t}\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/clipping_planes_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'clipping_planes_fragment' ] = \"#if NUM_CLIPPING_PLANES > 0\\n\tfor ( int i = 0; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\t\tvec4 plane = clippingPlanes[ i ];\\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\t}\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/clipping_planes_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'clipping_planes_pars_fragment' ] = \"#if NUM_CLIPPING_PLANES > 0\\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\t\tvarying vec3 vViewPosition;\\n\t#endif\\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/clipping_planes_pars_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'clipping_planes_pars_vertex' ] = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/clipping_planes_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'clipping_planes_vertex' ] = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'color_fragment' ] = \"#ifdef USE_COLOR\\n\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'color_pars_fragment' ] = \"#ifdef USE_COLOR\\n\tvarying vec3 vColor;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'color_pars_vertex' ] = \"#ifdef USE_COLOR\\n\tvarying vec3 vColor;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'color_vertex' ] = \"#ifdef USE_COLOR\\n\tvColor.xyz = color.xyz;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/common.glsl\n\n\tTHREE.ShaderChunk[ 'common' ] = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\tvec3 color;\\n\tvec3 direction;\\n\tbool visible;\\n};\\nstruct ReflectedLight {\\n\tvec3 directDiffuse;\\n\tvec3 directSpecular;\\n\tvec3 indirectDiffuse;\\n\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\tvec3 position;\\n\tvec3 normal;\\n\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/cube_uv_reflection_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'cube_uv_reflection_fragment' ] = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\tvec3 absDirection = abs(direction);\\n\tint face = -1;\\n\tif( absDirection.x > absDirection.z ) {\\n\t\tif(absDirection.x > absDirection.y )\\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\\n\t\telse\\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\\n\t}\\n\telse {\\n\t\tif(absDirection.z > absDirection.y )\\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\\n\t\telse\\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\\n\t}\\n\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\tfloat dxRoughness = dFdx(roughness);\\n\tfloat dyRoughness = dFdy(roughness);\\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\tfloat mipLevel = 0.5 * log2(d);\\n\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\tbool bRes = mipLevel == 0.0;\\n\tscale =  bRes && (scale < a) ? a : scale;\\n\tvec3 r;\\n\tvec2 offset;\\n\tint face = getFaceFromDirection(direction);\\n\tfloat rcpPowScale = 1.0 / powScale;\\n\tif( face == 0) {\\n\t\tr = vec3(direction.x, -direction.z, direction.y);\\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\t}\\n\telse if( face == 1) {\\n\t\tr = vec3(direction.y, direction.x, direction.z);\\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\t}\\n\telse if( face == 2) {\\n\t\tr = vec3(direction.z, direction.x, direction.y);\\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\t}\\n\telse if( face == 3) {\\n\t\tr = vec3(direction.x, direction.z, direction.y);\\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\t}\\n\telse if( face == 4) {\\n\t\tr = vec3(direction.y, direction.x, -direction.z);\\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\t}\\n\telse {\\n\t\tr = vec3(direction.z, -direction.x, direction.y);\\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\t}\\n\tr = normalize(r);\\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\tvec2 base = offset + vec2( texelOffset );\\n\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\tfloat r1 = floor(roughnessVal);\\n\tfloat r2 = r1 + 1.0;\\n\tfloat t = fract(roughnessVal);\\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\tfloat s = mipInfo.y;\\n\tfloat level0 = mipInfo.x;\\n\tfloat level1 = level0 + 1.0;\\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\tvec4 result = mix(color10, color20, t);\\n\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'defaultnormal_vertex' ] = \"#ifdef FLIP_SIDED\\n\tobjectNormal = -objectNormal;\\n#endif\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'displacementmap_vertex' ] = \"#ifdef USE_DISPLACEMENTMAP\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'displacementmap_pars_vertex' ] = \"#ifdef USE_DISPLACEMENTMAP\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'emissivemap_fragment' ] = \"#ifdef USE_EMISSIVEMAP\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'emissivemap_pars_fragment' ] = \"#ifdef USE_EMISSIVEMAP\\n\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/encodings_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'encodings_pars_fragment' ] = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n  return value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n  float maxComponent = max( max( value.r, value.g ), value.b );\\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n  float maxRGB = max( value.x, max( value.g, value.b ) );\\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n  M            = ceil( M * 255.0 ) / 255.0;\\n  return vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n    float maxRGB = max( value.x, max( value.g, value.b ) );\\n    float D      = max( maxRange / maxRGB, 1.0 );\\n    D            = min( floor( D ) / 255.0, 1.0 );\\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n  vec4 vResult;\\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n  vResult.w = fract(Le);\\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n  return vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n  float Le = value.z * 255.0 + value.w;\\n  vec3 Xp_Y_XYZp;\\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n  return vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/encodings_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'encodings_fragment' ] = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'envmap_fragment' ] = \"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\t\t#else\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\t\t#endif\\n\t#else\\n\t\tvec3 reflectVec = vReflect;\\n\t#endif\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\tenvColor = envMapTexelToLinear( envColor );\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\t#endif\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'envmap_pars_fragment' ] = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\tuniform float reflectivity;\\n\tuniform float envMapIntenstiy;\\n#endif\\n#ifdef USE_ENVMAP\\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\t\tvarying vec3 vWorldPosition;\\n\t#endif\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\t\tuniform float refractionRatio;\\n\t#else\\n\t\tvarying vec3 vReflect;\\n\t#endif\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'envmap_pars_vertex' ] = \"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\t\tvarying vec3 vWorldPosition;\\n\t#else\\n\t\tvarying vec3 vReflect;\\n\t\tuniform float refractionRatio;\\n\t#endif\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'envmap_vertex' ] = \"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\t\tvWorldPosition = worldPosition.xyz;\\n\t#else\\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\t\t#else\\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\t\t#endif\\n\t#endif\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'fog_fragment' ] = \"#ifdef USE_FOG\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\t#else\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\t#endif\\n\t#ifdef FOG_EXP2\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\t#else\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\t#endif\\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'fog_pars_fragment' ] = \"#ifdef USE_FOG\\n\tuniform vec3 fogColor;\\n\t#ifdef FOG_EXP2\\n\t\tuniform float fogDensity;\\n\t#else\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'lightmap_fragment' ] = \"#ifdef USE_LIGHTMAP\\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'lightmap_pars_fragment' ] = \"#ifdef USE_LIGHTMAP\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'lights_lambert_vertex' ] = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\t\t#endif\\n\t}\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/lights_pars.glsl\n\n\tTHREE.ShaderChunk[ 'lights_pars' ] = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\tvec3 irradiance = ambientLightColor;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\tstruct DirectionalLight {\\n\t\tvec3 direction;\\n\t\tvec3 color;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\t\tdirectLight.color = directionalLight.color;\\n\t\tdirectLight.direction = directionalLight.direction;\\n\t\tdirectLight.visible = true;\\n\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\tstruct PointLight {\\n\t\tvec3 position;\\n\t\tvec3 color;\\n\t\tfloat distance;\\n\t\tfloat decay;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\t\tvec3 lVector = pointLight.position - geometry.position;\\n\t\tdirectLight.direction = normalize( lVector );\\n\t\tfloat lightDistance = length( lVector );\\n\t\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\\n\t\t\tdirectLight.color = pointLight.color;\\n\t\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\t\t\tdirectLight.visible = true;\\n\t\t} else {\\n\t\t\tdirectLight.color = vec3( 0.0 );\\n\t\t\tdirectLight.visible = false;\\n\t\t}\\n\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\tstruct SpotLight {\\n\t\tvec3 position;\\n\t\tvec3 direction;\\n\t\tvec3 color;\\n\t\tfloat distance;\\n\t\tfloat decay;\\n\t\tfloat coneCos;\\n\t\tfloat penumbraCos;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\t\tvec3 lVector = spotLight.position - geometry.position;\\n\t\tdirectLight.direction = normalize( lVector );\\n\t\tfloat lightDistance = length( lVector );\\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\t\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\t\t\tdirectLight.color = spotLight.color;\\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\t\t\tdirectLight.visible = true;\\n\t\t} else {\\n\t\t\tdirectLight.color = vec3( 0.0 );\\n\t\t\tdirectLight.visible = false;\\n\t\t}\\n\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\tstruct HemisphereLight {\\n\t\tvec3 direction;\\n\t\tvec3 skyColor;\\n\t\tvec3 groundColor;\\n\t};\\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\t\tirradiance *= PI;\\n\t\t#endif\\n\t\treturn irradiance;\\n\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\t\t#include <normal_flip>\\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\t\t#ifdef ENVMAP_TYPE_CUBE\\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\t\t#else\\n\t\t\tvec4 envMapColor = vec4( 0.0 );\\n\t\t#endif\\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\\n\t}\\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\t}\\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\t\t#else\\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\t\t#endif\\n\t\t#include <normal_flip>\\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\t\t#ifdef ENVMAP_TYPE_CUBE\\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\t\tvec2 sampleUV;\\n\t\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\t\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#endif\\n\t\treturn envMapColor.rgb * envMapIntensity;\\n\t}\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'lights_phong_fragment' ] = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'lights_phong_pars_fragment' ] = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\tvec3\tdiffuseColor;\\n\tvec3\tspecularColor;\\n\tfloat\tspecularShininess;\\n\tfloat\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\tvec3 irradiance = dotNL * directLight.color;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\t(0)\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/lights_physical_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'lights_physical_fragment' ] = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/lights_physical_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'lights_physical_pars_fragment' ] = \"struct PhysicalMaterial {\\n\tvec3\tdiffuseColor;\\n\tfloat\tspecularRoughness;\\n\tvec3\tspecularColor;\\n\t#ifndef STANDARD\\n\t\tfloat clearCoat;\\n\t\tfloat clearCoatRoughness;\\n\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\tvec3 irradiance = dotNL * directLight.color;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\t#ifndef STANDARD\\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\t#else\\n\t\tfloat clearCoatDHR = 0.0;\\n\t#endif\\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\t#ifndef STANDARD\\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\t#ifndef STANDARD\\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\t\tfloat dotNL = dotNV;\\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\t#else\\n\t\tfloat clearCoatDHR = 0.0;\\n\t#endif\\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\t#ifndef STANDARD\\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\t#endif\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_Physical\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/lights_template.glsl\n\n\tTHREE.ShaderChunk[ 'lights_template' ] = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\tPointLight pointLight;\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tpointLight = pointLights[ i ];\\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\tSpotLight spotLight;\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tspotLight = spotLights[ i ];\\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\tDirectionalLight directionalLight;\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tdirectionalLight = directionalLights[ i ];\\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\t#ifdef USE_LIGHTMAP\\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\t\tlightMapIrradiance *= PI;\\n\t\t#endif\\n\t\tirradiance += lightMapIrradiance;\\n\t#endif\\n\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\t\t}\\n\t#endif\\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\t \tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\t#endif\\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\t#ifndef STANDARD\\n\t\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\t#else\\n\t\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\t#endif\\n\t\t\\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'logdepthbuf_fragment' ] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment' ] = \"#ifdef USE_LOGDEPTHBUF\\n\tuniform float logDepthBufFC;\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvarying float vFragDepth;\\n\t#endif\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex' ] = \"#ifdef USE_LOGDEPTHBUF\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvarying float vFragDepth;\\n\t#endif\\n\tuniform float logDepthBufFC;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'logdepthbuf_vertex' ] = \"#ifdef USE_LOGDEPTHBUF\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\t#else\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\t#endif\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'map_fragment' ] = \"#ifdef USE_MAP\\n\tvec4 texelColor = texture2D( map, vUv );\\n\ttexelColor = mapTexelToLinear( texelColor );\\n\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'map_pars_fragment' ] = \"#ifdef USE_MAP\\n\tuniform sampler2D map;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'map_particle_fragment' ] = \"#ifdef USE_MAP\\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'map_particle_pars_fragment' ] = \"#ifdef USE_MAP\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/metalnessmap_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'metalnessmap_fragment' ] = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\tmetalnessFactor *= texelMetalness.r;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/metalnessmap_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'metalnessmap_pars_fragment' ] = \"#ifdef USE_METALNESSMAP\\n\tuniform sampler2D metalnessMap;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'morphnormal_vertex' ] = \"#ifdef USE_MORPHNORMALS\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'morphtarget_pars_vertex' ] = \"#ifdef USE_MORPHTARGETS\\n\t#ifndef USE_MORPHNORMALS\\n\tuniform float morphTargetInfluences[ 8 ];\\n\t#else\\n\tuniform float morphTargetInfluences[ 4 ];\\n\t#endif\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'morphtarget_vertex' ] = \"#ifdef USE_MORPHTARGETS\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\t#ifndef USE_MORPHNORMALS\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\t#endif\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/normal_flip.glsl\n\n\tTHREE.ShaderChunk[ 'normal_flip' ] = \"#ifdef DOUBLE_SIDED\\n\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n#else\\n\tfloat flipNormal = 1.0;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/normal_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'normal_fragment' ] = \"#ifdef FLAT_SHADED\\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\tvec3 normal = normalize( vNormal ) * flipNormal;\\n#endif\\n#ifdef USE_NORMALMAP\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'normalmap_pars_fragment' ] = \"#ifdef USE_NORMALMAP\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\t}\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/packing.glsl\n\n\tTHREE.ShaderChunk[ 'packing' ] = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n  return normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n  return 1.0 - 2.0 * rgb.xyz;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n  return ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n  return linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/premultiplied_alpha_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'premultiplied_alpha_fragment' ] = \"#ifdef PREMULTIPLIED_ALPHA\\n\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'project_vertex' ] = \"#ifdef USE_SKINNING\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n#else\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n#endif\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/roughnessmap_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'roughnessmap_fragment' ] = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\troughnessFactor *= texelRoughness.r;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/roughnessmap_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'roughnessmap_pars_fragment' ] = \"#ifdef USE_ROUGHNESSMAP\\n\tuniform sampler2D roughnessMap;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'shadowmap_pars_fragment' ] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\t#endif\\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\t}\\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\t\tvec2 f = fract( uv * size + 0.5 );\\n\t\tfloat a = mix( lb, lt, f.y );\\n\t\tfloat b = mix( rb, rt, f.y );\\n\t\tfloat c = mix( a, b, f.x );\\n\t\treturn c;\\n\t}\\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\t\tshadowCoord.xyz /= shadowCoord.w;\\n\t\tshadowCoord.z += shadowBias;\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\t\tbool frustumTest = all( frustumTestVec );\\n\t\tif ( frustumTest ) {\\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\\n\t\t\treturn (\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\\n\t\t\treturn (\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#else\\n\t\t\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\t\t#endif\\n\t\t}\\n\t\treturn 1.0;\\n\t}\\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\t\tvec3 absV = abs( v );\\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\t\tabsV *= scaleToCube;\\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\t\tvec2 planar = v.xy;\\n\t\tfloat almostATexel = 1.5 * texelSizeY;\\n\t\tfloat almostOne = 1.0 - almostATexel;\\n\t\tif ( absV.z >= almostOne ) {\\n\t\t\tif ( v.z > 0.0 )\\n\t\t\t\tplanar.x = 4.0 - v.x;\\n\t\t} else if ( absV.x >= almostOne ) {\\n\t\t\tfloat signX = sign( v.x );\\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\\n\t\t} else if ( absV.y >= almostOne ) {\\n\t\t\tfloat signY = sign( v.y );\\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\t\t\tplanar.y = v.z * signY - 2.0;\\n\t\t}\\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\t}\\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\t\tvec3 lightToPosition = shadowCoord.xyz;\\n\t\tvec3 bd3D = normalize( lightToPosition );\\n\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\t\t\treturn (\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#else\\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\t\t#endif\\n\t}\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'shadowmap_pars_vertex' ] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\t#endif\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'shadowmap_vertex' ] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/shadowmask_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'shadowmask_pars_fragment' ] = \"float getShadowMask() {\\n\tfloat shadow = 1.0;\\n\t#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\tDirectionalLight directionalLight;\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tdirectionalLight = directionalLights[ i ];\\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\tSpotLight spotLight;\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tspotLight = spotLights[ i ];\\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\tPointLight pointLight;\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tpointLight = pointLights[ i ];\\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#endif\\n\treturn shadow;\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'skinbase_vertex' ] = \"#ifdef USE_SKINNING\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'skinning_pars_vertex' ] = \"#ifdef USE_SKINNING\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\t#ifdef BONE_TEXTURE\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\t\t\ty = dy * ( y + 0.5 );\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\t\t\treturn bone;\\n\t\t}\\n\t#else\\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\t\t}\\n\t#endif\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'skinning_vertex' ] = \"#ifdef USE_SKINNING\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'skinnormal_vertex' ] = \"#ifdef USE_SKINNING\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'specularmap_fragment' ] = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n#else\\n\tspecularStrength = 1.0;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'specularmap_pars_fragment' ] = \"#ifdef USE_SPECULARMAP\\n\tuniform sampler2D specularMap;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/tonemapping_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'tonemapping_fragment' ] = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/tonemapping_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'tonemapping_pars_fragment' ] = \"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n  return toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  color = max( vec3( 0.0 ), color - 0.004 );\\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'uv2_pars_fragment' ] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tvarying vec2 vUv2;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'uv2_pars_vertex' ] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'uv2_vertex' ] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tvUv2 = uv2;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'uv_pars_fragment' ] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvarying vec2 vUv;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'uv_pars_vertex' ] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'uv_vertex' ] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'worldpos_vertex' ] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\t#ifdef USE_SKINNING\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\t#else\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\t#endif\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/UniformsUtils.js\n\n\t/**\n\t * Uniform Utilities\n\t */\n\n\tTHREE.UniformsUtils = {\n\n\t\tmerge: function ( uniforms ) {\n\n\t\t\tvar merged = {};\n\n\t\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\t\tvar tmp = this.clone( uniforms[ u ] );\n\n\t\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn merged;\n\n\t\t},\n\n\t\tclone: function ( uniforms_src ) {\n\n\t\t\tvar uniforms_dst = {};\n\n\t\t\tfor ( var u in uniforms_src ) {\n\n\t\t\t\tuniforms_dst[ u ] = {};\n\n\t\t\t\tfor ( var p in uniforms_src[ u ] ) {\n\n\t\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\n\t\t\t\t\tif ( parameter_src instanceof THREE.Color ||\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\n\t\t\t\t\t\t parameter_src instanceof THREE.Matrix3 ||\n\t\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\n\t\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\n\t\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn uniforms_dst;\n\n\t\t}\n\n\t};\n\n\t// File:src/renderers/shaders/UniformsLib.js\n\n\t/**\n\t * Uniforms library for shared webgl shaders\n\t */\n\n\tTHREE.UniformsLib = {\n\n\t\tcommon: {\n\n\t\t\t\"diffuse\": { value: new THREE.Color( 0xeeeeee ) },\n\t\t\t\"opacity\": { value: 1.0 },\n\n\t\t\t\"map\": { value: null },\n\t\t\t\"offsetRepeat\": { value: new THREE.Vector4( 0, 0, 1, 1 ) },\n\n\t\t\t\"specularMap\": { value: null },\n\t\t\t\"alphaMap\": { value: null },\n\n\t\t\t\"envMap\": { value: null },\n\t\t\t\"flipEnvMap\": { value: - 1 },\n\t\t\t\"reflectivity\": { value: 1.0 },\n\t\t\t\"refractionRatio\": { value: 0.98 }\n\n\t\t},\n\n\t\taomap: {\n\n\t\t\t\"aoMap\": { value: null },\n\t\t\t\"aoMapIntensity\": { value: 1 }\n\n\t\t},\n\n\t\tlightmap: {\n\n\t\t\t\"lightMap\": { value: null },\n\t\t\t\"lightMapIntensity\": { value: 1 }\n\n\t\t},\n\n\t\temissivemap: {\n\n\t\t\t\"emissiveMap\": { value: null }\n\n\t\t},\n\n\t\tbumpmap: {\n\n\t\t\t\"bumpMap\": { value: null },\n\t\t\t\"bumpScale\": { value: 1 }\n\n\t\t},\n\n\t\tnormalmap: {\n\n\t\t\t\"normalMap\": { value: null },\n\t\t\t\"normalScale\": { value: new THREE.Vector2( 1, 1 ) }\n\n\t\t},\n\n\t\tdisplacementmap: {\n\n\t\t\t\"displacementMap\": { value: null },\n\t\t\t\"displacementScale\": { value: 1 },\n\t\t\t\"displacementBias\": { value: 0 }\n\n\t\t},\n\n\t\troughnessmap: {\n\n\t\t\t\"roughnessMap\": { value: null }\n\n\t\t},\n\n\t\tmetalnessmap: {\n\n\t\t\t\"metalnessMap\": { value: null }\n\n\t\t},\n\n\t\tfog: {\n\n\t\t\t\"fogDensity\": { value: 0.00025 },\n\t\t\t\"fogNear\": { value: 1 },\n\t\t\t\"fogFar\": { value: 2000 },\n\t\t\t\"fogColor\": { value: new THREE.Color( 0xffffff ) }\n\n\t\t},\n\n\t\tlights: {\n\n\t\t\t\"ambientLightColor\": { value: [] },\n\n\t\t\t\"directionalLights\": { value: [], properties: {\n\t\t\t\t\"direction\": {},\n\t\t\t\t\"color\": {},\n\n\t\t\t\t\"shadow\": {},\n\t\t\t\t\"shadowBias\": {},\n\t\t\t\t\"shadowRadius\": {},\n\t\t\t\t\"shadowMapSize\": {}\n\t\t\t} },\n\n\t\t\t\"directionalShadowMap\": { value: [] },\n\t\t\t\"directionalShadowMatrix\": { value: [] },\n\n\t\t\t\"spotLights\": { value: [], properties: {\n\t\t\t\t\"color\": {},\n\t\t\t\t\"position\": {},\n\t\t\t\t\"direction\": {},\n\t\t\t\t\"distance\": {},\n\t\t\t\t\"coneCos\": {},\n\t\t\t\t\"penumbraCos\": {},\n\t\t\t\t\"decay\": {},\n\n\t\t\t\t\"shadow\": {},\n\t\t\t\t\"shadowBias\": {},\n\t\t\t\t\"shadowRadius\": {},\n\t\t\t\t\"shadowMapSize\": {}\n\t\t\t} },\n\n\t\t\t\"spotShadowMap\": { value: [] },\n\t\t\t\"spotShadowMatrix\": { value: [] },\n\n\t\t\t\"pointLights\": { value: [], properties: {\n\t\t\t\t\"color\": {},\n\t\t\t\t\"position\": {},\n\t\t\t\t\"decay\": {},\n\t\t\t\t\"distance\": {},\n\n\t\t\t\t\"shadow\": {},\n\t\t\t\t\"shadowBias\": {},\n\t\t\t\t\"shadowRadius\": {},\n\t\t\t\t\"shadowMapSize\": {}\n\t\t\t} },\n\n\t\t\t\"pointShadowMap\": { value: [] },\n\t\t\t\"pointShadowMatrix\": { value: [] },\n\n\t\t\t\"hemisphereLights\": { value: [], properties: {\n\t\t\t\t\"direction\": {},\n\t\t\t\t\"skyColor\": {},\n\t\t\t\t\"groundColor\": {}\n\t\t\t} }\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\t\"diffuse\": { value: new THREE.Color( 0xeeeeee ) },\n\t\t\t\"opacity\": { value: 1.0 },\n\t\t\t\"size\": { value: 1.0 },\n\t\t\t\"scale\": { value: 1.0 },\n\t\t\t\"map\": { value: null },\n\t\t\t\"offsetRepeat\": { value: new THREE.Vector4( 0, 0, 1, 1 ) }\n\n\t\t}\n\n\t};\n\n\t// File:src/renderers/shaders/ShaderLib/cube_frag.glsl\n\n\tTHREE.ShaderChunk[ 'cube_frag' ] = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\tgl_FragColor.a *= opacity;\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/cube_vert.glsl\n\n\tTHREE.ShaderChunk[ 'cube_vert' ] = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\tvWorldPosition = transformDirection( position, modelMatrix );\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/depth_frag.glsl\n\n\tTHREE.ShaderChunk[ 'depth_frag' ] = \"#if DEPTH_PACKING == 3200\\n\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( 1.0 );\\n\t#if DEPTH_PACKING == 3200\\n\t\tdiffuseColor.a = opacity;\\n\t#endif\\n\t#include <map_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <logdepthbuf_fragment>\\n\t#if DEPTH_PACKING == 3200\\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\t#elif DEPTH_PACKING == 3201\\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\t#endif\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/depth_vert.glsl\n\n\tTHREE.ShaderChunk[ 'depth_vert' ] = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <begin_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/distanceRGBA_frag.glsl\n\n\tTHREE.ShaderChunk[ 'distanceRGBA_frag' ] = \"uniform vec3 lightPos;\\nvarying vec4 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\t#include <clipping_planes_fragment>\\n\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/distanceRGBA_vert.glsl\n\n\tTHREE.ShaderChunk[ 'distanceRGBA_vert' ] = \"varying vec4 vWorldPosition;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <skinbase_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvWorldPosition = worldPosition;\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/equirect_frag.glsl\n\n\tTHREE.ShaderChunk[ 'equirect_frag' ] = \"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\tvec3 direction = normalize( vWorldPosition );\\n\tvec2 sampleUV;\\n\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/equirect_vert.glsl\n\n\tTHREE.ShaderChunk[ 'equirect_vert' ] = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\tvWorldPosition = transformDirection( position, modelMatrix );\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/linedashed_frag.glsl\n\n\tTHREE.ShaderChunk[ 'linedashed_frag' ] = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\t\tdiscard;\\n\t}\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <color_fragment>\\n\toutgoingLight = diffuseColor.rgb;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/linedashed_vert.glsl\n\n\tTHREE.ShaderChunk[ 'linedashed_vert' ] = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <color_vertex>\\n\tvLineDistance = scale * lineDistance;\\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\tgl_Position = projectionMatrix * mvPosition;\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/meshbasic_frag.glsl\n\n\tTHREE.ShaderChunk[ 'meshbasic_frag' ] = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\tReflectedLight reflectedLight;\\n\treflectedLight.directDiffuse = vec3( 0.0 );\\n\treflectedLight.directSpecular = vec3( 0.0 );\\n\treflectedLight.indirectDiffuse = diffuseColor.rgb;\\n\treflectedLight.indirectSpecular = vec3( 0.0 );\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\t#include <normal_flip>\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/meshbasic_vert.glsl\n\n\tTHREE.ShaderChunk[ 'meshbasic_vert' ] = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <skinbase_vertex>\\n\t#ifdef USE_ENVMAP\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#endif\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <envmap_vertex>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/meshlambert_frag.glsl\n\n\tTHREE.ShaderChunk[ 'meshlambert_frag' ] = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <emissivemap_fragment>\\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\t#include <lightmap_fragment>\\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\t#ifdef DOUBLE_SIDED\\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\t#else\\n\t\treflectedLight.directDiffuse = vLightFront;\\n\t#endif\\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\t#include <normal_flip>\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/meshlambert_vert.glsl\n\n\tTHREE.ShaderChunk[ 'meshlambert_vert' ] = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n\t#include <lights_lambert_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/meshphong_frag.glsl\n\n\tTHREE.ShaderChunk[ 'meshphong_frag' ] = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <normal_flip>\\n\t#include <normal_fragment>\\n\t#include <emissivemap_fragment>\\n\t#include <lights_phong_fragment>\\n\t#include <lights_template>\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/meshphong_vert.glsl\n\n\tTHREE.ShaderChunk[ 'meshphong_vert' ] = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\tvNormal = normalize( transformedNormal );\\n#endif\\n\t#include <begin_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/meshphysical_frag.glsl\n\n\tTHREE.ShaderChunk[ 'meshphysical_frag' ] = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\tuniform float clearCoat;\\n\tuniform float clearCoatRoughness;\\n#endif\\nuniform float envMapIntensity;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <roughnessmap_fragment>\\n\t#include <metalnessmap_fragment>\\n\t#include <normal_flip>\\n\t#include <normal_fragment>\\n\t#include <emissivemap_fragment>\\n\t#include <lights_physical_fragment>\\n\t#include <lights_template>\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/meshphysical_vert.glsl\n\n\tTHREE.ShaderChunk[ 'meshphysical_vert' ] = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\tvNormal = normalize( transformedNormal );\\n#endif\\n\t#include <begin_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/normal_frag.glsl\n\n\tTHREE.ShaderChunk[ 'normal_frag' ] = \"uniform float opacity;\\nvarying vec3 vNormal;\\n#include <common>\\n#include <packing>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tgl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\\n\t#include <logdepthbuf_fragment>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/normal_vert.glsl\n\n\tTHREE.ShaderChunk[ 'normal_vert' ] = \"varying vec3 vNormal;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\tvNormal = normalize( normalMatrix * normal );\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/points_frag.glsl\n\n\tTHREE.ShaderChunk[ 'points_frag' ] = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_particle_fragment>\\n\t#include <color_fragment>\\n\t#include <alphatest_fragment>\\n\toutgoingLight = diffuseColor.rgb;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/points_vert.glsl\n\n\tTHREE.ShaderChunk[ 'points_vert' ] = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <color_vertex>\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\t#ifdef USE_SIZEATTENUATION\\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\t#else\\n\t\tgl_PointSize = size;\\n\t#endif\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/shadow_frag.glsl\n\n\tTHREE.ShaderChunk[ 'shadow_frag' ] = \"uniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/shadow_vert.glsl\n\n\tTHREE.ShaderChunk[ 'shadow_vert' ] = \"#include <shadowmap_pars_vertex>\\nvoid main() {\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib.js\n\n\t/**\n\t * Webgl Shader Library for three.js\n\t *\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t */\n\n\n\tTHREE.ShaderLib = {\n\n\t\t'basic': {\n\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\t\tTHREE.UniformsLib[ 'common' ],\n\t\t\t\tTHREE.UniformsLib[ 'aomap' ],\n\t\t\t\tTHREE.UniformsLib[ 'fog' ]\n\n\t\t\t] ),\n\n\t\t\tvertexShader: THREE.ShaderChunk[ 'meshbasic_vert' ],\n\t\t\tfragmentShader: THREE.ShaderChunk[ 'meshbasic_frag' ]\n\n\t\t},\n\n\t\t'lambert': {\n\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\t\tTHREE.UniformsLib[ 'common' ],\n\t\t\t\tTHREE.UniformsLib[ 'aomap' ],\n\t\t\t\tTHREE.UniformsLib[ 'lightmap' ],\n\t\t\t\tTHREE.UniformsLib[ 'emissivemap' ],\n\t\t\t\tTHREE.UniformsLib[ 'fog' ],\n\t\t\t\tTHREE.UniformsLib[ 'lights' ],\n\n\t\t\t\t{\n\t\t\t\t\t\"emissive\" : { value: new THREE.Color( 0x000000 ) }\n\t\t\t\t}\n\n\t\t\t] ),\n\n\t\t\tvertexShader: THREE.ShaderChunk[ 'meshlambert_vert' ],\n\t\t\tfragmentShader: THREE.ShaderChunk[ 'meshlambert_frag' ]\n\n\t\t},\n\n\t\t'phong': {\n\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\t\tTHREE.UniformsLib[ 'common' ],\n\t\t\t\tTHREE.UniformsLib[ 'aomap' ],\n\t\t\t\tTHREE.UniformsLib[ 'lightmap' ],\n\t\t\t\tTHREE.UniformsLib[ 'emissivemap' ],\n\t\t\t\tTHREE.UniformsLib[ 'bumpmap' ],\n\t\t\t\tTHREE.UniformsLib[ 'normalmap' ],\n\t\t\t\tTHREE.UniformsLib[ 'displacementmap' ],\n\t\t\t\tTHREE.UniformsLib[ 'fog' ],\n\t\t\t\tTHREE.UniformsLib[ 'lights' ],\n\n\t\t\t\t{\n\t\t\t\t\t\"emissive\" : { value: new THREE.Color( 0x000000 ) },\n\t\t\t\t\t\"specular\" : { value: new THREE.Color( 0x111111 ) },\n\t\t\t\t\t\"shininess\": { value: 30 }\n\t\t\t\t}\n\n\t\t\t] ),\n\n\t\t\tvertexShader: THREE.ShaderChunk[ 'meshphong_vert' ],\n\t\t\tfragmentShader: THREE.ShaderChunk[ 'meshphong_frag' ]\n\n\t\t},\n\n\t\t'standard': {\n\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\t\tTHREE.UniformsLib[ 'common' ],\n\t\t\t\tTHREE.UniformsLib[ 'aomap' ],\n\t\t\t\tTHREE.UniformsLib[ 'lightmap' ],\n\t\t\t\tTHREE.UniformsLib[ 'emissivemap' ],\n\t\t\t\tTHREE.UniformsLib[ 'bumpmap' ],\n\t\t\t\tTHREE.UniformsLib[ 'normalmap' ],\n\t\t\t\tTHREE.UniformsLib[ 'displacementmap' ],\n\t\t\t\tTHREE.UniformsLib[ 'roughnessmap' ],\n\t\t\t\tTHREE.UniformsLib[ 'metalnessmap' ],\n\t\t\t\tTHREE.UniformsLib[ 'fog' ],\n\t\t\t\tTHREE.UniformsLib[ 'lights' ],\n\n\t\t\t\t{\n\t\t\t\t\t\"emissive\" : { value: new THREE.Color( 0x000000 ) },\n\t\t\t\t\t\"roughness\": { value: 0.5 },\n\t\t\t\t\t\"metalness\": { value: 0 },\n\t\t\t\t\t\"envMapIntensity\" : { value: 1 }, // temporary\n\t\t\t\t}\n\n\t\t\t] ),\n\n\t\t\tvertexShader: THREE.ShaderChunk[ 'meshphysical_vert' ],\n\t\t\tfragmentShader: THREE.ShaderChunk[ 'meshphysical_frag' ]\n\n\t\t},\n\n\t\t'points': {\n\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\t\tTHREE.UniformsLib[ 'points' ],\n\t\t\t\tTHREE.UniformsLib[ 'fog' ]\n\n\t\t\t] ),\n\n\t\t\tvertexShader: THREE.ShaderChunk[ 'points_vert' ],\n\t\t\tfragmentShader: THREE.ShaderChunk[ 'points_frag' ]\n\n\t\t},\n\n\t\t'dashed': {\n\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\t\tTHREE.UniformsLib[ 'common' ],\n\t\t\t\tTHREE.UniformsLib[ 'fog' ],\n\n\t\t\t\t{\n\t\t\t\t\t\"scale\"    : { value: 1 },\n\t\t\t\t\t\"dashSize\" : { value: 1 },\n\t\t\t\t\t\"totalSize\": { value: 2 }\n\t\t\t\t}\n\n\t\t\t] ),\n\n\t\t\tvertexShader: THREE.ShaderChunk[ 'linedashed_vert' ],\n\t\t\tfragmentShader: THREE.ShaderChunk[ 'linedashed_frag' ]\n\n\t\t},\n\n\t\t'depth': {\n\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\t\tTHREE.UniformsLib[ 'common' ],\n\t\t\t\tTHREE.UniformsLib[ 'displacementmap' ]\n\n\t\t\t] ),\n\n\t\t\tvertexShader: THREE.ShaderChunk[ 'depth_vert' ],\n\t\t\tfragmentShader: THREE.ShaderChunk[ 'depth_frag' ]\n\n\t\t},\n\n\t\t'normal': {\n\n\t\t\tuniforms: {\n\n\t\t\t\t\"opacity\" : { value: 1.0 }\n\n\t\t\t},\n\n\t\t\tvertexShader: THREE.ShaderChunk[ 'normal_vert' ],\n\t\t\tfragmentShader: THREE.ShaderChunk[ 'normal_frag' ]\n\n\t\t},\n\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\n\t\t'cube': {\n\n\t\t\tuniforms: {\n\t\t\t\t\"tCube\": { value: null },\n\t\t\t\t\"tFlip\": { value: - 1 },\n\t\t\t\t\"opacity\": { value: 1.0 }\n\t\t\t},\n\n\t\t\tvertexShader: THREE.ShaderChunk[ 'cube_vert' ],\n\t\t\tfragmentShader: THREE.ShaderChunk[ 'cube_frag' ]\n\n\t\t},\n\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\n\t\t'equirect': {\n\n\t\t\tuniforms: {\n\t\t\t\t\"tEquirect\": { value: null },\n\t\t\t\t\"tFlip\": { value: - 1 }\n\t\t\t},\n\n\t\t\tvertexShader: THREE.ShaderChunk[ 'equirect_vert' ],\n\t\t\tfragmentShader: THREE.ShaderChunk[ 'equirect_frag' ]\n\n\t\t},\n\n\t\t'distanceRGBA': {\n\n\t\t\tuniforms: {\n\n\t\t\t\t\"lightPos\": { value: new THREE.Vector3() }\n\n\t\t\t},\n\n\t\t\tvertexShader: THREE.ShaderChunk[ 'distanceRGBA_vert' ],\n\t\t\tfragmentShader: THREE.ShaderChunk[ 'distanceRGBA_frag' ]\n\n\t\t}\n\n\t};\n\n\tTHREE.ShaderLib[ 'physical' ] = {\n\n\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\tTHREE.ShaderLib[ 'standard' ].uniforms,\n\n\t\t\t{\n\t\t\t\t\"clearCoat\": { value: 0 },\n\t\t\t\t\"clearCoatRoughness\": { value: 0 }\n\t\t\t}\n\n\t\t] ),\n\n\t\tvertexShader: THREE.ShaderChunk[ 'meshphysical_vert' ],\n\t\tfragmentShader: THREE.ShaderChunk[ 'meshphysical_frag' ]\n\n\t};\n\n\t// File:src/renderers/WebGLRenderer.js\n\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t * @author tschw\n\t */\n\n\tTHREE.WebGLRenderer = function ( parameters ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\n\n\t\tparameters = parameters || {};\n\n\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\n\n\t\tvar lights = [];\n\n\t\tvar opaqueObjects = [];\n\t\tvar opaqueObjectsLastIndex = - 1;\n\t\tvar transparentObjects = [];\n\t\tvar transparentObjectsLastIndex = - 1;\n\n\t\tvar morphInfluences = new Float32Array( 8 );\n\n\t\tvar sprites = [];\n\t\tvar lensFlares = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = _canvas;\n\t\tthis.context = null;\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\t\tthis.gammaInput = false;\n\t\tthis.gammaOutput = false;\n\n\t\t// physical lights\n\n\t\tthis.physicallyCorrectLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = THREE.LinearToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\t\tthis.toneMappingWhitePoint = 1.0;\n\n\t\t// morphs\n\n\t\tthis.maxMorphTargets = 8;\n\t\tthis.maxMorphNormals = 4;\n\n\t\t// internal properties\n\n\t\tvar _this = this,\n\n\t\t// internal state cache\n\n\t\t_currentProgram = null,\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\t\t_currentGeometryProgram = '',\n\t\t_currentCamera = null,\n\n\t\t_currentScissor = new THREE.Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t_currentViewport = new THREE.Vector4(),\n\n\t\t//\n\n\t\t_usedTextureUnits = 0,\n\n\t\t//\n\n\t\t_clearColor = new THREE.Color( 0x000000 ),\n\t\t_clearAlpha = 0,\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\n\t\t_scissor = new THREE.Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t_viewport = new THREE.Vector4( 0, 0, _width, _height ),\n\n\t\t// frustum\n\n\t\t_frustum = new THREE.Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new THREE.WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t_sphere = new THREE.Sphere(),\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new THREE.Matrix4(),\n\n\t\t_vector3 = new THREE.Vector3(),\n\n\t\t// light arrays cache\n\n\t\t_lights = {\n\n\t\t\thash: '',\n\n\t\t\tambient: [ 0, 0, 0 ],\n\t\t\tdirectional: [],\n\t\t\tdirectionalShadowMap: [],\n\t\t\tdirectionalShadowMatrix: [],\n\t\t\tspot: [],\n\t\t\tspotShadowMap: [],\n\t\t\tspotShadowMatrix: [],\n\t\t\tpoint: [],\n\t\t\tpointShadowMap: [],\n\t\t\tpointShadowMatrix: [],\n\t\t\themi: [],\n\n\t\t\tshadows: []\n\n\t\t},\n\n\t\t// info\n\n\t\t_infoRender = {\n\n\t\t\tcalls: 0,\n\t\t\tvertices: 0,\n\t\t\tfaces: 0,\n\t\t\tpoints: 0\n\n\t\t};\n\n\t\tthis.info = {\n\n\t\t\trender: _infoRender,\n\t\t\tmemory: {\n\n\t\t\t\tgeometries: 0,\n\t\t\t\ttextures: 0\n\n\t\t\t},\n\t\t\tprograms: null\n\n\t\t};\n\n\n\t\t// initialize\n\n\t\tvar _gl;\n\n\t\ttry {\n\n\t\t\tvar attributes = {\n\t\t\t\talpha: _alpha,\n\t\t\t\tdepth: _depth,\n\t\t\t\tstencil: _stencil,\n\t\t\t\tantialias: _antialias,\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\n\t\t\t};\n\n\t\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow 'Error creating WebGL context.';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\n\n\t\t}\n\n\t\tvar extensions = new THREE.WebGLExtensions( _gl );\n\n\t\textensions.get( 'WEBGL_depth_texture' );\n\t\textensions.get( 'OES_texture_float' );\n\t\textensions.get( 'OES_texture_float_linear' );\n\t\textensions.get( 'OES_texture_half_float' );\n\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\textensions.get( 'OES_standard_derivatives' );\n\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extensions.get( 'OES_element_index_uint' ) ) {\n\n\t\t\tTHREE.BufferGeometry.MaxIndex = 4294967296;\n\n\t\t}\n\n\t\tvar capabilities = new THREE.WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tvar state = new THREE.WebGLState( _gl, extensions, paramThreeToGL );\n\t\tvar properties = new THREE.WebGLProperties();\n\t\tvar textures = new THREE.WebGLTextures( _gl, extensions, state, properties, capabilities, paramThreeToGL, this.info );\n\t\tvar objects = new THREE.WebGLObjects( _gl, properties, this.info );\n\t\tvar programCache = new THREE.WebGLPrograms( this, capabilities );\n\t\tvar lightCache = new THREE.WebGLLights();\n\n\t\tthis.info.programs = programCache.programs;\n\n\t\tvar bufferRenderer = new THREE.WebGLBufferRenderer( _gl, extensions, _infoRender );\n\t\tvar indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\n\n\t\t//\n\n\t\tvar backgroundCamera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\t\tvar backgroundCamera2 = new THREE.PerspectiveCamera();\n\t\tvar backgroundPlaneMesh = new THREE.Mesh(\n\t\t\tnew THREE.PlaneBufferGeometry( 2, 2 ),\n\t\t\tnew THREE.MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )\n\t\t);\n\t\tvar backgroundBoxShader = THREE.ShaderLib[ 'cube' ];\n\t\tvar backgroundBoxMesh = new THREE.Mesh(\n\t\t\tnew THREE.BoxBufferGeometry( 5, 5, 5 ),\n\t\t\tnew THREE.ShaderMaterial( {\n\t\t\t\tuniforms: backgroundBoxShader.uniforms,\n\t\t\t\tvertexShader: backgroundBoxShader.vertexShader,\n\t\t\t\tfragmentShader: backgroundBoxShader.fragmentShader,\n\t\t\t\tside: THREE.BackSide,\n\t\t\t\tdepthTest: false,\n\t\t\t\tdepthWrite: false,\n\t\t\t\tfog: false\n\t\t\t} )\n\t\t);\n\n\t\t//\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\tfunction glClearColor( r, g, b, a ) {\n\n\t\t\tif ( _premultipliedAlpha === true ) {\n\n\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t}\n\n\t\t\tstate.clearColor( r, g, b, a );\n\n\t\t}\n\n\t\tfunction setDefaultGLState() {\n\n\t\t\tstate.init();\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n\t\t}\n\n\t\tfunction resetGLState() {\n\n\t\t\t_currentProgram = null;\n\t\t\t_currentCamera = null;\n\n\t\t\t_currentGeometryProgram = '';\n\t\t\t_currentMaterialId = - 1;\n\n\t\t\tstate.reset();\n\n\t\t}\n\n\t\tsetDefaultGLState();\n\n\t\tthis.context = _gl;\n\t\tthis.capabilities = capabilities;\n\t\tthis.extensions = extensions;\n\t\tthis.properties = properties;\n\t\tthis.state = state;\n\n\t\t// shadow map\n\n\t\tvar shadowMap = new THREE.WebGLShadowMap( this, _lights, objects, capabilities );\n\n\t\tthis.shadowMap = shadowMap;\n\n\n\t\t// Plugins\n\n\t\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\n\t\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\n\n\t\t};\n\n\t\tthis.getMaxAnisotropy = function () {\n\n\t\t\treturn capabilities.getMaxAnisotropy();\n\n\t\t};\n\n\t\tthis.getPrecision = function () {\n\n\t\t\treturn capabilities.precision;\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _viewport.z, _viewport.w, false );\n\n\t\t};\n\n\t\tthis.getSize = function () {\n\n\t\t\treturn {\n\t\t\t\twidth: _width,\n\t\t\t\theight: _height\n\t\t\t};\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_canvas.width = width * _pixelRatio;\n\t\t\t_canvas.height = height * _pixelRatio;\n\n\t\t\tif ( updateStyle !== false ) {\n\n\t\t\t\t_canvas.style.width = width + 'px';\n\t\t\t\t_canvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tstate.viewport( _viewport.set( x, y, width, height ) );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tstate.scissor( _scissor.set( x, y, width, height ) );\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function () {\n\n\t\t\treturn _clearColor;\n\n\t\t};\n\n\t\tthis.setClearColor = function ( color, alpha ) {\n\n\t\t\t_clearColor.set( color );\n\n\t\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\n\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn _clearAlpha;\n\n\t\t};\n\n\t\tthis.setClearAlpha = function ( alpha ) {\n\n\t\t\t_clearAlpha = alpha;\n\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n\t\t};\n\n\t\tthis.clear = function ( color, depth, stencil ) {\n\n\t\t\tvar bits = 0;\n\n\t\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\t\t\tthis.clear( color, depth, stencil );\n\n\t\t};\n\n\t\t// Reset\n\n\t\tthis.resetGLState = resetGLState;\n\n\t\tthis.dispose = function() {\n\n\t\t\ttransparentObjects = [];\n\t\t\ttransparentObjectsLastIndex = -1;\n\t\t\topaqueObjects = [];\n\t\t\topaqueObjectsLastIndex = -1;\n\n\t\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tresetGLState();\n\t\t\tsetDefaultGLState();\n\n\t\t\tproperties.clear();\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tvar material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\tproperties.delete( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReference( material ) {\n\n\t\t\tvar programInfo = properties.get( material ).program;\n\n\t\t\tmaterial.program = undefined;\n\n\t\t\tif ( programInfo !== undefined ) {\n\n\t\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferImmediate = function ( object, program, material ) {\n\n\t\t\tstate.initAttributes();\n\n\t\t\tvar buffers = properties.get( object );\n\n\t\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\t\tvar attributes = program.getAttributes();\n\n\t\t\tif ( object.hasPositions ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( attributes.position );\n\t\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasNormals ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\n\t\t\t\tif ( material.type !== 'MeshPhongMaterial' && material.type !== 'MeshStandardMaterial' && material.type !== 'MeshPhysicalMaterial' && material.shading === THREE.FlatShading ) {\n\n\t\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\n\n\t\t\t\t\t\tvar array = object.normalArray;\n\n\t\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\n\t\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\n\t\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\n\n\t\t\t\t\t\tarray[ i + 0 ] = nx;\n\t\t\t\t\t\tarray[ i + 1 ] = ny;\n\t\t\t\t\t\tarray[ i + 2 ] = nz;\n\n\t\t\t\t\t\tarray[ i + 3 ] = nx;\n\t\t\t\t\t\tarray[ i + 4 ] = ny;\n\t\t\t\t\t\tarray[ i + 5 ] = nz;\n\n\t\t\t\t\t\tarray[ i + 6 ] = nx;\n\t\t\t\t\t\tarray[ i + 7 ] = ny;\n\t\t\t\t\t\tarray[ i + 8 ] = nz;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( attributes.normal );\n\n\t\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasUvs && material.map ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( attributes.uv );\n\n\t\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( attributes.color );\n\n\t\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\t\tobject.count = 0;\n\n\t\t};\n\n\t\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\t\tsetMaterial( material );\n\n\t\t\tvar program = setProgram( camera, fog, material, object );\n\n\t\t\tvar updateBuffers = false;\n\t\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\n\n\t\t\tif ( geometryProgram !== _currentGeometryProgram ) {\n\n\t\t\t\t_currentGeometryProgram = geometryProgram;\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphTargetInfluences = object.morphTargetInfluences;\n\n\t\t\tif ( morphTargetInfluences !== undefined ) {\n\n\t\t\t\tvar activeInfluences = [];\n\n\t\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar influence = morphTargetInfluences[ i ];\n\t\t\t\t\tactiveInfluences.push( [ influence, i ] );\n\n\t\t\t\t}\n\n\t\t\t\tactiveInfluences.sort( absNumericalSort );\n\n\t\t\t\tif ( activeInfluences.length > 8 ) {\n\n\t\t\t\t\tactiveInfluences.length = 8;\n\n\t\t\t\t}\n\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar influence = activeInfluences[ i ];\n\t\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\n\n\t\t\t\t\tif ( influence[ 0 ] !== 0 ) {\n\n\t\t\t\t\t\tvar index = influence[ 1 ];\n\n\t\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\n\t\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tprogram.getUniforms().setValue(\n\t\t\t\t\t\t_gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar position = geometry.attributes.position;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = objects.getWireframeAttribute( geometry );\n\n\t\t\t}\n\n\t\t\tvar renderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( index );\n\n\t\t\t} else {\n\n\t\t\t\trenderer = bufferRenderer;\n\n\t\t\t}\n\n\t\t\tif ( updateBuffers ) {\n\n\t\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar dataStart = 0;\n\t\t\tvar dataCount = Infinity;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdataCount = index.count;\n\n\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\tdataCount = position.count;\n\n\t\t\t}\n\n\t\t\tvar rangeStart = geometry.drawRange.start;\n\t\t\tvar rangeCount = geometry.drawRange.count;\n\n\t\t\tvar groupStart = group !== null ? group.start : 0;\n\t\t\tvar groupCount = group !== null ? group.count : Infinity;\n\n\t\t\tvar drawStart = Math.max( dataStart, rangeStart, groupStart );\n\t\t\tvar drawEnd = Math.min( dataStart + dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\t\t//\n\n\t\t\tif ( object instanceof THREE.Mesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\t\tcase THREE.TrianglesDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase THREE.TriangleStripDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase THREE.TriangleFanDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t} else if ( object instanceof THREE.Line ) {\n\n\t\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object instanceof THREE.LineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof THREE.Points ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t}\n\n\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\n\n\t\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\n\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( startIndex === undefined ) startIndex = 0;\n\n\t\t\tstate.initAttributes();\n\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\t\tfor ( var name in programAttributes ) {\n\n\t\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\t\tvar type = _gl.FLOAT;\n\t\t\t\t\t\tvar array = geometryAttribute.array;\n\t\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\n\t\t\t\t\t\tif ( array instanceof Float32Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.FLOAT;\n\n\t\t\t\t\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\t\t\t\t\tconsole.warn(\"Unsupported data buffer format: Float64Array\");\n\n\t\t\t\t\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.UNSIGNED_SHORT;\n\n\t\t\t\t\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.SHORT;\n\n\t\t\t\t\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.UNSIGNED_INT;\n\n\t\t\t\t\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.INT;\n\n\t\t\t\t\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.BYTE;\n\n\t\t\t\t\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.UNSIGNED_BYTE;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\t\t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\n\n\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InterleavedBufferAttribute ) {\n\n\t\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\t\tif ( data instanceof THREE.InstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute, extension );\n\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute, extension );\n\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, startIndex * size * geometryAttribute.array.BYTES_PER_ELEMENT );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t}\n\n\t\t// Sorting\n\n\t\tfunction absNumericalSort( a, b ) {\n\n\t\t\treturn Math.abs( b[ 0 ] ) - Math.abs( a[ 0 ] );\n\n\t\t}\n\n\t\tfunction painterSortStable ( a, b ) {\n\n\t\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\n\n\t\t\t\treturn a.object.renderOrder - b.object.renderOrder;\n\n\t\t\t} else if ( a.material.program && b.material.program && a.material.program !== b.material.program ) {\n\n\t\t\t\treturn a.material.program.id - b.material.program.id;\n\n\t\t\t} else if ( a.material.id !== b.material.id ) {\n\n\t\t\t\treturn a.material.id - b.material.id;\n\n\t\t\t} else if ( a.z !== b.z ) {\n\n\t\t\t\treturn a.z - b.z;\n\n\t\t\t} else {\n\n\t\t\t\treturn a.id - b.id;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction reversePainterSortStable ( a, b ) {\n\n\t\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\n\n\t\t\t\treturn a.object.renderOrder - b.object.renderOrder;\n\n\t\t\t} if ( a.z !== b.z ) {\n\n\t\t\t\treturn b.z - a.z;\n\n\t\t\t} else {\n\n\t\t\t\treturn a.id - b.id;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\t\tif ( camera instanceof THREE.Camera === false ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar fog = scene.fog;\n\n\t\t\t// reset caching for this frame\n\n\t\t\t_currentGeometryProgram = '';\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\tlights.length = 0;\n\n\t\t\topaqueObjectsLastIndex = - 1;\n\t\t\ttransparentObjectsLastIndex = - 1;\n\n\t\t\tsprites.length = 0;\n\t\t\tlensFlares.length = 0;\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\t\tprojectObject( scene, camera );\n\n\t\t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\n\t\t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\topaqueObjects.sort( painterSortStable );\n\t\t\t\ttransparentObjects.sort( reversePainterSortStable );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\t\tsetupShadows( lights );\n\n\t\t\tshadowMap.render( scene, camera );\n\n\t\t\tsetupLights( lights, camera );\n\n\t\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t\t//\n\n\t\t\t_infoRender.calls = 0;\n\t\t\t_infoRender.vertices = 0;\n\t\t\t_infoRender.faces = 0;\n\t\t\t_infoRender.points = 0;\n\n\t\t\tif ( renderTarget === undefined ) {\n\n\t\t\t\trenderTarget = null;\n\n\t\t\t}\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t\t//\n\n\t\t\tvar background = scene.background;\n\n\t\t\tif ( background === null ) {\n\n\t\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n\t\t\t} else if ( background instanceof THREE.Color ) {\n\n\t\t\t\tglClearColor( background.r, background.g, background.b, 1 );\n\n\t\t\t}\n\n\t\t\tif ( this.autoClear || forceClear ) {\n\n\t\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\n\n\t\t\t}\n\n\t\t\tif ( background instanceof THREE.CubeTexture ) {\n\n\t\t\t\tbackgroundCamera2.projectionMatrix.copy( camera.projectionMatrix );\n\n\t\t\t\tbackgroundCamera2.matrixWorld.extractRotation( camera.matrixWorld );\n\t\t\t\tbackgroundCamera2.matrixWorldInverse.getInverse( backgroundCamera2.matrixWorld );\n\n\t\t\t\tbackgroundBoxMesh.material.uniforms[ \"tCube\" ].value = background;\n\t\t\t\tbackgroundBoxMesh.modelViewMatrix.multiplyMatrices( backgroundCamera2.matrixWorldInverse, backgroundBoxMesh.matrixWorld );\n\n\t\t\t\tobjects.update( backgroundBoxMesh );\n\n\t\t\t\t_this.renderBufferDirect( backgroundCamera2, null, backgroundBoxMesh.geometry, backgroundBoxMesh.material, backgroundBoxMesh, null );\n\n\t\t\t} else if ( background instanceof THREE.Texture ) {\n\n\t\t\t\tbackgroundPlaneMesh.material.map = background;\n\n\t\t\t\tobjects.update( backgroundPlaneMesh );\n\n\t\t\t\t_this.renderBufferDirect( backgroundCamera, null, backgroundPlaneMesh.geometry, backgroundPlaneMesh.material, backgroundPlaneMesh, null );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.overrideMaterial ) {\n\n\t\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\t\trenderObjects( opaqueObjects, camera, fog, overrideMaterial );\n\t\t\t\trenderObjects( transparentObjects, camera, fog, overrideMaterial );\n\n\t\t\t} else {\n\n\t\t\t\t// opaque pass (front-to-back order)\n\n\t\t\t\tstate.setBlending( THREE.NoBlending );\n\t\t\t\trenderObjects( opaqueObjects, camera, fog );\n\n\t\t\t\t// transparent pass (back-to-front order)\n\n\t\t\t\trenderObjects( transparentObjects, camera, fog );\n\n\t\t\t}\n\n\t\t\t// custom render plugins (post pass)\n\n\t\t\tspritePlugin.render( scene, camera );\n\t\t\tlensFlarePlugin.render( scene, camera, _currentViewport );\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\n\n\t\t\t}\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.setDepthTest( true );\n\t\t\tstate.setDepthWrite( true );\n\t\t\tstate.setColorWrite( true );\n\n\t\t\t// _gl.finish();\n\n\t\t};\n\n\t\tfunction pushRenderItem( object, geometry, material, z, group ) {\n\n\t\t\tvar array, index;\n\n\t\t\t// allocate the next position in the appropriate array\n\n\t\t\tif ( material.transparent ) {\n\n\t\t\t\tarray = transparentObjects;\n\t\t\t\tindex = ++ transparentObjectsLastIndex;\n\n\t\t\t} else {\n\n\t\t\t\tarray = opaqueObjects;\n\t\t\t\tindex = ++ opaqueObjectsLastIndex;\n\n\t\t\t}\n\n\t\t\t// recycle existing render item or grow the array\n\n\t\t\tvar renderItem = array[ index ];\n\n\t\t\tif ( renderItem !== undefined ) {\n\n\t\t\t\trenderItem.id = object.id;\n\t\t\t\trenderItem.object = object;\n\t\t\t\trenderItem.geometry = geometry;\n\t\t\t\trenderItem.material = material;\n\t\t\t\trenderItem.z = _vector3.z;\n\t\t\t\trenderItem.group = group;\n\n\t\t\t} else {\n\n\t\t\t\trenderItem = {\n\t\t\t\t\tid: object.id,\n\t\t\t\t\tobject: object,\n\t\t\t\t\tgeometry: geometry,\n\t\t\t\t\tmaterial: material,\n\t\t\t\t\tz: _vector3.z,\n\t\t\t\t\tgroup: group\n\t\t\t\t};\n\n\t\t\t\t// assert( index === array.length );\n\t\t\t\tarray.push( renderItem );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// TODO Duplicated code (Frustum)\n\n\t\tfunction isObjectViewable( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t_sphere.copy( geometry.boundingSphere ).\n\t\t\t\tapplyMatrix4( object.matrixWorld );\n\n\t\t\treturn isSphereViewable( _sphere );\n\n\t\t}\n\n\t\tfunction isSpriteViewable( sprite ) {\n\n\t\t\t_sphere.center.set( 0, 0, 0 );\n\t\t\t_sphere.radius = 0.7071067811865476;\n\t\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn isSphereViewable( _sphere );\n\n\t\t}\n\n\t\tfunction isSphereViewable( sphere ) {\n\n\t\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n\n\t\t\tvar numPlanes = _clipping.numPlanes;\n\n\t\t\tif ( numPlanes === 0 ) return true;\n\n\t\t\tvar planes = _this.clippingPlanes,\n\n\t\t\t\tcenter = sphere.center,\n\t\t\t\tnegRad = - sphere.radius,\n\t\t\t\ti = 0;\n\n\t\t\tdo {\n\n\t\t\t\t// out when deeper than radius in the negative halfspace\n\t\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n\n\t\t\t} while ( ++ i !== numPlanes );\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tfunction projectObject( object, camera ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\tif ( object instanceof THREE.Light ) {\n\n\t\t\t\t\tlights.push( object );\n\n\t\t\t\t} else if ( object instanceof THREE.Sprite ) {\n\n\t\t\t\t\tif ( object.frustumCulled === false || isSpriteViewable( object ) === true ) {\n\n\t\t\t\t\t\tsprites.push( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object instanceof THREE.LensFlare ) {\n\n\t\t\t\t\tlensFlares.push( object );\n\n\t\t\t\t} else if ( object instanceof THREE.ImmediateRenderObject ) {\n\n\t\t\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\n\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tpushRenderItem( object, null, object.material, _vector3.z, null );\n\n\t\t\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\n\n\t\t\t\t\tif ( object instanceof THREE.SkinnedMesh ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( object.frustumCulled === false || isObjectViewable( object ) === true ) {\n\n\t\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\t\tif ( material.visible === true ) {\n\n\t\t\t\t\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\n\t\t\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar geometry = objects.update( object );\n\n\t\t\t\t\t\t\tif ( material instanceof THREE.MultiMaterial ) {\n\n\t\t\t\t\t\t\t\tvar groups = geometry.groups;\n\t\t\t\t\t\t\t\tvar materials = material.materials;\n\n\t\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\n\n\t\t\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, camera, fog, overrideMaterial ) {\n\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\t\tvar object = renderItem.object;\n\t\t\t\tvar geometry = renderItem.geometry;\n\t\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\t\tvar group = renderItem.group;\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\t\tif ( object instanceof THREE.ImmediateRenderObject ) {\n\n\t\t\t\t\tsetMaterial( material );\n\n\t\t\t\t\tvar program = setProgram( camera, fog, material, object );\n\n\t\t\t\t\t_currentGeometryProgram = '';\n\n\t\t\t\t\tobject.render( function ( object ) {\n\n\t\t\t\t\t\t_this.renderBufferImmediate( object, program, material );\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_this.renderBufferDirect( camera, fog, geometry, material, object, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction initMaterial( material, fog, object ) {\n\n\t\t\tvar materialProperties = properties.get( material );\n\n\t\t\tvar parameters = programCache.getParameters(\n\t\t\t\t\tmaterial, _lights, fog, _clipping.numPlanes, object );\n\n\t\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\t\tvar program = materialProperties.program;\n\t\t\tvar programChange = true;\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\t// new material\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t} else if ( program.code !== code ) {\n\n\t\t\t\t// changed glsl or parameters\n\t\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t\t// same glsl and uniform list\n\t\t\t\treturn;\n\n\t\t\t} else {\n\n\t\t\t\t// only rebuild uniform list\n\t\t\t\tprogramChange = false;\n\n\t\t\t}\n\n\t\t\tif ( programChange ) {\n\n\t\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\t\tvar shader = THREE.ShaderLib[ parameters.shaderID ];\n\n\t\t\t\t\tmaterialProperties.__webglShader = {\n\t\t\t\t\t\tname: material.type,\n\t\t\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterialProperties.__webglShader = {\n\t\t\t\t\t\tname: material.type,\n\t\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.__webglShader = materialProperties.__webglShader;\n\n\t\t\t\tprogram = programCache.acquireProgram( material, parameters, code );\n\n\t\t\t\tmaterialProperties.program = program;\n\t\t\t\tmaterial.program = program;\n\n\t\t\t}\n\n\t\t\tvar attributes = program.getAttributes();\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.morphNormals ) {\n\n\t\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar uniforms = materialProperties.__webglShader.uniforms;\n\n\t\t\tif ( ! ( material instanceof THREE.ShaderMaterial ) &&\n\t\t\t\t\t! ( material instanceof THREE.RawShaderMaterial ) ||\n\t\t\t\t\tmaterial.clipping === true ) {\n\n\t\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t\t}\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// store the light setup it was created for\n\n\t\t\t\tmaterialProperties.lightsHash = _lights.hash;\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = _lights.ambient;\n\t\t\t\tuniforms.directionalLights.value = _lights.directional;\n\t\t\t\tuniforms.spotLights.value = _lights.spot;\n\t\t\t\tuniforms.pointLights.value = _lights.point;\n\t\t\t\tuniforms.hemisphereLights.value = _lights.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = _lights.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = _lights.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = _lights.spotShadowMap;\n\t\t\t\tuniforms.spotShadowMatrix.value = _lights.spotShadowMatrix;\n\t\t\t\tuniforms.pointShadowMap.value = _lights.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = _lights.pointShadowMatrix;\n\n\t\t\t}\n\n\t\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\t\tuniformsList =\n\t\t\t\t\t\tTHREE.WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\t\t\tmaterialProperties.dynamicUniforms =\n\t\t\t\t\tTHREE.WebGLUniforms.splitDynamic( uniformsList, uniforms );\n\n\t\t}\n\n\t\tfunction setMaterial( material ) {\n\n\t\t\tif ( material.side !== THREE.DoubleSide )\n\t\t\t\tstate.enable( _gl.CULL_FACE );\n\t\t\telse\n\t\t\t\tstate.disable( _gl.CULL_FACE );\n\n\t\t\tstate.setFlipSided( material.side === THREE.BackSide );\n\n\t\t\tif ( material.transparent === true ) {\n\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\t\t} else {\n\n\t\t\t\tstate.setBlending( THREE.NoBlending );\n\n\t\t\t}\n\n\t\t\tstate.setDepthFunc( material.depthFunc );\n\t\t\tstate.setDepthTest( material.depthTest );\n\t\t\tstate.setDepthWrite( material.depthWrite );\n\t\t\tstate.setColorWrite( material.colorWrite );\n\t\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\t}\n\n\t\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t\t_usedTextureUnits = 0;\n\n\t\t\tvar materialProperties = properties.get( material );\n\n\t\t\tif ( _clippingEnabled ) {\n\n\t\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\t\tvar useCache =\n\t\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\t_clipping.setState(\n\t\t\t\t\t\t\tmaterial.clippingPlanes, material.clipShadows,\n\t\t\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t\t}\n\n\t\t\t\tif ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\tmaterialProperties.numClippingPlanes !== _clipping.numPlanes ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tif ( materialProperties.lightsHash !== undefined &&\n\t\t\t\tmaterialProperties.lightsHash !== _lights.hash ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tif ( material.needsUpdate ) {\n\n\t\t\t\tinitMaterial( material, fog, object );\n\t\t\t\tmaterial.needsUpdate = false;\n\n\t\t\t}\n\n\t\t\tvar refreshProgram = false;\n\t\t\tvar refreshMaterial = false;\n\t\t\tvar refreshLights = false;\n\n\t\t\tvar program = materialProperties.program,\n\t\t\t\tp_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\n\n\t\t\tif ( program.id !== _currentProgram ) {\n\n\t\t\t\t_gl.useProgram( program.program );\n\t\t\t\t_currentProgram = program.id;\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || camera !== _currentCamera ) {\n\n\t\t\t\tp_uniforms.set( _gl, camera, 'projectionMatrix' );\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\n\t\t\t\tif ( camera !== _currentCamera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t\t// load material specific uniforms\n\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\t\tif ( material instanceof THREE.ShaderMaterial ||\n\t\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\n\t\t\t\t\t material instanceof THREE.MeshStandardMaterial ||\n\t\t\t\t\t material.envMap ) {\n\n\t\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\n\t\t\t\t\t material instanceof THREE.MeshBasicMaterial ||\n\t\t\t\t\t material instanceof THREE.MeshStandardMaterial ||\n\t\t\t\t\t material instanceof THREE.ShaderMaterial ||\n\t\t\t\t\t material.skinning ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\t}\n\n\t\t\t\tp_uniforms.set( _gl, _this, 'toneMappingExposure' );\n\t\t\t\tp_uniforms.set( _gl, _this, 'toneMappingWhitePoint' );\n\n\t\t\t}\n\n\t\t\t// skinning uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t\t// not sure why, but otherwise weird things happen\n\n\t\t\tif ( material.skinning ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tvar skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures && skeleton.useVertexTexture ) {\n\n\t\t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTexture' );\n\t\t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTextureWidth' );\n\t\t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTextureHeight' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tif ( material.lights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\n\t\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\n\t\t\t\t\t material instanceof THREE.MeshStandardMaterial ||\n\t\t\t\t\t material instanceof THREE.MeshDepthMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh single material specific uniforms\n\n\t\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\n\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t} else if ( material instanceof THREE.PointsMaterial ) {\n\n\t\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t\t} else if ( material instanceof THREE.MeshLambertMaterial ) {\n\n\t\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t} else if ( material instanceof THREE.MeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t} else if ( material instanceof THREE.MeshStandardMaterial ) {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\n\n\t\t\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\t\t\tm_uniforms.displacementMap.value = material.displacementMap;\n\t\t\t\t\t\tm_uniforms.displacementScale.value = material.displacementScale;\n\t\t\t\t\t\tm_uniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\n\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t\t}\n\n\t\t\t\tTHREE.WebGLUniforms.upload(\n\t\t\t\t\t\t_gl, materialProperties.uniformsList, m_uniforms, _this );\n\n\t\t\t}\n\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.set( _gl, object, 'modelViewMatrix' );\n\t\t\tp_uniforms.set( _gl, object, 'normalMatrix' );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\n\t\t\t// dynamic uniforms\n\n\t\t\tvar dynUniforms = materialProperties.dynamicUniforms;\n\n\t\t\tif ( dynUniforms !== null ) {\n\n\t\t\t\tTHREE.WebGLUniforms.evalDynamic(\n\t\t\t\t\t\tdynUniforms, m_uniforms, object, camera );\n\n\t\t\t\tTHREE.WebGLUniforms.upload( _gl, dynUniforms, m_uniforms, _this );\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// Uniforms (refresh uniforms objects)\n\n\t\tfunction refreshUniformsCommon ( uniforms, material ) {\n\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\tuniforms.diffuse.value = material.color;\n\n\t\t\tif ( material.emissive ) {\n\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t\t}\n\n\t\t\tuniforms.map.value = material.map;\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\tif ( material.aoMap ) {\n\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\t}\n\n\t\t\t// uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. specular map\n\t\t\t// 3. normal map\n\t\t\t// 4. bump map\n\t\t\t// 5. alpha map\n\t\t\t// 6. emissive map\n\n\t\t\tvar uvScaleMap;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t} else if ( material.specularMap ) {\n\n\t\t\t\tuvScaleMap = material.specularMap;\n\n\t\t\t} else if ( material.displacementMap ) {\n\n\t\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t\t} else if ( material.normalMap ) {\n\n\t\t\t\tuvScaleMap = material.normalMap;\n\n\t\t\t} else if ( material.bumpMap ) {\n\n\t\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t\t} else if ( material.roughnessMap ) {\n\n\t\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t\t} else if ( material.metalnessMap ) {\n\n\t\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t} else if ( material.emissiveMap ) {\n\n\t\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\t// backwards compatibility\n\t\t\t\tif ( uvScaleMap instanceof THREE.WebGLRenderTarget ) {\n\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t\t}\n\n\t\t\t\tvar offset = uvScaleMap.offset;\n\t\t\t\tvar repeat = uvScaleMap.repeat;\n\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n\t\t\t}\n\n\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap instanceof THREE.CubeTexture ) ) ? 1 : - 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tfunction refreshUniformsLine ( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t}\n\n\t\tfunction refreshUniformsDash ( uniforms, material ) {\n\n\t\t\tuniforms.dashSize.value = material.dashSize;\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\t\tuniforms.scale.value = material.scale;\n\n\t\t}\n\n\t\tfunction refreshUniformsPoints ( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\t\tuniforms.scale.value = _canvas.clientHeight * 0.5;\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tvar offset = material.map.offset;\n\t\t\t\tvar repeat = material.map.repeat;\n\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsFog ( uniforms, fog ) {\n\n\t\t\tuniforms.fogColor.value = fog.color;\n\n\t\t\tif ( fog instanceof THREE.Fog ) {\n\n\t\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\n\n\t\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsLambert ( uniforms, material ) {\n\n\t\t\tif ( material.lightMap ) {\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhong ( uniforms, material ) {\n\n\t\t\tuniforms.specular.value = material.specular;\n\t\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\t\tif ( material.lightMap ) {\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsStandard ( uniforms, material ) {\n\n\t\t\tuniforms.roughness.value = material.roughness;\n\t\t\tuniforms.metalness.value = material.metalness;\n\n\t\t\tif ( material.roughnessMap ) {\n\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.metalnessMap ) {\n\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.lightMap ) {\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t\tif ( material.envMap ) {\n\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhysical ( uniforms, material ) {\n\n\t\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate ( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\t// Lighting\n\n\t\tfunction setupShadows ( lights ) {\n\n\t\t\tvar lightShadowsLength = 0;\n\n\t\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\t\tvar light = lights[ i ];\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t_lights.shadows[ lightShadowsLength ++ ] = light;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_lights.shadows.length = lightShadowsLength;\n\n\t\t}\n\n\t\tfunction setupLights ( lights, camera ) {\n\n\t\t\tvar l, ll, light,\n\t\t\tr = 0, g = 0, b = 0,\n\t\t\tcolor,\n\t\t\tintensity,\n\t\t\tdistance,\n\t\t\tshadowMap,\n\n\t\t\tviewMatrix = camera.matrixWorldInverse,\n\n\t\t\tdirectionalLength = 0,\n\t\t\tpointLength = 0,\n\t\t\tspotLength = 0,\n\t\t\themiLength = 0;\n\n\t\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\n\n\t\t\t\tlight = lights[ l ];\n\n\t\t\t\tcolor = light.color;\n\t\t\t\tintensity = light.intensity;\n\t\t\t\tdistance = light.distance;\n\n\t\t\t\tshadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\t\tif ( light instanceof THREE.AmbientLight ) {\n\n\t\t\t\t\tr += color.r * intensity;\n\t\t\t\t\tg += color.g * intensity;\n\t\t\t\t\tb += color.b * intensity;\n\n\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( _vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_lights.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\t_lights.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\t\t_lights.directional[ directionalLength ++ ] = uniforms;\n\n\t\t\t\t} else if ( light instanceof THREE.SpotLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( _vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_lights.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\t_lights.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\t\t_lights.spot[ spotLength ++ ] = uniforms;\n\n\t\t\t\t} else if ( light instanceof THREE.PointLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_lights.pointShadowMap[ pointLength ] = shadowMap;\n\n\t\t\t\t\tif ( _lights.pointShadowMatrix[ pointLength ] === undefined ) {\n\n\t\t\t\t\t\t_lights.pointShadowMatrix[ pointLength ] = new THREE.Matrix4();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t\t// equal to inverse of the light's position\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld ).negate();\n\t\t\t\t\t_lights.pointShadowMatrix[ pointLength ].identity().setPosition( _vector3 );\n\n\t\t\t\t\t_lights.point[ pointLength ++ ] = uniforms;\n\n\t\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\t\t_lights.hemi[ hemiLength ++ ] = uniforms;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_lights.ambient[ 0 ] = r;\n\t\t\t_lights.ambient[ 1 ] = g;\n\t\t\t_lights.ambient[ 2 ] = b;\n\n\t\t\t_lights.directional.length = directionalLength;\n\t\t\t_lights.spot.length = spotLength;\n\t\t\t_lights.point.length = pointLength;\n\t\t\t_lights.hemi.length = hemiLength;\n\n\t\t\t_lights.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + hemiLength + ',' + _lights.shadows.length;\n\n\t\t}\n\n\t\t// GL state setting\n\n\t\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\n\n\t\t\tstate.setCullFace( cullFace );\n\t\t\tstate.setFlipSided( frontFaceDirection === THREE.FrontFaceDirectionCW );\n\n\t\t};\n\n\t\t// Textures\n\n\t\tfunction allocTextureUnit() {\n\n\t\t\tvar textureUnit = _usedTextureUnits;\n\n\t\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t\t}\n\n\t\t\t_usedTextureUnits += 1;\n\n\t\t\treturn textureUnit;\n\n\t\t}\n\n\t\tthis.allocTextureUnit = allocTextureUnit;\n\n\t\t// this.setTexture2D = setTexture2D;\n\t\tthis.setTexture2D = ( function() {\n\n\t\t\tvar warned = false;\n\n\t\t\t// backwards compatibility: peel texture.texture\n\t\t\treturn function setTexture2D( texture, slot ) {\n\n\t\t\t\tif ( texture instanceof THREE.WebGLRenderTarget ) {\n\n\t\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\t\twarned = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture = texture.texture;\n\n\t\t\t\t}\n\n\t\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.setTexture = ( function() {\n\n\t\t\tvar warned = false;\n\n\t\t\treturn function setTexture( texture, slot ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.setTextureCube = ( function() {\n\n\t\t\tvar warned = false;\n\n\t\t\treturn function setTextureCube( texture, slot ) {\n\n\t\t\t\t// backwards compatibility: peel texture.texture\n\t\t\t\tif ( texture instanceof THREE.WebGLRenderTargetCube ) {\n\n\t\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\t\twarned = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture = texture.texture;\n\n\t\t\t\t}\n\n\t\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t\t// TODO: unify these code paths\n\t\t\t\tif ( texture instanceof THREE.CubeTexture ||\n\t\t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\t\ttextures.setTextureCube( texture, slot );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\n\t\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.getCurrentRenderTarget = function() {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\n\t\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t}\n\n\t\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\n\t\t\tvar framebuffer;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( isCube ) {\n\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\n\n\t\t\t\t}\n\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = null;\n\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\n\t\t\t}\n\n\t\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tstate.viewport( _currentViewport );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\t\tif ( renderTarget instanceof THREE.WebGLRenderTarget === false ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tvar restore = false;\n\n\t\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t\trestore = true;\n\n\t\t\t\t}\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar texture = renderTarget.texture;\n\n\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && paramThreeToGL( texture.format ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( texture.type !== THREE.UnsignedByteType &&\n\t\t\t\t\t     paramThreeToGL( texture.type ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) &&\n\t\t\t\t\t     ! ( texture.type === THREE.FloatType && extensions.get( 'WEBGL_color_buffer_float' ) ) &&\n\t\t\t\t\t     ! ( texture.type === THREE.HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t\t_gl.readPixels( x, y, width, height, paramThreeToGL( texture.format ), paramThreeToGL( texture.type ), buffer );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Map three.js constants to WebGL constants\n\n\t\tfunction paramThreeToGL ( p ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\n\t\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\n\t\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\n\n\t\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\n\t\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\n\t\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\n\n\t\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\n\t\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\n\t\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\n\n\t\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\n\t\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\n\t\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\n\t\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\n\n\t\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\n\t\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\n\t\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\n\t\t\tif ( p === THREE.IntType ) return _gl.INT;\n\t\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\n\t\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === THREE.HalfFloatType ) return extension.HALF_FLOAT_OES;\n\n\t\t\t}\n\n\t\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\n\t\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\n\t\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\n\t\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\n\t\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\n\t\t\tif ( p === THREE.DepthFormat ) return _gl.DEPTH_COMPONENT;\n\n\t\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\n\t\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\n\t\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\n\n\t\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\n\t\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\n\t\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\n\t\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\n\t\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\n\t\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\n\t\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\n\t\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\n\n\t\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\n\t\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\n\t\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t}\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t}\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === THREE.RGB_ETC1_Format ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t}\n\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\n\t\t\t\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t}\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t};\n\n\t// File:src/renderers/WebGLRenderTarget.js\n\n\t/**\n\t * @author szimek / https://github.com/szimek/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author Marius Kintel / https://github.com/kintel\n\t */\n\n\t/*\n\t In options, we can specify:\n\t * Texture parameters for an auto-generated target texture\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n\t*/\n\tTHREE.WebGLRenderTarget = function ( width, height, options ) {\n\n\t\tthis.uuid = THREE.Math.generateUUID();\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tthis.scissor = new THREE.Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new THREE.Vector4( 0, 0, width, height );\n\n\t\toptions = options || {};\n\n\t\tif ( options.minFilter === undefined ) options.minFilter = THREE.LinearFilter;\n\n\t\tthis.texture = new THREE.Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\t\tthis.depthTexture = null;\n\n\t};\n\n\tObject.assign( THREE.WebGLRenderTarget.prototype, THREE.EventDispatcher.prototype, {\n\n\t\tsetSize: function ( width, height ) {\n\n\t\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\n\t\t\t\tthis.dispose();\n\n\t\t\t}\n\n\t\t\tthis.viewport.set( 0, 0, width, height );\n\t\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\n\t\t\tthis.viewport.copy( source.viewport );\n\n\t\t\tthis.texture = source.texture.clone();\n\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\tthis.depthTexture = source.depthTexture;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t// File:src/renderers/WebGLRenderTargetCube.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com\n\t */\n\n\tTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\n\n\t\tTHREE.WebGLRenderTarget.call( this, width, height, options );\n\n\t\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\t\tthis.activeMipMapLevel = 0;\n\n\t};\n\n\tTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\n\tTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\n\n\t// File:src/renderers/webgl/WebGLBufferRenderer.js\n\n\t/**\n\t* @author mrdoob / http://mrdoob.com/\n\t*/\n\n\tTHREE.WebGLBufferRenderer = function ( _gl, extensions, _infoRender ) {\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\t_gl.drawArrays( mode, start, count );\n\n\t\t\t_infoRender.calls ++;\n\t\t\t_infoRender.vertices += count;\n\t\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\n\n\t\t}\n\n\t\tfunction renderInstances( geometry ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar position = geometry.attributes.position;\n\n\t\t\tvar count = 0;\n\n\t\t\tif ( position instanceof THREE.InterleavedBufferAttribute ) {\n\n\t\t\t\tcount = position.data.count;\n\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\n\n\t\t\t} else {\n\n\t\t\t\tcount = position.count;\n\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\n\n\t\t\t}\n\n\t\t\t_infoRender.calls ++;\n\t\t\t_infoRender.vertices += count * geometry.maxInstancedCount;\n\t\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += geometry.maxInstancedCount * count / 3;\n\n\t\t}\n\n\t\tthis.setMode = setMode;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\n\t};\n\n\t// File:src/renderers/webgl/WebGLClipping.js\n\n\tTHREE.WebGLClipping = function() {\n\n\t\tvar scope = this,\n\n\t\t\tglobalState = null,\n\t\t\tnumGlobalPlanes = 0,\n\t\t\tlocalClippingEnabled = false,\n\t\t\trenderingShadows = false,\n\n\t\t\tplane = new THREE.Plane(),\n\t\t\tviewNormalMatrix = new THREE.Matrix3(),\n\n\t\t\tuniform = { value: null, needsUpdate: false };\n\n\t\tthis.uniform = uniform;\n\t\tthis.numPlanes = 0;\n\n\t\tthis.init = function( planes, enableLocalClipping, camera ) {\n\n\t\t\tvar enabled =\n\t\t\t\tplanes.length !== 0 ||\n\t\t\t\tenableLocalClipping ||\n\t\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t\t// run another frame in order to reset the state:\n\t\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\t\tlocalClippingEnabled;\n\n\t\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\t\tnumGlobalPlanes = planes.length;\n\n\t\t\treturn enabled;\n\n\t\t};\n\n\t\tthis.beginShadows = function() {\n\n\t\t\trenderingShadows = true;\n\t\t\tprojectPlanes( null );\n\n\t\t};\n\n\t\tthis.endShadows = function() {\n\n\t\t\trenderingShadows = false;\n\t\t\tresetGlobalState();\n\n\t\t};\n\n\t\tthis.setState = function( planes, clipShadows, camera, cache, fromCache ) {\n\n\t\t\tif ( ! localClippingEnabled ||\n\t\t\t\t\tplanes === null || planes.length === 0 ||\n\t\t\t\t\trenderingShadows && ! clipShadows ) {\n\t\t\t\t// there's no local clipping\n\n\t\t\t\tif ( renderingShadows ) {\n\t\t\t\t\t// there's no global clipping\n\n\t\t\t\t\tprojectPlanes( null );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tresetGlobalState();\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcache.clippingState = dstArray;\n\t\t\t\tthis.numPlanes += nGlobal;\n\n\t\t\t}\n\n\n\t\t};\n\n\t\tfunction resetGlobalState() {\n\n\t\t\tif ( uniform.value !== globalState ) {\n\n\t\t\t\tuniform.value = globalState;\n\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = numGlobalPlanes;\n\n\t\t}\n\n\t\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\t\tdstArray = null;\n\n\t\t\tif ( nPlanes !== 0 ) {\n\n\t\t\t\tdstArray = uniform.value;\n\n\t\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0, i4 = dstOffset;\n\t\t\t\t\t\t\t\t\t\ti !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\t\tplane.copy( planes[ i ] ).\n\t\t\t\t\t\t\t\tapplyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tuniform.value = dstArray;\n\t\t\t\tuniform.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = nPlanes;\n\t\t\treturn dstArray;\n\n\t\t}\n\n\t};\n\n\n\t// File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\n\n\t/**\n\t* @author mrdoob / http://mrdoob.com/\n\t*/\n\n\tTHREE.WebGLIndexedBufferRenderer = function ( _gl, extensions, _infoRender ) {\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tvar type, size;\n\n\t\tfunction setIndex( index ) {\n\n\t\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\n\n\t\t\t\ttype = _gl.UNSIGNED_INT;\n\t\t\t\tsize = 4;\n\n\t\t\t} else {\n\n\t\t\t\ttype = _gl.UNSIGNED_SHORT;\n\t\t\t\tsize = 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\t_gl.drawElements( mode, count, type, start * size );\n\n\t\t\t_infoRender.calls ++;\n\t\t\t_infoRender.vertices += count;\n\t\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\n\n\t\t}\n\n\t\tfunction renderInstances( geometry, start, count ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\textension.drawElementsInstancedANGLE( mode, count, type, start * size, geometry.maxInstancedCount );\n\n\t\t\t_infoRender.calls ++;\n\t\t\t_infoRender.vertices += count * geometry.maxInstancedCount;\n\t\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += geometry.maxInstancedCount * count / 3;\n\t\t}\n\n\t\tthis.setMode = setMode;\n\t\tthis.setIndex = setIndex;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\n\t};\n\n\t// File:src/renderers/webgl/WebGLExtensions.js\n\n\t/**\n\t* @author mrdoob / http://mrdoob.com/\n\t*/\n\n\tTHREE.WebGLExtensions = function ( gl ) {\n\n\t\tvar extensions = {};\n\n\t\tthis.get = function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ];\n\n\t\t\t}\n\n\t\t\tvar extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_etc1':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_etc1' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension;\n\n\t\t};\n\n\t};\n\n\t// File:src/renderers/webgl/WebGLCapabilities.js\n\n\tTHREE.WebGLCapabilities = function ( gl, extensions, parameters ) {\n\n\t\tvar maxAnisotropy;\n\n\t\tfunction getMaxAnisotropy() {\n\n\t\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t\t} else {\n\n\t\t\t\tmaxAnisotropy = 0;\n\n\t\t\t}\n\n\t\t\treturn maxAnisotropy;\n\n\t\t}\n\n\t\tfunction getMaxPrecision( precision ) {\n\n\t\t\tif ( precision === 'highp' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\t\treturn 'highp';\n\n\t\t\t\t}\n\n\t\t\t\tprecision = 'mediump';\n\n\t\t\t}\n\n\t\t\tif ( precision === 'mediump' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\t\treturn 'mediump';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn 'lowp';\n\n\t\t}\n\n\t\tthis.getMaxAnisotropy = getMaxAnisotropy;\n\t\tthis.getMaxPrecision = getMaxPrecision;\n\n\t\tthis.precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\t\tthis.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\n\n\t\tthis.maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\t\tthis.maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\t\tthis.maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\t\tthis.maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\t\tthis.maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\t\tthis.maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\t\tthis.maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\t\tthis.maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\t\tthis.vertexTextures = this.maxVertexTextures > 0;\n\t\tthis.floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\n\t\tthis.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\n\n\t\tvar _maxPrecision = getMaxPrecision( this.precision );\n\n\t\tif ( _maxPrecision !== this.precision ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.' );\n\t\t\tthis.precision = _maxPrecision;\n\n\t\t}\n\n\t\tif ( this.logarithmicDepthBuffer ) {\n\n\t\t\tthis.logarithmicDepthBuffer = !! extensions.get( 'EXT_frag_depth' );\n\n\t\t}\n\n\t};\n\n\t// File:src/renderers/webgl/WebGLGeometries.js\n\n\t/**\n\t* @author mrdoob / http://mrdoob.com/\n\t*/\n\n\tTHREE.WebGLGeometries = function ( gl, properties, info ) {\n\n\t\tvar geometries = {};\n\n\t\tfunction get( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometries[ geometry.id ] !== undefined ) {\n\n\t\t\t\treturn geometries[ geometry.id ];\n\n\t\t\t}\n\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tvar buffergeometry;\n\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\tbuffergeometry = geometry;\n\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\t\tgeometry._bufferGeometry = new THREE.BufferGeometry().setFromObject( object );\n\n\t\t\t\t}\n\n\t\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t\t}\n\n\t\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\t\tinfo.memory.geometries ++;\n\n\t\t\treturn buffergeometry;\n\n\t\t}\n\n\t\tfunction onGeometryDispose( event ) {\n\n\t\t\tvar geometry = event.target;\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\t\tdeleteAttribute( buffergeometry.index );\n\n\t\t\t}\n\n\t\t\tdeleteAttributes( buffergeometry.attributes );\n\n\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tdelete geometries[ geometry.id ];\n\n\t\t\t// TODO\n\n\t\t\tvar property = properties.get( geometry );\n\n\t\t\tif ( property.wireframe ) {\n\n\t\t\t\tdeleteAttribute( property.wireframe );\n\n\t\t\t}\n\n\t\t\tproperties.delete( geometry );\n\n\t\t\tvar bufferproperty = properties.get( buffergeometry );\n\n\t\t\tif ( bufferproperty.wireframe ) {\n\n\t\t\t\tdeleteAttribute( bufferproperty.wireframe );\n\n\t\t\t}\n\n\t\t\tproperties.delete( buffergeometry );\n\n\t\t\t//\n\n\t\t\tinfo.memory.geometries --;\n\n\t\t}\n\n\t\tfunction getAttributeBuffer( attribute ) {\n\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\n\n\t\t\t\treturn properties.get( attribute.data ).__webglBuffer;\n\n\t\t\t}\n\n\t\t\treturn properties.get( attribute ).__webglBuffer;\n\n\t\t}\n\n\t\tfunction deleteAttribute( attribute ) {\n\n\t\t\tvar buffer = getAttributeBuffer( attribute );\n\n\t\t\tif ( buffer !== undefined ) {\n\n\t\t\t\tgl.deleteBuffer( buffer );\n\t\t\t\tremoveAttributeBuffer( attribute );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction deleteAttributes( attributes ) {\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tdeleteAttribute( attributes[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction removeAttributeBuffer( attribute ) {\n\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\n\n\t\t\t\tproperties.delete( attribute.data );\n\n\t\t\t} else {\n\n\t\t\t\tproperties.delete( attribute );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.get = get;\n\n\t};\n\n\t// File:src/renderers/webgl/WebGLLights.js\n\n\t/**\n\t* @author mrdoob / http://mrdoob.com/\n\t*/\n\n\tTHREE.WebGLLights = function () {\n\n\t\tvar lights = {};\n\n\t\tthis.get = function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tvar uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new THREE.Vector3(),\n\t\t\t\t\t\tcolor: new THREE.Color(),\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new THREE.Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new THREE.Vector3(),\n\t\t\t\t\t\tdirection: new THREE.Vector3(),\n\t\t\t\t\t\tcolor: new THREE.Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new THREE.Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new THREE.Vector3(),\n\t\t\t\t\t\tcolor: new THREE.Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new THREE.Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new THREE.Vector3(),\n\t\t\t\t\t\tskyColor: new THREE.Color(),\n\t\t\t\t\t\tgroundColor: new THREE.Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t};\n\n\t};\n\n\t// File:src/renderers/webgl/WebGLObjects.js\n\n\t/**\n\t* @author mrdoob / http://mrdoob.com/\n\t*/\n\n\tTHREE.WebGLObjects = function ( gl, properties, info ) {\n\n\t\tvar geometries = new THREE.WebGLGeometries( gl, properties, info );\n\n\t\t//\n\n\t\tfunction update( object ) {\n\n\t\t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\n\n\t\t\tvar geometry = geometries.get( object );\n\n\t\t\tif ( object.geometry instanceof THREE.Geometry ) {\n\n\t\t\t\tgeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar attributes = geometry.attributes;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\t\tfor ( var name in morphAttributes ) {\n\n\t\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\tfunction updateAttribute( attribute, bufferType ) {\n\n\t\t\tvar data = ( attribute instanceof THREE.InterleavedBufferAttribute ) ? attribute.data : attribute;\n\n\t\t\tvar attributeProperties = properties.get( data );\n\n\t\t\tif ( attributeProperties.__webglBuffer === undefined ) {\n\n\t\t\t\tcreateBuffer( attributeProperties, data, bufferType );\n\n\t\t\t} else if ( attributeProperties.version !== data.version ) {\n\n\t\t\t\tupdateBuffer( attributeProperties, data, bufferType );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction createBuffer( attributeProperties, data, bufferType ) {\n\n\t\t\tattributeProperties.__webglBuffer = gl.createBuffer();\n\t\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\n\n\t\t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\n\t\t\tgl.bufferData( bufferType, data.array, usage );\n\n\t\t\tattributeProperties.version = data.version;\n\n\t\t}\n\n\t\tfunction updateBuffer( attributeProperties, data, bufferType ) {\n\n\t\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\n\n\t\t\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\n\n\t\t\t\t// Not using update ranges\n\n\t\t\t\tgl.bufferSubData( bufferType, 0, data.array );\n\n\t\t\t} else if ( data.updateRange.count === 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\n\n\t\t\t\tdata.updateRange.count = 0; // reset range\n\n\t\t\t}\n\n\t\t\tattributeProperties.version = data.version;\n\n\t\t}\n\n\t\tfunction getAttributeBuffer( attribute ) {\n\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\n\n\t\t\t\treturn properties.get( attribute.data ).__webglBuffer;\n\n\t\t\t}\n\n\t\t\treturn properties.get( attribute ).__webglBuffer;\n\n\t\t}\n\n\t\tfunction getWireframeAttribute( geometry ) {\n\n\t\t\tvar property = properties.get( geometry );\n\n\t\t\tif ( property.wireframe !== undefined ) {\n\n\t\t\t\treturn property.wireframe;\n\n\t\t\t}\n\n\t\t\tvar indices = [];\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar attributes = geometry.attributes;\n\t\t\tvar position = attributes.position;\n\n\t\t\t// console.time( 'wireframe' );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tvar edges = {};\n\t\t\t\tvar array = index.array;\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\t\tif ( checkEdge( edges, a, b ) ) indices.push( a, b );\n\t\t\t\t\tif ( checkEdge( edges, b, c ) ) indices.push( b, c );\n\t\t\t\t\tif ( checkEdge( edges, c, a ) ) indices.push( c, a );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar array = attributes.position.array;\n\n\t\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = i + 0;\n\t\t\t\t\tvar b = i + 1;\n\t\t\t\t\tvar c = i + 2;\n\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// console.timeEnd( 'wireframe' );\n\n\t\t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\n\t\t\tvar attribute = new THREE.BufferAttribute( new TypeArray( indices ), 1 );\n\n\t\t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t\tproperty.wireframe = attribute;\n\n\t\t\treturn attribute;\n\n\t\t}\n\n\t\tfunction checkEdge( edges, a, b ) {\n\n\t\t\tif ( a > b ) {\n\n\t\t\t\tvar tmp = a;\n\t\t\t\ta = b;\n\t\t\t\tb = tmp;\n\n\t\t\t}\n\n\t\t\tvar list = edges[ a ];\n\n\t\t\tif ( list === undefined ) {\n\n\t\t\t\tedges[ a ] = [ b ];\n\t\t\t\treturn true;\n\n\t\t\t} else if ( list.indexOf( b ) === -1 ) {\n\n\t\t\t\tlist.push( b );\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tthis.getAttributeBuffer = getAttributeBuffer;\n\t\tthis.getWireframeAttribute = getWireframeAttribute;\n\n\t\tthis.update = update;\n\n\t};\n\n\t// File:src/renderers/webgl/WebGLProgram.js\n\n\tTHREE.WebGLProgram = ( function () {\n\n\t\tvar programIdCount = 0;\n\n\t\tfunction getEncodingComponents( encoding ) {\n\n\t\t\tswitch ( encoding ) {\n\n\t\t\t\tcase THREE.LinearEncoding:\n\t\t\t\t\treturn [ 'Linear','( value )' ];\n\t\t\t\tcase THREE.sRGBEncoding:\n\t\t\t\t\treturn [ 'sRGB','( value )' ];\n\t\t\t\tcase THREE.RGBEEncoding:\n\t\t\t\t\treturn [ 'RGBE','( value )' ];\n\t\t\t\tcase THREE.RGBM7Encoding:\n\t\t\t\t\treturn [ 'RGBM','( value, 7.0 )' ];\n\t\t\t\tcase THREE.RGBM16Encoding:\n\t\t\t\t\treturn [ 'RGBM','( value, 16.0 )' ];\n\t\t\t\tcase THREE.RGBDEncoding:\n\t\t\t\t\treturn [ 'RGBD','( value, 256.0 )' ];\n\t\t\t\tcase THREE.GammaEncoding:\n\t\t\t\t\treturn [ 'Gamma','( value, float( GAMMA_FACTOR ) )' ];\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\t\t\tvar components = getEncodingComponents( encoding );\n\t\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return \" + components[ 0 ] + \"ToLinear\" + components[ 1 ] + \"; }\";\n\n\t\t}\n\n\t\tfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\t\t\tvar components = getEncodingComponents( encoding );\n\t\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return LinearTo\" + components[ 0 ] + components[ 1 ] + \"; }\";\n\n\t\t}\n\n\t\tfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\t\t\tvar toneMappingName;\n\n\t\t\tswitch ( toneMapping ) {\n\n\t\t\t\tcase THREE.LinearToneMapping:\n\t\t\t\t\ttoneMappingName = \"Linear\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase THREE.ReinhardToneMapping:\n\t\t\t\t\ttoneMappingName = \"Reinhard\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase THREE.Uncharted2ToneMapping:\n\t\t\t\t\ttoneMappingName = \"Uncharted2\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase THREE.CineonToneMapping:\n\t\t\t\t\ttoneMappingName = \"OptimizedCineon\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t\t\t}\n\n\t\t\treturn \"vec3 \" + functionName + \"( vec3 color ) { return \" + toneMappingName + \"ToneMapping( color ); }\";\n\n\t\t}\n\n\t\tfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\t\t\textensions = extensions || {};\n\n\t\t\tvar chunks = [\n\t\t\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : '',\n\t\t\t];\n\n\t\t\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n\t\t}\n\n\t\tfunction generateDefines( defines ) {\n\n\t\t\tvar chunks = [];\n\n\t\t\tfor ( var name in defines ) {\n\n\t\t\t\tvar value = defines[ name ];\n\n\t\t\t\tif ( value === false ) continue;\n\n\t\t\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t\t\t}\n\n\t\t\treturn chunks.join( '\\n' );\n\n\t\t}\n\n\t\tfunction fetchAttributeLocations( gl, program, identifiers ) {\n\n\t\t\tvar attributes = {};\n\n\t\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\t\t\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\t\t\tvar info = gl.getActiveAttrib( program, i );\n\t\t\t\tvar name = info.name;\n\n\t\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\n\n\t\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t\t\t}\n\n\t\t\treturn attributes;\n\n\t\t}\n\n\t\tfunction filterEmptyLine( string ) {\n\n\t\t\treturn string !== '';\n\n\t\t}\n\n\t\tfunction replaceLightNums( string, parameters ) {\n\n\t\t\treturn string\n\t\t\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n\t\t}\n\n\t\tfunction parseIncludes( string ) {\n\n\t\t\tvar pattern = /#include +<([\\w\\d.]+)>/g;\n\n\t\t\tfunction replace( match, include ) {\n\n\t\t\t\tvar replace = THREE.ShaderChunk[ include ];\n\n\t\t\t\tif ( replace === undefined ) {\n\n\t\t\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t\t\t}\n\n\t\t\t\treturn parseIncludes( replace );\n\n\t\t\t}\n\n\t\t\treturn string.replace( pattern, replace );\n\n\t\t}\n\n\t\tfunction unrollLoops( string ) {\n\n\t\t\tvar pattern = /for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\t\t\tfunction replace( match, start, end, snippet ) {\n\n\t\t\t\tvar unroll = '';\n\n\t\t\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t\t\t}\n\n\t\t\t\treturn unroll;\n\n\t\t\t}\n\n\t\t\treturn string.replace( pattern, replace );\n\n\t\t}\n\n\t\treturn function WebGLProgram( renderer, code, material, parameters ) {\n\n\t\t\tvar gl = renderer.context;\n\n\t\t\tvar extensions = material.extensions;\n\t\t\tvar defines = material.defines;\n\n\t\t\tvar vertexShader = material.__webglShader.vertexShader;\n\t\t\tvar fragmentShader = material.__webglShader.fragmentShader;\n\n\t\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\t\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\n\n\t\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\n\n\t\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t\t\t}\n\n\t\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\t\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\t\t\tif ( parameters.envMap ) {\n\n\t\t\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\t\t\tcase THREE.CubeReflectionMapping:\n\t\t\t\t\tcase THREE.CubeRefractionMapping:\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.CubeUVReflectionMapping:\n\t\t\t\t\tcase THREE.CubeUVRefractionMapping:\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.EquirectangularReflectionMapping:\n\t\t\t\t\tcase THREE.EquirectangularRefractionMapping:\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.SphericalReflectionMapping:\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\t\t\tcase THREE.CubeRefractionMapping:\n\t\t\t\t\tcase THREE.EquirectangularRefractionMapping:\n\t\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tswitch ( material.combine ) {\n\n\t\t\t\t\tcase THREE.MultiplyOperation:\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.MixOperation:\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.AddOperation:\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t\t\t// console.log( 'building new program ' );\n\n\t\t\t//\n\n\t\t\tvar customExtensions = generateExtensions( extensions, parameters, renderer.extensions );\n\n\t\t\tvar customDefines = generateDefines( defines );\n\n\t\t\t//\n\n\t\t\tvar program = gl.createProgram();\n\n\t\t\tvar prefixVertex, prefixFragment;\n\n\t\t\tif ( material instanceof THREE.RawShaderMaterial ) {\n\n\t\t\t\tprefixVertex = [\n\n\t\t\t\t\tcustomDefines\n\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\t\tprefixFragment = [\n\n\t\t\t\t\tcustomDefines\n\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\t} else {\n\n\t\t\t\tprefixVertex = [\n\n\t\t\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\n\n\t\t\t\t\tcustomDefines,\n\n\t\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\n\t\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t\t\t'attribute vec3 position;',\n\t\t\t\t\t'attribute vec3 normal;',\n\t\t\t\t\t'attribute vec2 uv;',\n\n\t\t\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t\t\t'\tattribute vec3 color;',\n\n\t\t\t\t\t'#endif',\n\n\t\t\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t\t\t'\t#else',\n\n\t\t\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t\t\t'\t#endif',\n\n\t\t\t\t\t'#endif',\n\n\t\t\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t\t\t'#endif',\n\n\t\t\t\t\t'\\n'\n\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\t\tprefixFragment = [\n\n\t\t\t\t\tcustomExtensions,\n\n\t\t\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\n\n\t\t\t\t\tcustomDefines,\n\n\t\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\n\n\t\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\t\tparameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '',\n\n\t\t\t\t\tparameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '',\n\n\t\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\t\tparameters.envMap && renderer.extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t\t\t( parameters.toneMapping !== THREE.NoToneMapping ) ? \"#define TONE_MAPPING\" : '',\n\t\t\t\t\t( parameters.toneMapping !== THREE.NoToneMapping ) ? THREE.ShaderChunk[ 'tonemapping_pars_fragment' ] : '',  // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t\t\t( parameters.toneMapping !== THREE.NoToneMapping ) ? getToneMappingFunction( \"toneMapping\", parameters.toneMapping ) : '',\n\n\t\t\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? THREE.ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( \"linearToOutputTexel\", parameters.outputEncoding ) : '',\n\n\t\t\t\t\tparameters.depthPacking ? \"#define DEPTH_PACKING \" + material.depthPacking : '',\n\n\t\t\t\t\t'\\n'\n\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\t}\n\n\t\t\tvertexShader = parseIncludes( vertexShader, parameters );\n\t\t\tvertexShader = replaceLightNums( vertexShader, parameters );\n\n\t\t\tfragmentShader = parseIncludes( fragmentShader, parameters );\n\t\t\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\n\t\t\tif ( material instanceof THREE.ShaderMaterial === false ) {\n\n\t\t\t\tvertexShader = unrollLoops( vertexShader );\n\t\t\t\tfragmentShader = unrollLoops( fragmentShader );\n\n\t\t\t}\n\n\t\t\tvar vertexGlsl = prefixVertex + vertexShader;\n\t\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t\t\t// console.log( '*VERTEX*', vertexGlsl );\n\t\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\t\t\tvar glVertexShader = THREE.WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\t\t\tvar glFragmentShader = THREE.WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\t\t\tgl.attachShader( program, glVertexShader );\n\t\t\tgl.attachShader( program, glFragmentShader );\n\n\t\t\t// Force a particular attribute to index 0.\n\n\t\t\tif ( material.index0AttributeName !== undefined ) {\n\n\t\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t\t\t} else if ( parameters.morphTargets === true ) {\n\n\t\t\t\t// programs with morphTargets displace position out of attribute 0\n\t\t\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t\t\t}\n\n\t\t\tgl.linkProgram( program );\n\n\t\t\tvar programLog = gl.getProgramInfoLog( program );\n\t\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\n\t\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\n\n\t\t\tvar runnable = true;\n\t\t\tvar haveDiagnostics = true;\n\n\t\t\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t\t\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tthis.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\t\t\t\t\tmaterial: material,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t// clean up\n\n\t\t\tgl.deleteShader( glVertexShader );\n\t\t\tgl.deleteShader( glFragmentShader );\n\n\t\t\t// set up caching for uniform locations\n\n\t\t\tvar cachedUniforms;\n\n\t\t\tthis.getUniforms = function() {\n\n\t\t\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t\t\tcachedUniforms =\n\t\t\t\t\t\t\tnew THREE.WebGLUniforms( gl, program, renderer );\n\n\t\t\t\t}\n\n\t\t\t\treturn cachedUniforms;\n\n\t\t\t};\n\n\t\t\t// set up caching for attribute locations\n\n\t\t\tvar cachedAttributes;\n\n\t\t\tthis.getAttributes = function() {\n\n\t\t\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t\t\t}\n\n\t\t\t\treturn cachedAttributes;\n\n\t\t\t};\n\n\t\t\t// free resource\n\n\t\t\tthis.destroy = function() {\n\n\t\t\t\tgl.deleteProgram( program );\n\t\t\t\tthis.program = undefined;\n\n\t\t\t};\n\n\t\t\t// DEPRECATED\n\n\t\t\tObject.defineProperties( this, {\n\n\t\t\t\tuniforms: {\n\t\t\t\t\tget: function() {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\t\t\treturn this.getUniforms();\n\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tattributes: {\n\t\t\t\t\tget: function() {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\t\t\treturn this.getAttributes();\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} );\n\n\n\t\t\t//\n\n\t\t\tthis.id = programIdCount ++;\n\t\t\tthis.code = code;\n\t\t\tthis.usedTimes = 1;\n\t\t\tthis.program = program;\n\t\t\tthis.vertexShader = glVertexShader;\n\t\t\tthis.fragmentShader = glFragmentShader;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t} )();\n\n\t// File:src/renderers/webgl/WebGLPrograms.js\n\n\tTHREE.WebGLPrograms = function ( renderer, capabilities ) {\n\n\t\tvar programs = [];\n\n\t\tvar shaderIDs = {\n\t\t\tMeshDepthMaterial: 'depth',\n\t\t\tMeshNormalMaterial: 'normal',\n\t\t\tMeshBasicMaterial: 'basic',\n\t\t\tMeshLambertMaterial: 'lambert',\n\t\t\tMeshPhongMaterial: 'phong',\n\t\t\tMeshStandardMaterial: 'physical',\n\t\t\tMeshPhysicalMaterial: 'physical',\n\t\t\tLineBasicMaterial: 'basic',\n\t\t\tLineDashedMaterial: 'dashed',\n\t\t\tPointsMaterial: 'points'\n\t\t};\n\n\t\tvar parameterNames = [\n\t\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\",\n\t\t\t\"roughnessMap\", \"metalnessMap\",\n\t\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\",\n\t\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"depthPacking\"\n\t\t];\n\n\n\t\tfunction allocateBones ( object ) {\n\n\t\t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\n\n\t\t\t\treturn 1024;\n\n\t\t\t} else {\n\n\t\t\t\t// default for when object is not specified\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t\t//\n\t\t\t\t//  - leave some extra space for other uniforms\n\t\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t\t//    (up to 54 should be safe)\n\n\t\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\t\tvar maxBones = nVertexMatrices;\n\n\t\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\n\n\t\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\n\n\t\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\n\n\t\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn maxBones;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\t\tvar encoding;\n\n\t\t\tif ( ! map ) {\n\n\t\t\t\tencoding = THREE.LinearEncoding;\n\n\t\t\t} else if ( map instanceof THREE.Texture ) {\n\n\t\t\t\tencoding = map.encoding;\n\n\t\t\t} else if ( map instanceof THREE.WebGLRenderTarget ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\tencoding = map.texture.encoding;\n\n\t\t\t}\n\n\t\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\t\tif ( encoding === THREE.LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\t\tencoding = THREE.GammaEncoding;\n\n\t\t\t}\n\n\t\t\treturn encoding;\n\n\t\t}\n\n\t\tthis.getParameters = function ( material, lights, fog, nClipPlanes, object ) {\n\n\t\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t\t// (not to blow over maxLights budget)\n\n\t\t\tvar maxBones = allocateBones( object );\n\t\t\tvar precision = renderer.getPrecision();\n\n\t\t\tif ( material.precision !== null ) {\n\n\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar currentRenderTarget = renderer.getCurrentRenderTarget();\n\n\t\t\tvar parameters = {\n\n\t\t\t\tshaderID: shaderID,\n\n\t\t\t\tprecision: precision,\n\t\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\t\tmap: !! material.map,\n\t\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\t\tenvMap: !! material.envMap,\n\t\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === THREE.CubeUVReflectionMapping ) || ( material.envMap.mapping === THREE.CubeUVRefractionMapping ) ),\n\t\t\t\tlightMap: !! material.lightMap,\n\t\t\t\taoMap: !! material.aoMap,\n\t\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\t\tbumpMap: !! material.bumpMap,\n\t\t\t\tnormalMap: !! material.normalMap,\n\t\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\t\tspecularMap: !! material.specularMap,\n\t\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\t\tcombine: material.combine,\n\n\t\t\t\tvertexColors: material.vertexColors,\n\n\t\t\t\tfog: !! fog,\n\t\t\t\tuseFog: material.fog,\n\t\t\t\tfogExp: fog instanceof THREE.FogExp2,\n\n\t\t\t\tflatShading: material.shading === THREE.FlatShading,\n\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\t\tskinning: material.skinning,\n\t\t\t\tmaxBones: maxBones,\n\t\t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\n\n\t\t\t\tmorphTargets: material.morphTargets,\n\t\t\t\tmorphNormals: material.morphNormals,\n\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\t\tnumDirLights: lights.directional.length,\n\t\t\t\tnumPointLights: lights.point.length,\n\t\t\t\tnumSpotLights: lights.spot.length,\n\t\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\t\tnumClippingPlanes: nClipPlanes,\n\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && lights.shadows.length > 0,\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\t\talphaTest: material.alphaTest,\n\t\t\t\tdoubleSided: material.side === THREE.DoubleSide,\n\t\t\t\tflipSided: material.side === THREE.BackSide,\n\n\t\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t\t};\n\n\t\t\treturn parameters;\n\n\t\t};\n\n\t\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\t\tvar array = [];\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tarray.push( parameters.shaderID );\n\n\t\t\t} else {\n\n\t\t\t\tarray.push( material.fragmentShader );\n\t\t\t\tarray.push( material.vertexShader );\n\n\t\t\t}\n\n\t\t\tif ( material.defines !== undefined ) {\n\n\t\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\t\tarray.push( name );\n\t\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t\t}\n\n\t\t\treturn array.join();\n\n\t\t};\n\n\t\tthis.acquireProgram = function ( material, parameters, code ) {\n\n\t\t\tvar program;\n\n\t\t\t// Check if code has been already compiled\n\t\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\t\tvar programInfo = programs[ p ];\n\n\t\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\t\tprogram = programInfo;\n\t\t\t\t\t++ program.usedTimes;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tprogram = new THREE.WebGLProgram( renderer, code, material, parameters );\n\t\t\t\tprograms.push( program );\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t};\n\n\t\tthis.releaseProgram = function( program ) {\n\n\t\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t\t// Remove from unordered set\n\t\t\t\tvar i = programs.indexOf( program );\n\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\t\tprograms.pop();\n\n\t\t\t\t// Free WebGL resources\n\t\t\t\tprogram.destroy();\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tthis.programs = programs;\n\n\t};\n\n\t// File:src/renderers/webgl/WebGLProperties.js\n\n\t/**\n\t* @author fordacious / fordacious.github.io\n\t*/\n\n\tTHREE.WebGLProperties = function () {\n\n\t\tvar properties = {};\n\n\t\tthis.get = function ( object ) {\n\n\t\t\tvar uuid = object.uuid;\n\t\t\tvar map = properties[ uuid ];\n\n\t\t\tif ( map === undefined ) {\n\n\t\t\t\tmap = {};\n\t\t\t\tproperties[ uuid ] = map;\n\n\t\t\t}\n\n\t\t\treturn map;\n\n\t\t};\n\n\t\tthis.delete = function ( object ) {\n\n\t\t\tdelete properties[ object.uuid ];\n\n\t\t};\n\n\t\tthis.clear = function () {\n\n\t\t\tproperties = {};\n\n\t\t};\n\n\t};\n\n\t// File:src/renderers/webgl/WebGLShader.js\n\n\tTHREE.WebGLShader = ( function () {\n\n\t\tfunction addLineNumbers( string ) {\n\n\t\t\tvar lines = string.split( '\\n' );\n\n\t\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t\t\t}\n\n\t\t\treturn lines.join( '\\n' );\n\n\t\t}\n\n\t\treturn function WebGLShader( gl, type, string ) {\n\n\t\t\tvar shader = gl.createShader( type );\n\n\t\t\tgl.shaderSource( shader, string );\n\t\t\tgl.compileShader( shader );\n\n\t\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t\t\t}\n\n\t\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t\t\t}\n\n\t\t\t// --enable-privileged-webgl-extension\n\t\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\t\treturn shader;\n\n\t\t};\n\n\t} )();\n\n\t// File:src/renderers/webgl/WebGLShadowMap.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.WebGLShadowMap = function ( _renderer, _lights, _objects, capabilities ) {\n\n\t\tvar _gl = _renderer.context,\n\t\t_state = _renderer.state,\n\t\t_frustum = new THREE.Frustum(),\n\t\t_projScreenMatrix = new THREE.Matrix4(),\n\n\t\t_lightShadows = _lights.shadows,\n\n\t\t_shadowMapSize = new THREE.Vector2(),\n\t\t_maxShadowMapSize = new THREE.Vector2( capabilities.maxTextureSize, capabilities.maxTextureSize ),\n\n\t\t_lookTarget = new THREE.Vector3(),\n\t\t_lightPositionWorld = new THREE.Vector3(),\n\n\t\t_renderList = [],\n\n\t\t_MorphingFlag = 1,\n\t\t_SkinningFlag = 2,\n\n\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t_materialCache = {};\n\n\t\tvar cubeDirections = [\n\t\t\tnew THREE.Vector3( 1, 0, 0 ), new THREE.Vector3( - 1, 0, 0 ), new THREE.Vector3( 0, 0, 1 ),\n\t\t\tnew THREE.Vector3( 0, 0, - 1 ), new THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tvar cubeUps = [\n\t\t\tnew THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 1, 0 ),\n\t\t\tnew THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 0, 1 ),\tnew THREE.Vector3( 0, 0, - 1 )\n\t\t];\n\n\t\tvar cube2DViewPorts = [\n\t\t\tnew THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4(),\n\t\t\tnew THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4()\n\t\t];\n\n\t\t// init\n\n\t\tvar depthMaterialTemplate = new THREE.MeshDepthMaterial();\n\t\tdepthMaterialTemplate.depthPacking = THREE.RGBADepthPacking;\n\t\tdepthMaterialTemplate.clipping = true;\n\n\t\tvar distanceShader = THREE.ShaderLib[ \"distanceRGBA\" ];\n\t\tvar distanceUniforms = THREE.UniformsUtils.clone( distanceShader.uniforms );\n\n\t\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\t\tvar depthMaterial = depthMaterialTemplate.clone();\n\t\t\tdepthMaterial.morphTargets = useMorphing;\n\t\t\tdepthMaterial.skinning = useSkinning;\n\n\t\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t\tvar distanceMaterial = new THREE.ShaderMaterial( {\n\t\t\t\tdefines: {\n\t\t\t\t\t'USE_SHADOWMAP': ''\n\t\t\t\t},\n\t\t\t\tuniforms: distanceUniforms,\n\t\t\t\tvertexShader: distanceShader.vertexShader,\n\t\t\t\tfragmentShader: distanceShader.fragmentShader,\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning,\n\t\t\t\tclipping: true\n\t\t\t} );\n\n\t\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t\t}\n\n\t\t//\n\n\t\tvar scope = this;\n\n\t\tthis.enabled = false;\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis.type = THREE.PCFShadowMap;\n\n\t\tthis.renderReverseSided = true;\n\t\tthis.renderSingleSided = true;\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\t\tif ( _lightShadows.length === 0 ) return;\n\n\t\t\t// Set GL state for depth map.\n\t\t\t_state.clearColor( 1, 1, 1, 1 );\n\t\t\t_state.disable( _gl.BLEND );\n\t\t\t_state.setDepthTest( true );\n\t\t\t_state.setScissorTest( false );\n\n\t\t\t// render depth map\n\n\t\t\tvar faceCount, isPointLight;\n\n\t\t\tfor ( var i = 0, il = _lightShadows.length; i < il; i ++ ) {\n\n\t\t\t\tvar light = _lightShadows[ i ];\n\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\t\tif ( light instanceof THREE.PointLight ) {\n\n\t\t\t\t\tfaceCount = 6;\n\t\t\t\t\tisPointLight = true;\n\n\t\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t\t// following orientation:\n\t\t\t\t\t//\n\t\t\t\t\t//  xzXZ\n\t\t\t\t\t//   y Y\n\t\t\t\t\t//\n\t\t\t\t\t// X - Positive x direction\n\t\t\t\t\t// x - Negative x direction\n\t\t\t\t\t// Y - Positive y direction\n\t\t\t\t\t// y - Negative y direction\n\t\t\t\t\t// Z - Positive z direction\n\t\t\t\t\t// z - Negative z direction\n\n\t\t\t\t\t// positive X\n\t\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// negative X\n\t\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// positive Z\n\t\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// negative Z\n\t\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// positive Y\n\t\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t\t// negative Y\n\t\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfaceCount = 1;\n\t\t\t\t\tisPointLight = false;\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\t\tvar pars = { minFilter: THREE.NearestFilter, magFilter: THREE.NearestFilter, format: THREE.RGBAFormat };\n\n\t\t\t\t\tshadow.map = new THREE.WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\n\t\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow instanceof THREE.SpotLightShadow ) {\n\n\t\t\t\t\tshadow.update( light );\n\n\t\t\t\t}\n\n\t\t\t\tvar shadowMap = shadow.map;\n\t\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t\t_renderer.clear();\n\n\t\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t\t// run a single pass if not\n\n\t\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\n\t\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\t\t\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\n\n\t\t\t\t\t// compute shadow matrix\n\n\t\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t\t);\n\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\t\t_renderList.length = 0;\n\n\t\t\t\t\tprojectObject( scene, camera, shadowCamera );\n\n\t\t\t\t\t// render shadow map\n\t\t\t\t\t// render regular objects\n\n\t\t\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar object = _renderList[ j ];\n\t\t\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\t\tif ( material instanceof THREE.MultiMaterial ) {\n\n\t\t\t\t\t\t\tvar groups = geometry.groups;\n\t\t\t\t\t\t\tvar materials = material.materials;\n\n\t\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\n\n\t\t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld );\n\t\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld );\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Restore GL state.\n\t\t\tvar clearColor = _renderer.getClearColor(),\n\t\t\tclearAlpha = _renderer.getClearAlpha();\n\t\t\t_renderer.setClearColor( clearColor, clearAlpha );\n\n\t\t\tscope.needsUpdate = false;\n\n\t\t};\n\n\t\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tvar result = null;\n\n\t\t\tvar materialVariants = _depthMaterials;\n\t\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t\t}\n\n\t\t\tif ( ! customMaterial ) {\n\n\t\t\t\tvar useMorphing = false;\n\n\t\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\n\n\t\t\t\tvar variantIndex = 0;\n\n\t\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t\t} else {\n\n\t\t\t\tresult = customMaterial;\n\n\t\t\t}\n\n\t\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\t material.clipShadows === true &&\n\t\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult.visible = material.visible;\n\t\t\tresult.wireframe = material.wireframe;\n\n\t\t\tvar side = material.side;\n\n\t\t\tif ( scope.renderSingleSided && side == THREE.DoubleSide ) {\n\n\t\t\t\tside = THREE.FrontSide;\n\n\t\t\t}\n\n\t\t\tif ( scope.renderReverseSided ) {\n\n\t\t\t\tif ( side === THREE.FrontSide ) side = THREE.BackSide;\n\t\t\t\telse if ( side === THREE.BackSide ) side = THREE.FrontSide;\n\n\t\t\t}\n\n\t\t\tresult.side = side;\n\n\t\t\tresult.clipShadows = material.clipShadows;\n\t\t\tresult.clippingPlanes = material.clippingPlanes;\n\n\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\t\tresult.linewidth = material.linewidth;\n\n\t\t\tif ( isPointLight && result.uniforms.lightPos !== undefined ) {\n\n\t\t\t\tresult.uniforms.lightPos.value.copy( lightPositionWorld );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfunction projectObject( object, camera, shadowCamera ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tif ( object.layers.test( camera.layers ) && ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) ) {\n\n\t\t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\n\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( material.visible === true ) {\n\n\t\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\t\t\t\t\t\t_renderList.push( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, shadowCamera );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t// File:src/renderers/webgl/WebGLState.js\n\n\t/**\n\t* @author mrdoob / http://mrdoob.com/\n\t*/\n\n\tTHREE.WebGLState = function ( gl, extensions, paramThreeToGL ) {\n\n\t\tvar _this = this;\n\n\t\tthis.buffers = {\n\t\t\tcolor: new THREE.WebGLColorBuffer( gl, this ),\n\t\t\tdepth: new THREE.WebGLDepthBuffer( gl, this ),\n\t\t\tstencil: new THREE.WebGLStencilBuffer( gl, this )\n\t\t};\n\n\t\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\t\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\t\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\t\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\t\tvar capabilities = {};\n\n\t\tvar compressedTextureFormats = null;\n\n\t\tvar currentBlending = null;\n\t\tvar currentBlendEquation = null;\n\t\tvar currentBlendSrc = null;\n\t\tvar currentBlendDst = null;\n\t\tvar currentBlendEquationAlpha = null;\n\t\tvar currentBlendSrcAlpha = null;\n\t\tvar currentBlendDstAlpha = null;\n\t\tvar currentPremultipledAlpha = false;\n\n\t\tvar currentFlipSided = null;\n\t\tvar currentCullFace = null;\n\n\t\tvar currentLineWidth = null;\n\n\t\tvar currentPolygonOffsetFactor = null;\n\t\tvar currentPolygonOffsetUnits = null;\n\n\t\tvar currentScissorTest = null;\n\n\t\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\n\t\tvar currentTextureSlot = null;\n\t\tvar currentBoundTextures = {};\n\n\t\tvar currentScissor = new THREE.Vector4();\n\t\tvar currentViewport = new THREE.Vector4();\n\n\t\tfunction createTexture( type, target, count ) {\n\n\t\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\t\tvar texture = gl.createTexture();\n\n\t\t\tgl.bindTexture( type, texture );\n\t\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t\tvar emptyTextures = {};\n\t\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\t\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t\t//\n\n\t\tthis.init = function () {\n\n\t\t\tthis.clearColor( 0, 0, 0, 1 );\n\t\t\tthis.clearDepth( 1 );\n\t\t\tthis.clearStencil( 0 );\n\n\t\t\tthis.enable( gl.DEPTH_TEST );\n\t\t\tthis.setDepthFunc( THREE.LessEqualDepth );\n\n\t\t\tthis.setFlipSided( false );\n\t\t\tthis.setCullFace( THREE.CullFaceBack );\n\t\t\tthis.enable( gl.CULL_FACE );\n\n\t\t\tthis.enable( gl.BLEND );\n\t\t\tthis.setBlending( THREE.NormalBlending );\n\n\t\t};\n\n\t\tthis.initAttributes = function () {\n\n\t\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\t\tnewAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.enableAttribute = function ( attribute ) {\n\n\t\t\tnewAttributes[ attribute ] = 1;\n\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t\t}\n\n\t\t\tif ( attributeDivisors[ attribute ] !== 0 ) {\n\n\t\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t\textension.vertexAttribDivisorANGLE( attribute, 0 );\n\t\t\t\tattributeDivisors[ attribute ] = 0;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.enableAttributeAndDivisor = function ( attribute, meshPerAttribute, extension ) {\n\n\t\t\tnewAttributes[ attribute ] = 1;\n\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t\t}\n\n\t\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\n\t\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.disableUnusedAttributes = function () {\n\n\t\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.enable = function ( id ) {\n\n\t\t\tif ( capabilities[ id ] !== true ) {\n\n\t\t\t\tgl.enable( id );\n\t\t\t\tcapabilities[ id ] = true;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.disable = function ( id ) {\n\n\t\t\tif ( capabilities[ id ] !== false ) {\n\n\t\t\t\tgl.disable( id );\n\t\t\t\tcapabilities[ id ] = false;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getCompressedTextureFormats = function () {\n\n\t\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\t\tcompressedTextureFormats = [];\n\n\t\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ) {\n\n\t\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\n\n\t\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn compressedTextureFormats;\n\n\t\t};\n\n\t\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\t\tif ( blending !== THREE.NoBlending ) {\n\n\t\t\t\tthis.enable( gl.BLEND );\n\n\t\t\t} else {\n\n\t\t\t\tthis.disable( gl.BLEND );\n\t\t\t\tcurrentBlending = blending; // no blending, that is\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( blending === THREE.AdditiveBlending ) {\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\tif ( blending === THREE.CustomBlending ) {\n\n\t\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\n\n\t\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t\t}\n\n\t\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\n\n\t\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tcurrentBlendEquation = null;\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\t// TODO Deprecate\n\n\t\tthis.setColorWrite = function ( colorWrite ) {\n\n\t\t\tthis.buffers.color.setMask( colorWrite );\n\n\t\t};\n\n\t\tthis.setDepthTest = function ( depthTest ) {\n\n\t\t\tthis.buffers.depth.setTest( depthTest );\n\n\t\t};\n\n\t\tthis.setDepthWrite = function ( depthWrite ) {\n\n\t\t\tthis.buffers.depth.setMask( depthWrite );\n\n\t\t};\n\n\t\tthis.setDepthFunc = function ( depthFunc ) {\n\n\t\t\tthis.buffers.depth.setFunc( depthFunc );\n\n\t\t};\n\n\t\tthis.setStencilTest = function ( stencilTest ) {\n\n\t\t\tthis.buffers.stencil.setTest( stencilTest );\n\n\t\t};\n\n\t\tthis.setStencilWrite = function ( stencilWrite ) {\n\n\t\t\tthis.buffers.stencil.setMask( stencilWrite );\n\n\t\t};\n\n\t\tthis.setStencilFunc = function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\tthis.buffers.stencil.setFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t};\n\n\t\tthis.setStencilOp = function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\tthis.buffers.stencil.setOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.setFlipSided = function ( flipSided ) {\n\n\t\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\t\tif ( flipSided ) {\n\n\t\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentFlipSided = flipSided;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setCullFace = function ( cullFace ) {\n\n\t\t\tif ( cullFace !== THREE.CullFaceNone ) {\n\n\t\t\t\tthis.enable( gl.CULL_FACE );\n\n\t\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\t\tif ( cullFace === THREE.CullFaceBack ) {\n\n\t\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\n\n\t\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.disable( gl.CULL_FACE );\n\n\t\t\t}\n\n\t\t\tcurrentCullFace = cullFace;\n\n\t\t};\n\n\t\tthis.setLineWidth = function ( width ) {\n\n\t\t\tif ( width !== currentLineWidth ) {\n\n\t\t\t\tgl.lineWidth( width );\n\n\t\t\t\tcurrentLineWidth = width;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setPolygonOffset = function ( polygonOffset, factor, units ) {\n\n\t\t\tif ( polygonOffset ) {\n\n\t\t\t\tthis.enable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.disable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn currentScissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( scissorTest ) {\n\n\t\t\tcurrentScissorTest = scissorTest;\n\n\t\t\tif ( scissorTest ) {\n\n\t\t\t\tthis.enable( gl.SCISSOR_TEST );\n\n\t\t\t} else {\n\n\t\t\t\tthis.disable( gl.SCISSOR_TEST );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// texture\n\n\t\tthis.activeTexture = function ( webglSlot ) {\n\n\t\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.bindTexture = function ( webglType, webglTexture ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\t_this.activeTexture();\n\n\t\t\t}\n\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\t\tif ( boundTexture === undefined ) {\n\n\t\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t\t}\n\n\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\t\tboundTexture.type = webglType;\n\t\t\t\tboundTexture.texture = webglTexture;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.compressedTexImage2D = function () {\n\n\t\t\ttry {\n\n\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( error );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.texImage2D = function () {\n\n\t\t\ttry {\n\n\t\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( error );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// TODO Deprecate\n\n\t\tthis.clearColor = function ( r, g, b, a ) {\n\n\t\t\tthis.buffers.color.setClear( r, g, b, a );\n\n\t\t};\n\n\t\tthis.clearDepth = function ( depth ) {\n\n\t\t\tthis.buffers.depth.setClear( depth );\n\n\t\t};\n\n\t\tthis.clearStencil = function ( stencil ) {\n\n\t\t\tthis.buffers.stencil.setClear( stencil );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.scissor = function ( scissor ) {\n\n\t\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\t\tcurrentScissor.copy( scissor );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.viewport = function ( viewport ) {\n\n\t\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\t\tcurrentViewport.copy( viewport );\n\n\t\t\t}\n\n\t\t};\n\n\t\t//\n\n\t\tthis.reset = function () {\n\n\t\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcapabilities = {};\n\n\t\t\tcompressedTextureFormats = null;\n\n\t\t\tcurrentTextureSlot = null;\n\t\t\tcurrentBoundTextures = {};\n\n\t\t\tcurrentBlending = null;\n\n\t\t\tcurrentFlipSided = null;\n\t\t\tcurrentCullFace = null;\n\n\t\t\tthis.buffers.color.reset();\n\t\t\tthis.buffers.depth.reset();\n\t\t\tthis.buffers.stencil.reset();\n\n\t\t};\n\n\t};\n\n\tTHREE.WebGLColorBuffer = function ( gl, state ) {\n\n\t\tvar locked = false;\n\n\t\tvar color = new THREE.Vector4();\n\t\tvar currentColorMask = null;\n\t\tvar currentColorClear = new THREE.Vector4();\n\n\t\tthis.setMask = function ( colorMask ) {\n\n\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setLocked = function ( lock ) {\n\n\t\t\tlocked = lock;\n\n\t\t};\n\n\t\tthis.setClear = function ( r, g, b, a ) {\n\n\t\t\tcolor.set( r, g, b, a );\n\n\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tlocked = false;\n\n\t\t\tcurrentColorMask = null;\n\t\t\tcurrentColorClear = new THREE.Vector4();\n\n\t\t};\n\n\t};\n\n\tTHREE.WebGLDepthBuffer = function( gl, state ) {\n\n\t\tvar locked = false;\n\n\t\tvar currentDepthMask = null;\n\t\tvar currentDepthFunc = null;\n\t\tvar currentDepthClear = null;\n\n\t\tthis.setTest = function ( depthTest ) {\n\n\t\t\tif ( depthTest ) {\n\n\t\t\t\tstate.enable( gl.DEPTH_TEST );\n\n\t\t\t} else {\n\n\t\t\t\tstate.disable( gl.DEPTH_TEST );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setMask = function( depthMask ){\n\n\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setFunc = function ( depthFunc ) {\n\n\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase THREE.NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase THREE.AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase THREE.LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase THREE.LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase THREE.EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase THREE.GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase THREE.GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase THREE.NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setLocked = function ( lock ) {\n\n\t\t\tlocked = lock;\n\n\t\t};\n\n\t\tthis.setClear = function ( depth ) {\n\n\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\tgl.clearDepth( depth );\n\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tlocked = false;\n\n\t\t\tcurrentDepthMask = null;\n\t\t\tcurrentDepthFunc = null;\n\t\t\tcurrentDepthClear = null;\n\n\t\t};\n\n\t};\n\n\tTHREE.WebGLStencilBuffer = function ( gl, state ) {\n\n\t\tvar locked = false;\n\n\t\tvar currentStencilMask = null;\n\t\tvar currentStencilFunc = null;\n\t\tvar currentStencilRef = null;\n\t\tvar currentStencilFuncMask = null;\n\t\tvar currentStencilFail  = null;\n\t\tvar currentStencilZFail = null;\n\t\tvar currentStencilZPass = null;\n\t\tvar currentStencilClear = null;\n\n\t\tthis.setTest = function ( stencilTest ) {\n\n\t\t\tif ( stencilTest ) {\n\n\t\t\t\tstate.enable( gl.STENCIL_TEST );\n\n\t\t\t} else {\n\n\t\t\t\tstate.disable( gl.STENCIL_TEST );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setMask = function ( stencilMask ) {\n\n\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setFunc = function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\tgl.stencilFunc( stencilFunc,  stencilRef, stencilMask );\n\n\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\tcurrentStencilRef  = stencilRef;\n\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setOp\t = function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\tgl.stencilOp( stencilFail,  stencilZFail, stencilZPass );\n\n\t\t\t\tcurrentStencilFail  = stencilFail;\n\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setLocked = function ( lock ) {\n\n\t\t\tlocked = lock;\n\n\t\t};\n\n\t\tthis.setClear = function ( stencil ) {\n\n\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tlocked = false;\n\n\t\t\tcurrentStencilMask = null;\n\t\t\tcurrentStencilFunc = null;\n\t\t\tcurrentStencilRef = null;\n\t\t\tcurrentStencilFuncMask = null;\n\t\t\tcurrentStencilFail = null;\n\t\t\tcurrentStencilZFail = null;\n\t\t\tcurrentStencilZPass = null;\n\t\t\tcurrentStencilClear = null;\n\n\t\t};\n\n\t};\n\n\t// File:src/renderers/webgl/WebGLTextures.js\n\n\t/**\n\t* @author mrdoob / http://mrdoob.com/\n\t*/\n\n\tTHREE.WebGLTextures = function ( _gl, extensions, state, properties, capabilities, paramThreeToGL, info ) {\n\n\t\tvar _infoMemory = info.memory;\n\t\tvar _isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext );\n\n\t\t//\n\n\t\tfunction clampToMaxSize ( image, maxSize ) {\n\n\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t\t// premultiplied alpha.\n\n\t\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n\t\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\t\tcanvas.height = Math.floor( image.height * scale );\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\t\treturn canvas;\n\n\t\t\t}\n\n\t\t\treturn image;\n\n\t\t}\n\n\t\tfunction isPowerOfTwo( image ) {\n\n\t\t\treturn THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height );\n\n\t\t}\n\n\t\tfunction makePowerOfTwo( image ) {\n\n\t\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement ) {\n\n\t\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = THREE.Math.nearestPowerOfTwo( image.width );\n\t\t\t\tcanvas.height = THREE.Math.nearestPowerOfTwo( image.height );\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\t\treturn canvas;\n\n\t\t\t}\n\n\t\t\treturn image;\n\n\t\t}\n\n\t\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) return true;\n\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) return true;\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// Fallback filters for non-power-of-2 textures\n\n\t\tfunction filterFallback ( f ) {\n\n\t\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\n\n\t\t\t\treturn _gl.NEAREST;\n\n\t\t\t}\n\n\t\t\treturn _gl.LINEAR;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction onTextureDispose( event ) {\n\n\t\t\tvar texture = event.target;\n\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\t\tdeallocateTexture( texture );\n\n\t\t\t_infoMemory.textures --;\n\n\n\t\t}\n\n\t\tfunction onRenderTargetDispose( event ) {\n\n\t\t\tvar renderTarget = event.target;\n\n\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\tdeallocateRenderTarget( renderTarget );\n\n\t\t\t_infoMemory.textures --;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction deallocateTexture( texture ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\n\t\t\t} else {\n\n\t\t\t\t// 2D texture\n\n\t\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t\t// remove all webgl properties\n\t\t\tproperties.delete( texture );\n\n\t\t}\n\n\t\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\tif ( ! renderTarget ) return;\n\n\t\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t\t}\n\n\t\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t\t}\n\n\t\t\tproperties.delete( renderTarget.texture );\n\t\t\tproperties.delete( renderTarget );\n\n\t\t}\n\n\t\t//\n\n\n\n\t\tfunction setTexture2D( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tvar image = texture.image;\n\n\t\t\t\tif ( image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\n\n\t\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tfunction setTextureCube ( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.image.length === 6 ) {\n\n\t\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\n\t\t\t\t\t\t_infoMemory.textures ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n\t\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\n\t\t\t\t\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\n\n\t\t\t\t\tvar cubeImage = [];\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\t\tglFormat = paramThreeToGL( texture.format ),\n\t\t\t\t\tglType = paramThreeToGL( texture.type );\n\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\n\n\t\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\" );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( texture.generateMipmaps && isPowerOfTwoImage ) {\n\n\t\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setTextureCubeDynamic ( texture, slot ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\n\t\t}\n\n\t\tfunction setTextureParameters ( textureType, texture, isPowerOfTwoImage ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( isPowerOfTwoImage ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension ) {\n\n\t\t\t\tif ( texture.type === THREE.FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\t\tif ( texture.type === THREE.HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\n\n\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t_infoMemory.textures ++;\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n\t\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\n\t\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\n\t\t\t\timage = makePowerOfTwo( image );\n\n\t\t\t}\n\n\t\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\tglFormat = paramThreeToGL( texture.format ),\n\t\t\tglType = paramThreeToGL( texture.type );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\n\n\t\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\t\tif ( texture instanceof THREE.DepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tvar internalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( texture.type === THREE.FloatType ) {\n\n\t\t\t\t\tif ( !_isWebGL2 ) throw new Error('Float Depth Texture only supported in WebGL2.0');\n\t\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t} else if ( _isWebGL2 ) {\n\n\t\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t\t}\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t} else if ( texture instanceof THREE.DataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\n\n\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texture.generateMipmaps && isPowerOfTwoImage ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\t// Render targets\n\n\t\t// Setup storage for target texture and bind it to correct framebuffer\n\t\tfunction setupFrameBufferTexture ( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\t\tvar glFormat = paramThreeToGL( renderTarget.texture.format );\n\t\t\tvar glType = paramThreeToGL( renderTarget.texture.type );\n\t\t\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t}\n\n\t\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\t\tfunction setupRenderBufferStorage ( renderbuffer, renderTarget ) {\n\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t} else {\n\n\t\t\t\t// FIXME: We don't support !depth !stencil\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t}\n\n\t\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\t\tfunction setupDepthTexture ( framebuffer, renderTarget ) {\n\n\t\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\n\t\t\tif ( isCube ) throw new Error('Depth Texture with cube render targets is not supported!');\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( !( renderTarget.depthTexture instanceof THREE.DepthTexture ) ) {\n\n\t\t\t\tthrow new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n\n\t\t\t}\n\n\t\t\t// upload an empty depth texture with framebuffer size\n\t\t\tif ( !properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\t\t\t}\n\n\t\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t}\n\n\t\t// Setup GL resources for a non-texture depth buffer\n\t\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\tif ( isCube ) throw new Error('target.depthTexture not supported in Cube render targets');\n\n\t\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t\t} else {\n\n\t\t\t\tif ( isCube ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t}\n\n\t\t// Set up GL resources for the render target\n\t\tfunction setupRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t_infoMemory.textures ++;\n\n\t\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\n\t\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t\t// Setup framebuffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\t// Setup color buffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t\t\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t\t}\n\n\t\t\t// Setup depth and stencil buffers\n\n\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\t\tvar texture = renderTarget.texture;\n\n\t\t\tif ( texture.generateMipmaps && isPowerOfTwo( renderTarget ) &&\n\t\t\t\t\ttexture.minFilter !== THREE.NearestFilter &&\n\t\t\t\t\ttexture.minFilter !== THREE.LinearFilter ) {\n\n\t\t\t\tvar target = renderTarget instanceof THREE.WebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\t_gl.generateMipmap( target );\n\t\t\t\tstate.bindTexture( target, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setTexture2D = setTexture2D;\n\t\tthis.setTextureCube = setTextureCube;\n\t\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\t\tthis.setupRenderTarget = setupRenderTarget;\n\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\n\t};\n\n\t// File:src/renderers/webgl/WebGLUniforms.js\n\n\t/**\n\t *\n\t * Uniforms of a program.\n\t * Those form a tree structure with a special top-level container for the root,\n\t * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n\t *\n\t *\n\t * Properties of inner nodes including the top-level container:\n\t *\n\t * .seq - array of nested uniforms\n\t * .map - nested uniforms by name\n\t *\n\t *\n\t * Methods of all nodes except the top-level container:\n\t *\n\t * .setValue( gl, value, [renderer] )\n\t *\n\t * \t\tuploads a uniform value(s)\n\t *  \tthe 'renderer' parameter is needed for sampler uniforms\n\t *\n\t *\n\t * Static methods of the top-level container (renderer factorizations):\n\t *\n\t * .upload( gl, seq, values, renderer )\n\t *\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\n\t *\n\t * .seqWithValue( seq, values ) : filteredSeq\n\t *\n\t * \t\tfilters 'seq' entries with corresponding entry in values\n\t *\n\t * .splitDynamic( seq, values ) : filteredSeq\n\t *\n\t * \t\tfilters 'seq' entries with dynamic entry and removes them from 'seq'\n\t *\n\t *\n\t * Methods of the top-level container (renderer factorizations):\n\t *\n\t * .setValue( gl, name, value )\n\t *\n\t * \t\tsets uniform with  name 'name' to 'value'\n\t *\n\t * .set( gl, obj, prop )\n\t *\n\t * \t\tsets uniform from object and property with same name than uniform\n\t *\n\t * .setOptional( gl, obj, prop )\n\t *\n\t * \t\tlike .set for an optional property of the object\n\t *\n\t *\n\t * @author tschw\n\t *\n\t */\n\n\tTHREE.WebGLUniforms = ( function() { // scope\n\n\t\tvar emptyTexture = new THREE.Texture();\n\t\tvar emptyCubeTexture = new THREE.CubeTexture();\n\n\t\t// --- Base for inner nodes (including the root) ---\n\n\t\tvar UniformContainer = function() {\n\n\t\t\t\tthis.seq = [];\n\t\t\t\tthis.map = {};\n\n\t\t\t},\n\n\t\t// --- Utilities ---\n\n\t\t// Array Caches (provide typed arrays for temporary by size)\n\n\t\t\tarrayCacheF32 = [],\n\t\t\tarrayCacheI32 = [],\n\n\t\t\tuncacheTemporaryArrays = function() {\n\n\t\t\t\tarrayCacheF32.length = 0;\n\t\t\t\tarrayCacheI32.length = 0;\n\n\t\t\t},\n\n\t\t// Flattening for arrays of vectors and matrices\n\n\t\t\tflatten = function( array, nBlocks, blockSize ) {\n\n\t\t\t\tvar firstElem = array[ 0 ];\n\n\t\t\t\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t\t\t\t// unoptimized: ! isNaN( firstElem )\n\t\t\t\t// see http://jacksondunstan.com/articles/983\n\n\t\t\t\tvar n = nBlocks * blockSize,\n\t\t\t\t\tr = arrayCacheF32[ n ];\n\n\t\t\t\tif ( r === undefined ) {\n\n\t\t\t\t\tr = new Float32Array( n );\n\t\t\t\t\tarrayCacheF32[ n ] = r;\n\n\t\t\t\t}\n\n\t\t\t\tif ( nBlocks !== 0 ) {\n\n\t\t\t\t\tfirstElem.toArray( r, 0 );\n\n\t\t\t\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\t\t\t\toffset += blockSize;\n\t\t\t\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn r;\n\n\t\t\t},\n\n\t\t// Texture unit allocation\n\n\t\t\tallocTexUnits = function( renderer, n ) {\n\n\t\t\t\tvar r = arrayCacheI32[ n ];\n\n\t\t\t\tif ( r === undefined ) {\n\n\t\t\t\t\tr = new Int32Array( n );\n\t\t\t\t\tarrayCacheI32[ n ] = r;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\t\tr[ i ] = renderer.allocTextureUnit();\n\n\t\t\t\treturn r;\n\n\t\t\t},\n\n\t\t// --- Setters ---\n\n\t\t// Note: Defining these methods externally, because they come in a bunch\n\t\t// and this way their names minify.\n\n\t\t\t// Single scalar\n\n\t\t\tsetValue1f = function( gl, v ) { gl.uniform1f( this.addr, v ); },\n\t\t\tsetValue1i = function( gl, v ) { gl.uniform1i( this.addr, v ); },\n\n\t\t\t// Single float vector (from flat array or THREE.VectorN)\n\n\t\t\tsetValue2fv = function( gl, v ) {\n\n\t\t\t\tif ( v.x === undefined ) gl.uniform2fv( this.addr, v );\n\t\t\t\telse gl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\t},\n\n\t\t\tsetValue3fv = function( gl, v ) {\n\n\t\t\t\tif ( v.x !== undefined )\n\t\t\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\t\t\t\telse if ( v.r !== undefined )\n\t\t\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\t\t\t\telse\n\t\t\t\t\tgl.uniform3fv( this.addr, v );\n\n\t\t\t},\n\n\t\t\tsetValue4fv = function( gl, v ) {\n\n\t\t\t\tif ( v.x === undefined ) gl.uniform4fv( this.addr, v );\n\t\t\t\telse gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\t},\n\n\t\t\t// Single matrix (from flat array or MatrixN)\n\n\t\t\tsetValue2fm = function( gl, v ) {\n\n\t\t\t\tgl.uniformMatrix2fv( this.addr, false, v.elements || v );\n\n\t\t\t},\n\n\t\t\tsetValue3fm = function( gl, v ) {\n\n\t\t\t\tgl.uniformMatrix3fv( this.addr, false, v.elements || v );\n\n\t\t\t},\n\n\t\t\tsetValue4fm = function( gl, v ) {\n\n\t\t\t\tgl.uniformMatrix4fv( this.addr, false, v.elements || v );\n\n\t\t\t},\n\n\t\t\t// Single texture (2D / Cube)\n\n\t\t\tsetValueT1 = function( gl, v, renderer ) {\n\n\t\t\t\tvar unit = renderer.allocTextureUnit();\n\t\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\t\trenderer.setTexture2D( v || emptyTexture, unit );\n\n\t\t\t},\n\n\t\t\tsetValueT6 = function( gl, v, renderer ) {\n\n\t\t\t\tvar unit = renderer.allocTextureUnit();\n\t\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\t\trenderer.setTextureCube( v || emptyCubeTexture, unit );\n\n\t\t\t},\n\n\t\t\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\n\t\t\tsetValue2iv = function( gl, v ) { gl.uniform2iv( this.addr, v ); },\n\t\t\tsetValue3iv = function( gl, v ) { gl.uniform3iv( this.addr, v ); },\n\t\t\tsetValue4iv = function( gl, v ) { gl.uniform4iv( this.addr, v ); },\n\n\t\t\t// Helper to pick the right setter for the singular case\n\n\t\t\tgetSingularSetter = function( type ) {\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\t\t\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\t\t\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\t\t\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\t\t\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\t\t\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\t\t\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\t\t\t\tcase 0x8b5e: return setValueT1; // SAMPLER_2D\n\t\t\t\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\n\t\t\t\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\t\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\t\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\t\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\t// Array of scalars\n\n\t\t\tsetValue1fv = function( gl, v ) { gl.uniform1fv( this.addr, v ); },\n\t\t\tsetValue1iv = function( gl, v ) { gl.uniform1iv( this.addr, v ); },\n\n\t\t\t// Array of vectors (flat or from THREE classes)\n\n\t\t\tsetValueV2a = function( gl, v ) {\n\n\t\t\t\tgl.uniform2fv( this.addr, flatten( v, this.size, 2 ) );\n\n\t\t\t},\n\n\t\t\tsetValueV3a = function( gl, v ) {\n\n\t\t\t\tgl.uniform3fv( this.addr, flatten( v, this.size, 3 ) );\n\n\t\t\t},\n\n\t\t\tsetValueV4a = function( gl, v ) {\n\n\t\t\t\tgl.uniform4fv( this.addr, flatten( v, this.size, 4 ) );\n\n\t\t\t},\n\n\t\t\t// Array of matrices (flat or from THREE clases)\n\n\t\t\tsetValueM2a = function( gl, v ) {\n\n\t\t\t\tgl.uniformMatrix2fv( this.addr, false, flatten( v, this.size, 4 ) );\n\n\t\t\t},\n\n\t\t\tsetValueM3a = function( gl, v ) {\n\n\t\t\t\tgl.uniformMatrix3fv( this.addr, false, flatten( v, this.size, 9 ) );\n\n\t\t\t},\n\n\t\t\tsetValueM4a = function( gl, v ) {\n\n\t\t\t\tgl.uniformMatrix4fv( this.addr, false, flatten( v, this.size, 16 ) );\n\n\t\t\t},\n\n\t\t\t// Array of textures (2D / Cube)\n\n\t\t\tsetValueT1a = function( gl, v, renderer ) {\n\n\t\t\t\tvar n = v.length,\n\t\t\t\t\tunits = allocTexUnits( renderer, n );\n\n\t\t\t\tgl.uniform1iv( this.addr, units );\n\n\t\t\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\t\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetValueT6a = function( gl, v, renderer ) {\n\n\t\t\t\tvar n = v.length,\n\t\t\t\t\tunits = allocTexUnits( renderer, n );\n\n\t\t\t\tgl.uniform1iv( this.addr, units );\n\n\t\t\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\t\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\n\t\t\t// Helper to pick the right setter for a pure (bottom-level) array\n\n\t\t\tgetPureArraySetter = function( type ) {\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\t\t\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\t\t\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\t\t\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\t\t\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\t\t\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\t\t\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\t\t\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\t\t\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\t\t\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\t\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\t\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\t\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t// --- Uniform Classes ---\n\n\t\t\tSingleUniform = function SingleUniform( id, activeInfo, addr ) {\n\n\t\t\t\tthis.id = id;\n\t\t\t\tthis.addr = addr;\n\t\t\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t\t\t// this.path = activeInfo.name; // DEBUG\n\n\t\t\t},\n\n\t\t\tPureArrayUniform = function( id, activeInfo, addr ) {\n\n\t\t\t\tthis.id = id;\n\t\t\t\tthis.addr = addr;\n\t\t\t\tthis.size = activeInfo.size;\n\t\t\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t\t\t// this.path = activeInfo.name; // DEBUG\n\n\t\t\t},\n\n\t\t\tStructuredUniform = function( id ) {\n\n\t\t\t\tthis.id = id;\n\n\t\t\t\tUniformContainer.call( this ); // mix-in\n\n\t\t\t};\n\n\t\tStructuredUniform.prototype.setValue = function( gl, value ) {\n\n\t\t\t// Note: Don't need an extra 'renderer' parameter, since samplers\n\t\t\t// are not allowed in structured uniforms.\n\n\t\t\tvar seq = this.seq;\n\n\t\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\t\tvar u = seq[ i ];\n\t\t\t\tu.setValue( gl, value[ u.id ] );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// --- Top-level ---\n\n\t\t// Parser - builds up the property tree from the path strings\n\n\t\tvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g,\n\t\t\t// extracts\n\t\t\t// \t- the identifier (member name or array index)\n\t\t\t//  - followed by an optional right bracket (found when array index)\n\t\t\t//  - followed by an optional left bracket or dot (type of subscript)\n\t\t\t//\n\t\t\t// Note: These portions can be read in a non-overlapping fashion and\n\t\t\t// allow straightforward parsing of the hierarchy that WebGL encodes\n\t\t\t// in the uniform names.\n\n\t\t\taddUniform = function( container, uniformObject ) {\n\n\t\t\t\tcontainer.seq.push( uniformObject );\n\t\t\t\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n\t\t\t},\n\n\t\t\tparseUniform = function( activeInfo, addr, container ) {\n\n\t\t\t\tvar path = activeInfo.name,\n\t\t\t\t\tpathLength = path.length;\n\n\t\t\t\t// reset RegExp object, because of the early exit of a previous run\n\t\t\t\tRePathPart.lastIndex = 0;\n\n\t\t\t\tfor (; ;) {\n\n\t\t\t\t\tvar match = RePathPart.exec( path ),\n\t\t\t\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\t\t\t\tid = match[ 1 ],\n\t\t\t\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\t\t\t\tsubscript = match[ 3 ];\n\n\t\t\t\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\t\t\t\tif ( subscript === undefined ||\n\t\t\t\t\t\t\tsubscript === '[' && matchEnd + 2 === pathLength ) {\n\t\t\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\t\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\t\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\t\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\t\t\t\tvar map = container.map,\n\t\t\t\t\t\t\tnext = map[ id ];\n\n\t\t\t\t\t\tif ( next === undefined ) {\n\n\t\t\t\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\t\t\t\taddUniform( container, next );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontainer = next;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t// Root Container\n\n\t\t\tWebGLUniforms = function WebGLUniforms( gl, program, renderer ) {\n\n\t\t\t\tUniformContainer.call( this );\n\n\t\t\t\tthis.renderer = renderer;\n\n\t\t\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\t\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\t\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\t\t\t\tpath = info.name,\n\t\t\t\t\t\taddr = gl.getUniformLocation( program, path );\n\n\t\t\t\t\tparseUniform( info, addr, this );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\n\t\tWebGLUniforms.prototype.setValue = function( gl, name, value ) {\n\n\t\t\tvar u = this.map[ name ];\n\n\t\t\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\n\t\t};\n\n\t\tWebGLUniforms.prototype.set = function( gl, object, name ) {\n\n\t\t\tvar u = this.map[ name ];\n\n\t\t\tif ( u !== undefined ) u.setValue( gl, object[ name ], this.renderer );\n\n\t\t};\n\n\t\tWebGLUniforms.prototype.setOptional = function( gl, object, name ) {\n\n\t\t\tvar v = object[ name ];\n\n\t\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t\t};\n\n\n\t\t// Static interface\n\n\t\tWebGLUniforms.upload = function( gl, seq, values, renderer ) {\n\n\t\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\t\tvar u = seq[ i ],\n\t\t\t\t\tv = values[ u.id ];\n\n\t\t\t\tif ( v.needsUpdate !== false ) {\n\t\t\t\t\t// note: always updating when .needsUpdate is undefined\n\n\t\t\t\t\tu.setValue( gl, v.value, renderer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tWebGLUniforms.seqWithValue = function( seq, values ) {\n\n\t\t\tvar r = [];\n\n\t\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\t\tvar u = seq[ i ];\n\t\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t\t}\n\n\t\t\treturn r;\n\n\t\t};\n\n\t\tWebGLUniforms.splitDynamic = function( seq, values ) {\n\n\t\t\tvar r = null,\n\t\t\t\tn = seq.length,\n\t\t\t\tw = 0;\n\n\t\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\t\tvar u = seq[ i ],\n\t\t\t\t\tv = values[ u.id ];\n\n\t\t\t\tif ( v && v.dynamic === true ) {\n\n\t\t\t\t\tif ( r === null ) r = [];\n\t\t\t\t\tr.push( u );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in-place compact 'seq', removing the matches\n\t\t\t\t\tif ( w < i ) seq[ w ] = u;\n\t\t\t\t\t++ w;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( w < n ) seq.length = w;\n\n\t\t\treturn r;\n\n\t\t};\n\n\t\tWebGLUniforms.evalDynamic = function( seq, values, object, camera ) {\n\n\t\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\t\tvar v = values[ seq[ i ].id ],\n\t\t\t\t\tf = v.onUpdateCallback;\n\n\t\t\t\tif ( f !== undefined ) f.call( v, object, camera );\n\n\t\t\t}\n\n\t\t};\n\n\t\treturn WebGLUniforms;\n\n\t} )();\n\n\t// File:src/renderers/webgl/plugins/LensFlarePlugin.js\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.LensFlarePlugin = function ( renderer, flares ) {\n\n\t\tvar gl = renderer.context;\n\t\tvar state = renderer.state;\n\n\t\tvar vertexBuffer, elementBuffer;\n\t\tvar shader, program, attributes, uniforms;\n\n\t\tvar tempTexture, occlusionTexture;\n\n\t\tfunction init() {\n\n\t\t\tvar vertices = new Float32Array( [\n\t\t\t\t- 1, - 1,  0, 0,\n\t\t\t\t 1, - 1,  1, 0,\n\t\t\t\t 1,  1,  1, 1,\n\t\t\t\t- 1,  1,  0, 1\n\t\t\t] );\n\n\t\t\tvar faces = new Uint16Array( [\n\t\t\t\t0, 1, 2,\n\t\t\t\t0, 2, 3\n\t\t\t] );\n\n\t\t\t// buffers\n\n\t\t\tvertexBuffer     = gl.createBuffer();\n\t\t\telementBuffer    = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\t\t// textures\n\n\t\t\ttempTexture      = gl.createTexture();\n\t\t\tocclusionTexture = gl.createTexture();\n\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n\t\t\tshader = {\n\n\t\t\t\tvertexShader: [\n\n\t\t\t\t\t\"uniform lowp int renderType;\",\n\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\n\t\t\t\t\t\"uniform vec2 scale;\",\n\t\t\t\t\t\"uniform float rotation;\",\n\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\n\n\t\t\t\t\t\"attribute vec2 position;\",\n\t\t\t\t\t\"attribute vec2 uv;\",\n\n\t\t\t\t\t\"varying vec2 vUV;\",\n\t\t\t\t\t\"varying float vVisibility;\",\n\n\t\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\t\"vUV = uv;\",\n\n\t\t\t\t\t\t\"vec2 pos = position;\",\n\n\t\t\t\t\t\t\"if ( renderType == 2 ) {\",\n\n\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\n\n\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\n\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\n\n\t\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\n\n\t\t\t\t\t\"}\"\n\n\t\t\t\t].join( \"\\n\" ),\n\n\t\t\t\tfragmentShader: [\n\n\t\t\t\t\t\"uniform lowp int renderType;\",\n\n\t\t\t\t\t\"uniform sampler2D map;\",\n\t\t\t\t\t\"uniform float opacity;\",\n\t\t\t\t\t\"uniform vec3 color;\",\n\n\t\t\t\t\t\"varying vec2 vUV;\",\n\t\t\t\t\t\"varying float vVisibility;\",\n\n\t\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\t// pink square\n\n\t\t\t\t\t\t\"if ( renderType == 0 ) {\",\n\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\n\n\t\t\t\t\t\t// restore\n\n\t\t\t\t\t\t\"} else if ( renderType == 1 ) {\",\n\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\n\n\t\t\t\t\t\t// flare\n\n\t\t\t\t\t\t\"} else {\",\n\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\n\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\n\n\t\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\"}\"\n\n\t\t\t\t].join( \"\\n\" )\n\n\t\t\t};\n\n\t\t\tprogram = createProgram( shader );\n\n\t\t\tattributes = {\n\t\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\n\t\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\n\t\t\t};\n\n\t\t\tuniforms = {\n\t\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\n\t\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\n\t\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\n\t\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\n\t\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\n\t\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\n\t\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\n\t\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\n\t\t\t};\n\n\t\t}\n\n\t\t/*\n\t\t * Render lens flares\n\t\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\n\t\t *         reads these back and calculates occlusion.\n\t\t */\n\n\t\tthis.render = function ( scene, camera, viewport ) {\n\n\t\t\tif ( flares.length === 0 ) return;\n\n\t\t\tvar tempPosition = new THREE.Vector3();\n\n\t\t\tvar invAspect = viewport.w / viewport.z,\n\t\t\t\thalfViewportWidth = viewport.z * 0.5,\n\t\t\t\thalfViewportHeight = viewport.w * 0.5;\n\n\t\t\tvar size = 16 / viewport.w,\n\t\t\t\tscale = new THREE.Vector2( size * invAspect, size );\n\n\t\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\n\t\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\n\n\t\t\tvar validArea = new THREE.Box2();\n\n\t\t\tvalidArea.min.set( 0, 0 );\n\t\t\tvalidArea.max.set( viewport.z - 16, viewport.w - 16 );\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tinit();\n\n\t\t\t}\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tstate.initAttributes();\n\t\t\tstate.enableAttribute( attributes.vertex );\n\t\t\tstate.enableAttribute( attributes.uv );\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\t// loop through all lens flares to update their occlusion and positions\n\t\t\t// setup gl and common used attribs/uniforms\n\n\t\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\n\t\t\tgl.uniform1i( uniforms.map, 1 );\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\t\tstate.disable( gl.CULL_FACE );\n\t\t\tstate.setDepthWrite( false );\n\n\t\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\n\n\t\t\t\tsize = 16 / viewport.w;\n\t\t\t\tscale.set( size * invAspect, size );\n\n\t\t\t\t// calc object screen position\n\n\t\t\t\tvar flare = flares[ i ];\n\n\t\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\n\n\t\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\n\t\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\n\n\t\t\t\t// setup arrays for gl programs\n\n\t\t\t\tscreenPosition.copy( tempPosition );\n\n\t\t\t\t// horizontal and vertical coordinate of the lower left corner of the pixels to copy\n\n\t\t\t\tscreenPositionPixels.x = viewport.x + ( screenPosition.x * halfViewportWidth ) + halfViewportWidth - 8;\n\t\t\t\tscreenPositionPixels.y = viewport.y + ( screenPosition.y * halfViewportHeight ) + halfViewportHeight - 8;\n\n\t\t\t\t// screen cull\n\n\t\t\t\tif ( validArea.containsPoint( screenPositionPixels ) === true ) {\n\n\t\t\t\t\t// save current RGB to temp texture\n\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\n\n\t\t\t\t\t// render pink quad\n\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\n\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\n\t\t\t\t\tstate.disable( gl.BLEND );\n\t\t\t\t\tstate.enable( gl.DEPTH_TEST );\n\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n\t\t\t\t\t// copy result to occlusionMap\n\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\n\n\t\t\t\t\t// restore graphics\n\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\n\t\t\t\t\tstate.disable( gl.DEPTH_TEST );\n\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n\t\t\t\t\t// update object positions\n\n\t\t\t\t\tflare.positionScreen.copy( screenPosition );\n\n\t\t\t\t\tif ( flare.customUpdateCallback ) {\n\n\t\t\t\t\t\tflare.customUpdateCallback( flare );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tflare.updateLensFlares();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// render flares\n\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\n\t\t\t\t\tstate.enable( gl.BLEND );\n\n\t\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\n\n\t\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\n\n\t\t\t\t\t\t\tscreenPosition.x = sprite.x;\n\t\t\t\t\t\t\tscreenPosition.y = sprite.y;\n\t\t\t\t\t\t\tscreenPosition.z = sprite.z;\n\n\t\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewport.w;\n\n\t\t\t\t\t\t\tscale.x = size * invAspect;\n\t\t\t\t\t\t\tscale.y = size;\n\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\t\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\n\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\n\n\t\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\n\t\t\t\t\t\t\trenderer.setTexture2D( sprite.texture, 1 );\n\n\t\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restore gl\n\n\t\t\tstate.enable( gl.CULL_FACE );\n\t\t\tstate.enable( gl.DEPTH_TEST );\n\t\t\tstate.setDepthWrite( true );\n\n\t\t\trenderer.resetGLState();\n\n\t\t};\n\n\t\tfunction createProgram ( shader ) {\n\n\t\t\tvar program = gl.createProgram();\n\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\n\t\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\n\n\t\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\n\t\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\n\n\t\t\tgl.compileShader( fragmentShader );\n\t\t\tgl.compileShader( vertexShader );\n\n\t\t\tgl.attachShader( program, fragmentShader );\n\t\t\tgl.attachShader( program, vertexShader );\n\n\t\t\tgl.linkProgram( program );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t};\n\n\t// File:src/renderers/webgl/plugins/SpritePlugin.js\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.SpritePlugin = function ( renderer, sprites ) {\n\n\t\tvar gl = renderer.context;\n\t\tvar state = renderer.state;\n\n\t\tvar vertexBuffer, elementBuffer;\n\t\tvar program, attributes, uniforms;\n\n\t\tvar texture;\n\n\t\t// decompose matrixWorld\n\n\t\tvar spritePosition = new THREE.Vector3();\n\t\tvar spriteRotation = new THREE.Quaternion();\n\t\tvar spriteScale = new THREE.Vector3();\n\n\t\tfunction init() {\n\n\t\t\tvar vertices = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5,  0, 0,\n\t\t\t\t  0.5, - 0.5,  1, 0,\n\t\t\t\t  0.5,   0.5,  1, 1,\n\t\t\t\t- 0.5,   0.5,  0, 1\n\t\t\t] );\n\n\t\t\tvar faces = new Uint16Array( [\n\t\t\t\t0, 1, 2,\n\t\t\t\t0, 2, 3\n\t\t\t] );\n\n\t\t\tvertexBuffer  = gl.createBuffer();\n\t\t\telementBuffer = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\t\tprogram = createProgram();\n\n\t\t\tattributes = {\n\t\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\n\t\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\n\t\t\t};\n\n\t\t\tuniforms = {\n\t\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\n\t\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\n\n\t\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\n\t\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\n\n\t\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\n\t\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\n\t\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\n\n\t\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\n\t\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\n\n\t\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\n\t\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\n\t\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\n\t\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\n\t\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\n\n\t\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\n\t\t\t};\n\n\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = 8;\n\t\t\tcanvas.height = 8;\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.fillStyle = 'white';\n\t\t\tcontext.fillRect( 0, 0, 8, 8 );\n\n\t\t\ttexture = new THREE.Texture( canvas );\n\t\t\ttexture.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( sprites.length === 0 ) return;\n\n\t\t\t// setup gl\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tinit();\n\n\t\t\t}\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tstate.initAttributes();\n\t\t\tstate.enableAttribute( attributes.position );\n\t\t\tstate.enableAttribute( attributes.uv );\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\tstate.disable( gl.CULL_FACE );\n\t\t\tstate.enable( gl.BLEND );\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\n\n\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\tgl.uniform1i( uniforms.map, 0 );\n\n\t\t\tvar oldFogType = 0;\n\t\t\tvar sceneFogType = 0;\n\t\t\tvar fog = scene.fog;\n\n\t\t\tif ( fog ) {\n\n\t\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\n\n\t\t\t\tif ( fog instanceof THREE.Fog ) {\n\n\t\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\n\t\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\n\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\n\t\t\t\t\toldFogType = 1;\n\t\t\t\t\tsceneFogType = 1;\n\n\t\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\n\n\t\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\n\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\n\t\t\t\t\toldFogType = 2;\n\t\t\t\t\tsceneFogType = 2;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 0 );\n\t\t\t\toldFogType = 0;\n\t\t\t\tsceneFogType = 0;\n\n\t\t\t}\n\n\n\t\t\t// update positions and sort\n\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\t\tvar sprite = sprites[ i ];\n\n\t\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\n\t\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\n\n\t\t\t}\n\n\t\t\tsprites.sort( painterSortStable );\n\n\t\t\t// render all sprites\n\n\t\t\tvar scale = [];\n\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\t\tvar sprite = sprites[ i ];\n\t\t\t\tvar material = sprite.material;\n\n\t\t\t\tif ( material.visible === false ) continue;\n\n\t\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\n\t\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\n\n\t\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\n\n\t\t\t\tscale[ 0 ] = spriteScale.x;\n\t\t\t\tscale[ 1 ] = spriteScale.y;\n\n\t\t\t\tvar fogType = 0;\n\n\t\t\t\tif ( scene.fog && material.fog ) {\n\n\t\t\t\t\tfogType = sceneFogType;\n\n\t\t\t\t}\n\n\t\t\t\tif ( oldFogType !== fogType ) {\n\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\n\t\t\t\t\toldFogType = fogType;\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.map !== null ) {\n\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\n\n\t\t\t\t}\n\n\t\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\n\t\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\n\n\t\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\n\t\t\t\tgl.uniform2fv( uniforms.scale, scale );\n\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\n\t\t\t\tstate.setDepthTest( material.depthTest );\n\t\t\t\tstate.setDepthWrite( material.depthWrite );\n\n\t\t\t\tif ( material.map ) {\n\n\t\t\t\t\trenderer.setTexture2D( material.map, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setTexture2D( texture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\t}\n\n\t\t\t// restore gl\n\n\t\t\tstate.enable( gl.CULL_FACE );\n\n\t\t\trenderer.resetGLState();\n\n\t\t};\n\n\t\tfunction createProgram () {\n\n\t\t\tvar program = gl.createProgram();\n\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\n\t\t\tgl.shaderSource( vertexShader, [\n\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\n\n\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t'uniform float rotation;',\n\t\t\t\t'uniform vec2 scale;',\n\t\t\t\t'uniform vec2 uvOffset;',\n\t\t\t\t'uniform vec2 uvScale;',\n\n\t\t\t\t'attribute vec2 position;',\n\t\t\t\t'attribute vec2 uv;',\n\n\t\t\t\t'varying vec2 vUV;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t\t'vUV = uvOffset + uv * uvScale;',\n\n\t\t\t\t\t'vec2 alignedPosition = position * scale;',\n\n\t\t\t\t\t'vec2 rotatedPosition;',\n\t\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\n\t\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\n\n\t\t\t\t\t'vec4 finalPosition;',\n\n\t\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\n\t\t\t\t\t'finalPosition.xy += rotatedPosition;',\n\t\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\n\n\t\t\t\t\t'gl_Position = finalPosition;',\n\n\t\t\t\t'}'\n\n\t\t\t].join( '\\n' ) );\n\n\t\t\tgl.shaderSource( fragmentShader, [\n\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\n\n\t\t\t\t'uniform vec3 color;',\n\t\t\t\t'uniform sampler2D map;',\n\t\t\t\t'uniform float opacity;',\n\n\t\t\t\t'uniform int fogType;',\n\t\t\t\t'uniform vec3 fogColor;',\n\t\t\t\t'uniform float fogDensity;',\n\t\t\t\t'uniform float fogNear;',\n\t\t\t\t'uniform float fogFar;',\n\t\t\t\t'uniform float alphaTest;',\n\n\t\t\t\t'varying vec2 vUV;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t\t'vec4 texture = texture2D( map, vUV );',\n\n\t\t\t\t\t'if ( texture.a < alphaTest ) discard;',\n\n\t\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\n\n\t\t\t\t\t'if ( fogType > 0 ) {',\n\n\t\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\n\t\t\t\t\t\t'float fogFactor = 0.0;',\n\n\t\t\t\t\t\t'if ( fogType == 1 ) {',\n\n\t\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\n\n\t\t\t\t\t\t'} else {',\n\n\t\t\t\t\t\t\t'const float LOG2 = 1.442695;',\n\t\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\n\t\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\n\n\t\t\t\t\t\t'}',\n\n\t\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\n\n\t\t\t\t\t'}',\n\n\t\t\t\t'}'\n\n\t\t\t].join( '\\n' ) );\n\n\t\t\tgl.compileShader( vertexShader );\n\t\t\tgl.compileShader( fragmentShader );\n\n\t\t\tgl.attachShader( program, vertexShader );\n\t\t\tgl.attachShader( program, fragmentShader );\n\n\t\t\tgl.linkProgram( program );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction painterSortStable ( a, b ) {\n\n\t\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t\t} else if ( a.z !== b.z ) {\n\n\t\t\t\treturn b.z - a.z;\n\n\t\t\t} else {\n\n\t\t\t\treturn b.id - a.id;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t// File:src/Three.Legacy.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tObject.assign( THREE, {\n\t\tFace4: function ( a, b, c, d, normal, color, materialIndex ) {\n\t\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\t\t\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\n\t\t},\n\t\tLineStrip: 0,\n\t\tLinePieces: 1,\n\t\tMeshFaceMaterial: THREE.MultiMaterial,\n\t\tPointCloud: function ( geometry, material ) {\n\t\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\t\t\treturn new THREE.Points( geometry, material );\n\t\t},\n\t\tParticle: THREE.Sprite,\n\t\tParticleSystem: function ( geometry, material ) {\n\t\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\t\t\treturn new THREE.Points( geometry, material );\n\t\t},\n\t\tPointCloudMaterial: function ( parameters ) {\n\t\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\t\t\treturn new THREE.PointsMaterial( parameters );\n\t\t},\n\t\tParticleBasicMaterial: function ( parameters ) {\n\t\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\t\t\treturn new THREE.PointsMaterial( parameters );\n\t\t},\n\t\tParticleSystemMaterial: function ( parameters ) {\n\t\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\t\t\treturn new THREE.PointsMaterial( parameters );\n\t\t},\n\t\tVertex: function ( x, y, z ) {\n\t\t\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\t\t\treturn new THREE.Vector3( x, y, z );\n\t\t}\n\t} );\n\n\t//\n\n\tObject.assign( THREE.Box2.prototype, {\n\t\tempty: function () {\n\t\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\t\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\t\t}\n\t} );\n\n\tObject.assign( THREE.Box3.prototype, {\n\t\tempty: function () {\n\t\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\t\t}\n\t} );\n\n\tObject.assign( THREE.Matrix3.prototype, {\n\t\tmultiplyVector3: function ( vector ) {\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix3( this );\n\t\t},\n\t\tmultiplyVector3Array: function ( a ) {\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\n\t\t\treturn this.applyToVector3Array( a );\n\t\t}\n\t} );\n\n\tObject.assign( THREE.Matrix4.prototype, {\n\t\textractPosition: function ( m ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\t\treturn this.copyPosition( m );\n\t\t},\n\t\tsetRotationFromQuaternion: function ( q ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\t\treturn this.makeRotationFromQuaternion( q );\n\t\t},\n\t\tmultiplyVector3: function ( vector ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\n\t\t\treturn vector.applyProjection( this );\n\t\t},\n\t\tmultiplyVector4: function ( vector ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\t\t},\n\t\tmultiplyVector3Array: function ( a ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\n\t\t\treturn this.applyToVector3Array( a );\n\t\t},\n\t\trotateAxis: function ( v ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\t\tv.transformDirection( this );\n\t\t},\n\t\tcrossVector: function ( vector ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\t\t},\n\t\ttranslate: function ( v ) {\n\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\t\t},\n\t\trotateX: function ( angle ) {\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\t\t},\n\t\trotateY: function ( angle ) {\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\t\t},\n\t\trotateZ: function ( angle ) {\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\t\t},\n\t\trotateByAxis: function ( axis, angle ) {\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\t\t}\n\t} );\n\n\tObject.assign( THREE.Plane.prototype, {\n\t\tisIntersectionLine: function ( line ) {\n\t\t\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\t\t\treturn this.intersectsLine( line );\n\t\t}\n\t} );\n\n\tObject.assign( THREE.Quaternion.prototype, {\n\t\tmultiplyVector3: function ( vector ) {\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\t\t\treturn vector.applyQuaternion( this );\n\t\t}\n\t} );\n\n\tObject.assign( THREE.Ray.prototype, {\n\t\tisIntersectionBox: function ( box ) {\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\t\t},\n\t\tisIntersectionPlane: function ( plane ) {\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\t\treturn this.intersectsPlane( plane );\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\t\t}\n\t} );\n\n\tObject.assign( THREE.Vector3.prototype, {\n\t\tsetEulerFromRotationMatrix: function () {\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\t\t},\n\t\tsetEulerFromQuaternion: function () {\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\t\t},\n\t\tgetPositionFromMatrix: function ( m ) {\n\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\t\treturn this.setFromMatrixPosition( m );\n\t\t},\n\t\tgetScaleFromMatrix: function ( m ) {\n\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\t\treturn this.setFromMatrixScale( m );\n\t\t},\n\t\tgetColumnFromMatrix: function ( index, matrix ) {\n\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\t\treturn this.setFromMatrixColumn( matrix, index );\n\t\t}\n\t} );\n\n\t//\n\n\tObject.assign( THREE.Object3D.prototype, {\n\t\tgetChildByName: function ( name ) {\n\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\t\treturn this.getObjectByName( name );\n\t\t},\n\t\trenderDepth: function ( value ) {\n\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\t\t},\n\t\ttranslate: function ( distance, axis ) {\n\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\t\treturn this.translateOnAxis( axis, distance );\n\t\t}\n\t} );\n\n\tObject.defineProperties( THREE.Object3D.prototype, {\n\t\teulerOrder: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\treturn this.rotation.order;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\tthis.rotation.order = value;\n\t\t\t}\n\t\t},\n\t\tuseQuaternion: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.defineProperties( THREE.LOD.prototype, {\n\t\tobjects: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\t\treturn this.levels;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\t\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\t\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\t\tthis.setFocalLength( focalLength );\n\n\t};\n\n\t//\n\n\tObject.defineProperties( THREE.Light.prototype, {\n\t\tonlyShadow: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\t\t\t}\n\t\t},\n\t\tshadowCameraFov: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\t\tthis.shadow.camera.fov = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraLeft: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\t\tthis.shadow.camera.left = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraRight: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\t\tthis.shadow.camera.right = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraTop: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\t\tthis.shadow.camera.top = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraBottom: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\t\tthis.shadow.camera.bottom = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraNear: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\t\tthis.shadow.camera.near = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraFar: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\t\tthis.shadow.camera.far = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraVisible: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\t\t\t}\n\t\t},\n\t\tshadowBias: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\t\tthis.shadow.bias = value;\n\t\t\t}\n\t\t},\n\t\tshadowDarkness: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\t\t\t}\n\t\t},\n\t\tshadowMapWidth: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\t\tthis.shadow.mapSize.width = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapHeight: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\t\tthis.shadow.mapSize.height = value;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.defineProperties( THREE.BufferAttribute.prototype, {\n\t\tlength: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\n\t\t\t\treturn this.array.length;\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.assign( THREE.BufferGeometry.prototype, {\n\t\taddIndex: function ( index ) {\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\t\tthis.setIndex( index );\n\t\t},\n\t\taddDrawCall: function ( start, count, indexOffset ) {\n\t\t\tif ( indexOffset !== undefined ) {\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\t\t\t}\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\t\tthis.addGroup( start, count );\n\t\t},\n\t\tclearDrawCalls: function () {\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\t\tthis.clearGroups();\n\t\t},\n\t\tcomputeTangents: function () {\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\t\t},\n\t\tcomputeOffsets: function () {\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\t\t}\n\t} );\n\n\tObject.defineProperties( THREE.BufferGeometry.prototype, {\n\t\tdrawcalls: {\n\t\t\tget: function () {\n\t\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\t\t\t}\n\t\t},\n\t\toffsets: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.defineProperties( THREE.Material.prototype, {\n\t\twrapAround: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\n\t\t\t}\n\t\t},\n\t\twrapRGB: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\n\t\t\t\treturn new THREE.Color();\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.defineProperties( THREE.MeshPhongMaterial.prototype, {\n\t\tmetal: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.defineProperties( THREE.ShaderMaterial.prototype, {\n\t\tderivatives: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\treturn this.extensions.derivatives;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\tthis.extensions.derivatives = value;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tTHREE.EventDispatcher.prototype = Object.assign( Object.create( {\n\n\t\t// Note: Extra base ensures these properties are not 'assign'ed.\n\n\t\tconstructor: THREE.EventDispatcher,\n\n\t\tapply: function ( target ) {\n\n\t\t\tconsole.warn( \"THREE.EventDispatcher: .apply is deprecated, \" +\n\t\t\t\t\t\"just inherit or Object.assign the prototype to mix-in.\" );\n\n\t\t\tObject.assign( target, this );\n\n\t\t}\n\n\t} ), THREE.EventDispatcher.prototype );\n\n\t//\n\n\tObject.assign( THREE.WebGLRenderer.prototype, {\n\t\tsupportsFloatTextures: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_float' );\n\t\t},\n\t\tsupportsHalfFloatTextures: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\t\t},\n\t\tsupportsStandardDerivatives: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\t\t},\n\t\tsupportsCompressedTextureS3TC: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\t\t},\n\t\tsupportsCompressedTexturePVRTC: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\t\t},\n\t\tsupportsBlendMinMax: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\t\t},\n\t\tsupportsVertexTextures: function () {\n\t\t\treturn this.capabilities.vertexTextures;\n\t\t},\n\t\tsupportsInstancedArrays: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\t\t},\n\t\tenableScissorTest: function ( boolean ) {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\t\tthis.setScissorTest( boolean );\n\t\t},\n\t\tinitMaterial: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\t\t},\n\t\taddPrePlugin: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\t\t},\n\t\taddPostPlugin: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\t\t},\n\t\tupdateShadowMap: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\t\t}\n\t} );\n\n\tObject.defineProperties( THREE.WebGLRenderer.prototype, {\n\t\tshadowMapEnabled: {\n\t\t\tget: function () {\n\t\t\t\treturn this.shadowMap.enabled;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\t\tthis.shadowMap.enabled = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapType: {\n\t\t\tget: function () {\n\t\t\t\treturn this.shadowMap.type;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\t\tthis.shadowMap.type = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapCullFace: {\n\t\t\tget: function () {\n\t\t\t\treturn this.shadowMap.cullFace;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\n\t\t\t\tthis.shadowMap.cullFace = value;\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.defineProperties( THREE.WebGLShadowMap.prototype, {\n\t\tcullFace: {\n\t\t\tget: function () {\n\t\t\t\treturn this.renderReverseSided ? THREE.CullFaceFront : THREE.CullFaceBack;\n\t\t\t},\n\t\t\tset: function ( cullFace ) {\n\t\t\t\tvar value = ( cullFace !== THREE.CullFaceBack );\n\t\t\t\tconsole.warn( \"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \" + value + \".\" );\n\t\t\t\tthis.renderReverseSided = value;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.defineProperties( THREE.WebGLRenderTarget.prototype, {\n\t\twrapS: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\treturn this.texture.wrapS;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\tthis.texture.wrapS = value;\n\t\t\t}\n\t\t},\n\t\twrapT: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\treturn this.texture.wrapT;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\tthis.texture.wrapT = value;\n\t\t\t}\n\t\t},\n\t\tmagFilter: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\treturn this.texture.magFilter;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\tthis.texture.magFilter = value;\n\t\t\t}\n\t\t},\n\t\tminFilter: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\treturn this.texture.minFilter;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\tthis.texture.minFilter = value;\n\t\t\t}\n\t\t},\n\t\tanisotropy: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\treturn this.texture.anisotropy;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\tthis.texture.anisotropy = value;\n\t\t\t}\n\t\t},\n\t\toffset: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\treturn this.texture.offset;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\tthis.texture.offset = value;\n\t\t\t}\n\t\t},\n\t\trepeat: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\treturn this.texture.repeat;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\tthis.texture.repeat = value;\n\t\t\t}\n\t\t},\n\t\tformat: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\treturn this.texture.format;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\tthis.texture.format = value;\n\t\t\t}\n\t\t},\n\t\ttype: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\treturn this.texture.type;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\tthis.texture.type = value;\n\t\t\t}\n\t\t},\n\t\tgenerateMipmaps: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\treturn this.texture.generateMipmaps;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\tthis.texture.generateMipmaps = value;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.assign( THREE.Audio.prototype, {\n\t\tload: function ( file ) {\n\t\t\tconsole.warn( 'THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.' );\n\t\t\tvar scope = this;\n\t\t\tvar audioLoader = new THREE.AudioLoader();\n\t\t\taudioLoader.load( file, function ( buffer ) {\n\t\t\t\tscope.setBuffer( buffer );\n\t\t\t} );\n\t\t\treturn this;\n\t\t}\n\t} );\n\n\tObject.assign( THREE.AudioAnalyser.prototype, {\n\t\tgetData: function ( file ) {\n\t\t\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\t\t\treturn this.getFrequencyData();\n\t\t}\n\t} );\n\n\t//\n\n\tTHREE.GeometryUtils = {\n\n\t\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\n\t\t\tvar matrix;\n\n\t\t\tif ( geometry2 instanceof THREE.Mesh ) {\n\n\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\t\tmatrix = geometry2.matrix;\n\t\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t\t}\n\n\t\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t\t},\n\n\t\tcenter: function ( geometry ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\t\treturn geometry.center();\n\n\t\t}\n\n\t};\n\n\tTHREE.ImageUtils = {\n\n\t\tcrossOrigin: undefined,\n\n\t\tloadTexture: function ( url, mapping, onLoad, onError ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\t\t\tvar loader = new THREE.TextureLoader();\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\t\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\t\t\tvar loader = new THREE.CubeTextureLoader();\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\t\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tloadCompressedTexture: function () {\n\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n\t\t},\n\n\t\tloadCompressedTextureCube: function () {\n\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n\t\t}\n\n\t};\n\n\t//\n\n\tTHREE.Projector = function () {\n\n\t\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n\t\tthis.projectVector = function ( vector, camera ) {\n\n\t\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\t\tvector.project( camera );\n\n\t\t};\n\n\t\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\t\tvector.unproject( camera );\n\n\t\t};\n\n\t\tthis.pickingRay = function ( vector, camera ) {\n\n\t\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t\t};\n\n\t};\n\n\t//\n\n\tTHREE.CanvasRenderer = function () {\n\n\t\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\n\n\t\tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\tthis.clear = function () {};\n\t\tthis.render = function () {};\n\t\tthis.setClearColor = function () {};\n\t\tthis.setSize = function () {};\n\n\t};\n\n\t// File:src/extras/CurveUtils.js\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tTHREE.CurveUtils = {\n\n\t\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\n\n\t\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\n\n\t\t},\n\n\t\t// Puay Bing, thanks for helping with this derivative!\n\n\t\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\n\n\t\t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\n\t\t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\n\t\t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\n\t\t\t\t3 * t * t * p3;\n\n\t\t},\n\n\t\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\n\n\t\t\t// To check if my formulas are correct\n\n\t\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\n\t\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\n\t\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\n\t\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\n\n\t\t\treturn h00 + h10 + h01 + h11;\n\n\t\t},\n\n\t\t// Catmull-Rom\n\n\t\tinterpolate: function( p0, p1, p2, p3, t ) {\n\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5;\n\t\t\tvar v1 = ( p3 - p1 ) * 0.5;\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t * t2;\n\t\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n\t\t}\n\n\t};\n\n\t// File:src/extras/SceneUtils.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.SceneUtils = {\n\n\t\tcreateMultiMaterialObject: function ( geometry, materials ) {\n\n\t\t\tvar group = new THREE.Group();\n\n\t\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\n\n\t\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t},\n\n\t\tdetach: function ( child, parent, scene ) {\n\n\t\t\tchild.applyMatrix( parent.matrixWorld );\n\t\t\tparent.remove( child );\n\t\t\tscene.add( child );\n\n\t\t},\n\n\t\tattach: function ( child, scene, parent ) {\n\n\t\t\tvar matrixWorldInverse = new THREE.Matrix4();\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\t\t\tchild.applyMatrix( matrixWorldInverse );\n\n\t\t\tscene.remove( child );\n\t\t\tparent.add( child );\n\n\t\t}\n\n\t};\n\n\t// File:src/extras/ShapeUtils.js\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tTHREE.ShapeUtils = {\n\n\t\t// calculate area of the contour polygon\n\n\t\tarea: function ( contour ) {\n\n\t\t\tvar n = contour.length;\n\t\t\tvar a = 0.0;\n\n\t\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t\t}\n\n\t\t\treturn a * 0.5;\n\n\t\t},\n\n\t\ttriangulate: ( function () {\n\n\t\t\t/**\n\t\t\t * This code is a quick port of code written in C++ which was submitted to\n\t\t\t * flipcode.com by John W. Ratcliff  // July 22, 2000\n\t\t\t * See original code and more information here:\n\t\t\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\n\t\t\t *\n\t\t\t * ported to actionscript by Zevan Rosser\n\t\t\t * www.actionsnippet.com\n\t\t\t *\n\t\t\t * ported to javascript by Joshua Koo\n\t\t\t * http://www.lab4games.net/zz85/blog\n\t\t\t *\n\t\t\t */\n\n\t\t\tfunction snip( contour, u, v, w, n, verts ) {\n\n\t\t\t\tvar p;\n\t\t\t\tvar ax, ay, bx, by;\n\t\t\t\tvar cx, cy, px, py;\n\n\t\t\t\tax = contour[ verts[ u ] ].x;\n\t\t\t\tay = contour[ verts[ u ] ].y;\n\n\t\t\t\tbx = contour[ verts[ v ] ].x;\n\t\t\t\tby = contour[ verts[ v ] ].y;\n\n\t\t\t\tcx = contour[ verts[ w ] ].x;\n\t\t\t\tcy = contour[ verts[ w ] ].y;\n\n\t\t\t\tif ( Number.EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\n\n\t\t\t\tvar aX, aY, bX, bY, cX, cY;\n\t\t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\n\t\t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\n\n\t\t\t\taX = cx - bx;  aY = cy - by;\n\t\t\t\tbX = ax - cx;  bY = ay - cy;\n\t\t\t\tcX = bx - ax;  cY = by - ay;\n\n\t\t\t\tfor ( p = 0; p < n; p ++ ) {\n\n\t\t\t\t\tpx = contour[ verts[ p ] ].x;\n\t\t\t\t\tpy = contour[ verts[ p ] ].y;\n\n\t\t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\n\t\t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\n\t\t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\n\n\t\t\t\t\tapx = px - ax;  apy = py - ay;\n\t\t\t\t\tbpx = px - bx;  bpy = py - by;\n\t\t\t\t\tcpx = px - cx;  cpy = py - cy;\n\n\t\t\t\t\t// see if p is inside triangle abc\n\n\t\t\t\t\taCROSSbp = aX * bpy - aY * bpx;\n\t\t\t\t\tcCROSSap = cX * apy - cY * apx;\n\t\t\t\t\tbCROSScp = bX * cpy - bY * cpx;\n\n\t\t\t\t\tif ( ( aCROSSbp >= - Number.EPSILON ) && ( bCROSScp >= - Number.EPSILON ) && ( cCROSSap >= - Number.EPSILON ) ) return false;\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// takes in an contour array and returns\n\n\t\t\treturn function triangulate( contour, indices ) {\n\n\t\t\t\tvar n = contour.length;\n\n\t\t\t\tif ( n < 3 ) return null;\n\n\t\t\t\tvar result = [],\n\t\t\t\t\tverts = [],\n\t\t\t\t\tvertIndices = [];\n\n\t\t\t\t/* we want a counter-clockwise polygon in verts */\n\n\t\t\t\tvar u, v, w;\n\n\t\t\t\tif ( THREE.ShapeUtils.area( contour ) > 0.0 ) {\n\n\t\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\n\n\t\t\t\t}\n\n\t\t\t\tvar nv = n;\n\n\t\t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\n\n\t\t\t\tvar count = 2 * nv;   /* error detection */\n\n\t\t\t\tfor ( v = nv - 1; nv > 2; ) {\n\n\t\t\t\t\t/* if we loop, it is probably a non-simple polygon */\n\n\t\t\t\t\tif ( ( count -- ) <= 0 ) {\n\n\t\t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\n\n\t\t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\n\t\t\t\t\t\t//return null;\n\t\t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\n\t\t\t\t\t\tconsole.warn( 'THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()' );\n\n\t\t\t\t\t\tif ( indices ) return vertIndices;\n\t\t\t\t\t\treturn result;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\n\n\t\t\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\n\t\t\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\n\t\t\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\n\n\t\t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\n\n\t\t\t\t\t\tvar a, b, c, s, t;\n\n\t\t\t\t\t\t/* true names of the vertices */\n\n\t\t\t\t\t\ta = verts[ u ];\n\t\t\t\t\t\tb = verts[ v ];\n\t\t\t\t\t\tc = verts[ w ];\n\n\t\t\t\t\t\t/* output Triangle */\n\n\t\t\t\t\t\tresult.push( [ contour[ a ],\n\t\t\t\t\t\t\tcontour[ b ],\n\t\t\t\t\t\t\tcontour[ c ] ] );\n\n\n\t\t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\n\n\t\t\t\t\t\t/* remove v from the remaining polygon */\n\n\t\t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\n\n\t\t\t\t\t\t\tverts[ s ] = verts[ t ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnv --;\n\n\t\t\t\t\t\t/* reset error detection counter */\n\n\t\t\t\t\t\tcount = 2 * nv;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( indices ) return vertIndices;\n\t\t\t\treturn result;\n\n\t\t\t}\n\n\t\t} )(),\n\n\t\ttriangulateShape: function ( contour, holes ) {\n\n\t\t\tfunction removeDupEndPts(points) {\n\n\t\t\t\tvar l = points.length;\n\n\t\t\t\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\t\t\tpoints.pop();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tremoveDupEndPts( contour );\n\t\t\tholes.forEach( removeDupEndPts );\n\n\t\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\n\n\t\t\t\t// inOtherPt needs to be collinear to the inSegment\n\t\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\n\n\t\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\n\n\t\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\n\n\t\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\n\n\t\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\n\t\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\n\n\t\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\n\t\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\n\n\t\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\n\t\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\n\n\t\t\t\tif ( Math.abs( limit ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\n\t\t\t\t\tvar perpSeg2;\n\t\t\t\t\tif ( limit > 0 ) {\n\n\t\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// i.e. to reduce rounding errors\n\t\t\t\t\t// intersection at endpoint of segment#1?\n\t\t\t\t\tif ( perpSeg2 === 0 ) {\n\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( perpSeg2 === limit ) {\n\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n\t\t\t\t\t\treturn [ inSeg1Pt2 ];\n\n\t\t\t\t\t}\n\t\t\t\t\t// intersection at endpoint of segment#2?\n\t\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\n\t\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\n\n\t\t\t\t\t// return real intersection point\n\t\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\n\t\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\n\t\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\n\t\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\n\n\t\t\t\t\t// they are collinear or degenerate\n\t\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\n\t\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\n\t\t\t\t\t// both segments are points\n\t\t\t\t\tif ( seg1Pt && seg2Pt ) {\n\n\t\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\n\t\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\n\n\t\t\t\t\t}\n\t\t\t\t\t// segment#1  is a single point\n\t\t\t\t\tif ( seg1Pt ) {\n\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\n\n\t\t\t\t\t}\n\t\t\t\t\t// segment#2  is a single point\n\t\t\t\t\tif ( seg2Pt ) {\n\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\n\t\t\t\t\t\treturn [ inSeg2Pt1 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// they are collinear segments, which might overlap\n\t\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\n\t\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\n\t\t\t\t\tif ( seg1dx !== 0 ) {\n\n\t\t\t\t\t\t// the segments are NOT on a vertical line\n\t\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// the segments are on a vertical line\n\t\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( seg1minVal <= seg2minVal ) {\n\n\t\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\n\t\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\n\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\t\treturn [ seg2min ];\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\n\t\t\t\t\t\treturn\t[ seg2min, seg2max ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\n\t\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\n\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\t\treturn [ seg1min ];\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\n\t\t\t\t\t\treturn\t[ seg1min, seg2max ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\n\n\t\t\t\t// The order of legs is important\n\n\t\t\t\t// translation of all points, so that Vertex is at (0,0)\n\t\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\n\t\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\n\t\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\n\n\t\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\n\t\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\n\t\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\n\n\t\t\t\tif ( Math.abs( from2toAngle ) > Number.EPSILON ) {\n\n\t\t\t\t\t// angle != 180 deg.\n\n\t\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\n\t\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\n\n\t\t\t\t\tif ( from2toAngle > 0 ) {\n\n\t\t\t\t\t\t// main angle < 180 deg.\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// main angle > 180 deg.\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// angle == 180 deg.\n\t\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\n\t\t\t\t\treturn\t( from2otherAngle > 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tfunction removeHoles( contour, holes ) {\n\n\t\t\t\tvar shape = contour.concat(); // work on this shape\n\t\t\t\tvar hole;\n\n\t\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\n\n\t\t\t\t\t// Check if hole point lies within angle around shape point\n\t\t\t\t\tvar lastShapeIdx = shape.length - 1;\n\n\t\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\n\t\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\n\n\t\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\n\t\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\n\n\t\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\n\t\t\t\t\tif ( ! insideAngle ) {\n\n\t\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\n\t\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if shape point lies within angle around hole point\n\t\t\t\t\tvar lastHoleIdx = hole.length - 1;\n\n\t\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\n\t\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\n\n\t\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\n\t\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\n\n\t\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\n\t\t\t\t\tif ( ! insideAngle ) {\n\n\t\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\n\t\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\ttrue;\n\n\t\t\t\t}\n\n\t\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\n\n\t\t\t\t\t// checks for intersections with shape edges\n\t\t\t\t\tvar sIdx, nextIdx, intersection;\n\t\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\n\n\t\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t}\n\n\t\t\t\tvar indepHoles = [];\n\n\t\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\n\n\t\t\t\t\t// checks for intersections with hole edges\n\t\t\t\t\tvar ihIdx, chkHole,\n\t\t\t\t\t\thIdx, nextIdx, intersection;\n\t\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\n\n\t\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\n\t\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\n\n\t\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\n\t\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\n\t\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t}\n\n\t\t\t\tvar holeIndex, shapeIndex,\n\t\t\t\t\tshapePt, holePt,\n\t\t\t\t\tholeIdx, cutKey, failedCuts = [],\n\t\t\t\t\ttmpShape1, tmpShape2,\n\t\t\t\t\ttmpHole1, tmpHole2;\n\n\t\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tindepHoles.push( h );\n\n\t\t\t\t}\n\n\t\t\t\tvar minShapeIndex = 0;\n\t\t\t\tvar counter = indepHoles.length * 2;\n\t\t\t\twhile ( indepHoles.length > 0 ) {\n\n\t\t\t\t\tcounter --;\n\t\t\t\t\tif ( counter < 0 ) {\n\n\t\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// search for shape-vertex and hole-vertex,\n\t\t\t\t\t// which can be connected without intersections\n\t\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\n\n\t\t\t\t\t\tshapePt = shape[ shapeIndex ];\n\t\t\t\t\t\tholeIndex\t= - 1;\n\n\t\t\t\t\t\t// search for hole which can be reached without intersections\n\t\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\n\n\t\t\t\t\t\t\tholeIdx = indepHoles[ h ];\n\n\t\t\t\t\t\t\t// prevent multiple checks\n\t\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\n\t\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\n\n\t\t\t\t\t\t\thole = holes[ holeIdx ];\n\t\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\n\n\t\t\t\t\t\t\t\tholePt = hole[ h2 ];\n\t\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\n\t\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\n\t\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\n\n\t\t\t\t\t\t\t\tholeIndex = h2;\n\t\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\n\n\t\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\n\t\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\n\t\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\n\t\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\n\n\t\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\n\n\t\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\n\n\t\t\t\t\t\t\t\t// Debug only, to show the selected cuts\n\t\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n\t\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn shape; \t\t\t/* shape with no holes */\n\n\t\t\t}\n\n\n\t\t\tvar i, il, f, face,\n\t\t\t\tkey, index,\n\t\t\t\tallPointsMap = {};\n\n\t\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\n\n\t\t\tvar allpoints = contour.concat();\n\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\n\n\t\t\t}\n\n\t\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\n\n\t\t\t// prepare all points map\n\n\t\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\n\n\t\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\n\n\t\t\t\tif ( allPointsMap[ key ] !== undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.ShapeUtils: Duplicate point\", key, i );\n\n\t\t\t\t}\n\n\t\t\t\tallPointsMap[ key ] = i;\n\n\t\t\t}\n\n\t\t\t// remove holes by cutting paths to holes and adding them to the shape\n\t\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\n\n\t\t\tvar triangles = THREE.ShapeUtils.triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\n\t\t\t//console.log( \"triangles\",triangles, triangles.length );\n\n\t\t\t// check all face vertices against all points map\n\n\t\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\n\n\t\t\t\tface = triangles[ i ];\n\n\t\t\t\tfor ( f = 0; f < 3; f ++ ) {\n\n\t\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\n\n\t\t\t\t\tindex = allPointsMap[ key ];\n\n\t\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\t\tface[ f ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn triangles.concat();\n\n\t\t},\n\n\t\tisClockWise: function ( pts ) {\n\n\t\t\treturn THREE.ShapeUtils.area( pts ) < 0;\n\n\t\t},\n\n\t\t// Bezier Curves formulas obtained from\n\t\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\n\n\t\t// Quad Bezier Functions\n\n\t\tb2: ( function () {\n\n\t\t\tfunction b2p0( t, p ) {\n\n\t\t\t\tvar k = 1 - t;\n\t\t\t\treturn k * k * p;\n\n\t\t\t}\n\n\t\t\tfunction b2p1( t, p ) {\n\n\t\t\t\treturn 2 * ( 1 - t ) * t * p;\n\n\t\t\t}\n\n\t\t\tfunction b2p2( t, p ) {\n\n\t\t\t\treturn t * t * p;\n\n\t\t\t}\n\n\t\t\treturn function b2( t, p0, p1, p2 ) {\n\n\t\t\t\treturn b2p0( t, p0 ) + b2p1( t, p1 ) + b2p2( t, p2 );\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\t// Cubic Bezier Functions\n\n\t\tb3: ( function () {\n\n\t\t\tfunction b3p0( t, p ) {\n\n\t\t\t\tvar k = 1 - t;\n\t\t\t\treturn k * k * k * p;\n\n\t\t\t}\n\n\t\t\tfunction b3p1( t, p ) {\n\n\t\t\t\tvar k = 1 - t;\n\t\t\t\treturn 3 * k * k * t * p;\n\n\t\t\t}\n\n\t\t\tfunction b3p2( t, p ) {\n\n\t\t\t\tvar k = 1 - t;\n\t\t\t\treturn 3 * k * t * t * p;\n\n\t\t\t}\n\n\t\t\tfunction b3p3( t, p ) {\n\n\t\t\t\treturn t * t * t * p;\n\n\t\t\t}\n\n\t\t\treturn function b3( t, p0, p1, p2, p3 ) {\n\n\t\t\t\treturn b3p0( t, p0 ) + b3p1( t, p1 ) + b3p2( t, p2 ) + b3p3( t, p3 );\n\n\t\t\t};\n\n\t\t} )()\n\n\t};\n\n\t// File:src/extras/core/Curve.js\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Extensible curve object\n\t *\n\t * Some common of Curve methods\n\t * .getPoint(t), getTangent(t)\n\t * .getPointAt(u), getTagentAt(u)\n\t * .getPoints(), .getSpacedPoints()\n\t * .getLength()\n\t * .updateArcLengths()\n\t *\n\t * This following classes subclasses THREE.Curve:\n\t *\n\t * -- 2d classes --\n\t * THREE.LineCurve\n\t * THREE.QuadraticBezierCurve\n\t * THREE.CubicBezierCurve\n\t * THREE.SplineCurve\n\t * THREE.ArcCurve\n\t * THREE.EllipseCurve\n\t *\n\t * -- 3d classes --\n\t * THREE.LineCurve3\n\t * THREE.QuadraticBezierCurve3\n\t * THREE.CubicBezierCurve3\n\t * THREE.SplineCurve3\n\t *\n\t * A series of curves can be represented as a THREE.CurvePath\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tAbstract Curve base class\n\t **************************************************************/\n\n\tTHREE.Curve = function () {\n\n\t};\n\n\tTHREE.Curve.prototype = {\n\n\t\tconstructor: THREE.Curve,\n\n\t\t// Virtual base class method to overwrite and implement in subclasses\n\t\t//\t- t [0 .. 1]\n\n\t\tgetPoint: function ( t ) {\n\n\t\t\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// Get point at relative position in curve according to arc length\n\t\t// - u [0 .. 1]\n\n\t\tgetPointAt: function ( u ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getPoint( t );\n\n\t\t},\n\n\t\t// Get sequence of points using getPoint( t )\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tif ( ! divisions ) divisions = 5;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get sequence of points using getPointAt( u )\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( ! divisions ) divisions = 5;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get total curve arc length\n\n\t\tgetLength: function () {\n\n\t\t\tvar lengths = this.getLengths();\n\t\t\treturn lengths[ lengths.length - 1 ];\n\n\t\t},\n\n\t\t// Get list of cumulative segment lengths\n\n\t\tgetLengths: function ( divisions ) {\n\n\t\t\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\n\n\t\t\tif ( this.cacheArcLengths\n\t\t\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\n\t\t\t\t&& ! this.needsUpdate ) {\n\n\t\t\t\t//console.log( \"cached\", this.cacheArcLengths );\n\t\t\t\treturn this.cacheArcLengths;\n\n\t\t\t}\n\n\t\t\tthis.needsUpdate = false;\n\n\t\t\tvar cache = [];\n\t\t\tvar current, last = this.getPoint( 0 );\n\t\t\tvar p, sum = 0;\n\n\t\t\tcache.push( 0 );\n\n\t\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\t\tcurrent = this.getPoint ( p / divisions );\n\t\t\t\tsum += current.distanceTo( last );\n\t\t\t\tcache.push( sum );\n\t\t\t\tlast = current;\n\n\t\t\t}\n\n\t\t\tthis.cacheArcLengths = cache;\n\n\t\t\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\n\n\t\t},\n\n\t\tupdateArcLengths: function() {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.getLengths();\n\n\t\t},\n\n\t\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\t\tgetUtoTmapping: function ( u, distance ) {\n\n\t\t\tvar arcLengths = this.getLengths();\n\n\t\t\tvar i = 0, il = arcLengths.length;\n\n\t\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\t\tif ( distance ) {\n\n\t\t\t\ttargetArcLength = distance;\n\n\t\t\t} else {\n\n\t\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t\t}\n\n\t\t\t//var time = Date.now();\n\n\t\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\t\tvar low = 0, high = il - 1, comparison;\n\n\t\t\twhile ( low <= high ) {\n\n\t\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\t\tlow = i + 1;\n\n\t\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\t\thigh = i - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thigh = i;\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t// DONE\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ti = high;\n\n\t\t\t//console.log('b' , i, low, high, Date.now()- time);\n\n\t\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\t\tvar t = i / ( il - 1 );\n\t\t\t\treturn t;\n\n\t\t\t}\n\n\t\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\t\tvar lengthBefore = arcLengths[ i ];\n\t\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t\t// determine where we are between the 'before' and 'after' points\n\n\t\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t\t// add that fractional amount to t\n\n\t\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\t\treturn t;\n\n\t\t},\n\n\t\t// Returns a unit vector tangent at t\n\t\t// In case any sub curve does not implement its tangent derivation,\n\t\t// 2 points a small delta apart will be used to find its gradient\n\t\t// which seems to give a reasonable approximation\n\n\t\tgetTangent: function( t ) {\n\n\t\t\tvar delta = 0.0001;\n\t\t\tvar t1 = t - delta;\n\t\t\tvar t2 = t + delta;\n\n\t\t\t// Capping in case of danger\n\n\t\t\tif ( t1 < 0 ) t1 = 0;\n\t\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\t\tvar pt1 = this.getPoint( t1 );\n\t\t\tvar pt2 = this.getPoint( t2 );\n\n\t\t\tvar vec = pt2.clone().sub( pt1 );\n\t\t\treturn vec.normalize();\n\n\t\t},\n\n\t\tgetTangentAt: function ( u ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getTangent( t );\n\n\t\t}\n\n\t};\n\n\t// TODO: Transformation for Curves?\n\n\t/**************************************************************\n\t *\t3D Curves\n\t **************************************************************/\n\n\t// A Factory method for creating new curve subclasses\n\n\tTHREE.Curve.create = function ( constructor, getPointFunc ) {\n\n\t\tconstructor.prototype = Object.create( THREE.Curve.prototype );\n\t\tconstructor.prototype.constructor = constructor;\n\t\tconstructor.prototype.getPoint = getPointFunc;\n\n\t\treturn constructor;\n\n\t};\n\n\t// File:src/extras/core/CurvePath.js\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tCurved Path - a curve path is simply a array of connected\n\t *  curves, but retains the api of a curve\n\t **************************************************************/\n\n\tTHREE.CurvePath = function () {\n\n\t\tthis.curves = [];\n\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t};\n\n\tTHREE.CurvePath.prototype = Object.assign( Object.create( THREE.Curve.prototype ), {\n\n\t\tconstructor: THREE.CurvePath,\n\n\t\tadd: function ( curve ) {\n\n\t\t\tthis.curves.push( curve );\n\n\t\t},\n\n\t\tclosePath: function () {\n\n\t\t\t// Add a line curve if start and end of lines are not connected\n\t\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\t\tthis.curves.push( new THREE.LineCurve( endPoint, startPoint ) );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// To get accurate point with reference to\n\t\t// entire path distance at time t,\n\t\t// following has to be done:\n\n\t\t// 1. Length of each sub path have to be known\n\t\t// 2. Locate and identify type of curve\n\t\t// 3. Get t for the curve\n\t\t// 4. Return curve.getPointAt(t')\n\n\t\tgetPoint: function ( t ) {\n\n\t\t\tvar d = t * this.getLength();\n\t\t\tvar curveLengths = this.getCurveLengths();\n\t\t\tvar i = 0;\n\n\t\t\t// To think about boundaries points.\n\n\t\t\twhile ( i < curveLengths.length ) {\n\n\t\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t\t}\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t\t},\n\n\t\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t\t// getPoint() depends on getLength\n\n\t\tgetLength: function () {\n\n\t\t\tvar lens = this.getCurveLengths();\n\t\t\treturn lens[ lens.length - 1 ];\n\n\t\t},\n\n\t\t// cacheLengths must be recalculated.\n\t\tupdateArcLengths: function () {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.cacheLengths = null;\n\t\t\tthis.getLengths();\n\n\t\t},\n\n\t\t// Compute lengths and cache them\n\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\t\tgetCurveLengths: function () {\n\n\t\t\t// We use cache values if curves and cache array are same length\n\n\t\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\t\treturn this.cacheLengths;\n\n\t\t\t}\n\n\t\t\t// Get length of sub-curve\n\t\t\t// Push sums into cached array\n\n\t\t\tvar lengths = [], sums = 0;\n\n\t\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\t\tsums += this.curves[ i ].getLength();\n\t\t\t\tlengths.push( sums );\n\n\t\t\t}\n\n\t\t\tthis.cacheLengths = lengths;\n\n\t\t\treturn lengths;\n\n\t\t},\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( ! divisions ) divisions = 40;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tdivisions = divisions || 12;\n\n\t\t\tvar points = [], last;\n\n\t\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\t\tvar curve = curves[ i ];\n\t\t\t\tvar resolution = curve instanceof THREE.EllipseCurve ? divisions * 2\n\t\t\t\t\t: curve instanceof THREE.LineCurve ? 1\n\t\t\t\t\t: curve instanceof THREE.SplineCurve ? divisions * curve.points.length\n\t\t\t\t\t: divisions;\n\n\t\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\t\tfor ( var j = 0; j < pts.length; j++ ) {\n\n\t\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\t\tpoints.push( point );\n\t\t\t\t\tlast = point;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose && points.length > 1 && !points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t/**************************************************************\n\t\t *\tCreate Geometries Helpers\n\t\t **************************************************************/\n\n\t\t/// Generate geometry from path points (for Line or Points objects)\n\n\t\tcreatePointsGeometry: function ( divisions ) {\n\n\t\t\tvar pts = this.getPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\t// Generate geometry from equidistant sampling along the path\n\n\t\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\t\tvar pts = this.getSpacedPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\tcreateGeometry: function ( points ) {\n\n\t\t\tvar geometry = new THREE.Geometry();\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tvar point = points[ i ];\n\t\t\t\tgeometry.vertices.push( new THREE.Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\t// File:src/extras/core/Font.js\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.Font = function ( data ) {\n\n\t\tthis.data = data;\n\n\t};\n\n\tObject.assign( THREE.Font.prototype, {\n\n\t\tgenerateShapes: function ( text, size, divisions ) {\n\n\t\t\tfunction createPaths( text ) {\n\n\t\t\t\tvar chars = String( text ).split( '' );\n\t\t\t\tvar scale = size / data.resolution;\n\t\t\t\tvar offset = 0;\n\n\t\t\t\tvar paths = [];\n\n\t\t\t\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\t\t\t\tvar ret = createPath( chars[ i ], scale, offset );\n\t\t\t\t\toffset += ret.offset;\n\n\t\t\t\t\tpaths.push( ret.path );\n\n\t\t\t\t}\n\n\t\t\t\treturn paths;\n\n\t\t\t}\n\n\t\t\tfunction createPath( c, scale, offset ) {\n\n\t\t\t\tvar glyph = data.glyphs[ c ] || data.glyphs[ '?' ];\n\n\t\t\t\tif ( ! glyph ) return;\n\n\t\t\t\tvar path = new THREE.ShapePath();\n\n\t\t\t\tvar pts = [], b2 = THREE.ShapeUtils.b2, b3 = THREE.ShapeUtils.b3;\n\t\t\t\tvar x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\n\n\t\t\t\tif ( glyph.o ) {\n\n\t\t\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\t\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\t\t\t\tvar action = outline[ i ++ ];\n\n\t\t\t\t\t\tswitch ( action ) {\n\n\t\t\t\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\ty = outline[ i ++ ] * scale;\n\n\t\t\t\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\ty = outline[ i ++ ] * scale;\n\n\t\t\t\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale;\n\t\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale;\n\n\t\t\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n\t\t\t\t\t\t\t\tif ( laste ) {\n\n\t\t\t\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\n\n\t\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\n\t\t\t\t\t\t\t\t\t\tb2( t, cpx0, cpx1, cpx );\n\t\t\t\t\t\t\t\t\t\tb2( t, cpy0, cpy1, cpy );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale;\n\t\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale;\n\t\t\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale;\n\n\t\t\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n\t\t\t\t\t\t\t\tif ( laste ) {\n\n\t\t\t\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\n\n\t\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\n\t\t\t\t\t\t\t\t\t\tb3( t, cpx0, cpx1, cpx2, cpx );\n\t\t\t\t\t\t\t\t\t\tb3( t, cpy0, cpy1, cpy2, cpy );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn { offset: glyph.ha * scale, path: path };\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( size === undefined ) size = 100;\n\t\t\tif ( divisions === undefined ) divisions = 4;\n\n\t\t\tvar data = this.data;\n\n\t\t\tvar paths = createPaths( text );\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t} );\n\n\t// File:src/extras/core/Path.js\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Creates free form 2d path using series of points, lines or curves.\n\t *\n\t **/\n\n\tTHREE.Path = function ( points ) {\n\n\t\tTHREE.CurvePath.call( this );\n\t\tthis.currentPoint = new THREE.Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.fromPoints( points );\n\n\t\t}\n\n\t};\n\n\tTHREE.Path.prototype = Object.assign( Object.create( THREE.CurvePath.prototype ), {\n\n\t\tconstructor: THREE.Path,\n\n\t\t// Create path using straight lines to connect all points\n\t\t// - vectors: array of Vector2\n\t\tfromPoints: function ( vectors ) {\n\n\t\t\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\n\n\t\t\tfor ( var i = 1, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tthis.lineTo( vectors[ i ].x, vectors[ i ].y );\n\n\t\t\t}\n\n\t\t},\n\n\t\tmoveTo: function ( x, y ) {\n\n\t\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\t},\n\n\t\tlineTo: function ( x, y ) {\n\n\t\t\tvar curve = new THREE.LineCurve( this.currentPoint.clone(), new THREE.Vector2( x, y ) );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( x, y );\n\n\t\t},\n\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\t\tvar curve = new THREE.QuadraticBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew THREE.Vector2( aCPx, aCPy ),\n\t\t\t\tnew THREE.Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t},\n\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\t\tvar curve = new THREE.CubicBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew THREE.Vector2( aCP1x, aCP1y ),\n\t\t\t\tnew THREE.Vector2( aCP2x, aCP2y ),\n\t\t\t\tnew THREE.Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t},\n\n\t\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\t\tvar curve = new THREE.SplineCurve( npts );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\t},\n\n\t\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\t},\n\n\t\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\t},\n\n\t\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t},\n\n\t\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t\t// if a previous curve is present, attempt to join\n\t\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tvar lastPoint = curve.getPoint( 1 );\n\t\t\tthis.currentPoint.copy( lastPoint );\n\n\t\t}\n\n\t} );\n\n\n\t// minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n\tTHREE.ShapePath = function() {\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\t}\n\n\tTHREE.ShapePath.prototype = {\n\t\tmoveTo: function ( x, y ) {\n\t\t\tthis.currentPath = new THREE.Path();\n\t\t\tthis.subPaths.push(this.currentPath);\n\t\t\tthis.currentPath.moveTo( x, y );\n\t\t},\n\t\tlineTo: function ( x, y ) {\n\t\t\tthis.currentPath.lineTo( x, y );\n\t\t},\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\t\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\t\t},\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\t\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\t\t},\n\t\tsplineThru: function ( pts ) {\n\t\t\tthis.currentPath.splineThru( pts );\n\t\t},\n\n\t\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\t\tvar shapes = [];\n\n\t\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\t\tvar tmpShape = new THREE.Shape();\n\t\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t\t}\n\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\t\tvar inside = false;\n\t\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\t\tvar edgeLowPt  = inPolygon[ p ];\n\t\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t\t// not parallel\n\t\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// parallel or collinear\n\t\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t\t// continue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn\tinside;\n\n\t\t\t}\n\n\t\t\tvar isClockWise = THREE.ShapeUtils.isClockWise;\n\n\t\t\tvar subPaths = this.subPaths;\n\t\t\tif ( subPaths.length === 0 ) return [];\n\n\t\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\t\tif ( subPaths.length === 1 ) {\n\n\t\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\t\ttmpShape = new THREE.Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\t\tvar betterShapeHoles = [];\n\t\t\tvar newShapes = [];\n\t\t\tvar newShapeHoles = [];\n\t\t\tvar mainIdx = 0;\n\t\t\tvar tmpPoints;\n\n\t\t\tnewShapes[ mainIdx ] = undefined;\n\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\t\ttmpPath = subPaths[ i ];\n\t\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\t\tif ( solid ) {\n\n\t\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\t\tnewShapes[ mainIdx ] = { s: new THREE.Shape(), p: tmpPoints };\n\t\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t\t//console.log('cw', i);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t\t//console.log('ccw', i);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\t\tif ( newShapes.length > 1 ) {\n\n\t\t\t\tvar ambiguous = false;\n\t\t\t\tvar toChange = [];\n\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar tmpHoles;\n\n\t\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//console.log(\"shape\", shapes);\n\n\t\t\treturn shapes;\n\n\t\t}\n\t}\n\n\t// File:src/extras/core/Shape.js\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Defines a 2d shape plane using paths.\n\t **/\n\n\t// STEP 1 Create a path.\n\t// STEP 2 Turn path into shape.\n\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n\t// STEP 3a - Extract points from each shape, turn to vertices\n\t// STEP 3b - Triangulate each shape, add faces.\n\n\tTHREE.Shape = function () {\n\n\t\tTHREE.Path.apply( this, arguments );\n\n\t\tthis.holes = [];\n\n\t};\n\n\tTHREE.Shape.prototype = Object.assign( Object.create( THREE.Path.prototype ), {\n\n\t\tconstructor: THREE.Shape,\n\n\t\t// Convenience method to return ExtrudeGeometry\n\n\t\textrude: function ( options ) {\n\n\t\t\treturn new THREE.ExtrudeGeometry( this, options );\n\n\t\t},\n\n\t\t// Convenience method to return ShapeGeometry\n\n\t\tmakeGeometry: function ( options ) {\n\n\t\t\treturn new THREE.ShapeGeometry( this, options );\n\n\t\t},\n\n\t\tgetPointsHoles: function ( divisions ) {\n\n\t\t\tvar holesPts = [];\n\n\t\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t\t}\n\n\t\t\treturn holesPts;\n\n\t\t},\n\n\t\t// Get points of shape and holes (keypoints based on segments parameter)\n\n\t\textractAllPoints: function ( divisions ) {\n\n\t\t\treturn {\n\n\t\t\t\tshape: this.getPoints( divisions ),\n\t\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t\t};\n\n\t\t},\n\n\t\textractPoints: function ( divisions ) {\n\n\t\t\treturn this.extractAllPoints( divisions );\n\n\t\t}\n\n\t} );\n\n\t// File:src/extras/curves/LineCurve.js\n\n\t/**************************************************************\n\t *\tLine\n\t **************************************************************/\n\n\tTHREE.LineCurve = function ( v1, v2 ) {\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t};\n\n\tTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\n\tTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\n\n\tTHREE.LineCurve.prototype.getPoint = function ( t ) {\n\n\t\tif ( t === 1 ) {\n\n\t\t\treturn this.v2.clone();\n\n\t\t}\n\n\t\tvar point = this.v2.clone().sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\treturn point;\n\n\t};\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\n\tTHREE.LineCurve.prototype.getPointAt = function ( u ) {\n\n\t\treturn this.getPoint( u );\n\n\t};\n\n\tTHREE.LineCurve.prototype.getTangent = function( t ) {\n\n\t\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\t\treturn tangent.normalize();\n\n\t};\n\n\t// File:src/extras/curves/QuadraticBezierCurve.js\n\n\t/**************************************************************\n\t *\tQuadratic Bezier curve\n\t **************************************************************/\n\n\n\tTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t};\n\n\tTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\n\tTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\n\n\n\tTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar b2 = THREE.ShapeUtils.b2;\n\n\t\treturn new THREE.Vector2(\n\t\t\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\n\t\t\tb2( t, this.v0.y, this.v1.y, this.v2.y )\n\t\t);\n\n\t};\n\n\n\tTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\n\n\t\tvar tangentQuadraticBezier = THREE.CurveUtils.tangentQuadraticBezier;\n\n\t\treturn new THREE.Vector2(\n\t\t\ttangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x ),\n\t\t\ttangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y )\n\t\t).normalize();\n\n\t};\n\n\t// File:src/extras/curves/CubicBezierCurve.js\n\n\t/**************************************************************\n\t *\tCubic Bezier curve\n\t **************************************************************/\n\n\tTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t};\n\n\tTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\n\tTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\n\n\tTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar b3 = THREE.ShapeUtils.b3;\n\n\t\treturn new THREE.Vector2( \n\t\t\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\n\t\t\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\n\t\t);\n\n\t};\n\n\tTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\n\n\t\tvar tangentCubicBezier = THREE.CurveUtils.tangentCubicBezier;\n\n\t\treturn new THREE.Vector2( \n\t\t\ttangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\n\t\t\ttangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\n\t\t).normalize();\n\n\t};\n\n\t// File:src/extras/curves/SplineCurve.js\n\n\t/**************************************************************\n\t *\tSpline curve\n\t **************************************************************/\n\n\tTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\n\n\t\tthis.points = ( points == undefined ) ? [] : points;\n\n\t};\n\n\tTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\n\tTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\n\n\tTHREE.SplineCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar points = this.points;\n\t\tvar point = ( points.length - 1 ) * t;\n\n\t\tvar intPoint = Math.floor( point );\n\t\tvar weight = point - intPoint;\n\n\t\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tvar point1 = points[ intPoint ];\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tvar interpolate = THREE.CurveUtils.interpolate;\n\n\t\treturn new THREE.Vector2(\n\t\t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\n\t\t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight )\n\t\t);\n\n\t};\n\n\t// File:src/extras/curves/EllipseCurve.js\n\n\t/**************************************************************\n\t *\tEllipse curve\n\t **************************************************************/\n\n\tTHREE.EllipseCurve = function( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation || 0;\n\n\t};\n\n\tTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\n\tTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\n\n\tTHREE.EllipseCurve.prototype.getPoint = function( t ) {\n\n\t\tvar twoPi = Math.PI * 2;\n\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar angle = this.aStartAngle + t * deltaAngle;\n\t\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\t\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tvar cos = Math.cos( this.aRotation );\n\t\t\tvar sin = Math.sin( this.aRotation );\n\n\t\t\tvar tx = x - this.aX;\n\t\t\tvar ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn new THREE.Vector2( x, y );\n\n\t};\n\n\t// File:src/extras/curves/ArcCurve.js\n\n\t/**************************************************************\n\t *\tArc curve\n\t **************************************************************/\n\n\tTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t};\n\n\tTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\n\tTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\n\n\t// File:src/extras/curves/LineCurve3.js\n\n\t/**************************************************************\n\t *\tLine3D\n\t **************************************************************/\n\n\tTHREE.LineCurve3 = THREE.Curve.create(\n\n\t\tfunction ( v1, v2 ) {\n\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\n\t\t},\n\n\t\tfunction ( t ) {\n\n\t\t\tif ( t === 1 ) {\n\n\t\t\t\treturn this.v2.clone();\n\n\t\t\t}\n\n\t\t\tvar vector = new THREE.Vector3();\n\n\t\t\tvector.subVectors( this.v2, this.v1 ); // diff\n\t\t\tvector.multiplyScalar( t );\n\t\t\tvector.add( this.v1 );\n\n\t\t\treturn vector;\n\n\t\t}\n\n\t);\n\n\t// File:src/extras/curves/QuadraticBezierCurve3.js\n\n\t/**************************************************************\n\t *\tQuadratic Bezier 3D curve\n\t **************************************************************/\n\n\tTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\n\n\t\tfunction ( v0, v1, v2 ) {\n\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\n\t\t},\n\n\t\tfunction ( t ) {\n\n\t\t\tvar b2 = THREE.ShapeUtils.b2;\t\t\n\n\t\t\treturn new THREE.Vector3(\n\t\t\t\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\n\t\t\t\tb2( t, this.v0.y, this.v1.y, this.v2.y ),\n\t\t\t\tb2( t, this.v0.z, this.v1.z, this.v2.z )\n\t\t\t);\n\n\t\t}\n\n\t);\n\n\t// File:src/extras/curves/CubicBezierCurve3.js\n\n\t/**************************************************************\n\t *\tCubic Bezier 3D curve\n\t **************************************************************/\n\n\tTHREE.CubicBezierCurve3 = THREE.Curve.create(\n\n\t\tfunction ( v0, v1, v2, v3 ) {\n\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t\tthis.v3 = v3;\n\n\t\t},\n\n\t\tfunction ( t ) {\n\n\t\t\tvar b3 = THREE.ShapeUtils.b3;\n\n\t\t\treturn new THREE.Vector3(\n\t\t\t\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\n\t\t\t\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y ),\n\t\t\t\tb3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z )\n\t\t\t);\n\n\t\t}\n\n\t);\n\n\t// File:src/extras/curves/SplineCurve3.js\n\n\t/**************************************************************\n\t *\tSpline 3D curve\n\t **************************************************************/\n\n\n\tTHREE.SplineCurve3 = THREE.Curve.create(\n\n\t\tfunction ( points /* array of Vector3 */ ) {\n\n\t\t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\n\t\t\tthis.points = ( points == undefined ) ? [] : points;\n\n\t\t},\n\n\t\tfunction ( t ) {\n\n\t\t\tvar points = this.points;\n\t\t\tvar point = ( points.length - 1 ) * t;\n\n\t\t\tvar intPoint = Math.floor( point );\n\t\t\tvar weight = point - intPoint;\n\n\t\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\n\t\t\tvar point1 = points[ intPoint ];\n\t\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\t\tvar interpolate = THREE.CurveUtils.interpolate;\n\n\t\t\treturn new THREE.Vector3(\n\t\t\t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\n\t\t\t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight ),\n\t\t\t\tinterpolate( point0.z, point1.z, point2.z, point3.z, weight )\n\t\t\t);\n\n\t\t}\n\n\t);\n\n\t// File:src/extras/curves/CatmullRomCurve3.js\n\n\t/**\n\t * @author zz85 https://github.com/zz85\n\t *\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\n\t * cusps and self-intersections in non-uniform catmull rom curves.\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n\t *\n\t * curve.type accepts centripetal(default), chordal and catmullrom\n\t * curve.tension is used for catmullrom which defaults to 0.5\n\t */\n\n\tTHREE.CatmullRomCurve3 = ( function() {\n\n\t\tvar\n\t\t\ttmp = new THREE.Vector3(),\n\t\t\tpx = new CubicPoly(),\n\t\t\tpy = new CubicPoly(),\n\t\t\tpz = new CubicPoly();\n\n\t\t/*\n\t\tBased on an optimized c++ solution in\n\t\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n\t\t - http://ideone.com/NoEbVM\n\n\t\tThis CubicPoly class could be used for reusing some variables and calculations,\n\t\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\n\t\twhich can be placed in CurveUtils.\n\t\t*/\n\n\t\tfunction CubicPoly() {\n\n\t\t}\n\n\t\t/*\n\t\t * Compute coefficients for a cubic polynomial\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t\t * such that\n\t\t *   p(0) = x0, p(1) = x1\n\t\t *  and\n\t\t *   p'(0) = t0, p'(1) = t1.\n\t\t */\n\t\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\n\n\t\t\tthis.c0 = x0;\n\t\t\tthis.c1 = t0;\n\t\t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t\t};\n\n\t\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\t// initCubicPoly\n\t\t\tthis.init( x1, x2, t1, t2 );\n\n\t\t};\n\n\t\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\n\t\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\n\n\t\t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t};\n\n\t\tCubicPoly.prototype.calc = function( t ) {\n\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t2 * t;\n\t\t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\n\n\t\t};\n\n\t\t// Subclass Three.js curve\n\t\treturn THREE.Curve.create(\n\n\t\t\tfunction ( p /* array of Vector3 */ ) {\n\n\t\t\t\tthis.points = p || [];\n\t\t\t\tthis.closed = false;\n\n\t\t\t},\n\n\t\t\tfunction ( t ) {\n\n\t\t\t\tvar points = this.points,\n\t\t\t\t\tpoint, intPoint, weight, l;\n\n\t\t\t\tl = points.length;\n\n\t\t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\n\n\t\t\t\tpoint = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\t\t\tintPoint = Math.floor( point );\n\t\t\t\tweight = point - intPoint;\n\n\t\t\t\tif ( this.closed ) {\n\n\t\t\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\n\n\t\t\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\t\t\tintPoint = l - 2;\n\t\t\t\t\tweight = 1;\n\n\t\t\t\t}\n\n\t\t\t\tvar p0, p1, p2, p3; // 4 points\n\n\t\t\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// extrapolate first point\n\t\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\t\t\tp0 = tmp;\n\n\t\t\t\t}\n\n\t\t\t\tp1 = points[ intPoint % l ];\n\t\t\t\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\t\t\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// extrapolate last point\n\t\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\t\t\tp3 = tmp;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\n\n\t\t\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\n\t\t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t\t\t// safety check for repeated points\n\t\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t\t\t} else if ( this.type === 'catmullrom' ) {\n\n\t\t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\n\t\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\n\t\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\n\t\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\n\n\t\t\t\t}\n\n\t\t\t\tvar v = new THREE.Vector3(\n\t\t\t\t\tpx.calc( weight ),\n\t\t\t\t\tpy.calc( weight ),\n\t\t\t\t\tpz.calc( weight )\n\t\t\t\t);\n\n\t\t\t\treturn v;\n\n\t\t\t}\n\n\t\t);\n\n\t} )();\n\n\t// File:src/extras/curves/ClosedSplineCurve3.js\n\n\t/**************************************************************\n\t *\tClosed Spline 3D curve\n\t **************************************************************/\n\n\n\tTHREE.ClosedSplineCurve3 = function ( points ) {\n\n\t\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3.' );\n\n\t\tTHREE.CatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\t\tthis.closed = true;\n\n\t};\n\n\tTHREE.ClosedSplineCurve3.prototype = Object.create( THREE.CatmullRomCurve3.prototype );\n\n\t// File:src/extras/geometries/BoxGeometry.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\n\t */\n\n\tTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tTHREE.Geometry.call( this );\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new THREE.BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\t\tthis.mergeVertices();\n\n\t};\n\n\tTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\n\n\tTHREE.CubeGeometry = THREE.BoxGeometry;\n\n\t// File:src/extras/geometries/BoxBufferGeometry.js\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tTHREE.BoxBufferGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tTHREE.BufferGeometry.call( this );\n\n\t\tthis.type = 'BoxBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tvar scope = this;\n\n\t\t// segments\n\t\twidthSegments = Math.floor( widthSegments ) || 1;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\t\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t\t// these are used to calculate buffer length\n\t\tvar vertexCount = calculateVertexCount( widthSegments, heightSegments, depthSegments );\n\t\tvar indexCount = calculateIndexCount( widthSegments, heightSegments, depthSegments );\n\n\t\t// buffers\n\t\tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\n\t\tvar vertices = new Float32Array( vertexCount * 3 );\n\t\tvar normals = new Float32Array( vertexCount * 3 );\n\t\tvar uvs = new Float32Array( vertexCount * 2 );\n\n\t\t// offset variables\n\t\tvar vertexBufferOffset = 0;\n\t\tvar uvBufferOffset = 0;\n\t\tvar indexBufferOffset = 0;\n\t\tvar numberOfVertices = 0;\n\n\t\t// group variables\n\t\tvar groupStart = 0;\n\n\t\t// build each side of the box geometry\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height,   width,  depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x',   1, - 1, depth, height, - width,  depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y',   1,   1, width, depth,    height, widthSegments, depthSegments,  2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y',   1, - 1, width, depth,  - height, widthSegments, depthSegments,  3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z',   1, - 1, width, height,   depth,  widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth,  widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\n\n\t\t// helper functions\n\n\t\tfunction calculateVertexCount ( w, h, d ) {\n\n\t\t\tvar vertices = 0;\n\n\t\t\t// calculate the amount of vertices for each side (plane)\n\t\t\tvertices += (w + 1) * (h + 1) * 2; // xy\n\t\t\tvertices += (w + 1) * (d + 1) * 2; // xz\n\t\t\tvertices += (d + 1) * (h + 1) * 2; // zy\n\n\t\t\treturn vertices;\n\n\t\t}\n\n\t\tfunction calculateIndexCount ( w, h, d ) {\n\n\t\t\tvar index = 0;\n\n\t\t\t// calculate the amount of squares for each side\n\t\t\tindex += w * h * 2; // xy\n\t\t\tindex += w * d * 2; // xz\n\t\t\tindex += d * h * 2; // zy\n\n\t\t\treturn index * 6; // two triangles per square => six vertices per square\n\n\t\t}\n\n\t\tfunction buildPlane ( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tvar segmentWidth\t= width / gridX;\n\t\t\tvar segmentHeight = height / gridY;\n\n\t\t\tvar widthHalf = width / 2;\n\t\t\tvar heightHalf = height / 2;\n\t\t\tvar depthHalf = depth / 2;\n\n\t\t\tvar gridX1 = gridX + 1;\n\t\t\tvar gridY1 = gridY + 1;\n\n\t\t\tvar vertexCounter = 0;\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar vector = new THREE.Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\t\t\t\t\tvertices[ vertexBufferOffset ] = vector.x;\n\t\t\t\t\tvertices[ vertexBufferOffset + 1 ] = vector.y;\n\t\t\t\t\tvertices[ vertexBufferOffset + 2 ] = vector.z;\n\n\t\t\t\t\t// set values to correct vector component\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\t\t\t\t\tnormals[ vertexBufferOffset ] = vector.x;\n\t\t\t\t\tnormals[ vertexBufferOffset + 1 ] = vector.y;\n\t\t\t\t\tnormals[ vertexBufferOffset + 2 ] = vector.z;\n\n\t\t\t\t\t// uvs\n\t\t\t\t\tuvs[ uvBufferOffset ] = ix / gridX;\n\t\t\t\t\tuvs[ uvBufferOffset + 1 ] = 1 - ( iy / gridY );\n\n\t\t\t\t\t// update offsets and counters\n\t\t\t\t\tvertexBufferOffset += 3;\n\t\t\t\t\tuvBufferOffset += 2;\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\t// indices\n\t\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// face one\n\t\t\t\t\tindices[ indexBufferOffset ] = a;\n\t\t\t\t\tindices[ indexBufferOffset + 1 ] = b;\n\t\t\t\t\tindices[ indexBufferOffset + 2 ] = d;\n\n\t\t\t\t\t// face two\n\t\t\t\t\tindices[ indexBufferOffset + 3 ] = b;\n\t\t\t\t\tindices[ indexBufferOffset + 4 ] = c;\n\t\t\t\t\tindices[ indexBufferOffset + 5 ] = d;\n\n\t\t\t\t\t// update offsets and counters\n\t\t\t\t\tindexBufferOffset += 6;\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t};\n\n\tTHREE.BoxBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\tTHREE.BoxBufferGeometry.prototype.constructor = THREE.BoxBufferGeometry;\n\n\t// File:src/extras/geometries/CircleGeometry.js\n\n\t/**\n\t * @author hughes\n\t */\n\n\tTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\n\n\t\tTHREE.Geometry.call( this );\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new THREE.CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\n\t};\n\n\tTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\n\n\t// File:src/extras/geometries/CircleBufferGeometry.js\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tTHREE.CircleBufferGeometry = function ( radius, segments, thetaStart, thetaLength ) {\n\n\t\tTHREE.BufferGeometry.call( this );\n\n\t\tthis.type = 'CircleBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 50;\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\tvar vertices = segments + 2;\n\n\t\tvar positions = new Float32Array( vertices * 3 );\n\t\tvar normals = new Float32Array( vertices * 3 );\n\t\tvar uvs = new Float32Array( vertices * 2 );\n\n\t\t// center data is already zero, but need to set a few extras\n\t\tnormals[ 2 ] = 1.0;\n\t\tuvs[ 0 ] = 0.5;\n\t\tuvs[ 1 ] = 0.5;\n\n\t\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\n\n\t\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t\tpositions[ i ] = radius * Math.cos( segment );\n\t\t\tpositions[ i + 1 ] = radius * Math.sin( segment );\n\n\t\t\tnormals[ i + 2 ] = 1; // normal z\n\n\t\t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\n\t\t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t}\n\n\t\tvar indices = [];\n\n\t\tfor ( var i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\n\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\n\t};\n\n\tTHREE.CircleBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\tTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry;\n\n\t// File:src/extras/geometries/CylinderBufferGeometry.js\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tTHREE.CylinderBufferGeometry = function( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tTHREE.BufferGeometry.call( this );\n\n\t\tthis.type = 'CylinderBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tvar scope = this;\n\n\t\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\n\t\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\n\t\theight = height !== undefined ? height : 100;\n\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\n\t\topenEnded = openEnded !== undefined ? openEnded : false;\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI;\n\n\t\t// used to calculate buffer length\n\n\t\tvar nbCap = 0;\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) nbCap ++;\n\t\t\tif ( radiusBottom > 0 ) nbCap ++;\n\n\t\t}\n\n\t\tvar vertexCount = calculateVertexCount();\n\t\tvar indexCount = calculateIndexCount();\n\n\t\t// buffers\n\n\t\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ), 1 );\n\t\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t\t// helper variables\n\n\t\tvar index = 0,\n\t\t    indexOffset = 0,\n\t\t    indexArray = [],\n\t\t    halfHeight = height / 2;\n\n\t\t// group variables\n\t\tvar groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', vertices );\n\t\tthis.addAttribute( 'normal', normals );\n\t\tthis.addAttribute( 'uv', uvs );\n\n\t\t// helper functions\n\n\t\tfunction calculateVertexCount() {\n\n\t\t\tvar count = ( radialSegments + 1 ) * ( heightSegments + 1 );\n\n\t\t\tif ( openEnded === false ) {\n\n\t\t\t\tcount += ( ( radialSegments + 1 ) * nbCap ) + ( radialSegments * nbCap );\n\n\t\t\t}\n\n\t\t\treturn count;\n\n\t\t}\n\n\t\tfunction calculateIndexCount() {\n\n\t\t\tvar count = radialSegments * heightSegments * 2 * 3;\n\n\t\t\tif ( openEnded === false ) {\n\n\t\t\t\tcount += radialSegments * nbCap * 3;\n\n\t\t\t}\n\n\t\t\treturn count;\n\n\t\t}\n\n\t\tfunction generateTorso() {\n\n\t\t\tvar x, y;\n\t\t\tvar normal = new THREE.Vector3();\n\t\t\tvar vertex = new THREE.Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tvar indexRow = [];\n\n\t\t\t\tvar v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\t\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\t\t// vertex\n\t\t\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\n\t\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\t\t\t\t\tnormal.copy( vertex );\n\n\t\t\t\t\t// handle special case if radiusTop/radiusBottom is zero\n\n\t\t\t\t\tif ( ( radiusTop === 0 && y === 0 ) || ( radiusBottom === 0 && y === heightSegments ) ) {\n\n\t\t\t\t\t\tnormal.x = Math.sin( u * thetaLength + thetaStart );\n\t\t\t\t\t\tnormal.z = Math.cos( u * thetaLength + thetaStart );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnormal.setY( Math.sqrt( normal.x * normal.x + normal.z * normal.z ) * tanTheta ).normalize();\n\t\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\t\t\t\t\tuvs.setXY( index, u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\t\t\t\t\tindexRow.push( index );\n\n\t\t\t\t\t// increase index\n\t\t\t\t\tindex ++;\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\t\t\t\t\tvar i1 = indexArray[ y ][ x ];\n\t\t\t\t\tvar i2 = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tvar i3 = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tvar i4 = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// face one\n\t\t\t\t\tindices.setX( indexOffset, i1 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i2 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i4 ); indexOffset ++;\n\n\t\t\t\t\t// face two\n\t\t\t\t\tindices.setX( indexOffset, i2 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i3 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i4 ); indexOffset ++;\n\n\t\t\t\t\t// update counters\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\t\tvar uv = new THREE.Vector2();\n\t\t\tvar vertex = new THREE.Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// save the index of the first center vertex\n\t\t\tcenterIndexStart = index;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\t\t\t\tvertices.setXYZ( index, 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\t\t\t\tnormals.setXYZ( index, 0, sign, 0 );\n\n\t\t\t\t// uv\n\t\t\t\tuv.x = 0.5;\n\t\t\t\tuv.y = 0.5;\n\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t\t// increase index\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tcenterIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\t\t\t\tnormals.setXYZ( index, 0, sign, 0 );\n\n\t\t\t\t// uv\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t\t// increase index\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tvar c = centerIndexStart + x;\n\t\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\t\t\t\t\tindices.setX( indexOffset, i ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i + 1 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, c ); indexOffset ++;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\t\t\t\t\tindices.setX( indexOffset, i + 1 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, c ); indexOffset ++;\n\n\t\t\t\t}\n\n\t\t\t\t// update counters\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t};\n\n\tTHREE.CylinderBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\tTHREE.CylinderBufferGeometry.prototype.constructor = THREE.CylinderBufferGeometry;\n\n\t// File:src/extras/geometries/CylinderGeometry.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tTHREE.Geometry.call( this );\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new THREE.CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t};\n\n\tTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\n\n\t// File:src/extras/geometries/ConeBufferGeometry.js\n\n\t/*\n\t * @author: abelnation / http://github.com/abelnation\n\t */\n\n\tTHREE.ConeBufferGeometry = function (\n\t\tradius, height,\n\t\tradialSegments, heightSegments,\n\t\topenEnded, thetaStart, thetaLength ) {\n\n\t\tTHREE.CylinderBufferGeometry.call( this,\n\t\t\t0, radius, height,\n\t\t\tradialSegments, heightSegments,\n\t\t\topenEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t};\n\n\tTHREE.ConeBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\tTHREE.ConeBufferGeometry.prototype.constructor = THREE.ConeBufferGeometry;\n\n\t// File:src/extras/geometries/ConeGeometry.js\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t */\n\n\tTHREE.ConeGeometry = function (\n\t\tradius, height,\n\t\tradialSegments, heightSegments,\n\t\topenEnded, thetaStart, thetaLength ) {\n\n\t\tTHREE.CylinderGeometry.call( this,\n\t\t\t0, radius, height,\n\t\t\tradialSegments, heightSegments,\n\t\t\topenEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t};\n\n\tTHREE.ConeGeometry.prototype = Object.create( THREE.CylinderGeometry.prototype );\n\tTHREE.ConeGeometry.prototype.constructor = THREE.ConeGeometry;\n\n\t// File:src/extras/geometries/EdgesGeometry.js\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tTHREE.EdgesGeometry = function ( geometry, thresholdAngle ) {\n\n\t\tTHREE.BufferGeometry.call( this );\n\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t\tvar thresholdDot = Math.cos( THREE.Math.DEG2RAD * thresholdAngle );\n\n\t\tvar edge = [ 0, 0 ], hash = {};\n\n\t\tfunction sortFunction( a, b ) {\n\n\t\t\treturn a - b;\n\n\t\t}\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tvar geometry2;\n\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\tgeometry2 = new THREE.Geometry();\n\t\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t\t} else {\n\n\t\t\tgeometry2 = geometry.clone();\n\n\t\t}\n\n\t\tgeometry2.mergeVertices();\n\t\tgeometry2.computeFaceNormals();\n\n\t\tvar vertices = geometry2.vertices;\n\t\tvar faces = geometry2.faces;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge.sort( sortFunction );\n\n\t\t\t\tvar key = edge.toString();\n\n\t\t\t\tif ( hash[ key ] === undefined ) {\n\n\t\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t\t} else {\n\n\t\t\t\t\thash[ key ].face2 = i;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar coords = [];\n\n\t\tfor ( var key in hash ) {\n\n\t\t\tvar h = hash[ key ];\n\n\t\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\t\tvar vertex = vertices[ h.vert1 ];\n\t\t\t\tcoords.push( vertex.x );\n\t\t\t\tcoords.push( vertex.y );\n\t\t\t\tcoords.push( vertex.z );\n\n\t\t\t\tvertex = vertices[ h.vert2 ];\n\t\t\t\tcoords.push( vertex.x );\n\t\t\t\tcoords.push( vertex.y );\n\t\t\t\tcoords.push( vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( coords ), 3 ) );\n\n\t};\n\n\tTHREE.EdgesGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\tTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry;\n\n\t// File:src/extras/geometries/ExtrudeGeometry.js\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Creates extruded geometry from a path shape.\n\t *\n\t * parameters = {\n\t *\n\t *  curveSegments: <int>, // number of points on the curves\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n\t *  amount: <int>, // Depth to extrude the shape\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\n\t *  bevelSize: <float>, // how far from shape outline is bevel\n\t *  bevelSegments: <int>, // number of bevel layers\n\t *\n\t *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\n\t *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\n\t *\n\t *  uvGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t **/\n\n\tTHREE.ExtrudeGeometry = function ( shapes, options ) {\n\n\t\tif ( typeof( shapes ) === \"undefined\" ) {\n\n\t\t\tshapes = [];\n\t\t\treturn;\n\n\t\t}\n\n\t\tTHREE.Geometry.call( this );\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tthis.addShapeList( shapes, options );\n\n\t\tthis.computeFaceNormals();\n\n\t\t// can't really use automatic vertex normals\n\t\t// as then front and back sides get smoothed too\n\t\t// should do separate smoothing just for sides\n\n\t\t//this.computeVertexNormals();\n\n\t\t//console.log( \"took\", ( Date.now() - startTime ) );\n\n\t};\n\n\tTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\n\n\tTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\n\n\t\tvar sl = shapes.length;\n\n\t\tfor ( var s = 0; s < sl; s ++ ) {\n\n\t\t\tvar shape = shapes[ s ];\n\t\t\tthis.addShape( shape, options );\n\n\t\t}\n\n\t};\n\n\tTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\n\n\t\tvar amount = options.amount !== undefined ? options.amount : 100;\n\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\n\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\n\t\tvar extrudePath = options.extrudePath;\n\t\tvar extrudePts, extrudeByPath = false;\n\n\t\t// Use default WorldUVGenerator if no UV generators are specified.\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\n\n\t\tvar splineTube, binormal, normal, position2;\n\t\tif ( extrudePath ) {\n\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\textrudeByPath = true;\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t// SETUP TNB variables\n\n\t\t\t// Reuse TNB from TubeGeomtry for now.\n\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames( extrudePath, steps, false );\n\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\tbinormal = new THREE.Vector3();\n\t\t\tnormal = new THREE.Vector3();\n\t\t\tposition2 = new THREE.Vector3();\n\n\t\t}\n\n\t\t// Safeguards if bevels are not enabled\n\n\t\tif ( ! bevelEnabled ) {\n\n\t\t\tbevelSegments = 0;\n\t\t\tbevelThickness = 0;\n\t\t\tbevelSize = 0;\n\n\t\t}\n\n\t\t// Variables initialization\n\n\t\tvar ahole, h, hl; // looping of holes\n\t\tvar scope = this;\n\n\t\tvar shapesOffset = this.vertices.length;\n\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! THREE.ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tif ( THREE.ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\n\n\t\t}\n\n\n\t\tvar faces = THREE.ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t/* Vertices */\n\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tvertices = vertices.concat( ahole );\n\n\t\t}\n\n\n\t\tfunction scalePt2 ( pt, vec, size ) {\n\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t}\n\n\t\tvar b, bs, t, z,\n\t\t\tvert, vlen = vertices.length,\n\t\t\tface, flen = faces.length;\n\n\n\t\t// Find directions for point movement\n\n\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t//\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\n\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\n\t\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\n\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t// check for collinear edges\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t// not collinear\n\n\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\n\t\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t//  but prevent crazy spikes\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\tvar direction_eq = false;\t\t// assumes: opposite\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\tv_trans_y =  v_prev_x;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t}\n\n\n\t\tvar contourMovements = [];\n\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t}\n\n\t\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\toneHoleMovements = [];\n\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t}\n\n\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t}\n\n\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * ( 1 - t );\n\n\t\t\t//z = bevelThickness * t;\n\t\t\tbs = bevelSize * ( Math.sin ( t * Math.PI / 2 ) ); // curved\n\t\t\t//bs = bevelSize * t; // linear\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y,  - z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y,  - z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tbs = bevelSize;\n\n\t\t// Back facing vertices\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add stepped vertices...\n\t\t// Including front facing vertices\n\n\t\tvar s;\n\n\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, amount / steps * s );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Add bevel segments planes\n\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * ( 1 - t );\n\t\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\n\t\t\tbs = bevelSize * Math.sin ( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\tv( vert.x, vert.y,  amount + z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y,  amount + z );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/* Faces */\n\n\t\t// Top and bottom faces\n\n\t\tbuildLidFaces();\n\n\t\t// Sides faces\n\n\t\tbuildSideFaces();\n\n\n\t\t/////  Internal functions\n\n\t\tfunction buildLidFaces() {\n\n\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Create faces for the z-sides of the shape\n\n\t\tfunction buildSideFaces() {\n\n\t\t\tvar layeroffset = 0;\n\t\t\tsidewalls( contour, layeroffset );\n\t\t\tlayeroffset += contour.length;\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t//, true\n\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\tvar j, k;\n\t\t\ti = contour.length;\n\n\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\tj = i;\n\t\t\t\tk = i - 1;\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\n\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tfunction v( x, y, z ) {\n\n\t\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\n\n\t\t}\n\n\t\tfunction f3( a, b, c ) {\n\n\t\t\ta += shapesOffset;\n\t\t\tb += shapesOffset;\n\t\t\tc += shapesOffset;\n\n\t\t\tscope.faces.push( new THREE.Face3( a, b, c, null, null, 0 ) );\n\n\t\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\n\n\t\t\tscope.faceVertexUvs[ 0 ].push( uvs );\n\n\t\t}\n\n\t\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\n\n\t\t\ta += shapesOffset;\n\t\t\tb += shapesOffset;\n\t\t\tc += shapesOffset;\n\t\t\td += shapesOffset;\n\n\t\t\tscope.faces.push( new THREE.Face3( a, b, d, null, null, 1 ) );\n\t\t\tscope.faces.push( new THREE.Face3( b, c, d, null, null, 1 ) );\n\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\n\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\n\n\t\t}\n\n\t};\n\n\tTHREE.ExtrudeGeometry.WorldUVGenerator = {\n\n\t\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\n\n\t\t\tvar vertices = geometry.vertices;\n\n\t\t\tvar a = vertices[ indexA ];\n\t\t\tvar b = vertices[ indexB ];\n\t\t\tvar c = vertices[ indexC ];\n\n\t\t\treturn [\n\t\t\t\tnew THREE.Vector2( a.x, a.y ),\n\t\t\t\tnew THREE.Vector2( b.x, b.y ),\n\t\t\t\tnew THREE.Vector2( c.x, c.y )\n\t\t\t];\n\n\t\t},\n\n\t\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\n\n\t\t\tvar vertices = geometry.vertices;\n\n\t\t\tvar a = vertices[ indexA ];\n\t\t\tvar b = vertices[ indexB ];\n\t\t\tvar c = vertices[ indexC ];\n\t\t\tvar d = vertices[ indexD ];\n\n\t\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew THREE.Vector2( a.x, 1 - a.z ),\n\t\t\t\t\tnew THREE.Vector2( b.x, 1 - b.z ),\n\t\t\t\t\tnew THREE.Vector2( c.x, 1 - c.z ),\n\t\t\t\t\tnew THREE.Vector2( d.x, 1 - d.z )\n\t\t\t\t];\n\n\t\t\t} else {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew THREE.Vector2( a.y, 1 - a.z ),\n\t\t\t\t\tnew THREE.Vector2( b.y, 1 - b.z ),\n\t\t\t\t\tnew THREE.Vector2( c.y, 1 - c.z ),\n\t\t\t\t\tnew THREE.Vector2( d.y, 1 - d.z )\n\t\t\t\t];\n\n\t\t\t}\n\n\t\t}\n\t};\n\n\t// File:src/extras/geometries/ShapeGeometry.js\n\n\t/**\n\t * @author jonobr1 / http://jonobr1.com\n\t *\n\t * Creates a one-sided polygonal geometry from a path shape. Similar to\n\t * ExtrudeGeometry.\n\t *\n\t * parameters = {\n\t *\n\t *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\n\t *\n\t *\tmaterial: <int> // material index for front and back faces\n\t *\tuvGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t **/\n\n\tTHREE.ShapeGeometry = function ( shapes, options ) {\n\n\t\tTHREE.Geometry.call( this );\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\n\n\t\tthis.addShapeList( shapes, options );\n\n\t\tthis.computeFaceNormals();\n\n\t};\n\n\tTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\n\n\t/**\n\t * Add an array of shapes to THREE.ShapeGeometry.\n\t */\n\tTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tthis.addShape( shapes[ i ], options );\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\n\t */\n\tTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\n\n\t\tif ( options === undefined ) options = {};\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\n\t\tvar material = options.material;\n\t\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\n\n\t\t//\n\n\t\tvar i, l, hole;\n\n\t\tvar shapesOffset = this.vertices.length;\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! THREE.ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\n\n\t\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\n\n\t\t\t\thole = holes[ i ];\n\n\t\t\t\tif ( THREE.ShapeUtils.isClockWise( hole ) ) {\n\n\t\t\t\t\tholes[ i ] = hole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treverse = false;\n\n\t\t}\n\n\t\tvar faces = THREE.ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t// Vertices\n\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\n\n\t\t\thole = holes[ i ];\n\t\t\tvertices = vertices.concat( hole );\n\n\t\t}\n\n\t\t//\n\n\t\tvar vert, vlen = vertices.length;\n\t\tvar face, flen = faces.length;\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = vertices[ i ];\n\n\t\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\n\n\t\t}\n\n\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\tface = faces[ i ];\n\n\t\t\tvar a = face[ 0 ] + shapesOffset;\n\t\t\tvar b = face[ 1 ] + shapesOffset;\n\t\t\tvar c = face[ 2 ] + shapesOffset;\n\n\t\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\n\t\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\n\n\t\t}\n\n\t};\n\n\t// File:src/extras/geometries/LatheBufferGeometry.js\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t // points - to create a closed torus, one must use a set of points\n\t //    like so: [ a, b, c, d, a ], see first is the same as last.\n\t // segments - the number of circumference segments to create\n\t // phiStart - the starting radian\n\t // phiLength - the radian (0 to 2PI) range of the lathed section\n\t //    2PI is a closed lathe, less than 2PI is a portion.\n\n\tTHREE.LatheBufferGeometry = function ( points, segments, phiStart, phiLength ) {\n\n\t\tTHREE.BufferGeometry.call( this );\n\n\t\tthis.type = 'LatheBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments ) || 12;\n\t\tphiStart = phiStart || 0;\n\t\tphiLength = phiLength || Math.PI * 2;\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\t\tphiLength = THREE.Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// these are used to calculate buffer length\n\t\tvar vertexCount = ( segments + 1 ) * points.length;\n\t\tvar indexCount = segments * points.length * 2 * 3;\n\n\t\t// buffers\n\t\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\n\t\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t\t// helper variables\n\t\tvar index = 0, indexOffset = 0, base;\n\t\tvar inversePointLength = 1.0 / ( points.length - 1 );\n\t\tvar inverseSegments = 1.0 / segments;\n\t\tvar vertex = new THREE.Vector3();\n\t\tvar uv = new THREE.Vector2();\n\t\tvar i, j;\n\n\t\t// generate vertices and uvs\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tvar sin = Math.sin( phi );\n\t\t\tvar cos = Math.cos( phi );\n\n\t\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t\t// increase index\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tbase = j + i * points.length;\n\n\t\t\t\t// indices\n\t\t\t\tvar a = base;\n\t\t\t\tvar b = base + points.length;\n\t\t\t\tvar c = base + points.length + 1;\n\t\t\t\tvar d = base + 1;\n\n\t\t\t\t// face one\n\t\t\t\tindices.setX( indexOffset, a ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t\t\t// face two\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', vertices );\n\t\tthis.addAttribute( 'uv', uvs );\n\n\t\t// generate normals\n\n\t\tthis.computeVertexNormals();\n\n\t\t// if the geometry is closed, we need to average the normals along the seam.\n\t\t// because the corresponding vertices are identical (but still have different UVs).\n\n\t\tif( phiLength === Math.PI * 2 ) {\n\n\t\t\tvar normals = this.attributes.normal.array;\n\t\t\tvar n1 = new THREE.Vector3();\n\t\t\tvar n2 = new THREE.Vector3();\n\t\t\tvar n = new THREE.Vector3();\n\n\t\t\t// this is the buffer offset for the last line of vertices\n\t\t\tbase = segments * points.length * 3;\n\n\t\t\tfor( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t\t// select the normal of the vertex in the first line\n\t\t\t\tn1.x = normals[ j + 0 ];\n\t\t\t\tn1.y = normals[ j + 1 ];\n\t\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t\t// select the normal of the vertex in the last line\n\t\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t\t// average normals\n\t\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t\t// assign the new values to both normals\n\t\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t\t} // next row\n\n\t\t}\n\n\t};\n\n\tTHREE.LatheBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\tTHREE.LatheBufferGeometry.prototype.constructor = THREE.LatheBufferGeometry;\n\n\t// File:src/extras/geometries/LatheGeometry.js\n\n\t/**\n\t * @author astrodud / http://astrodud.isgreat.org/\n\t * @author zz85 / https://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t */\n\n\t// points - to create a closed torus, one must use a set of points\n\t//    like so: [ a, b, c, d, a ], see first is the same as last.\n\t// segments - the number of circumference segments to create\n\t// phiStart - the starting radian\n\t// phiLength - the radian (0 to 2PI) range of the lathed section\n\t//    2PI is a closed lathe, less than 2PI is a portion.\n\n\tTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\n\n\t\tTHREE.Geometry.call( this );\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new THREE.LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\t\tthis.mergeVertices();\n\n\t};\n\n\tTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\n\n\t// File:src/extras/geometries/PlaneGeometry.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\n\t */\n\n\tTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\n\n\t\tTHREE.Geometry.call( this );\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\n\t};\n\n\tTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\n\n\t// File:src/extras/geometries/PlaneBufferGeometry.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\n\t */\n\n\tTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\n\n\t\tTHREE.BufferGeometry.call( this );\n\n\t\tthis.type = 'PlaneBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tvar width_half = width / 2;\n\t\tvar height_half = height / 2;\n\n\t\tvar gridX = Math.floor( widthSegments ) || 1;\n\t\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar segment_width = width / gridX;\n\t\tvar segment_height = height / gridY;\n\n\t\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\n\t\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\n\t\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\n\n\t\tvar offset = 0;\n\t\tvar offset2 = 0;\n\n\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segment_height - height_half;\n\n\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\t\tvertices[ offset ] = x;\n\t\t\t\tvertices[ offset + 1 ] = - y;\n\n\t\t\t\tnormals[ offset + 2 ] = 1;\n\n\t\t\t\tuvs[ offset2 ] = ix / gridX;\n\t\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\n\n\t\t\t\toffset += 3;\n\t\t\t\toffset2 += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\toffset = 0;\n\n\t\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\n\n\t\tfor ( var iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = ix + gridX1 * iy;\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices[ offset ] = a;\n\t\t\t\tindices[ offset + 1 ] = b;\n\t\t\t\tindices[ offset + 2 ] = d;\n\n\t\t\t\tindices[ offset + 3 ] = b;\n\t\t\t\tindices[ offset + 4 ] = c;\n\t\t\t\tindices[ offset + 5 ] = d;\n\n\t\t\t\toffset += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\n\n\t};\n\n\tTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\tTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\n\n\t// File:src/extras/geometries/RingBufferGeometry.js\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tTHREE.RingBufferGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tTHREE.BufferGeometry.call( this );\n\n\t\tthis.type = 'RingBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tinnerRadius = innerRadius || 20;\n\t\touterRadius = outerRadius || 50;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t\t// these are used to calculate buffer length\n\t\tvar vertexCount = ( thetaSegments + 1 ) * ( phiSegments + 1 );\n\t\tvar indexCount = thetaSegments * phiSegments * 2 * 3;\n\n\t\t// buffers\n\t\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\n\t\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t\t// some helper variables\n\t\tvar index = 0, indexOffset = 0, segment;\n\t\tvar radius = innerRadius;\n\t\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tvar vertex = new THREE.Vector3();\n\t\tvar uv = new THREE.Vector2();\n\t\tvar j, i;\n\n\t\t// generate vertices, normals and uvs\n\n\t\t// values are generate from the inside of the ring to the outside\n\n\t\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\t\t\t\tnormals.setXYZ( index, 0, 0, 1 );\n\n\t\t\t\t// uv\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t\t// increase index\n\t\t\t\tindex++;\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\t\t// indices\n\t\t\t\tvar a = segment;\n\t\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\t\tvar d = segment + 1;\n\n\t\t\t\t// face one\n\t\t\t\tindices.setX( indexOffset, a ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset++;\n\n\t\t\t\t// face two\n\t\t\t\tindices.setX( indexOffset, a ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', vertices );\n\t\tthis.addAttribute( 'normal', normals );\n\t\tthis.addAttribute( 'uv', uvs );\n\n\t};\n\n\tTHREE.RingBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\tTHREE.RingBufferGeometry.prototype.constructor = THREE.RingBufferGeometry;\n\n\t// File:src/extras/geometries/RingGeometry.js\n\n\t/**\n\t * @author Kaleb Murphy\n\t */\n\n\tTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tTHREE.Geometry.call( this );\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new THREE.RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\n\t};\n\n\tTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\n\n\t// File:src/extras/geometries/SphereGeometry.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tTHREE.Geometry.call( this );\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new THREE.SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\n\t};\n\n\tTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\n\n\t// File:src/extras/geometries/SphereBufferGeometry.js\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t * based on THREE.SphereGeometry\n\t */\n\n\tTHREE.SphereBufferGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tTHREE.BufferGeometry.call( this );\n\n\t\tthis.type = 'SphereBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 50;\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\t\tphiStart = phiStart !== undefined ? phiStart : 0;\n\t\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\t\tvar thetaEnd = thetaStart + thetaLength;\n\n\t\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\n\n\t\tvar positions = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t\tvar index = 0, vertices = [], normal = new THREE.Vector3();\n\n\t\tfor ( var y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar verticesRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\n\n\t\t\t\tvar u = x / widthSegments;\n\n\t\t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tnormal.set( px, py, pz ).normalize();\n\n\t\t\t\tpositions.setXYZ( index, px, py, pz );\n\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\n\t\t\t\tuvs.setXY( index, u, 1 - v );\n\n\t\t\t\tverticesRow.push( index );\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\tvertices.push( verticesRow );\n\n\t\t}\n\n\t\tvar indices = [];\n\n\t\tfor ( var y = 0; y < heightSegments; y ++ ) {\n\n\t\t\tfor ( var x = 0; x < widthSegments; x ++ ) {\n\n\t\t\t\tvar v1 = vertices[ y ][ x + 1 ];\n\t\t\t\tvar v2 = vertices[ y ][ x ];\n\t\t\t\tvar v3 = vertices[ y + 1 ][ x ];\n\t\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\n\n\t\t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\n\t\t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( new ( positions.count > 65535 ? THREE.Uint32Attribute : THREE.Uint16Attribute )( indices, 1 ) );\n\t\tthis.addAttribute( 'position', positions );\n\t\tthis.addAttribute( 'normal', normals );\n\t\tthis.addAttribute( 'uv', uvs );\n\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\n\t};\n\n\tTHREE.SphereBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\tTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry;\n\n\t// File:src/extras/geometries/TextGeometry.js\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Text = 3D Text\n\t *\n\t * parameters = {\n\t *  font: <THREE.Font>, // font\n\t *\n\t *  size: <float>, // size of the text\n\t *  height: <float>, // thickness to extrude text\n\t *  curveSegments: <int>, // number of points on the curves\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into text bevel goes\n\t *  bevelSize: <float> // how far from text outline is bevel\n\t * }\n\t */\n\n\tTHREE.TextGeometry = function ( text, parameters ) {\n\n\t\tparameters = parameters || {};\n\n\t\tvar font = parameters.font;\n\n\t\tif ( font instanceof THREE.Font === false ) {\n\n\t\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\t\treturn new THREE.Geometry();\n\n\t\t}\n\n\t\tvar shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );\n\n\t\t// translate parameters to ExtrudeGeometry API\n\n\t\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\n\n\t\t// defaults\n\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\t\tTHREE.ExtrudeGeometry.call( this, shapes, parameters );\n\n\t\tthis.type = 'TextGeometry';\n\n\t};\n\n\tTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\n\tTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry;\n\n\t// File:src/extras/geometries/TorusBufferGeometry.js\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tTHREE.TorusBufferGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tTHREE.BufferGeometry.call( this );\n\n\t\tthis.type = 'TorusBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradius = radius || 100;\n\t\ttube = tube || 40;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\t\tarc = arc || Math.PI * 2;\n\n\t\t// used to calculate buffer length\n\t\tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\n\t\tvar indexCount = radialSegments * tubularSegments * 2 * 3;\n\n\t\t// buffers\n\t\tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\n\t\tvar vertices = new Float32Array( vertexCount * 3 );\n\t\tvar normals = new Float32Array( vertexCount * 3 );\n\t\tvar uvs = new Float32Array( vertexCount * 2 );\n\n\t\t// offset variables\n\t\tvar vertexBufferOffset = 0;\n\t\tvar uvBufferOffset = 0;\n\t\tvar indexBufferOffset = 0;\n\n\t\t// helper variables\n\t\tvar center = new THREE.Vector3();\n\t\tvar vertex = new THREE.Vector3();\n\t\tvar normal = new THREE.Vector3();\n\n\t\tvar j, i;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tvar u = i / tubularSegments * arc;\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices[ vertexBufferOffset ] = vertex.x;\n\t\t\t\tvertices[ vertexBufferOffset + 1 ] = vertex.y;\n\t\t\t\tvertices[ vertexBufferOffset + 2 ] = vertex.z;\n\n\t\t\t\t// this vector is used to calculate the normal\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\n\t\t\t\t// normal\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals[ vertexBufferOffset ] = normal.x;\n\t\t\t\tnormals[ vertexBufferOffset + 1 ] = normal.y;\n\t\t\t\tnormals[ vertexBufferOffset + 2 ] = normal.z;\n\n\t\t\t\t// uv\n\t\t\t\tuvs[ uvBufferOffset ] = i / tubularSegments;\n\t\t\t\tuvs[ uvBufferOffset + 1 ] = j / radialSegments;\n\n\t\t\t\t// update offsets\n\t\t\t\tvertexBufferOffset += 3;\n\t\t\t\tuvBufferOffset += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\t\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// face one\n\t\t\t\tindices[ indexBufferOffset ] = a;\n\t\t\t\tindices[ indexBufferOffset + 1 ] = b;\n\t\t\t\tindices[ indexBufferOffset + 2 ] = d;\n\n\t\t\t\t// face two\n\t\t\t\tindices[ indexBufferOffset + 3 ] = b;\n\t\t\t\tindices[ indexBufferOffset + 4 ] = c;\n\t\t\t\tindices[ indexBufferOffset + 5 ] = d;\n\n\t\t\t\t// update offset\n\t\t\t\tindexBufferOffset += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\n\n\t};\n\n\tTHREE.TorusBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\tTHREE.TorusBufferGeometry.prototype.constructor = THREE.TorusBufferGeometry;\n\n\t// File:src/extras/geometries/TorusGeometry.js\n\n\t/**\n\t * @author oosmoxiecode\n\t * @author mrdoob / http://mrdoob.com/\n\t * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\n\t */\n\n\tTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tTHREE.Geometry.call( this );\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tthis.fromBufferGeometry( new THREE.TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\n\t};\n\n\tTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\n\n\t// File:src/extras/geometries/TorusKnotBufferGeometry.js\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * see: http://www.blackpawn.com/texts/pqtorus/\n\t */\n\tTHREE.TorusKnotBufferGeometry = function ( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\t\tTHREE.BufferGeometry.call( this );\n\n\t\tthis.type = 'TorusKnotBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tradius = radius || 100;\n\t\ttube = tube || 40;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\tp = p || 2;\n\t\tq = q || 3;\n\n\t\t// used to calculate buffer length\n\t\tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\n\t\tvar indexCount = radialSegments * tubularSegments * 2 * 3;\n\n\t\t// buffers\n\t\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\n\t\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t\t// helper variables\n\t\tvar i, j, index = 0, indexOffset = 0;\n\n\t\tvar vertex = new THREE.Vector3();\n\t\tvar normal = new THREE.Vector3();\n\t\tvar uv = new THREE.Vector2();\n\n\t\tvar P1 = new THREE.Vector3();\n\t\tvar P2 = new THREE.Vector3();\n\n\t\tvar B = new THREE.Vector3();\n\t\tvar T = new THREE.Vector3();\n\t\tvar N = new THREE.Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\t// vertex\n\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\tuv.y = j / radialSegments;\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t\t// increase index\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// face one\n\t\t\t\tindices.setX( indexOffset, a ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t\t\t// face two\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', vertices );\n\t\tthis.addAttribute( 'normal', normals );\n\t\tthis.addAttribute( 'uv', uvs );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tvar cu = Math.cos( u );\n\t\t\tvar su = Math.sin( u );\n\t\t\tvar quOverP = q / p * u;\n\t\t\tvar cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t};\n\n\tTHREE.TorusKnotBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\tTHREE.TorusKnotBufferGeometry.prototype.constructor = THREE.TorusKnotBufferGeometry;\n\n\t// File:src/extras/geometries/TorusKnotGeometry.js\n\n\t/**\n\t * @author oosmoxiecode\n\t */\n\n\tTHREE.TorusKnotGeometry = function ( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\t\tTHREE.Geometry.call( this );\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tif( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\t\tthis.fromBufferGeometry( new THREE.TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\t\tthis.mergeVertices();\n\n\t};\n\n\tTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\n\n\t// File:src/extras/geometries/TubeGeometry.js\n\n\t/**\n\t * @author WestLangley / https://github.com/WestLangley\n\t * @author zz85 / https://github.com/zz85\n\t * @author miningold / https://github.com/miningold\n\t * @author jonobr1 / https://github.com/jonobr1\n\t *\n\t * Modified from the TorusKnotGeometry by @oosmoxiecode\n\t *\n\t * Creates a tube which extrudes along a 3d spline\n\t *\n\t * Uses parallel transport frames as described in\n\t * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\t */\n\n\tTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\n\n\t\tTHREE.Geometry.call( this );\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\tsegments: segments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed,\n\t\t\ttaper: taper\n\t\t};\n\n\t\tsegments = segments || 64;\n\t\tradius = radius || 1;\n\t\tradialSegments = radialSegments || 8;\n\t\tclosed = closed || false;\n\t\ttaper = taper || THREE.TubeGeometry.NoTaper;\n\n\t\tvar grid = [];\n\n\t\tvar scope = this,\n\n\t\t\ttangent,\n\t\t\tnormal,\n\t\t\tbinormal,\n\n\t\t\tnumpoints = segments + 1,\n\n\t\t\tu, v, r,\n\n\t\t\tcx, cy,\n\t\t\tpos, pos2 = new THREE.Vector3(),\n\t\t\ti, j,\n\t\t\tip, jp,\n\t\t\ta, b, c, d,\n\t\t\tuva, uvb, uvc, uvd;\n\n\t\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\n\t\t\ttangents = frames.tangents,\n\t\t\tnormals = frames.normals,\n\t\t\tbinormals = frames.binormals;\n\n\t\t// proxy internals\n\t\tthis.tangents = tangents;\n\t\tthis.normals = normals;\n\t\tthis.binormals = binormals;\n\n\t\tfunction vert( x, y, z ) {\n\n\t\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\n\n\t\t}\n\n\t\t// construct the grid\n\n\t\tfor ( i = 0; i < numpoints; i ++ ) {\n\n\t\t\tgrid[ i ] = [];\n\n\t\t\tu = i / ( numpoints - 1 );\n\n\t\t\tpos = path.getPointAt( u );\n\n\t\t\ttangent = tangents[ i ];\n\t\t\tnormal = normals[ i ];\n\t\t\tbinormal = binormals[ i ];\n\n\t\t\tr = radius * taper( u );\n\n\t\t\tfor ( j = 0; j < radialSegments; j ++ ) {\n\n\t\t\t\tv = j / radialSegments * 2 * Math.PI;\n\n\t\t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\n\t\t\t\tcy = r * Math.sin( v );\n\n\t\t\t\tpos2.copy( pos );\n\t\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\n\t\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\n\t\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\n\n\t\t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// construct the mesh\n\n\t\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( j = 0; j < radialSegments; j ++ ) {\n\n\t\t\t\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\n\t\t\t\tjp = ( j + 1 ) % radialSegments;\n\n\t\t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\n\t\t\t\tb = grid[ ip ][ j ];\n\t\t\t\tc = grid[ ip ][ jp ];\n\t\t\t\td = grid[ i ][ jp ];\n\n\t\t\t\tuva = new THREE.Vector2( i / segments, j / radialSegments );\n\t\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\n\t\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\n\t\t\t\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\n\n\t\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\n\n\t\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeFaceNormals();\n\t\tthis.computeVertexNormals();\n\n\t};\n\n\tTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\n\n\tTHREE.TubeGeometry.NoTaper = function ( u ) {\n\n\t\treturn 1;\n\n\t};\n\n\tTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\n\n\t\treturn Math.sin( Math.PI * u );\n\n\t};\n\n\t// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\n\tTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\n\n\t\tvar\tnormal = new THREE.Vector3(),\n\n\t\t\ttangents = [],\n\t\t\tnormals = [],\n\t\t\tbinormals = [],\n\n\t\t\tvec = new THREE.Vector3(),\n\t\t\tmat = new THREE.Matrix4(),\n\n\t\t\tnumpoints = segments + 1,\n\t\t\ttheta,\n\t\t\tsmallest,\n\n\t\t\ttx, ty, tz,\n\t\t\ti, u;\n\n\n\t\t// expose internals\n\t\tthis.tangents = tangents;\n\t\tthis.normals = normals;\n\t\tthis.binormals = binormals;\n\n\t\t// compute the tangent vectors for each segment on the path\n\n\t\tfor ( i = 0; i < numpoints; i ++ ) {\n\n\t\t\tu = i / ( numpoints - 1 );\n\n\t\t\ttangents[ i ] = path.getTangentAt( u );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\tinitialNormal3();\n\n\t\t/*\n\t\tfunction initialNormal1(lastBinormal) {\n\t\t\t// fixed start binormal. Has dangers of 0 vectors\n\t\t\tnormals[ 0 ] = new THREE.Vector3();\n\t\t\tbinormals[ 0 ] = new THREE.Vector3();\n\t\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\n\t\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\n\t\t}\n\n\t\tfunction initialNormal2() {\n\n\t\t\t// This uses the Frenet-Serret formula for deriving binormal\n\t\t\tvar t2 = path.getTangentAt( epsilon );\n\n\t\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\n\t\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\t\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\n\n\t\t}\n\t\t*/\n\n\t\tfunction initialNormal3() {\n\n\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t\t// and in the direction of the smallest tangent xyz component\n\n\t\t\tnormals[ 0 ] = new THREE.Vector3();\n\t\t\tbinormals[ 0 ] = new THREE.Vector3();\n\t\t\tsmallest = Number.MAX_VALUE;\n\t\t\ttx = Math.abs( tangents[ 0 ].x );\n\t\t\tty = Math.abs( tangents[ 0 ].y );\n\t\t\ttz = Math.abs( tangents[ 0 ].z );\n\n\t\t\tif ( tx <= smallest ) {\n\n\t\t\t\tsmallest = tx;\n\t\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( ty <= smallest ) {\n\n\t\t\t\tsmallest = ty;\n\t\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t\t}\n\n\t\t\tif ( tz <= smallest ) {\n\n\t\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t\t}\n\n\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\t\t}\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the path\n\n\t\tfor ( i = 1; i < numpoints; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed ) {\n\n\t\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\n\t\t\ttheta /= ( numpoints - 1 );\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( i = 1; i < numpoints; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t// File:src/extras/geometries/PolyhedronGeometry.js\n\n\t/**\n\t * @author clockworkgeek / https://github.com/clockworkgeek\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\n\n\t\tTHREE.Geometry.call( this );\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tradius = radius || 1;\n\t\tdetail = detail || 0;\n\n\t\tvar that = this;\n\n\t\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\n\n\t\t\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\n\n\t\t}\n\n\t\tvar p = this.vertices;\n\n\t\tvar faces = [];\n\n\t\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\n\n\t\t\tvar v1 = p[ indices[ i ] ];\n\t\t\tvar v2 = p[ indices[ i + 1 ] ];\n\t\t\tvar v3 = p[ indices[ i + 2 ] ];\n\n\t\t\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\n\n\t\t}\n\n\t\tvar centroid = new THREE.Vector3();\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tsubdivide( faces[ i ], detail );\n\n\t\t}\n\n\n\t\t// Handle case when face straddles the seam\n\n\t\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\n\n\t\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\tvar x0 = uvs[ 0 ].x;\n\t\t\tvar x1 = uvs[ 1 ].x;\n\t\t\tvar x2 = uvs[ 2 ].x;\n\n\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\n\t\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\n\t\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Apply radius\n\n\t\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\n\n\t\t\tthis.vertices[ i ].multiplyScalar( radius );\n\n\t\t}\n\n\n\t\t// Merge vertices\n\n\t\tthis.mergeVertices();\n\n\t\tthis.computeFaceNormals();\n\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\n\n\t\t// Project vector onto sphere's surface\n\n\t\tfunction prepare( vector ) {\n\n\t\t\tvar vertex = vector.normalize().clone();\n\t\t\tvertex.index = that.vertices.push( vertex ) - 1;\n\n\t\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\n\n\t\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\n\t\t\tvar v = inclination( vector ) / Math.PI + 0.5;\n\t\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\n\n\t\t\treturn vertex;\n\n\t\t}\n\n\n\t\t// Approximate a curved face with recursively sub-divided triangles.\n\n\t\tfunction make( v1, v2, v3 ) {\n\n\t\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\n\t\t\tthat.faces.push( face );\n\n\t\t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\n\n\t\t\tvar azi = azimuth( centroid );\n\n\t\t\tthat.faceVertexUvs[ 0 ].push( [\n\t\t\t\tcorrectUV( v1.uv, v1, azi ),\n\t\t\t\tcorrectUV( v2.uv, v2, azi ),\n\t\t\t\tcorrectUV( v3.uv, v3, azi )\n\t\t\t] );\n\n\t\t}\n\n\n\t\t// Analytically subdivide a face to the required detail level.\n\n\t\tfunction subdivide( face, detail ) {\n\n\t\t\tvar cols = Math.pow( 2, detail );\n\t\t\tvar a = prepare( that.vertices[ face.a ] );\n\t\t\tvar b = prepare( that.vertices[ face.b ] );\n\t\t\tvar c = prepare( that.vertices[ face.c ] );\n\t\t\tvar v = [];\n\n\t\t\t// Construct all of the vertices for this subdivision.\n\n\t\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\n\t\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\n\t\t\t\tvar rows = cols - i;\n\n\t\t\t\tfor ( var j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Construct all of the faces.\n\n\t\t\tfor ( var i = 0; i < cols ; i ++ ) {\n\n\t\t\t\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tmake(\n\t\t\t\t\t\t\tv[ i ][ k + 1 ],\n\t\t\t\t\t\t\tv[ i + 1 ][ k ],\n\t\t\t\t\t\t\tv[ i ][ k ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmake(\n\t\t\t\t\t\t\tv[ i ][ k + 1 ],\n\t\t\t\t\t\t\tv[ i + 1 ][ k + 1 ],\n\t\t\t\t\t\t\tv[ i + 1 ][ k ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\n\t\t// Texture fixing helper. Spheres have some odd behaviours.\n\n\t\tfunction correctUV( uv, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\n\t\t\treturn uv.clone();\n\n\t\t}\n\n\n\t};\n\n\tTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\n\n\t// File:src/extras/geometries/DodecahedronGeometry.js\n\n\t/**\n\t * @author Abe Pazos / https://hamoid.com\n\t */\n\n\tTHREE.DodecahedronGeometry = function ( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tvar r = 1 / t;\n\n\t\tvar vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,    - 1, - 1,  1,\n\t\t\t- 1,  1, - 1,    - 1,  1,  1,\n\t\t\t 1, - 1, - 1,     1, - 1,  1,\n\t\t\t 1,  1, - 1,     1,  1,  1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t 0, - r, - t,     0, - r,  t,\n\t\t\t 0,  r, - t,     0,  r,  t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t,  0,    - r,  t,  0,\n\t\t\t r, - t,  0,     r,  t,  0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t,  0, - r,     t,  0, - r,\n\t\t\t- t,  0,  r,     t,  0,  r\n\t\t];\n\n\t\tvar indices = [\n\t\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\n\t\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\n\t\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\n\t\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\n\t\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\n\t\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\n\t\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\n\t\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\n\t\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\n\t\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\n\t\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\n\t\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\n\t\t];\n\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t};\n\n\tTHREE.DodecahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\n\tTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\n\n\t// File:src/extras/geometries/IcosahedronGeometry.js\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t */\n\n\tTHREE.IcosahedronGeometry = function ( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tvar vertices = [\n\t\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\n\t\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\n\t\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\n\t\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\n\t\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\n\t\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\n\t\t];\n\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t};\n\n\tTHREE.IcosahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\n\tTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\n\n\t// File:src/extras/geometries/OctahedronGeometry.js\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t */\n\n\tTHREE.OctahedronGeometry = function ( radius, detail ) {\n\n\t\tvar vertices = [\n\t\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\n\t\t];\n\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t};\n\n\tTHREE.OctahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\n\tTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\n\n\t// File:src/extras/geometries/TetrahedronGeometry.js\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t */\n\n\tTHREE.TetrahedronGeometry = function ( radius, detail ) {\n\n\t\tvar vertices = [\n\t\t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\n\t\t];\n\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t};\n\n\tTHREE.TetrahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\n\tTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\n\n\t// File:src/extras/geometries/ParametricGeometry.js\n\n\t/**\n\t * @author zz85 / https://github.com/zz85\n\t * Parametric Surfaces Geometry\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n\t *\n\t * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\n\t *\n\t */\n\n\tTHREE.ParametricGeometry = function ( func, slices, stacks ) {\n\n\t\tTHREE.Geometry.call( this );\n\n\t\tthis.type = 'ParametricGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\tvar verts = this.vertices;\n\t\tvar faces = this.faces;\n\t\tvar uvs = this.faceVertexUvs[ 0 ];\n\n\t\tvar i, j, p;\n\t\tvar u, v;\n\n\t\tvar sliceCount = slices + 1;\n\n\t\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\t\tv = i / stacks;\n\n\t\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\t\tu = j / slices;\n\n\t\t\t\tp = func( u, v );\n\t\t\t\tverts.push( p );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar a, b, c, d;\n\t\tvar uva, uvb, uvc, uvd;\n\n\t\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\t\ta = i * sliceCount + j;\n\t\t\t\tb = i * sliceCount + j + 1;\n\t\t\t\tc = ( i + 1 ) * sliceCount + j + 1;\n\t\t\t\td = ( i + 1 ) * sliceCount + j;\n\n\t\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\n\t\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\n\t\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\n\t\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\n\n\t\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\n\t\t\t\tuvs.push( [ uva, uvb, uvd ] );\n\n\t\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\n\t\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// console.log(this);\n\n\t\t// magic bullet\n\t\t// var diff = this.mergeVertices();\n\t\t// console.log('removed ', diff, ' vertices by merging');\n\n\t\tthis.computeFaceNormals();\n\t\tthis.computeVertexNormals();\n\n\t};\n\n\tTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\n\n\t// File:src/extras/geometries/WireframeGeometry.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.WireframeGeometry = function ( geometry ) {\n\n\t\tTHREE.BufferGeometry.call( this );\n\n\t\tvar edge = [ 0, 0 ], hash = {};\n\n\t\tfunction sortFunction( a, b ) {\n\n\t\t\treturn a - b;\n\n\t\t}\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tif ( geometry instanceof THREE.Geometry ) {\n\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar faces = geometry.faces;\n\t\t\tvar numEdges = 0;\n\n\t\t\t// allocate maximal size\n\t\t\tvar edges = new Uint32Array( 6 * faces.length );\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\n\t\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\t\tedge.sort( sortFunction );\n\n\t\t\t\t\tvar key = edge.toString();\n\n\t\t\t\t\tif ( hash[ key ] === undefined ) {\n\n\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\n\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\n\t\t\t\t\t\thash[ key ] = true;\n\t\t\t\t\t\tnumEdges ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\n\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\n\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\n\n\t\t\t\t\tvar index = 6 * i + 3 * j;\n\t\t\t\t\tcoords[ index + 0 ] = vertex.x;\n\t\t\t\t\tcoords[ index + 1 ] = vertex.y;\n\t\t\t\t\tcoords[ index + 2 ] = vertex.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\n\n\t\t} else if ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// Indexed BufferGeometry\n\n\t\t\t\tvar indices = geometry.index.array;\n\t\t\t\tvar vertices = geometry.attributes.position;\n\t\t\t\tvar groups = geometry.groups;\n\t\t\t\tvar numEdges = 0;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgeometry.addGroup( 0, indices.length );\n\n\t\t\t\t}\n\n\t\t\t\t// allocate maximal size\n\t\t\t\tvar edges = new Uint32Array( 2 * indices.length );\n\n\t\t\t\tfor ( var o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tvar group = groups[ o ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\n\t\t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\n\t\t\t\t\t\t\tedge.sort( sortFunction );\n\n\t\t\t\t\t\t\tvar key = edge.toString();\n\n\t\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\n\n\t\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\n\t\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\n\t\t\t\t\t\t\t\thash[ key ] = true;\n\t\t\t\t\t\t\t\tnumEdges ++;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\n\n\t\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\n\n\t\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\n\n\t\t\t\t\t\tvar index = 6 * i + 3 * j;\n\t\t\t\t\t\tvar index2 = edges[ 2 * i + j ];\n\n\t\t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\n\t\t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\n\t\t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tvar vertices = geometry.attributes.position.array;\n\t\t\t\tvar numEdges = vertices.length / 3;\n\t\t\t\tvar numTris = numEdges / 3;\n\n\t\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\n\n\t\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\n\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tvar index = 18 * i + 6 * j;\n\n\t\t\t\t\t\tvar index1 = 9 * i + 3 * j;\n\t\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\n\t\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\n\t\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\n\n\t\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\n\t\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\n\t\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\n\t\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tTHREE.WireframeGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\tTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry;\n\n\t// File:src/extras/helpers/AxisHelper.js\n\n\t/**\n\t * @author sroucheray / http://sroucheray.org/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.AxisHelper = function ( size ) {\n\n\t\tsize = size || 1;\n\n\t\tvar vertices = new Float32Array( [\n\t\t\t0, 0, 0,  size, 0, 0,\n\t\t\t0, 0, 0,  0, size, 0,\n\t\t\t0, 0, 0,  0, 0, size\n\t\t] );\n\n\t\tvar colors = new Float32Array( [\n\t\t\t1, 0, 0,  1, 0.6, 0,\n\t\t\t0, 1, 0,  0.6, 1, 0,\n\t\t\t0, 0, 1,  0, 0.6, 1\n\t\t] );\n\n\t\tvar geometry = new THREE.BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\n\n\t\tTHREE.LineSegments.call( this, geometry, material );\n\n\t};\n\n\tTHREE.AxisHelper.prototype = Object.create( THREE.LineSegments.prototype );\n\tTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\n\n\t// File:src/extras/helpers/ArrowHelper.js\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author zz85 / http://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t *\n\t * Creates an arrow for visualizing directions\n\t *\n\t * Parameters:\n\t *  dir - Vector3\n\t *  origin - Vector3\n\t *  length - Number\n\t *  color - color in hex value\n\t *  headLength - Number\n\t *  headWidth - Number\n\t */\n\n\tTHREE.ArrowHelper = ( function () {\n\n\t\tvar lineGeometry = new THREE.BufferGeometry();\n\t\tlineGeometry.addAttribute( 'position', new THREE.Float32Attribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\tvar coneGeometry = new THREE.CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\t\treturn function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t\t\t// dir is assumed to be normalized\n\n\t\t\tTHREE.Object3D.call( this );\n\n\t\t\tif ( color === undefined ) color = 0xffff00;\n\t\t\tif ( length === undefined ) length = 1;\n\t\t\tif ( headLength === undefined ) headLength = 0.2 * length;\n\t\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\t\t\tthis.position.copy( origin );\n\n\t\t\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\n\t\t\tthis.line.matrixAutoUpdate = false;\n\t\t\tthis.add( this.line );\n\n\t\t\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\n\t\t\tthis.cone.matrixAutoUpdate = false;\n\t\t\tthis.add( this.cone );\n\n\t\t\tthis.setDirection( dir );\n\t\t\tthis.setLength( length, headLength, headWidth );\n\n\t\t};\n\n\t}() );\n\n\tTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\n\tTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\n\n\tTHREE.ArrowHelper.prototype.setDirection = ( function () {\n\n\t\tvar axis = new THREE.Vector3();\n\t\tvar radians;\n\n\t\treturn function setDirection( dir ) {\n\n\t\t\t// dir is assumed to be normalized\n\n\t\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\t\tradians = Math.acos( dir.y );\n\n\t\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\tTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\t\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t};\n\n\tTHREE.ArrowHelper.prototype.setColor = function ( color ) {\n\n\t\tthis.line.material.color.copy( color );\n\t\tthis.cone.material.color.copy( color );\n\n\t};\n\n\t// File:src/extras/helpers/BoxHelper.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.BoxHelper = function ( object, color ) {\n\n\t\tif ( color === undefined ) color = 0xffff00;\n\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tvar positions = new Float32Array( 8 * 3 );\n\n\t\tvar geometry = new THREE.BufferGeometry();\n\t\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\n\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color } ) );\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tthis.update( object );\n\n\t\t}\n\n\t};\n\n\tTHREE.BoxHelper.prototype = Object.create( THREE.LineSegments.prototype );\n\tTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\n\n\tTHREE.BoxHelper.prototype.update = ( function () {\n\n\t\tvar box = new THREE.Box3();\n\n\t\treturn function update( object ) {\n\n\t\t\tif ( object instanceof THREE.Box3 ) {\n\n\t\t\t\tbox.copy( object );\n\n\t\t\t} else {\n\n\t\t\t\tbox.setFromObject( object );\n\n\t\t\t}\n\n\t\t\tif ( box.isEmpty() ) return;\n\n\t\t\tvar min = box.min;\n\t\t\tvar max = box.max;\n\n\t\t\t/*\n\t\t\t  5____4\n\t\t\t1/___0/|\n\t\t\t| 6__|_7\n\t\t\t2/___3/\n\n\t\t\t0: max.x, max.y, max.z\n\t\t\t1: min.x, max.y, max.z\n\t\t\t2: min.x, min.y, max.z\n\t\t\t3: max.x, min.y, max.z\n\t\t\t4: max.x, max.y, min.z\n\t\t\t5: min.x, max.y, min.z\n\t\t\t6: min.x, min.y, min.z\n\t\t\t7: max.x, min.y, min.z\n\t\t\t*/\n\n\t\t\tvar position = this.geometry.attributes.position;\n\t\t\tvar array = position.array;\n\n\t\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\n\t\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\n\t\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\n\t\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t\tthis.geometry.computeBoundingSphere();\n\n\t\t};\n\n\t} )();\n\n\t// File:src/extras/helpers/BoundingBoxHelper.js\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\t// a helper to show the world-axis-aligned bounding box for an object\n\n\tTHREE.BoundingBoxHelper = function ( object, hex ) {\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0x888888;\n\n\t\tthis.object = object;\n\n\t\tthis.box = new THREE.Box3();\n\n\t\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\n\n\t};\n\n\tTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\n\tTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\n\n\tTHREE.BoundingBoxHelper.prototype.update = function () {\n\n\t\tthis.box.setFromObject( this.object );\n\n\t\tthis.box.size( this.scale );\n\n\t\tthis.box.center( this.position );\n\n\t};\n\n\t// File:src/extras/helpers/CameraHelper.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t *\t- shows frustum, line of sight and up of the camera\n\t *\t- suitable for fast updates\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n\t */\n\n\tTHREE.CameraHelper = function ( camera ) {\n\n\t\tvar geometry = new THREE.Geometry();\n\t\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\n\n\t\tvar pointMap = {};\n\n\t\t// colors\n\n\t\tvar hexFrustum = 0xffaa00;\n\t\tvar hexCone = 0xff0000;\n\t\tvar hexUp = 0x00aaff;\n\t\tvar hexTarget = 0xffffff;\n\t\tvar hexCross = 0x333333;\n\n\t\t// near\n\n\t\taddLine( \"n1\", \"n2\", hexFrustum );\n\t\taddLine( \"n2\", \"n4\", hexFrustum );\n\t\taddLine( \"n4\", \"n3\", hexFrustum );\n\t\taddLine( \"n3\", \"n1\", hexFrustum );\n\n\t\t// far\n\n\t\taddLine( \"f1\", \"f2\", hexFrustum );\n\t\taddLine( \"f2\", \"f4\", hexFrustum );\n\t\taddLine( \"f4\", \"f3\", hexFrustum );\n\t\taddLine( \"f3\", \"f1\", hexFrustum );\n\n\t\t// sides\n\n\t\taddLine( \"n1\", \"f1\", hexFrustum );\n\t\taddLine( \"n2\", \"f2\", hexFrustum );\n\t\taddLine( \"n3\", \"f3\", hexFrustum );\n\t\taddLine( \"n4\", \"f4\", hexFrustum );\n\n\t\t// cone\n\n\t\taddLine( \"p\", \"n1\", hexCone );\n\t\taddLine( \"p\", \"n2\", hexCone );\n\t\taddLine( \"p\", \"n3\", hexCone );\n\t\taddLine( \"p\", \"n4\", hexCone );\n\n\t\t// up\n\n\t\taddLine( \"u1\", \"u2\", hexUp );\n\t\taddLine( \"u2\", \"u3\", hexUp );\n\t\taddLine( \"u3\", \"u1\", hexUp );\n\n\t\t// target\n\n\t\taddLine( \"c\", \"t\", hexTarget );\n\t\taddLine( \"p\", \"c\", hexCross );\n\n\t\t// cross\n\n\t\taddLine( \"cn1\", \"cn2\", hexCross );\n\t\taddLine( \"cn3\", \"cn4\", hexCross );\n\n\t\taddLine( \"cf1\", \"cf2\", hexCross );\n\t\taddLine( \"cf3\", \"cf4\", hexCross );\n\n\t\tfunction addLine( a, b, hex ) {\n\n\t\t\taddPoint( a, hex );\n\t\t\taddPoint( b, hex );\n\n\t\t}\n\n\t\tfunction addPoint( id, hex ) {\n\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\n\t\t\tgeometry.colors.push( new THREE.Color( hex ) );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\n\n\t\t}\n\n\t\tTHREE.LineSegments.call( this, geometry, material );\n\n\t\tthis.camera = camera;\n\t\tif( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t};\n\n\tTHREE.CameraHelper.prototype = Object.create( THREE.LineSegments.prototype );\n\tTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\n\n\tTHREE.CameraHelper.prototype.update = function () {\n\n\t\tvar geometry, pointMap;\n\n\t\tvar vector = new THREE.Vector3();\n\t\tvar camera = new THREE.Camera();\n\n\t\tfunction setPoint( point, x, y, z ) {\n\n\t\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\t\tvar points = pointMap[ point ];\n\n\t\t\tif ( points !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function update() {\n\n\t\t\tgeometry = this.geometry;\n\t\t\tpointMap = this.pointMap;\n\n\t\t\tvar w = 1, h = 1;\n\n\t\t\t// we need just camera projection matrix\n\t\t\t// world matrix must be identity\n\n\t\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n\t\t\t// center / target\n\n\t\t\tsetPoint( \"c\", 0, 0, - 1 );\n\t\t\tsetPoint( \"t\", 0, 0,  1 );\n\n\t\t\t// near\n\n\t\t\tsetPoint( \"n1\", - w, - h, - 1 );\n\t\t\tsetPoint( \"n2\",   w, - h, - 1 );\n\t\t\tsetPoint( \"n3\", - w,   h, - 1 );\n\t\t\tsetPoint( \"n4\",   w,   h, - 1 );\n\n\t\t\t// far\n\n\t\t\tsetPoint( \"f1\", - w, - h, 1 );\n\t\t\tsetPoint( \"f2\",   w, - h, 1 );\n\t\t\tsetPoint( \"f3\", - w,   h, 1 );\n\t\t\tsetPoint( \"f4\",   w,   h, 1 );\n\n\t\t\t// up\n\n\t\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\n\t\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\n\t\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\n\n\t\t\t// cross\n\n\t\t\tsetPoint( \"cf1\", - w,   0, 1 );\n\t\t\tsetPoint( \"cf2\",   w,   0, 1 );\n\t\t\tsetPoint( \"cf3\",   0, - h, 1 );\n\t\t\tsetPoint( \"cf4\",   0,   h, 1 );\n\n\t\t\tsetPoint( \"cn1\", - w,   0, - 1 );\n\t\t\tsetPoint( \"cn2\",   w,   0, - 1 );\n\t\t\tsetPoint( \"cn3\",   0, - h, - 1 );\n\t\t\tsetPoint( \"cn4\",   0,   h, - 1 );\n\n\t\t\tgeometry.verticesNeedUpdate = true;\n\n\t\t};\n\n\t}();\n\n\t// File:src/extras/helpers/DirectionalLightHelper.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tTHREE.DirectionalLightHelper = function ( light, size ) {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tvar geometry = new THREE.BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( [\n\t\t\t- size,   size, 0,\n\t\t\t  size,   size, 0,\n\t\t\t  size, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size,   size, 0\n\t\t], 3 ) );\n\n\t\tvar material = new THREE.LineBasicMaterial( { fog: false } );\n\n\t\tthis.add( new THREE.Line( geometry, material ) );\n\n\t\tgeometry = new THREE.BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.add( new THREE.Line( geometry, material ));\n\n\t\tthis.update();\n\n\t};\n\n\tTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\n\tTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\n\n\tTHREE.DirectionalLightHelper.prototype.dispose = function () {\n\n\t\tvar lightPlane = this.children[ 0 ];\n\t\tvar targetLine = this.children[ 1 ];\n\n\t\tlightPlane.geometry.dispose();\n\t\tlightPlane.material.dispose();\n\t\ttargetLine.geometry.dispose();\n\t\ttargetLine.material.dispose();\n\n\t};\n\n\tTHREE.DirectionalLightHelper.prototype.update = function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\t\tvar v2 = new THREE.Vector3();\n\t\tvar v3 = new THREE.Vector3();\n\n\t\treturn function update() {\n\n\t\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t\tv3.subVectors( v2, v1 );\n\n\t\t\tvar lightPlane = this.children[ 0 ];\n\t\t\tvar targetLine = this.children[ 1 ];\n\n\t\t\tlightPlane.lookAt( v3 );\n\t\t\tlightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\t\ttargetLine.lookAt( v3 );\n\t\t\ttargetLine.scale.z = v3.length();\n\n\t\t};\n\n\t}();\n\n\t// File:src/extras/helpers/EdgesHelper.js\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @param object THREE.Mesh whose geometry will be used\n\t * @param hex line color\n\t * @param thresholdAngle the minimum angle (in degrees),\n\t * between the face normals of adjacent faces,\n\t * that is required to render an edge. A value of 10 means\n\t * an edge is only rendered if the angle is at least 10 degrees.\n\t */\n\n\tTHREE.EdgesHelper = function ( object, hex, thresholdAngle ) {\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\n\n\t\tTHREE.LineSegments.call( this, new THREE.EdgesGeometry( object.geometry, thresholdAngle ), new THREE.LineBasicMaterial( { color: color } ) );\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t};\n\n\tTHREE.EdgesHelper.prototype = Object.create( THREE.LineSegments.prototype );\n\tTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\n\n\t// File:src/extras/helpers/FaceNormalsHelper.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\n\n\t\t// FaceNormalsHelper only supports THREE.Geometry\n\n\t\tthis.object = object;\n\n\t\tthis.size = ( size !== undefined ) ? size : 1;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t\t//\n\n\t\tvar nNormals = 0;\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\n\n\t\t\tnNormals = objGeometry.faces.length;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t\t}\n\n\t\t//\n\n\t\tvar geometry = new THREE.BufferGeometry();\n\n\t\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\n\n\t\tgeometry.addAttribute( 'position', positions );\n\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t\t//\n\n\t\tthis.matrixAutoUpdate = false;\n\t\tthis.update();\n\n\t};\n\n\tTHREE.FaceNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\n\tTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\n\n\tTHREE.FaceNormalsHelper.prototype.update = ( function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\t\tvar v2 = new THREE.Vector3();\n\t\tvar normalMatrix = new THREE.Matrix3();\n\n\t\treturn function update() {\n\n\t\t\tthis.object.updateMatrixWorld( true );\n\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\t\tvar position = this.geometry.attributes.position;\n\n\t\t\t//\n\n\t\t\tvar objGeometry = this.object.geometry;\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t\t.divideScalar( 3 )\n\t\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() );\n\n\t// File:src/extras/helpers/GridHelper.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.GridHelper = function ( size, divisions, color1, color2 ) {\n\n\t\tdivisions = divisions || 1;\n\t\tcolor1 = new THREE.Color( color1 !== undefined ? color1 : 0x444444 );\n\t\tcolor2 = new THREE.Color( color2 !== undefined ? color2 : 0x888888 );\n\n\t\tvar center = divisions / 2;\n\t\tvar step = ( size * 2 ) / divisions;\n\t\tvar vertices = [], colors = [];\n\n\t\tfor ( var i = 0, j = 0, k = - size; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - size, 0, k, size, 0, k );\n\t\t\tvertices.push( k, 0, - size, k, 0, size );\n\n\t\t\tvar color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tvar geometry = new THREE.BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new THREE.Float32Attribute( colors, 3 ) );\n\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\n\n\t\tTHREE.LineSegments.call( this, geometry, material );\n\n\t};\n\n\tTHREE.GridHelper.prototype = Object.create( THREE.LineSegments.prototype );\n\tTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\n\n\tTHREE.GridHelper.prototype.setColors = function () {\n\n\t\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n\t};\n\n\t// File:src/extras/helpers/HemisphereLightHelper.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.HemisphereLightHelper = function ( light, sphereSize ) {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\n\n\t\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\n\t\tgeometry.rotateX( - Math.PI / 2 );\n\n\t\tfor ( var i = 0, il = 8; i < il; i ++ ) {\n\n\t\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\n\n\t\t}\n\n\t\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\n\n\t\tthis.lightSphere = new THREE.Mesh( geometry, material );\n\t\tthis.add( this.lightSphere );\n\n\t\tthis.update();\n\n\t};\n\n\tTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\n\tTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\n\n\tTHREE.HemisphereLightHelper.prototype.dispose = function () {\n\n\t\tthis.lightSphere.geometry.dispose();\n\t\tthis.lightSphere.material.dispose();\n\n\t};\n\n\tTHREE.HemisphereLightHelper.prototype.update = function () {\n\n\t\tvar vector = new THREE.Vector3();\n\n\t\treturn function update() {\n\n\t\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\n\t\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\n\n\t\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\t\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\n\n\t\t};\n\n\t}();\n\n\t// File:src/extras/helpers/PointLightHelper.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.PointLightHelper = function ( light, sphereSize ) {\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar geometry = new THREE.SphereBufferGeometry( sphereSize, 4, 2 );\n\t\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\tTHREE.Mesh.call( this, geometry, material );\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\t/*\n\t\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\t\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\t\tvar d = light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\n\t\tthis.add( this.lightDistance );\n\t\t*/\n\n\t};\n\n\tTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\n\tTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\n\n\tTHREE.PointLightHelper.prototype.dispose = function () {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t};\n\n\tTHREE.PointLightHelper.prototype.update = function () {\n\n\t\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\t/*\n\t\tvar d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t};\n\n\t// File:src/extras/helpers/SkeletonHelper.js\n\n\t/**\n\t * @author Sean Griffin / http://twitter.com/sgrif\n\t * @author Michael Guerrero / http://realitymeltdown.com\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tTHREE.SkeletonHelper = function ( object ) {\n\n\t\tthis.bones = this.getBoneList( object );\n\n\t\tvar geometry = new THREE.Geometry();\n\n\t\tfor ( var i = 0; i < this.bones.length; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( bone.parent instanceof THREE.Bone ) {\n\n\t\t\t\tgeometry.vertices.push( new THREE.Vector3() );\n\t\t\t\tgeometry.vertices.push( new THREE.Vector3() );\n\t\t\t\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\n\t\t\t\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.dynamic = true;\n\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\t\tTHREE.LineSegments.call( this, geometry, material );\n\n\t\tthis.root = object;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t};\n\n\n\tTHREE.SkeletonHelper.prototype = Object.create( THREE.LineSegments.prototype );\n\tTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\n\n\tTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\n\n\t\tvar boneList = [];\n\n\t\tif ( object instanceof THREE.Bone ) {\n\n\t\t\tboneList.push( object );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\n\n\t\t}\n\n\t\treturn boneList;\n\n\t};\n\n\tTHREE.SkeletonHelper.prototype.update = function () {\n\n\t\tvar geometry = this.geometry;\n\n\t\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\n\n\t\tvar boneMatrix = new THREE.Matrix4();\n\n\t\tvar j = 0;\n\n\t\tfor ( var i = 0; i < this.bones.length; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( bone.parent instanceof THREE.Bone ) {\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.verticesNeedUpdate = true;\n\n\t\tgeometry.computeBoundingSphere();\n\n\t};\n\n\t// File:src/extras/helpers/SpotLightHelper.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tTHREE.SpotLightHelper = function ( light ) {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tvar geometry = new THREE.BufferGeometry();\n\n\t\tvar positions = [\n\t\t\t0, 0, 0,   0,   0,   1,\n\t\t\t0, 0, 0,   1,   0,   1,\n\t\t\t0, 0, 0, - 1,   0,   1,\n\t\t\t0, 0, 0,   0,   1,   1,\n\t\t\t0, 0, 0,   0, - 1,   1\n\t\t];\n\n\t\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( positions, 3 ) );\n\n\t\tvar material = new THREE.LineBasicMaterial( { fog: false } );\n\n\t\tthis.cone = new THREE.LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t};\n\n\tTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\n\tTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\n\n\tTHREE.SpotLightHelper.prototype.dispose = function () {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t};\n\n\tTHREE.SpotLightHelper.prototype.update = function () {\n\n\t\tvar vector = new THREE.Vector3();\n\t\tvar vector2 = new THREE.Vector3();\n\n\t\treturn function update() {\n\n\t\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n\t\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\t\tthis.cone.lookAt( vector2.sub( vector ) );\n\n\t\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\t};\n\n\t}();\n\n\t// File:src/extras/helpers/VertexNormalsHelper.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\n\n\t\tthis.object = object;\n\n\t\tthis.size = ( size !== undefined ) ? size : 1;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t\t//\n\n\t\tvar nNormals = 0;\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\n\n\t\t\tnNormals = objGeometry.faces.length * 3;\n\n\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\n\n\t\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t\t}\n\n\t\t//\n\n\t\tvar geometry = new THREE.BufferGeometry();\n\n\t\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\n\n\t\tgeometry.addAttribute( 'position', positions );\n\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t\t//\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t};\n\n\tTHREE.VertexNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\n\tTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\n\n\tTHREE.VertexNormalsHelper.prototype.update = ( function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\t\tvar v2 = new THREE.Vector3();\n\t\tvar normalMatrix = new THREE.Matrix3();\n\n\t\treturn function update() {\n\n\t\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\t\tthis.object.updateMatrixWorld( true );\n\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\t\tvar position = this.geometry.attributes.position;\n\n\t\t\t//\n\n\t\t\tvar objGeometry = this.object.geometry;\n\n\t\t\tif ( objGeometry instanceof THREE.Geometry ) {\n\n\t\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\t\tvar faces = objGeometry.faces;\n\n\t\t\t\tvar idx = 0;\n\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\t\tvar idx = 0;\n\n\t\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() );\n\n\t// File:src/extras/helpers/WireframeHelper.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.WireframeHelper = function ( object, hex ) {\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\n\n\t\tTHREE.LineSegments.call( this, new THREE.WireframeGeometry( object.geometry ), new THREE.LineBasicMaterial( { color: color } ) );\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t};\n\n\tTHREE.WireframeHelper.prototype = Object.create( THREE.LineSegments.prototype );\n\tTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\n\n\t// File:src/extras/objects/ImmediateRenderObject.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.ImmediateRenderObject = function ( material ) {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.material = material;\n\t\tthis.render = function ( renderCallback ) {};\n\n\t};\n\n\tTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\n\tTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\n\n\t// File:src/extras/objects/MorphBlendMesh.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.MorphBlendMesh = function( geometry, material ) {\n\n\t\tTHREE.Mesh.call( this, geometry, material );\n\n\t\tthis.animationsMap = {};\n\t\tthis.animationsList = [];\n\n\t\t// prepare default animation\n\t\t// (all frames played together in 1 second)\n\n\t\tvar numFrames = this.geometry.morphTargets.length;\n\n\t\tvar name = \"__default\";\n\n\t\tvar startFrame = 0;\n\t\tvar endFrame = numFrames - 1;\n\n\t\tvar fps = numFrames / 1;\n\n\t\tthis.createAnimation( name, startFrame, endFrame, fps );\n\t\tthis.setAnimationWeight( name, 1 );\n\n\t};\n\n\tTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\n\tTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\n\n\tTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\n\n\t\tvar animation = {\n\n\t\t\tstart: start,\n\t\t\tend: end,\n\n\t\t\tlength: end - start + 1,\n\n\t\t\tfps: fps,\n\t\t\tduration: ( end - start ) / fps,\n\n\t\t\tlastFrame: 0,\n\t\t\tcurrentFrame: 0,\n\n\t\t\tactive: false,\n\n\t\t\ttime: 0,\n\t\t\tdirection: 1,\n\t\t\tweight: 1,\n\n\t\t\tdirectionBackwards: false,\n\t\t\tmirroredLoop: false\n\n\t\t};\n\n\t\tthis.animationsMap[ name ] = animation;\n\t\tthis.animationsList.push( animation );\n\n\t};\n\n\tTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\n\n\t\tvar pattern = /([a-z]+)_?(\\d+)/i;\n\n\t\tvar firstAnimation, frameRanges = {};\n\n\t\tvar geometry = this.geometry;\n\n\t\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morph = geometry.morphTargets[ i ];\n\t\t\tvar chunks = morph.name.match( pattern );\n\n\t\t\tif ( chunks && chunks.length > 1 ) {\n\n\t\t\t\tvar name = chunks[ 1 ];\n\n\t\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\n\n\t\t\t\tvar range = frameRanges[ name ];\n\n\t\t\t\tif ( i < range.start ) range.start = i;\n\t\t\t\tif ( i > range.end ) range.end = i;\n\n\t\t\t\tif ( ! firstAnimation ) firstAnimation = name;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var name in frameRanges ) {\n\n\t\t\tvar range = frameRanges[ name ];\n\t\t\tthis.createAnimation( name, range.start, range.end, fps );\n\n\t\t}\n\n\t\tthis.firstAnimation = firstAnimation;\n\n\t};\n\n\tTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.direction = 1;\n\t\t\tanimation.directionBackwards = false;\n\n\t\t}\n\n\t};\n\n\tTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.direction = - 1;\n\t\t\tanimation.directionBackwards = true;\n\n\t\t}\n\n\t};\n\n\tTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.fps = fps;\n\t\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\n\n\t\t}\n\n\t};\n\n\tTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.duration = duration;\n\t\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\n\n\t\t}\n\n\t};\n\n\tTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.weight = weight;\n\n\t\t}\n\n\t};\n\n\tTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.time = time;\n\n\t\t}\n\n\t};\n\n\tTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\n\n\t\tvar time = 0;\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\ttime = animation.time;\n\n\t\t}\n\n\t\treturn time;\n\n\t};\n\n\tTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\n\n\t\tvar duration = - 1;\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tduration = animation.duration;\n\n\t\t}\n\n\t\treturn duration;\n\n\t};\n\n\tTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.time = 0;\n\t\t\tanimation.active = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\n\n\t\t}\n\n\t};\n\n\tTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.active = false;\n\n\t\t}\n\n\t};\n\n\tTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\n\n\t\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\n\n\t\t\tvar animation = this.animationsList[ i ];\n\n\t\t\tif ( ! animation.active ) continue;\n\n\t\t\tvar frameTime = animation.duration / animation.length;\n\n\t\t\tanimation.time += animation.direction * delta;\n\n\t\t\tif ( animation.mirroredLoop ) {\n\n\t\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\n\n\t\t\t\t\tanimation.direction *= - 1;\n\n\t\t\t\t\tif ( animation.time > animation.duration ) {\n\n\t\t\t\t\t\tanimation.time = animation.duration;\n\t\t\t\t\t\tanimation.directionBackwards = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( animation.time < 0 ) {\n\n\t\t\t\t\t\tanimation.time = 0;\n\t\t\t\t\t\tanimation.directionBackwards = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tanimation.time = animation.time % animation.duration;\n\n\t\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\n\n\t\t\t}\n\n\t\t\tvar keyframe = animation.start + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\n\t\t\tvar weight = animation.weight;\n\n\t\t\tif ( keyframe !== animation.currentFrame ) {\n\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\n\n\t\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\n\n\t\t\t\tanimation.lastFrame = animation.currentFrame;\n\t\t\t\tanimation.currentFrame = keyframe;\n\n\t\t\t}\n\n\t\t\tvar mix = ( animation.time % frameTime ) / frameTime;\n\n\t\t\tif ( animation.directionBackwards ) mix = 1 - mix;\n\n\t\t\tif ( animation.currentFrame !== animation.lastFrame ) {\n\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\n\n\t\t\t} else {\n\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tif( typeof define !== \"undefined\" && define instanceof Function && define.amd != undefined ){\n\n\t\tdefine(function(){\n\n\t\t\treturn THREE;\n\n\t\t});\n\n\t}\n\telse if( typeof module !== \"undefined\" && module.exports ){\n\n\t\tmodule.exports = THREE;\n\n\t}\n\telse if( this != undefined ){\n\n\t\tthis.THREE = THREE;\n\n\t};\n\n})(this || {});"]},"metadata":{},"sourceType":"script"}