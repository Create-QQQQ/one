{"ast":null,"code":"module.exports = function (THREE) {\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * Simple fake tilt-shift effect, modulating two pass Gaussian blur (see above) by vertical position\n   *\n   * - 9 samples per pass\n   * - standard deviation 2.7\n   * - \"h\" and \"v\" parameters should be set to \"1 / width\" and \"1 / height\"\n   * - \"r\" parameter control where \"focused\" horizontal line lies\n   */\n  THREE.VerticalTiltShiftShader = {\n    uniforms: {\n      \"tDiffuse\": {\n        type: \"t\",\n        value: null\n      },\n      \"v\": {\n        type: \"f\",\n        value: 1.0 / 512.0\n      },\n      \"r\": {\n        type: \"f\",\n        value: 0.35\n      }\n    },\n    vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n    fragmentShader: [\"uniform sampler2D tDiffuse;\", \"uniform float v;\", \"uniform float r;\", \"varying vec2 vUv;\", \"void main() {\", \"vec4 sum = vec4( 0.0 );\", \"float vv = v * abs( r - vUv.y );\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\", \"gl_FragColor = sum;\", \"}\"].join(\"\\n\")\n  };\n};","map":{"version":3,"sources":["E:/baking/hongpeibang/node_modules/three-js/addons/VerticalTiltShiftShader.js"],"names":["module","exports","THREE","VerticalTiltShiftShader","uniforms","type","value","vertexShader","join","fragmentShader"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,KAAV,EAAiB;AACjC;;;;;;;;;;AAWAA,EAAAA,KAAK,CAACC,uBAAN,GAAgC;AAE/BC,IAAAA,QAAQ,EAAE;AAET,kBAAY;AAAEC,QAAAA,IAAI,EAAE,GAAR;AAAaC,QAAAA,KAAK,EAAE;AAApB,OAFH;AAGT,WAAY;AAAED,QAAAA,IAAI,EAAE,GAAR;AAAaC,QAAAA,KAAK,EAAE,MAAM;AAA1B,OAHH;AAIT,WAAY;AAAED,QAAAA,IAAI,EAAE,GAAR;AAAaC,QAAAA,KAAK,EAAE;AAApB;AAJH,KAFqB;AAU/BC,IAAAA,YAAY,EAAE,CAEb,mBAFa,EAIb,eAJa,EAMZ,WANY,EAOZ,2EAPY,EASb,GATa,EAWZC,IAXY,CAWN,IAXM,CAViB;AAuB/BC,IAAAA,cAAc,EAAE,CAEf,6BAFe,EAGf,kBAHe,EAIf,kBAJe,EAMf,mBANe,EAQf,eARe,EAUd,yBAVc,EAYd,kCAZc,EAcd,wEAdc,EAed,yEAfc,EAgBd,0EAhBc,EAiBd,yEAjBc,EAkBd,8DAlBc,EAmBd,yEAnBc,EAoBd,0EApBc,EAqBd,yEArBc,EAsBd,wEAtBc,EAwBd,qBAxBc,EA0Bf,GA1Be,EA4BdD,IA5Bc,CA4BR,IA5BQ;AAvBe,GAAhC;AAuDA,CAnED","sourcesContent":["module.exports = function( THREE ){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Simple fake tilt-shift effect, modulating two pass Gaussian blur (see above) by vertical position\n\t *\n\t * - 9 samples per pass\n\t * - standard deviation 2.7\n\t * - \"h\" and \"v\" parameters should be set to \"1 / width\" and \"1 / height\"\n\t * - \"r\" parameter control where \"focused\" horizontal line lies\n\t */\n\n\tTHREE.VerticalTiltShiftShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\t\"v\":        { type: \"f\", value: 1.0 / 512.0 },\n\t\t\t\"r\":        { type: \"f\", value: 0.35 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"uniform float v;\",\n\t\t\t\"uniform float r;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec4 sum = vec4( 0.0 );\",\n\n\t\t\t\t\"float vv = v * abs( r - vUv.y );\",\n\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\",\n\n\t\t\t\t\"gl_FragColor = sum;\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n"]},"metadata":{},"sourceType":"script"}