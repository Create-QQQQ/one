{"ast":null,"code":"module.exports = function (THREE) {\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * Color correction\n   */\n  THREE.ColorCorrectionShader = {\n    uniforms: {\n      \"tDiffuse\": {\n        type: \"t\",\n        value: null\n      },\n      \"powRGB\": {\n        type: \"v3\",\n        value: new THREE.Vector3(2, 2, 2)\n      },\n      \"mulRGB\": {\n        type: \"v3\",\n        value: new THREE.Vector3(1, 1, 1)\n      },\n      \"addRGB\": {\n        type: \"v3\",\n        value: new THREE.Vector3(0, 0, 0)\n      }\n    },\n    vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n    fragmentShader: [\"uniform sampler2D tDiffuse;\", \"uniform vec3 powRGB;\", \"uniform vec3 mulRGB;\", \"uniform vec3 addRGB;\", \"varying vec2 vUv;\", \"void main() {\", \"gl_FragColor = texture2D( tDiffuse, vUv );\", \"gl_FragColor.rgb = mulRGB * pow( ( gl_FragColor.rgb + addRGB ), powRGB );\", \"}\"].join(\"\\n\")\n  };\n};","map":{"version":3,"sources":["E:/baking/hongpeibang/node_modules/three-js/addons/ColorCorrectionShader.js"],"names":["module","exports","THREE","ColorCorrectionShader","uniforms","type","value","Vector3","vertexShader","join","fragmentShader"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,KAAV,EAAiB;AACjC;;;;;AAMAA,EAAAA,KAAK,CAACC,qBAAN,GAA8B;AAE7BC,IAAAA,QAAQ,EAAE;AAET,kBAAY;AAAEC,QAAAA,IAAI,EAAE,GAAR;AAAaC,QAAAA,KAAK,EAAE;AAApB,OAFH;AAGT,gBAAY;AAAED,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,KAAK,EAAE,IAAIJ,KAAK,CAACK,OAAV,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB;AAArB,OAHH;AAIT,gBAAY;AAAEF,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,KAAK,EAAE,IAAIJ,KAAK,CAACK,OAAV,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB;AAArB,OAJH;AAKT,gBAAY;AAAEF,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,KAAK,EAAE,IAAIJ,KAAK,CAACK,OAAV,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB;AAArB;AALH,KAFmB;AAW7BC,IAAAA,YAAY,EAAE,CAEb,mBAFa,EAIb,eAJa,EAMZ,WANY,EAQZ,2EARY,EAUb,GAVa,EAYZC,IAZY,CAYN,IAZM,CAXe;AAyB7BC,IAAAA,cAAc,EAAE,CAEf,6BAFe,EAGf,sBAHe,EAIf,sBAJe,EAKf,sBALe,EAOf,mBAPe,EASf,eATe,EAWd,4CAXc,EAYd,2EAZc,EAcf,GAde,EAgBdD,IAhBc,CAgBR,IAhBQ;AAzBa,GAA9B;AA6CA,CApDD","sourcesContent":["module.exports = function( THREE ){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Color correction\n\t */\n\n\tTHREE.ColorCorrectionShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\t\"powRGB\":   { type: \"v3\", value: new THREE.Vector3( 2, 2, 2 ) },\n\t\t\t\"mulRGB\":   { type: \"v3\", value: new THREE.Vector3( 1, 1, 1 ) },\n\t\t\t\"addRGB\":   { type: \"v3\", value: new THREE.Vector3( 0, 0, 0 ) }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"uniform vec3 powRGB;\",\n\t\t\t\"uniform vec3 mulRGB;\",\n\t\t\t\"uniform vec3 addRGB;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"gl_FragColor = texture2D( tDiffuse, vUv );\",\n\t\t\t\t\"gl_FragColor.rgb = mulRGB * pow( ( gl_FragColor.rgb + addRGB ), powRGB );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n"]},"metadata":{},"sourceType":"script"}