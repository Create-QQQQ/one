{"ast":null,"code":"module.exports = function (THREE) {\n  /**\n   \n   */\n  THREE.GlitchPass = function (dt_size) {\n    if (THREE.DigitalGlitch === undefined) console.error(\"THREE.GlitchPass relies on THREE.DigitalGlitch\");\n    var shader = THREE.DigitalGlitch;\n    this.uniforms = THREE.UniformsUtils.clone(shader.uniforms);\n    if (dt_size == undefined) dt_size = 64;\n    this.uniforms[\"tDisp\"].value = this.generateHeightmap(dt_size);\n    this.material = new THREE.ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader\n    });\n    this.enabled = true;\n    this.renderToScreen = false;\n    this.needsSwap = true;\n    this.camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);\n    this.scene = new THREE.Scene();\n    this.quad = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), null);\n    this.scene.add(this.quad);\n    this.goWild = false;\n    this.curF = 0;\n    this.generateTrigger();\n  };\n\n  THREE.GlitchPass.prototype = {\n    render: function (renderer, writeBuffer, readBuffer, delta) {\n      this.uniforms[\"tDiffuse\"].value = readBuffer;\n      this.uniforms['seed'].value = Math.random(); //default seeding\n\n      this.uniforms['byp'].value = 0;\n\n      if (this.curF % this.randX == 0 || this.goWild == true) {\n        this.uniforms['amount'].value = Math.random() / 30;\n        this.uniforms['angle'].value = THREE.Math.randFloat(-Math.PI, Math.PI);\n        this.uniforms['seed_x'].value = THREE.Math.randFloat(-1, 1);\n        this.uniforms['seed_y'].value = THREE.Math.randFloat(-1, 1);\n        this.uniforms['distortion_x'].value = THREE.Math.randFloat(0, 1);\n        this.uniforms['distortion_y'].value = THREE.Math.randFloat(0, 1);\n        this.curF = 0;\n        this.generateTrigger();\n      } else if (this.curF % this.randX < this.randX / 5) {\n        this.uniforms['amount'].value = Math.random() / 90;\n        this.uniforms['angle'].value = THREE.Math.randFloat(-Math.PI, Math.PI);\n        this.uniforms['distortion_x'].value = THREE.Math.randFloat(0, 1);\n        this.uniforms['distortion_y'].value = THREE.Math.randFloat(0, 1);\n        this.uniforms['seed_x'].value = THREE.Math.randFloat(-0.3, 0.3);\n        this.uniforms['seed_y'].value = THREE.Math.randFloat(-0.3, 0.3);\n      } else if (this.goWild == false) {\n        this.uniforms['byp'].value = 1;\n      }\n\n      this.curF++;\n      this.quad.material = this.material;\n\n      if (this.renderToScreen) {\n        renderer.render(this.scene, this.camera);\n      } else {\n        renderer.render(this.scene, this.camera, writeBuffer, false);\n      }\n    },\n    generateTrigger: function () {\n      this.randX = THREE.Math.randInt(120, 240);\n    },\n    generateHeightmap: function (dt_size) {\n      var data_arr = new Float32Array(dt_size * dt_size * 3);\n      var length = dt_size * dt_size;\n\n      for (var i = 0; i < length; i++) {\n        var val = THREE.Math.randFloat(0, 1);\n        data_arr[i * 3 + 0] = val;\n        data_arr[i * 3 + 1] = val;\n        data_arr[i * 3 + 2] = val;\n      }\n\n      var texture = new THREE.DataTexture(data_arr, dt_size, dt_size, THREE.RGBFormat, THREE.FloatType);\n      texture.needsUpdate = true;\n      return texture;\n    }\n  };\n};","map":{"version":3,"sources":["E:/baking/hongpeibang/node_modules/three-js/addons/GlitchPass.js"],"names":["module","exports","THREE","GlitchPass","dt_size","DigitalGlitch","undefined","console","error","shader","uniforms","UniformsUtils","clone","value","generateHeightmap","material","ShaderMaterial","vertexShader","fragmentShader","enabled","renderToScreen","needsSwap","camera","OrthographicCamera","scene","Scene","quad","Mesh","PlaneBufferGeometry","add","goWild","curF","generateTrigger","prototype","render","renderer","writeBuffer","readBuffer","delta","Math","random","randX","randFloat","PI","randInt","data_arr","Float32Array","length","i","val","texture","DataTexture","RGBFormat","FloatType","needsUpdate"],"mappings":"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","sourcesContent":["module.exports = function( THREE ){\n\n\t/**\n\t \n\t */\n\n\tTHREE.GlitchPass = function ( dt_size ) {\n\n\t\tif ( THREE.DigitalGlitch === undefined ) console.error( \"THREE.GlitchPass relies on THREE.DigitalGlitch\" );\n\t\t\n\t\tvar shader = THREE.DigitalGlitch;\n\t\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\t\tif ( dt_size == undefined ) dt_size = 64;\n\t\t\n\t\t\n\t\tthis.uniforms[ \"tDisp\" ].value = this.generateHeightmap( dt_size );\n\t\t\n\n\t\tthis.material = new THREE.ShaderMaterial( {\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\t\t} );\n\n\t\tthis.enabled = true;\n\t\tthis.renderToScreen = false;\n\t\tthis.needsSwap = true;\n\n\n\t\tthis.camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\t\tthis.scene  = new THREE.Scene();\n\n\t\tthis.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), null );\n\t\tthis.scene.add( this.quad );\n\t\t\n\t\tthis.goWild = false;\n\t\tthis.curF = 0;\n\t\tthis.generateTrigger();\n\t\t\n\t};\n\n\tTHREE.GlitchPass.prototype = {\n\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\t\tthis.uniforms[ \"tDiffuse\" ].value = readBuffer;\n\t\t\tthis.uniforms[ 'seed' ].value = Math.random();//default seeding\n\t\t\tthis.uniforms[ 'byp' ].value = 0;\n\t\t\t\n\t\t\tif ( this.curF % this.randX == 0 || this.goWild == true ) {\n\n\t\t\t\tthis.uniforms[ 'amount' ].value = Math.random() / 30;\n\t\t\t\tthis.uniforms[ 'angle' ].value = THREE.Math.randFloat( - Math.PI, Math.PI );\n\t\t\t\tthis.uniforms[ 'seed_x' ].value = THREE.Math.randFloat( - 1, 1 );\n\t\t\t\tthis.uniforms[ 'seed_y' ].value = THREE.Math.randFloat( - 1, 1 );\n\t\t\t\tthis.uniforms[ 'distortion_x' ].value = THREE.Math.randFloat( 0, 1 );\n\t\t\t\tthis.uniforms[ 'distortion_y' ].value = THREE.Math.randFloat( 0, 1 );\n\t\t\t\tthis.curF = 0;\n\t\t\t\tthis.generateTrigger();\n\n\t\t\t} else if ( this.curF % this.randX < this.randX / 5 ) {\n\n\t\t\t\tthis.uniforms[ 'amount' ].value = Math.random() / 90;\n\t\t\t\tthis.uniforms[ 'angle' ].value = THREE.Math.randFloat( - Math.PI, Math.PI );\n\t\t\t\tthis.uniforms[ 'distortion_x' ].value = THREE.Math.randFloat( 0, 1 );\n\t\t\t\tthis.uniforms[ 'distortion_y' ].value = THREE.Math.randFloat( 0, 1 );\n\t\t\t\tthis.uniforms[ 'seed_x' ].value = THREE.Math.randFloat( - 0.3, 0.3 );\n\t\t\t\tthis.uniforms[ 'seed_y' ].value = THREE.Math.randFloat( - 0.3, 0.3 );\n\n\t\t\t} else if ( this.goWild == false ) {\n\n\t\t\t\tthis.uniforms[ 'byp' ].value = 1;\n\n\t\t\t}\n\t\t\tthis.curF ++;\n\t\t\t\n\t\t\tthis.quad.material = this.material;\n\t\t\tif ( this.renderToScreen ) {\n\n\t\t\t\trenderer.render( this.scene, this.camera );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( this.scene, this.camera, writeBuffer, false );\n\n\t\t\t}\n\n\t\t},\n\t\tgenerateTrigger: function() {\n\n\t\t\tthis.randX = THREE.Math.randInt( 120, 240 );\n\n\t\t},\n\t\tgenerateHeightmap: function( dt_size ) {\n\n\t\t\tvar data_arr = new Float32Array( dt_size * dt_size * 3 );\n\t\t\tvar length = dt_size * dt_size;\n\t\t\t\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tvar val = THREE.Math.randFloat( 0, 1 );\n\t\t\t\tdata_arr[ i * 3 + 0 ] = val;\n\t\t\t\tdata_arr[ i * 3 + 1 ] = val;\n\t\t\t\tdata_arr[ i * 3 + 2 ] = val;\n\n\t\t\t}\n\t\t\t\n\t\t\tvar texture = new THREE.DataTexture( data_arr, dt_size, dt_size, THREE.RGBFormat, THREE.FloatType );\n\t\t\ttexture.needsUpdate = true;\n\t\t\treturn texture;\n\n\t\t}\n\t};\n\n};\n"]},"metadata":{},"sourceType":"script"}